ARM GAS  /tmp/ccNlWecU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_ADC_MspInit:
  27              	.LVL0:
  28              	.LFB294:
  29              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @file    stm32l4xx_hal_adc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          "stm32l4xx_hal_adc_ex.c".
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   [..]
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
ARM GAS  /tmp/ccNlWecU.s 			page 2


  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC calibration
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### How to use this driver #####
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Enable the ADC interface
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from APB clock
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 or the PLLSAI2
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    running up to 80MHz.
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
ARM GAS  /tmp/ccNlWecU.s 			page 3


  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_GPIO_Init()
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ADCx_IRQHandler().
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ================================================================
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_Init().
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         monitored, thresholds, ...)
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ====================================
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         conversion accuracy
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         transfer by DMA.
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by polling:
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start()
ARM GAS  /tmp/ccNlWecU.s 			page 4


 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (this function must be implemented in user program)
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 destination variable address.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Disable the ADC interface
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock disable
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
ARM GAS  /tmp/ccNlWecU.s 			page 5


 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Deinitialize the DMA
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     *** Callback registration ***
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     =============================================
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      to register an interrupt callback.
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and a pointer to the user callback function.
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      weak function.
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and the Callback ID.
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function allows to reset following callbacks:
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
ARM GAS  /tmp/ccNlWecU.s 			page 6


 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      are set to the corresponding weak functions.
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @endverbatim
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @attention
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #include "stm32l4xx_hal.h"
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC ADC
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief ADC HAL module driver
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
ARM GAS  /tmp/ccNlWecU.s 			page 7


 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) De-initialize the ADC.
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccNlWecU.s 			page 8


 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in header of this file).
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DFSDMCFG_MODE(hadc));
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
ARM GAS  /tmp/ccNlWecU.s 			page 9


 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to none */
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize Lock */
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccNlWecU.s 			page 10


 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * (SystemCoreClock / (100000UL 
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       wait_loop_index--;
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - clock configuration                                                 */
ARM GAS  /tmp/ccNlWecU.s 			page 11


 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* parameters):                                                         */
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* start.                                                                 */
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       software start.                                                  */
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  );
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 12


 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   );
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
ARM GAS  /tmp/ccNlWecU.s 			page 13


 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize the ADC state */
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         common group is still running.
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccNlWecU.s 			page 14


 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Stop potential conversion on going */
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* injected sequence.                                                       */
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the ADC peripheral */
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state */
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register IER */
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register ISR */
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CR */
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
ARM GAS  /tmp/ccNlWecU.s 			page 15


 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      no direct reset applicable.
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR */
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR2 */
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR1 */
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR2 */
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR1 */
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR2 */
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR3 */
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR1 */
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR2 */
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR3 */
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR4 */
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DR */
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR1 */
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
ARM GAS  /tmp/ccNlWecU.s 			page 16


 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD2CR */
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD3CR */
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DIFSEL */
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CALFACT */
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADCs are disabled.   */
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     */
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DeInit the low level hardware.
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      For example:
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_FORCE_RESET();
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_RELEASE_RESET();
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     Keep in mind that all ADCs use the same clock: disabling
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     the clock will reset all ADCs.
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DeInit the low level hardware */
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DeInit the low level hardware */
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccNlWecU.s 			page 17


 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to none */
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
  30              		.loc 1 909 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
  35              		.loc 1 911 3 view .LVU1
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
  36              		.loc 1 916 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE294:
  41              		.section	.text.HAL_ADC_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_ADC_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_ADC_Init:
  50              	.LVL1:
  51              	.LFB292:
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  52              		.loc 1 402 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 8
  55              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccNlWecU.s 			page 18


 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  56              		.loc 1 402 1 is_stmt 0 view .LVU4
  57 0000 30B5     		push	{r4, r5, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 12
  60              		.cfi_offset 4, -12
  61              		.cfi_offset 5, -8
  62              		.cfi_offset 14, -4
  63 0002 83B0     		sub	sp, sp, #12
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 24
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
  66              		.loc 1 403 3 is_stmt 1 view .LVU5
  67              	.LVL2:
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
  68              		.loc 1 404 3 view .LVU6
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
  69              		.loc 1 405 3 view .LVU7
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  70              		.loc 1 406 3 view .LVU8
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  71              		.loc 1 406 17 is_stmt 0 view .LVU9
  72 0004 0023     		movs	r3, #0
  73 0006 0193     		str	r3, [sp, #4]
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
  74              		.loc 1 407 3 is_stmt 1 view .LVU10
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  75              		.loc 1 408 3 view .LVU11
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  76              		.loc 1 411 3 view .LVU12
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  77              		.loc 1 411 6 is_stmt 0 view .LVU13
  78 0008 0028     		cmp	r0, #0
  79 000a 00F0DA80 		beq	.L21
  80 000e 0446     		mov	r4, r0
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  81              		.loc 1 417 3 is_stmt 1 view .LVU14
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  82              		.loc 1 418 3 view .LVU15
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
  83              		.loc 1 419 3 view .LVU16
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
  84              		.loc 1 421 3 view .LVU17
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  85              		.loc 1 423 3 view .LVU18
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  86              		.loc 1 424 3 view .LVU19
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  87              		.loc 1 425 3 view .LVU20
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
  88              		.loc 1 426 3 view .LVU21
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  89              		.loc 1 427 3 view .LVU22
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  90              		.loc 1 428 3 view .LVU23
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  91              		.loc 1 429 3 view .LVU24
ARM GAS  /tmp/ccNlWecU.s 			page 19


 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  92              		.loc 1 430 3 view .LVU25
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
  93              		.loc 1 431 3 view .LVU26
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  94              		.loc 1 432 3 view .LVU27
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  95              		.loc 1 434 3 view .LVU28
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
  96              		.loc 1 441 7 view .LVU29
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  97              		.loc 1 446 3 view .LVU30
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  98              		.loc 1 450 3 view .LVU31
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  99              		.loc 1 450 11 is_stmt 0 view .LVU32
 100 0010 836D     		ldr	r3, [r0, #88]
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 101              		.loc 1 450 6 view .LVU33
 102 0012 03B3     		cbz	r3, .L24
 103              	.LVL3:
 104              	.L4:
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 105              		.loc 1 484 3 is_stmt 1 view .LVU34
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 106              		.loc 1 484 7 is_stmt 0 view .LVU35
 107 0014 2368     		ldr	r3, [r4]
 108              	.LVL4:
 109              	.LBB326:
 110              	.LBI326:
 111              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
ARM GAS  /tmp/ccNlWecU.s 			page 20


  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
ARM GAS  /tmp/ccNlWecU.s 			page 21


  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 22


 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
ARM GAS  /tmp/ccNlWecU.s 			page 23


 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /tmp/ccNlWecU.s 			page 24


 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 25


 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Internal temperature sen
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 26


 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is applied.
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and multimode
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         disabled.
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  /tmp/ccNlWecU.s 			page 27


 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
ARM GAS  /tmp/ccNlWecU.s 			page 28


 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
ARM GAS  /tmp/ccNlWecU.s 			page 29


 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
ARM GAS  /tmp/ccNlWecU.s 			page 30


 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
ARM GAS  /tmp/ccNlWecU.s 			page 31


 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccNlWecU.s 			page 32


 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
ARM GAS  /tmp/ccNlWecU.s 			page 33


 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 34


 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)          /*!< ADC conversions are not tra
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG)     /*!< ADC conversion data are tra
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 35


 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
ARM GAS  /tmp/ccNlWecU.s 			page 36


 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
ARM GAS  /tmp/ccNlWecU.s 			page 37


 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 38


1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
ARM GAS  /tmp/ccNlWecU.s 			page 39


1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK)   
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK)   
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK)   
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK)   
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
ARM GAS  /tmp/ccNlWecU.s 			page 40


1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
ARM GAS  /tmp/ccNlWecU.s 			page 41


1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
ARM GAS  /tmp/ccNlWecU.s 			page 42


1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE        (LL_ADC_OVS_SHIFT_NONE)
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1           (LL_ADC_OVS_SHIFT_RIGHT_1)
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2           (LL_ADC_OVS_SHIFT_RIGHT_2)
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3           (LL_ADC_OVS_SHIFT_RIGHT_3)
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4           (LL_ADC_OVS_SHIFT_RIGHT_4)
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5           (LL_ADC_OVS_SHIFT_RIGHT_5)
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6           (LL_ADC_OVS_SHIFT_RIGHT_6)
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7           (LL_ADC_OVS_SHIFT_RIGHT_7)
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8           (LL_ADC_OVS_SHIFT_RIGHT_8)
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not timeout values.
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         above each literal definition.
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
ARM GAS  /tmp/ccNlWecU.s 			page 43


1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 10UL)  /*!< Delay for ADC stabilization time (ADC vol
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
ARM GAS  /tmp/ccNlWecU.s 			page 44


1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Register value
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
ARM GAS  /tmp/ccNlWecU.s 			page 45


1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                       \
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
ARM GAS  /tmp/ccNlWecU.s 			page 46


1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/ccNlWecU.s 			page 47


1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC registers.
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/ccNlWecU.s 			page 48


1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
ARM GAS  /tmp/ccNlWecU.s 			page 49


1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (                                                                         \
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                         \
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      :                                                                         \
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
ARM GAS  /tmp/ccNlWecU.s 			page 50


1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (                                                                            \
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /tmp/ccNlWecU.s 			page 51


1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
ARM GAS  /tmp/ccNlWecU.s 			page 52


1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
ARM GAS  /tmp/ccNlWecU.s 			page 53


1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
ARM GAS  /tmp/ccNlWecU.s 			page 54


1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1,
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 55


2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                         \
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (__ADCx__)
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
ARM GAS  /tmp/ccNlWecU.s 			page 56


2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are disabled.
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
ARM GAS  /tmp/ccNlWecU.s 			page 57


2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Legacy define */
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccNlWecU.s 			page 58


2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
ARM GAS  /tmp/ccNlWecU.s 			page 59


2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "V30" (co
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
ARM GAS  /tmp/ccNlWecU.s 			page 60


2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     -                                                                       \
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                        \
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
ARM GAS  /tmp/ccNlWecU.s 			page 61


2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC register address
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return data_reg_addr;
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (void)(Register);
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must be respected.
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
ARM GAS  /tmp/ccNlWecU.s 			page 62


2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
ARM GAS  /tmp/ccNlWecU.s 			page 63


2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /tmp/ccNlWecU.s 			page 64


2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 65


2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on group regular.
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
ARM GAS  /tmp/ccNlWecU.s 			page 66


2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 67


2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
ARM GAS  /tmp/ccNlWecU.s 			page 68


2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
ARM GAS  /tmp/ccNlWecU.s 			page 69


2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or group injected)
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           converted data).
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
ARM GAS  /tmp/ccNlWecU.s 			page 70


2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
ARM GAS  /tmp/ccNlWecU.s 			page 71


2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or group injected)
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
2955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
2956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
2957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
2958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
ARM GAS  /tmp/ccNlWecU.s 			page 72


2991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted data).
3017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccNlWecU.s 			page 73


3048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              OffsetState);
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/ccNlWecU.s 			page 74


3105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
ARM GAS  /tmp/ccNlWecU.s 			page 75


3162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccNlWecU.s 			page 76


3219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or external.
3238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccNlWecU.s 			page 77


3276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
ARM GAS  /tmp/ccNlWecU.s 			page 78


3333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
ARM GAS  /tmp/ccNlWecU.s 			page 79


3390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
ARM GAS  /tmp/ccNlWecU.s 			page 80


3447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
3469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
ARM GAS  /tmp/ccNlWecU.s 			page 81


3504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 82


3561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
3582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
3583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
3584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
3585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
3586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
3587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
3588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
3589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
3590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
3591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
3592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
3593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
3594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
3595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
3596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
3597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
ARM GAS  /tmp/ccNlWecU.s 			page 83


3618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
3658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
3660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
3662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
3663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
3665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
ARM GAS  /tmp/ccNlWecU.s 			page 84


3675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
3680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
3689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
3698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
3706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
3728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccNlWecU.s 			page 85


3732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
3735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
3736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
3768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
3771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
3772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
3781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
3784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
3786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
3787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
3788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
ARM GAS  /tmp/ccNlWecU.s 			page 86


3789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
3790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
3797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
3802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
3804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
3808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(ADC_TypeDef *ADCx)
3815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
3817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
3819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
3825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
3826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
3834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
3843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 87


3846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
3849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
3857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
3864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
3869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
3877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
3884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
3885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
ARM GAS  /tmp/ccNlWecU.s 			page 88


3903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
3909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
3913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
3916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
3920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
3921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
3924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
3925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
3946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
3948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
3951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
3952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
3954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
3957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
3958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 89


3960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
3963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             or external
3964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
3965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
3967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
3968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
3975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
3979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
3985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
3995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
3999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
ARM GAS  /tmp/ccNlWecU.s 			page 90


4017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccNlWecU.s 			page 91


4074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /tmp/ccNlWecU.s 			page 92


4131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
ARM GAS  /tmp/ccNlWecU.s 			page 93


4188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 94


4245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent trigger.
4256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
4261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
4300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
ARM GAS  /tmp/ccNlWecU.s 			page 95


4302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
4303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           into the queue).
4314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         contexts queue.
4357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
ARM GAS  /tmp/ccNlWecU.s 			page 96


4359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         cannot be used):
4365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
ARM GAS  /tmp/ccNlWecU.s 			page 97


4416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  /tmp/ccNlWecU.s 			page 98


4473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
4496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
ARM GAS  /tmp/ccNlWecU.s 			page 99


4530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
4534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
4574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
4575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
4576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
4577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
4578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
4579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
4580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
4581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
4583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
4584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
4585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
4586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
ARM GAS  /tmp/ccNlWecU.s 			page 100


4587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
4588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
4589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
4591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
4592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
4593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
4594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
4595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
4596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
4597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
4598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
4599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SequencerNbRanks
4604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             );
4605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
4612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
4617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
4621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted:
4622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
4623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
4624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         setting).
4625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
4626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
4627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
4634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
4635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required.
4636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
4637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
4642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
4643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
ARM GAS  /tmp/ccNlWecU.s 			page 101


4644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
4645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
4646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
4647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
4649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
4651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
4652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
4653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
4654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
4655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
4656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
4657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
4658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
4659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
4660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
4700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
ARM GAS  /tmp/ccNlWecU.s 			page 102


4701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
4715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
4717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
4718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
4721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
4723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
4729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
4739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
4740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
4741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
4742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
4743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
4744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
4745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
4746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
4747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
4748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
4749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
4750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
4751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
4752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
4753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
4754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
4755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
4756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
4757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccNlWecU.s 			page 103


4758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
4811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
4813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
ARM GAS  /tmp/ccNlWecU.s 			page 104


4815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
4816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
4817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
4822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
4824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
4825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
4826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
4827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
4828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
4829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
4838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
4839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
4840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
4843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
4844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
4846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
4864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
4865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
4866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
4869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
4871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
ARM GAS  /tmp/ccNlWecU.s 			page 105


4872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
4874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
4875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
4876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
4880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
4884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
4885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
4886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
4887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
4896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
4897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
4899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
4917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
4919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
4921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
4928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccNlWecU.s 			page 106


4929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
4933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
4934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
4935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
4936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
4937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
4938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
4939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
4940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
4942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
4945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
4947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
4952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
4955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
4959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
4960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
4961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
4966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
4967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
4968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
4969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
4970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
4971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
4977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
4979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
4980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
4981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
4982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
4983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
4984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
4985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
ARM GAS  /tmp/ccNlWecU.s 			page 107


4986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
4987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
4988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
4989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
4990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
4991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
4992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
4993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
4994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
4995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
4996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
4997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
4998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
4999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
ARM GAS  /tmp/ccNlWecU.s 			page 108


5043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
5044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
ARM GAS  /tmp/ccNlWecU.s 			page 109


5100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           one channel.
5104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             by bitfield.
5146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
ARM GAS  /tmp/ccNlWecU.s 			page 110


5157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
ARM GAS  /tmp/ccNlWecU.s 			page 111


5214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
5224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  )
5232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     else
5244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
5263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high and low.
5270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
ARM GAS  /tmp/ccNlWecU.s 			page 112


5271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
ARM GAS  /tmp/ccNlWecU.s 			page 113


5328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high or low.
5337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
ARM GAS  /tmp/ccNlWecU.s 			page 114


5385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
5398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
5401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         concatenated.
5408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         using helper macro:
5411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
5436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
5441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 115


5442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
5448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
5453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
5465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
5466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
5467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
5469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
5477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
5479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
5483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
5491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
5492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
5493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
ARM GAS  /tmp/ccNlWecU.s 			page 116


5499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
5502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
5504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
5508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
5518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
5519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
5520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
5521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
5522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
5524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
5529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
5531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
5535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
5542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
5548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
5550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
5554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
5555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
ARM GAS  /tmp/ccNlWecU.s 			page 117


5556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ratio
5557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - shift
5558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
5563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
5564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
5566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
5575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
5587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
5589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
5593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
5595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
5597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
5607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
5609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
ARM GAS  /tmp/ccNlWecU.s 			page 118


5613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
5615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
5617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
5628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
5630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
5637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
5641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
5643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
5652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
5654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
5657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
5668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
ARM GAS  /tmp/ccNlWecU.s 			page 119


5670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
5674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
5679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
5692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
5694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
5698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/ccNlWecU.s 			page 120


5727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
5729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
5730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
5731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
5732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
5735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
5743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
5745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
5749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
5778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
5779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
ARM GAS  /tmp/ccNlWecU.s 			page 121


5784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
5789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
5791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
5795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
5796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
5797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
5798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
5799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
5800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
5805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
5807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
5810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
5829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
5831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
5835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
5836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
ARM GAS  /tmp/ccNlWecU.s 			page 122


5841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
5857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
5859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
5861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
5866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
5869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
5870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
5873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
5877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
5884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
5889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
5897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccNlWecU.s 			page 123


5898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
5901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
5908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
5912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
5920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
5924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
5929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
5933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
5934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
5936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
 112              		.loc 2 5937 26 is_stmt 1 view .LVU36
 113              	.LBB327:
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 114              		.loc 2 5939 3 view .LVU37
 115              		.loc 2 5939 12 is_stmt 0 view .LVU38
 116 0016 9A68     		ldr	r2, [r3, #8]
 117              		.loc 2 5939 74 view .LVU39
 118 0018 12F0005F 		tst	r2, #536870912
 119 001c 05D0     		beq	.L5
 120              	.LVL5:
 121              		.loc 2 5939 74 view .LVU40
 122              	.LBE327:
 123              	.LBE326:
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 124              		.loc 1 487 5 is_stmt 1 view .LVU41
 125              	.LBB328:
ARM GAS  /tmp/ccNlWecU.s 			page 124


 126              	.LBI328:
5923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 127              		.loc 2 5923 22 view .LVU42
 128              	.LBB329:
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 129              		.loc 2 5928 3 view .LVU43
 130 001e 9A68     		ldr	r2, [r3, #8]
 131 0020 22F02042 		bic	r2, r2, #-1610612736
 132 0024 22F03F02 		bic	r2, r2, #63
 133 0028 9A60     		str	r2, [r3, #8]
 134              	.LVL6:
 135              	.L5:
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 136              		.loc 2 5928 3 is_stmt 0 view .LVU44
 137              	.LBE329:
 138              	.LBE328:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 139              		.loc 1 494 3 is_stmt 1 view .LVU45
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 140              		.loc 1 494 7 is_stmt 0 view .LVU46
 141 002a 2268     		ldr	r2, [r4]
 142              	.LVL7:
 143              	.LBB330:
 144              	.LBI330:
5940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
5944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
5945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
5946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
5947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
5948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
5949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
5953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
5957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
5964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
5968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
5972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccNlWecU.s 			page 125


5973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
5976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
5978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
5982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
5983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
 145              		.loc 2 5986 26 is_stmt 1 view .LVU47
 146              	.LBB331:
5987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 147              		.loc 2 5988 3 view .LVU48
 148              		.loc 2 5988 12 is_stmt 0 view .LVU49
 149 002c 9368     		ldr	r3, [r2, #8]
 150              		.loc 2 5988 76 view .LVU50
 151 002e 13F0805F 		tst	r3, #268435456
 152 0032 1DD1     		bne	.L6
 153              	.LVL8:
 154              		.loc 2 5988 76 view .LVU51
 155              	.LBE331:
 156              	.LBE330:
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 157              		.loc 1 497 5 is_stmt 1 view .LVU52
 158              	.LBB332:
 159              	.LBI332:
5956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 160              		.loc 2 5956 22 view .LVU53
 161              	.LBB333:
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 162              		.loc 2 5961 3 view .LVU54
 163 0034 9368     		ldr	r3, [r2, #8]
 164 0036 23F01043 		bic	r3, r3, #-1879048192
 165 003a 23F03F03 		bic	r3, r3, #63
 166 003e 43F08053 		orr	r3, r3, #268435456
 167 0042 9360     		str	r3, [r2, #8]
 168              	.LVL9:
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 169              		.loc 2 5961 3 is_stmt 0 view .LVU55
 170              	.LBE333:
 171              	.LBE332:
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 172              		.loc 1 502 5 is_stmt 1 view .LVU56
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 173              		.loc 1 502 69 is_stmt 0 view .LVU57
 174 0044 604B     		ldr	r3, .L28
 175 0046 1B68     		ldr	r3, [r3]
 176 0048 9B09     		lsrs	r3, r3, #6
 177 004a 604A     		ldr	r2, .L28+4
 178 004c A2FB0323 		umull	r2, r3, r2, r3
 179 0050 9B09     		lsrs	r3, r3, #6
ARM GAS  /tmp/ccNlWecU.s 			page 126


 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 180              		.loc 1 502 21 view .LVU58
 181 0052 0193     		str	r3, [sp, #4]
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 182              		.loc 1 503 5 is_stmt 1 view .LVU59
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 183              		.loc 1 503 11 is_stmt 0 view .LVU60
 184 0054 09E0     		b	.L7
 185              	.LVL10:
 186              	.L24:
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 187              		.loc 1 473 5 is_stmt 1 view .LVU61
 188 0056 FFF7FEFF 		bl	HAL_ADC_MspInit
 189              	.LVL11:
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 190              		.loc 1 477 5 view .LVU62
 191 005a 0023     		movs	r3, #0
 192 005c E365     		str	r3, [r4, #92]
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 193              		.loc 1 480 5 view .LVU63
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 194              		.loc 1 480 16 is_stmt 0 view .LVU64
 195 005e 84F85430 		strb	r3, [r4, #84]
 196 0062 D7E7     		b	.L4
 197              	.L8:
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 198              		.loc 1 505 7 is_stmt 1 view .LVU65
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 199              		.loc 1 505 22 is_stmt 0 view .LVU66
 200 0064 019B     		ldr	r3, [sp, #4]
 201 0066 013B     		subs	r3, r3, #1
 202 0068 0193     		str	r3, [sp, #4]
 203              	.L7:
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 204              		.loc 1 503 11 is_stmt 1 view .LVU67
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 205              		.loc 1 503 28 is_stmt 0 view .LVU68
 206 006a 019B     		ldr	r3, [sp, #4]
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 207              		.loc 1 503 11 view .LVU69
 208 006c 002B     		cmp	r3, #0
 209 006e F9D1     		bne	.L8
 210              	.L6:
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 211              		.loc 1 512 3 is_stmt 1 view .LVU70
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 212              		.loc 1 512 7 is_stmt 0 view .LVU71
 213 0070 2268     		ldr	r2, [r4]
 214              	.LVL12:
 215              	.LBB334:
 216              	.LBI334:
5986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 217              		.loc 2 5986 26 is_stmt 1 view .LVU72
 218              	.LBB335:
 219              		.loc 2 5988 3 view .LVU73
 220              		.loc 2 5988 12 is_stmt 0 view .LVU74
 221 0072 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccNlWecU.s 			page 127


 222              		.loc 2 5988 76 view .LVU75
 223 0074 13F0805F 		tst	r3, #268435456
 224 0078 09D1     		bne	.L22
 225              	.LVL13:
 226              		.loc 2 5988 76 view .LVU76
 227              	.LBE335:
 228              	.LBE334:
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 229              		.loc 1 515 5 is_stmt 1 view .LVU77
 230 007a A36D     		ldr	r3, [r4, #88]
 231 007c 43F01003 		orr	r3, r3, #16
 232 0080 A365     		str	r3, [r4, #88]
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 233              		.loc 1 518 5 view .LVU78
 234 0082 E36D     		ldr	r3, [r4, #92]
 235 0084 43F00103 		orr	r3, r3, #1
 236 0088 E365     		str	r3, [r4, #92]
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 237              		.loc 1 520 5 view .LVU79
 238              	.LVL14:
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 239              		.loc 1 520 20 is_stmt 0 view .LVU80
 240 008a 0120     		movs	r0, #1
 241 008c 00E0     		b	.L9
 242              	.LVL15:
 243              	.L22:
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
 244              		.loc 1 403 21 view .LVU81
 245 008e 0020     		movs	r0, #0
 246              	.LVL16:
 247              	.L9:
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 248              		.loc 1 527 3 is_stmt 1 view .LVU82
 249              	.LBB336:
 250              	.LBI336:
5989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
5993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
5994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
5995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
5996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
5997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
5998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
5999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
ARM GAS  /tmp/ccNlWecU.s 			page 128


6011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
ARM GAS  /tmp/ccNlWecU.s 			page 129


6068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccNlWecU.s 			page 130


6125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 251              		.loc 2 6168 26 view .LVU83
 252              	.LBB337:
6169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 253              		.loc 2 6170 3 view .LVU84
 254              		.loc 2 6170 12 is_stmt 0 view .LVU85
 255 0090 9368     		ldr	r3, [r2, #8]
 256              		.loc 2 6170 74 view .LVU86
 257 0092 13F00403 		ands	r3, r3, #4
 258 0096 00D0     		beq	.L10
 259 0098 0123     		movs	r3, #1
 260              	.L10:
 261              	.LVL17:
ARM GAS  /tmp/ccNlWecU.s 			page 131


 262              		.loc 2 6170 74 view .LVU87
 263              	.LBE337:
 264              	.LBE336:
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 265              		.loc 1 529 3 is_stmt 1 view .LVU88
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 266              		.loc 1 529 13 is_stmt 0 view .LVU89
 267 009a A16D     		ldr	r1, [r4, #88]
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 268              		.loc 1 529 6 view .LVU90
 269 009c 11F0100F 		tst	r1, #16
 270 00a0 40F08880 		bne	.L11
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 271              		.loc 1 530 7 view .LVU91
 272 00a4 002B     		cmp	r3, #0
 273 00a6 40F08580 		bne	.L11
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 274              		.loc 1 534 5 is_stmt 1 view .LVU92
 275 00aa A36D     		ldr	r3, [r4, #88]
 276              	.LVL18:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 277              		.loc 1 534 5 is_stmt 0 view .LVU93
 278 00ac 23F48173 		bic	r3, r3, #258
 279 00b0 43F00203 		orr	r3, r3, #2
 280 00b4 A365     		str	r3, [r4, #88]
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 281              		.loc 1 543 5 is_stmt 1 view .LVU94
 282              	.LVL19:
 283              	.LBB338:
 284              	.LBI338:
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 285              		.loc 2 6046 26 view .LVU95
 286              	.LBB339:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 287              		.loc 2 6048 3 view .LVU96
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 288              		.loc 2 6048 12 is_stmt 0 view .LVU97
 289 00b6 9368     		ldr	r3, [r2, #8]
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 290              		.loc 2 6048 68 view .LVU98
 291 00b8 13F0010F 		tst	r3, #1
 292 00bc 0BD1     		bne	.L12
 293              	.LVL20:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 294              		.loc 2 6048 68 view .LVU99
 295              	.LBE339:
 296              	.LBE338:
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 297              		.loc 1 545 7 is_stmt 1 view .LVU100
 298              	.LBB340:
 299              	.LBI340:
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 300              		.loc 2 6046 26 view .LVU101
 301              	.LBB341:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 302              		.loc 2 6048 3 view .LVU102
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 132


 303              		.loc 2 6048 12 is_stmt 0 view .LVU103
 304 00be 444B     		ldr	r3, .L28+8
 305 00c0 9B68     		ldr	r3, [r3, #8]
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 306              		.loc 2 6048 68 view .LVU104
 307 00c2 13F0010F 		tst	r3, #1
 308 00c6 06D1     		bne	.L12
 309              	.LVL21:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 310              		.loc 2 6048 68 view .LVU105
 311              	.LBE341:
 312              	.LBE340:
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 313              		.loc 1 564 9 is_stmt 1 view .LVU106
 314 00c8 6368     		ldr	r3, [r4, #4]
 315              	.LVL22:
 316              	.LBB342:
 317              	.LBI342:
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 318              		.loc 2 2443 22 view .LVU107
 319              	.LBB343:
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 320              		.loc 2 2445 3 view .LVU108
 321 00ca 4249     		ldr	r1, .L28+12
 322 00cc 8A68     		ldr	r2, [r1, #8]
 323 00ce 22F47C12 		bic	r2, r2, #4128768
 324 00d2 1343     		orrs	r3, r3, r2
 325              	.LVL23:
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 326              		.loc 2 2445 3 is_stmt 0 view .LVU109
 327 00d4 8B60     		str	r3, [r1, #8]
 328              	.LVL24:
 329              	.L12:
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 330              		.loc 2 2445 3 view .LVU110
 331              	.LBE343:
 332              	.LBE342:
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 333              		.loc 1 577 5 is_stmt 1 view .LVU111
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 334              		.loc 1 577 17 is_stmt 0 view .LVU112
 335 00d6 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 336              		.loc 1 578 27 view .LVU113
 337 00d8 636B     		ldr	r3, [r4, #52]
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 338              		.loc 1 577 88 view .LVU114
 339 00da 43EA4233 		orr	r3, r3, r2, lsl #13
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 340              		.loc 1 579 27 view .LVU115
 341 00de E268     		ldr	r2, [r4, #12]
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 342              		.loc 1 578 88 view .LVU116
 343 00e0 1343     		orrs	r3, r3, r2
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 344              		.loc 1 580 27 view .LVU117
 345 00e2 A268     		ldr	r2, [r4, #8]
ARM GAS  /tmp/ccNlWecU.s 			page 133


 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 346              		.loc 1 579 88 view .LVU118
 347 00e4 1343     		orrs	r3, r3, r2
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 348              		.loc 1 581 17 view .LVU119
 349 00e6 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 350              		.loc 1 577 14 view .LVU120
 351 00ea 43EA0243 		orr	r3, r3, r2, lsl #16
 352              	.LVL25:
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 353              		.loc 1 583 5 is_stmt 1 view .LVU121
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 354              		.loc 1 583 8 is_stmt 0 view .LVU122
 355 00ee 012A     		cmp	r2, #1
 356 00f0 40D0     		beq	.L25
 357              	.L13:
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 358              		.loc 1 593 5 is_stmt 1 view .LVU123
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 359              		.loc 1 593 19 is_stmt 0 view .LVU124
 360 00f2 A26A     		ldr	r2, [r4, #40]
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 361              		.loc 1 593 8 view .LVU125
 362 00f4 22B1     		cbz	r2, .L14
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 363              		.loc 1 595 7 is_stmt 1 view .LVU126
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 364              		.loc 1 595 48 is_stmt 0 view .LVU127
 365 00f6 02F47072 		and	r2, r2, #960
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  );
 366              		.loc 1 596 31 view .LVU128
 367 00fa E16A     		ldr	r1, [r4, #44]
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  );
 368              		.loc 1 596 19 view .LVU129
 369 00fc 0A43     		orrs	r2, r2, r1
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 370              		.loc 1 595 15 view .LVU130
 371 00fe 1343     		orrs	r3, r3, r2
 372              	.LVL26:
 373              	.L14:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 374              		.loc 1 601 5 is_stmt 1 view .LVU131
 375 0100 2168     		ldr	r1, [r4]
 376 0102 CD68     		ldr	r5, [r1, #12]
 377 0104 344A     		ldr	r2, .L28+16
 378 0106 2A40     		ands	r2, r2, r5
 379 0108 1343     		orrs	r3, r3, r2
 380              	.LVL27:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 381              		.loc 1 601 5 is_stmt 0 view .LVU132
 382 010a CB60     		str	r3, [r1, #12]
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 383              		.loc 1 609 5 is_stmt 1 view .LVU133
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 384              		.loc 1 609 46 is_stmt 0 view .LVU134
 385 010c 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccNlWecU.s 			page 134


 386              	.LVL28:
 387              	.LBB344:
 388              	.LBI344:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 389              		.loc 2 6168 26 is_stmt 1 view .LVU135
 390              	.LBB345:
 391              		.loc 2 6170 3 view .LVU136
 392              		.loc 2 6170 12 is_stmt 0 view .LVU137
 393 010e 8B68     		ldr	r3, [r1, #8]
 394              		.loc 2 6170 74 view .LVU138
 395 0110 13F00403 		ands	r3, r3, #4
 396 0114 00D0     		beq	.L15
 397 0116 0123     		movs	r3, #1
 398              	.L15:
 399              	.LVL29:
 400              		.loc 2 6170 74 view .LVU139
 401              	.LBE345:
 402              	.LBE344:
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 403              		.loc 1 610 5 is_stmt 1 view .LVU140
 404              	.LBB346:
 405              	.LBI346:
6171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccNlWecU.s 			page 135


6206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
ARM GAS  /tmp/ccNlWecU.s 			page 136


6263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         separately).
6270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ConversionData)
6284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
ARM GAS  /tmp/ccNlWecU.s 			page 137


6320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
6323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
6343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
6350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 406              		.loc 2 6351 26 view .LVU141
 407              	.LBB347:
6352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 408              		.loc 2 6353 3 view .LVU142
 409              		.loc 2 6353 12 is_stmt 0 view .LVU143
 410 0118 8A68     		ldr	r2, [r1, #8]
 411              		.loc 2 6353 76 view .LVU144
 412 011a 12F00802 		ands	r2, r2, #8
 413 011e 00D0     		beq	.L16
 414 0120 0122     		movs	r2, #1
 415              	.L16:
 416              	.LVL30:
 417              		.loc 2 6353 76 view .LVU145
 418              	.LBE347:
 419              	.LBE346:
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 420              		.loc 1 611 5 is_stmt 1 view .LVU146
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 421              		.loc 1 611 8 is_stmt 0 view .LVU147
 422 0122 C3B9     		cbnz	r3, .L17
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 423              		.loc 1 612 9 view .LVU148
 424 0124 BAB9     		cbnz	r2, .L17
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
ARM GAS  /tmp/ccNlWecU.s 			page 138


 425              		.loc 1 615 7 is_stmt 1 view .LVU149
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 426              		.loc 1 615 18 is_stmt 0 view .LVU150
 427 0126 E36C     		ldr	r3, [r4, #76]
 428              	.LVL31:
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 429              		.loc 1 616 18 view .LVU151
 430 0128 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 431              	.LVL32:
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 432              		.loc 1 615 82 view .LVU152
 433 012a 43EA8233 		orr	r3, r3, r2, lsl #14
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 434              		.loc 1 617 18 view .LVU153
 435 012e 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 436              		.loc 1 615 15 view .LVU154
 437 0132 43EA4202 		orr	r2, r3, r2, lsl #1
 438              	.LVL33:
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 439              		.loc 1 619 7 is_stmt 1 view .LVU155
 440 0136 CB68     		ldr	r3, [r1, #12]
 441 0138 23F48043 		bic	r3, r3, #16384
 442 013c 23F00603 		bic	r3, r3, #6
 443 0140 1343     		orrs	r3, r3, r2
 444 0142 CB60     		str	r3, [r1, #12]
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 445              		.loc 1 621 7 view .LVU156
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 446              		.loc 1 621 21 is_stmt 0 view .LVU157
 447 0144 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 448              		.loc 1 621 10 view .LVU158
 449 0148 012B     		cmp	r3, #1
 450 014a 18D0     		beq	.L26
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 451              		.loc 1 648 9 is_stmt 1 view .LVU159
 452 014c 2268     		ldr	r2, [r4]
 453              	.LVL34:
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 454              		.loc 1 648 9 is_stmt 0 view .LVU160
 455 014e 1369     		ldr	r3, [r2, #16]
 456 0150 23F00103 		bic	r3, r3, #1
 457 0154 1361     		str	r3, [r2, #16]
 458              	.L17:
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 459              		.loc 1 662 5 is_stmt 1 view .LVU161
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 460              		.loc 1 662 19 is_stmt 0 view .LVU162
 461 0156 2369     		ldr	r3, [r4, #16]
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 462              		.loc 1 662 8 view .LVU163
 463 0158 012B     		cmp	r3, #1
 464 015a 22D0     		beq	.L27
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 465              		.loc 1 669 7 is_stmt 1 view .LVU164
 466 015c 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccNlWecU.s 			page 139


 467 015e 136B     		ldr	r3, [r2, #48]
 468 0160 23F00F03 		bic	r3, r3, #15
 469 0164 1363     		str	r3, [r2, #48]
 470              	.L20:
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 471              		.loc 1 674 5 view .LVU165
 472 0166 A36D     		ldr	r3, [r4, #88]
 473 0168 23F00303 		bic	r3, r3, #3
 474 016c 43F00103 		orr	r3, r3, #1
 475 0170 A365     		str	r3, [r4, #88]
 476 0172 24E0     		b	.L3
 477              	.LVL35:
 478              	.L25:
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 479              		.loc 1 585 7 view .LVU166
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 480              		.loc 1 585 18 is_stmt 0 view .LVU167
 481 0174 626A     		ldr	r2, [r4, #36]
 482 0176 013A     		subs	r2, r2, #1
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 483              		.loc 1 585 15 view .LVU168
 484 0178 43EA4243 		orr	r3, r3, r2, lsl #17
 485              	.LVL36:
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 486              		.loc 1 585 15 view .LVU169
 487 017c B9E7     		b	.L13
 488              	.LVL37:
 489              	.L26:
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 490              		.loc 1 623 9 is_stmt 1 view .LVU170
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 491              		.loc 1 624 9 view .LVU171
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 492              		.loc 1 625 9 view .LVU172
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 493              		.loc 1 626 9 view .LVU173
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 494              		.loc 1 633 9 view .LVU174
 495 017e 2168     		ldr	r1, [r4]
 496 0180 0B69     		ldr	r3, [r1, #16]
 497 0182 23F4FF63 		bic	r3, r3, #2040
 498 0186 23F00403 		bic	r3, r3, #4
 499 018a E26B     		ldr	r2, [r4, #60]
 500              	.LVL38:
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 501              		.loc 1 633 9 is_stmt 0 view .LVU175
 502 018c 256C     		ldr	r5, [r4, #64]
 503 018e 2A43     		orrs	r2, r2, r5
 504 0190 656C     		ldr	r5, [r4, #68]
 505 0192 2A43     		orrs	r2, r2, r5
 506 0194 A56C     		ldr	r5, [r4, #72]
 507 0196 2A43     		orrs	r2, r2, r5
 508 0198 1343     		orrs	r3, r3, r2
 509 019a 43F00103 		orr	r3, r3, #1
 510 019e 0B61     		str	r3, [r1, #16]
 511 01a0 D9E7     		b	.L17
 512              	.L27:
ARM GAS  /tmp/ccNlWecU.s 			page 140


 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 513              		.loc 1 665 7 is_stmt 1 view .LVU176
 514 01a2 2168     		ldr	r1, [r4]
 515 01a4 0B6B     		ldr	r3, [r1, #48]
 516 01a6 23F00F03 		bic	r3, r3, #15
 517 01aa E269     		ldr	r2, [r4, #28]
 518 01ac 013A     		subs	r2, r2, #1
 519 01ae 1343     		orrs	r3, r3, r2
 520 01b0 0B63     		str	r3, [r1, #48]
 521 01b2 D8E7     		b	.L20
 522              	.LVL39:
 523              	.L11:
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 524              		.loc 1 679 5 view .LVU177
 525 01b4 A36D     		ldr	r3, [r4, #88]
 526              	.LVL40:
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 527              		.loc 1 679 5 is_stmt 0 view .LVU178
 528 01b6 43F01003 		orr	r3, r3, #16
 529 01ba A365     		str	r3, [r4, #88]
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 530              		.loc 1 681 5 is_stmt 1 view .LVU179
 531              	.LVL41:
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 532              		.loc 1 681 20 is_stmt 0 view .LVU180
 533 01bc 0120     		movs	r0, #1
 534              	.LVL42:
 535              	.L3:
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 536              		.loc 1 686 1 view .LVU181
 537 01be 03B0     		add	sp, sp, #12
 538              	.LCFI2:
 539              		.cfi_remember_state
 540              		.cfi_def_cfa_offset 12
 541              		@ sp needed
 542 01c0 30BD     		pop	{r4, r5, pc}
 543              	.LVL43:
 544              	.L21:
 545              	.LCFI3:
 546              		.cfi_restore_state
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 547              		.loc 1 413 12 view .LVU182
 548 01c2 0120     		movs	r0, #1
 549              	.LVL44:
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 550              		.loc 1 413 12 view .LVU183
 551 01c4 FBE7     		b	.L3
 552              	.L29:
 553 01c6 00BF     		.align	2
 554              	.L28:
 555 01c8 00000000 		.word	SystemCoreClock
 556 01cc 632D3E05 		.word	87960931
 557 01d0 00000450 		.word	1342439424
 558 01d4 00030450 		.word	1342440192
 559 01d8 07C0F0FF 		.word	-999417
 560              		.cfi_endproc
 561              	.LFE292:
ARM GAS  /tmp/ccNlWecU.s 			page 141


 563              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 564              		.align	1
 565              		.weak	HAL_ADC_MspDeInit
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	HAL_ADC_MspDeInit:
 572              	.LVL45:
 573              	.LFB295:
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 574              		.loc 1 926 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 579              		.loc 1 928 3 view .LVU185
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 580              		.loc 1 933 1 is_stmt 0 view .LVU186
 581 0000 7047     		bx	lr
 582              		.cfi_endproc
 583              	.LFE295:
 585              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 586              		.align	1
 587              		.global	HAL_ADC_PollForConversion
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu fpv4-sp-d16
 593              	HAL_ADC_PollForConversion:
 594              	.LVL46:
 595              	.LFB298:
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
ARM GAS  /tmp/ccNlWecU.s 			page 142


 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (pCallback == NULL)
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
ARM GAS  /tmp/ccNlWecU.s 			page 143


1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccNlWecU.s 			page 144


1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
ARM GAS  /tmp/ccNlWecU.s 			page 145


1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
ARM GAS  /tmp/ccNlWecU.s 			page 146


1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       ##### IO operation functions #####
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group.
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group.
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion event.
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccNlWecU.s 			page 147


1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
ARM GAS  /tmp/ccNlWecU.s 			page 148


1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
ARM GAS  /tmp/ccNlWecU.s 			page 149


1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
ARM GAS  /tmp/ccNlWecU.s 			page 150


1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 596              		.loc 1 1405 1 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		.loc 1 1405 1 is_stmt 0 view .LVU188
 601 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 602              	.LCFI4:
 603              		.cfi_def_cfa_offset 24
 604              		.cfi_offset 3, -24
 605              		.cfi_offset 4, -20
 606              		.cfi_offset 5, -16
 607              		.cfi_offset 6, -12
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 0002 0446     		mov	r4, r0
 611 0004 0D46     		mov	r5, r1
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 612              		.loc 1 1406 3 is_stmt 1 view .LVU189
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
 613              		.loc 1 1407 3 view .LVU190
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
 614              		.loc 1 1408 3 view .LVU191
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 615              		.loc 1 1415 3 view .LVU192
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 616              		.loc 1 1418 3 view .LVU193
 617              		.loc 1 1418 17 is_stmt 0 view .LVU194
 618 0006 4669     		ldr	r6, [r0, #20]
 619              		.loc 1 1418 6 view .LVU195
 620 0008 082E     		cmp	r6, #8
 621 000a 05D0     		beq	.L32
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* each conversion:                                                       */
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
ARM GAS  /tmp/ccNlWecU.s 			page 151


1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check ADC DMA mode */
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
 622              		.loc 1 1463 5 is_stmt 1 view .LVU196
 623              		.loc 1 1463 9 is_stmt 0 view .LVU197
 624 000c 0368     		ldr	r3, [r0]
 625 000e DB68     		ldr	r3, [r3, #12]
 626              		.loc 1 1463 8 view .LVU198
 627 0010 13F0010F 		tst	r3, #1
 628 0014 1AD1     		bne	.L43
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
 629              		.loc 1 1470 20 view .LVU199
 630 0016 0426     		movs	r6, #4
 631              	.L32:
 632              	.LVL47:
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/ccNlWecU.s 			page 152


 633              		.loc 1 1476 3 is_stmt 1 view .LVU200
 634              		.loc 1 1476 15 is_stmt 0 view .LVU201
 635 0018 FFF7FEFF 		bl	HAL_GetTick
 636              	.LVL48:
 637              		.loc 1 1476 15 view .LVU202
 638 001c 0746     		mov	r7, r0
 639              	.LVL49:
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 640              		.loc 1 1479 3 is_stmt 1 view .LVU203
 641              	.L35:
 642              		.loc 1 1479 9 view .LVU204
 643              		.loc 1 1479 15 is_stmt 0 view .LVU205
 644 001e 2368     		ldr	r3, [r4]
 645              		.loc 1 1479 25 view .LVU206
 646 0020 1A68     		ldr	r2, [r3]
 647              		.loc 1 1479 9 view .LVU207
 648 0022 3242     		tst	r2, r6
 649 0024 18D1     		bne	.L44
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 650              		.loc 1 1482 5 is_stmt 1 view .LVU208
 651              		.loc 1 1482 8 is_stmt 0 view .LVU209
 652 0026 B5F1FF3F 		cmp	r5, #-1
 653 002a F8D0     		beq	.L35
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 654              		.loc 1 1484 7 is_stmt 1 view .LVU210
 655              		.loc 1 1484 13 is_stmt 0 view .LVU211
 656 002c FFF7FEFF 		bl	HAL_GetTick
 657              	.LVL50:
 658              		.loc 1 1484 27 view .LVU212
 659 0030 C01B     		subs	r0, r0, r7
 660              		.loc 1 1484 10 view .LVU213
 661 0032 A842     		cmp	r0, r5
 662 0034 01D8     		bhi	.L36
 663              		.loc 1 1484 51 discriminator 1 view .LVU214
 664 0036 002D     		cmp	r5, #0
 665 0038 F1D1     		bne	.L35
 666              	.L36:
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 667              		.loc 1 1487 9 is_stmt 1 view .LVU215
 668 003a A36D     		ldr	r3, [r4, #88]
 669 003c 43F00403 		orr	r3, r3, #4
 670 0040 A365     		str	r3, [r4, #88]
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 671              		.loc 1 1490 9 view .LVU216
 672              		.loc 1 1490 9 view .LVU217
 673 0042 0023     		movs	r3, #0
 674 0044 84F85430 		strb	r3, [r4, #84]
 675              		.loc 1 1490 9 view .LVU218
ARM GAS  /tmp/ccNlWecU.s 			page 153


1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_TIMEOUT;
 676              		.loc 1 1492 9 view .LVU219
 677              		.loc 1 1492 16 is_stmt 0 view .LVU220
 678 0048 0320     		movs	r0, #3
 679 004a 04E0     		b	.L33
 680              	.LVL51:
 681              	.L43:
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
 682              		.loc 1 1465 7 is_stmt 1 view .LVU221
 683 004c 836D     		ldr	r3, [r0, #88]
 684 004e 43F02003 		orr	r3, r3, #32
 685 0052 8365     		str	r3, [r0, #88]
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 686              		.loc 1 1466 7 view .LVU222
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 687              		.loc 1 1466 14 is_stmt 0 view .LVU223
 688 0054 0120     		movs	r0, #1
 689              	.LVL52:
 690              	.L33:
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update ADC state machine */
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* available).                                                              */
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
ARM GAS  /tmp/ccNlWecU.s 			page 154


1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Clear polled flag */
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 691              		.loc 1 1561 1 view .LVU224
 692 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 693              	.LVL53:
 694              	.L44:
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 695              		.loc 1 1498 3 is_stmt 1 view .LVU225
 696 0058 A26D     		ldr	r2, [r4, #88]
 697 005a 42F40072 		orr	r2, r2, #512
 698 005e A265     		str	r2, [r4, #88]
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 699              		.loc 1 1502 3 view .LVU226
 700              	.LVL54:
 701              	.LBB348:
 702              	.LBI348:
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 703              		.loc 2 3246 26 view .LVU227
 704              	.LBB349:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 705              		.loc 2 3248 3 view .LVU228
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 706              		.loc 2 3248 12 is_stmt 0 view .LVU229
 707 0060 DA68     		ldr	r2, [r3, #12]
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 708              		.loc 2 3248 103 view .LVU230
 709 0062 12F4406F 		tst	r2, #3072
ARM GAS  /tmp/ccNlWecU.s 			page 155


 710 0066 11D1     		bne	.L38
 711              	.LVL55:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 712              		.loc 2 3248 103 view .LVU231
 713              	.LBE349:
 714              	.LBE348:
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 715              		.loc 1 1503 21 view .LVU232
 716 0068 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 717              		.loc 1 1503 7 view .LVU233
 718 006a 7AB9     		cbnz	r2, .L38
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 719              		.loc 1 1507 5 is_stmt 1 view .LVU234
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 720              		.loc 1 1507 9 is_stmt 0 view .LVU235
 721 006c 1A68     		ldr	r2, [r3]
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 722              		.loc 1 1507 8 view .LVU236
 723 006e 12F0080F 		tst	r2, #8
 724 0072 0BD0     		beq	.L38
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 725              		.loc 1 1510 7 is_stmt 1 view .LVU237
 726 0074 A26D     		ldr	r2, [r4, #88]
 727 0076 22F48072 		bic	r2, r2, #256
 728 007a A265     		str	r2, [r4, #88]
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 729              		.loc 1 1512 7 view .LVU238
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 730              		.loc 1 1512 16 is_stmt 0 view .LVU239
 731 007c A26D     		ldr	r2, [r4, #88]
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 732              		.loc 1 1512 10 view .LVU240
 733 007e 12F4805F 		tst	r2, #4096
 734 0082 03D1     		bne	.L38
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 735              		.loc 1 1514 9 is_stmt 1 view .LVU241
 736 0084 A26D     		ldr	r2, [r4, #88]
 737 0086 42F00102 		orr	r2, r2, #1
 738 008a A265     		str	r2, [r4, #88]
 739              	.L38:
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 740              		.loc 1 1540 3 view .LVU242
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 741              		.loc 1 1540 12 is_stmt 0 view .LVU243
 742 008c DA68     		ldr	r2, [r3, #12]
 743              	.LVL56:
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 744              		.loc 1 1544 3 is_stmt 1 view .LVU244
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 745              		.loc 1 1544 6 is_stmt 0 view .LVU245
 746 008e 082E     		cmp	r6, #8
 747 0090 06D0     		beq	.L45
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 748              		.loc 1 1553 5 is_stmt 1 view .LVU246
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 749              		.loc 1 1553 8 is_stmt 0 view .LVU247
ARM GAS  /tmp/ccNlWecU.s 			page 156


 750 0092 12F4804F 		tst	r2, #16384
 751 0096 07D1     		bne	.L41
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 752              		.loc 1 1555 7 is_stmt 1 view .LVU248
 753 0098 0C22     		movs	r2, #12
 754              	.LVL57:
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 755              		.loc 1 1555 7 is_stmt 0 view .LVU249
 756 009a 1A60     		str	r2, [r3]
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 757              		.loc 1 1560 10 view .LVU250
 758 009c 0020     		movs	r0, #0
 759 009e DAE7     		b	.L33
 760              	.LVL58:
 761              	.L45:
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 762              		.loc 1 1546 5 is_stmt 1 view .LVU251
 763 00a0 0822     		movs	r2, #8
 764              	.LVL59:
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 765              		.loc 1 1546 5 is_stmt 0 view .LVU252
 766 00a2 1A60     		str	r2, [r3]
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 767              		.loc 1 1560 10 view .LVU253
 768 00a4 0020     		movs	r0, #0
 769 00a6 D6E7     		b	.L33
 770              	.LVL60:
 771              	.L41:
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 772              		.loc 1 1560 10 view .LVU254
 773 00a8 0020     		movs	r0, #0
 774 00aa D4E7     		b	.L33
 775              		.cfi_endproc
 776              	.LFE298:
 778              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 779              		.align	1
 780              		.global	HAL_ADC_PollForEvent
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	HAL_ADC_PollForEvent:
 787              	.LVL61:
 788              	.LFB299:
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param EventType the ADC event type.
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
ARM GAS  /tmp/ccNlWecU.s 			page 157


1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 789              		.loc 1 1584 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		.loc 1 1584 1 is_stmt 0 view .LVU256
 794 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 795              	.LCFI5:
 796              		.cfi_def_cfa_offset 24
 797              		.cfi_offset 4, -24
 798              		.cfi_offset 5, -20
 799              		.cfi_offset 6, -16
 800              		.cfi_offset 7, -12
 801              		.cfi_offset 8, -8
 802              		.cfi_offset 14, -4
 803 0004 0646     		mov	r6, r0
 804 0006 0D46     		mov	r5, r1
 805 0008 1746     		mov	r7, r2
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 806              		.loc 1 1585 3 is_stmt 1 view .LVU257
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 807              		.loc 1 1588 3 view .LVU258
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 808              		.loc 1 1589 3 view .LVU259
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 809              		.loc 1 1592 3 view .LVU260
 810              		.loc 1 1592 15 is_stmt 0 view .LVU261
 811 000a FFF7FEFF 		bl	HAL_GetTick
 812              	.LVL62:
 813              		.loc 1 1592 15 view .LVU262
 814 000e 8046     		mov	r8, r0
 815              	.LVL63:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check selected event flag */
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 816              		.loc 1 1595 3 is_stmt 1 view .LVU263
 817              	.L48:
 818              		.loc 1 1595 9 view .LVU264
 819              		.loc 1 1595 10 is_stmt 0 view .LVU265
 820 0010 3368     		ldr	r3, [r6]
 821 0012 1C68     		ldr	r4, [r3]
 822              		.loc 1 1595 9 view .LVU266
 823 0014 35EA0402 		bics	r2, r5, r4
 824 0018 13D0     		beq	.L61
ARM GAS  /tmp/ccNlWecU.s 			page 158


1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 825              		.loc 1 1598 5 is_stmt 1 view .LVU267
 826              		.loc 1 1598 8 is_stmt 0 view .LVU268
 827 001a B7F1FF3F 		cmp	r7, #-1
 828 001e F7D0     		beq	.L48
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 829              		.loc 1 1600 7 is_stmt 1 view .LVU269
 830              		.loc 1 1600 13 is_stmt 0 view .LVU270
 831 0020 FFF7FEFF 		bl	HAL_GetTick
 832              	.LVL64:
 833              		.loc 1 1600 27 view .LVU271
 834 0024 A0EB0800 		sub	r0, r0, r8
 835              		.loc 1 1600 10 view .LVU272
 836 0028 B842     		cmp	r0, r7
 837 002a 01D8     		bhi	.L49
 838              		.loc 1 1600 51 discriminator 1 view .LVU273
 839 002c 002F     		cmp	r7, #0
 840 002e EFD1     		bne	.L48
 841              	.L49:
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 842              		.loc 1 1603 9 is_stmt 1 view .LVU274
 843 0030 B36D     		ldr	r3, [r6, #88]
 844 0032 43F00403 		orr	r3, r3, #4
 845 0036 B365     		str	r3, [r6, #88]
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 846              		.loc 1 1606 9 view .LVU275
 847              		.loc 1 1606 9 view .LVU276
 848 0038 0023     		movs	r3, #0
 849 003a 86F85430 		strb	r3, [r6, #84]
 850              		.loc 1 1606 9 view .LVU277
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_TIMEOUT;
 851              		.loc 1 1608 9 view .LVU278
 852              		.loc 1 1608 16 is_stmt 0 view .LVU279
 853 003e 0320     		movs	r0, #3
 854 0040 29E0     		b	.L50
 855              	.L61:
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   switch (EventType)
 856              		.loc 1 1613 3 is_stmt 1 view .LVU280
 857 0042 B5F5807F 		cmp	r5, #256
 858 0046 28D0     		beq	.L52
 859 0048 0BD8     		bhi	.L53
 860 004a 022D     		cmp	r5, #2
 861 004c 1CD0     		beq	.L54
 862 004e 802D     		cmp	r5, #128
 863 0050 35D1     		bne	.L56
ARM GAS  /tmp/ccNlWecU.s 			page 159


1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling event */
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For example:                                                             */
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 864              		.loc 1 1637 7 view .LVU281
 865 0052 B26D     		ldr	r2, [r6, #88]
 866 0054 42F48032 		orr	r2, r2, #65536
 867 0058 B265     		str	r2, [r6, #88]
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 868              		.loc 1 1640 7 view .LVU282
 869 005a 8022     		movs	r2, #128
 870 005c 1A60     		str	r2, [r3]
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 871              		.loc 1 1642 7 view .LVU283
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
ARM GAS  /tmp/ccNlWecU.s 			page 160


1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow event */
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Overrun event */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* considered as an error.                                                */
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* overrun ")                                                             */
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state */
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            as OVR is cleared. */
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 872              		.loc 1 1702 10 is_stmt 0 view .LVU284
 873 005e 0020     		movs	r0, #0
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 874              		.loc 1 1642 7 view .LVU285
 875 0060 19E0     		b	.L50
 876              	.L53:
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 877              		.loc 1 1613 3 view .LVU286
 878 0062 B5F5007F 		cmp	r5, #512
 879 0066 21D0     		beq	.L57
 880 0068 B5F5806F 		cmp	r5, #1024
 881 006c 27D1     		bne	.L56
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 882              		.loc 1 1667 7 is_stmt 1 view .LVU287
 883 006e B26D     		ldr	r2, [r6, #88]
 884 0070 42F48042 		orr	r2, r2, #16384
 885 0074 B265     		str	r2, [r6, #88]
ARM GAS  /tmp/ccNlWecU.s 			page 161


1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 886              		.loc 1 1670 7 view .LVU288
 887 0076 F26D     		ldr	r2, [r6, #92]
 888 0078 42F00802 		orr	r2, r2, #8
 889 007c F265     		str	r2, [r6, #92]
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 890              		.loc 1 1673 7 view .LVU289
 891 007e 4FF48062 		mov	r2, #1024
 892 0082 1A60     		str	r2, [r3]
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 893              		.loc 1 1675 7 view .LVU290
 894              		.loc 1 1702 10 is_stmt 0 view .LVU291
 895 0084 0020     		movs	r0, #0
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 896              		.loc 1 1675 7 view .LVU292
 897 0086 06E0     		b	.L50
 898              	.L54:
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 899              		.loc 1 1618 7 is_stmt 1 view .LVU293
 900 0088 B26D     		ldr	r2, [r6, #88]
 901 008a 42F40062 		orr	r2, r2, #2048
 902 008e B265     		str	r2, [r6, #88]
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 903              		.loc 1 1621 7 view .LVU294
 904 0090 0222     		movs	r2, #2
 905 0092 1A60     		str	r2, [r3]
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 906              		.loc 1 1623 7 view .LVU295
 907              		.loc 1 1702 10 is_stmt 0 view .LVU296
 908 0094 0020     		movs	r0, #0
 909              	.L50:
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 910              		.loc 1 1703 1 view .LVU297
 911 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 912              	.LVL65:
 913              	.L52:
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 914              		.loc 1 1647 7 is_stmt 1 view .LVU298
 915 009a B26D     		ldr	r2, [r6, #88]
 916 009c 42F40032 		orr	r2, r2, #131072
 917 00a0 B265     		str	r2, [r6, #88]
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 918              		.loc 1 1650 7 view .LVU299
 919 00a2 4FF48072 		mov	r2, #256
 920 00a6 1A60     		str	r2, [r3]
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 921              		.loc 1 1652 7 view .LVU300
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 922              		.loc 1 1702 10 is_stmt 0 view .LVU301
 923 00a8 0020     		movs	r0, #0
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 924              		.loc 1 1652 7 view .LVU302
 925 00aa F4E7     		b	.L50
 926              	.L57:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 927              		.loc 1 1657 7 is_stmt 1 view .LVU303
 928 00ac B26D     		ldr	r2, [r6, #88]
ARM GAS  /tmp/ccNlWecU.s 			page 162


 929 00ae 42F48022 		orr	r2, r2, #262144
 930 00b2 B265     		str	r2, [r6, #88]
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 931              		.loc 1 1660 7 view .LVU304
 932 00b4 4FF40072 		mov	r2, #512
 933 00b8 1A60     		str	r2, [r3]
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 934              		.loc 1 1662 7 view .LVU305
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 935              		.loc 1 1702 10 is_stmt 0 view .LVU306
 936 00ba 0020     		movs	r0, #0
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 937              		.loc 1 1662 7 view .LVU307
 938 00bc EBE7     		b	.L50
 939              	.L56:
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 940              		.loc 1 1683 7 is_stmt 1 view .LVU308
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 941              		.loc 1 1683 21 is_stmt 0 view .LVU309
 942 00be 726B     		ldr	r2, [r6, #52]
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 943              		.loc 1 1683 10 view .LVU310
 944 00c0 4AB9     		cbnz	r2, .L59
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 945              		.loc 1 1686 9 is_stmt 1 view .LVU311
 946 00c2 B36D     		ldr	r3, [r6, #88]
 947 00c4 43F48063 		orr	r3, r3, #1024
 948 00c8 B365     		str	r3, [r6, #88]
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 949              		.loc 1 1689 9 view .LVU312
 950 00ca F36D     		ldr	r3, [r6, #92]
 951 00cc 43F00203 		orr	r3, r3, #2
 952 00d0 F365     		str	r3, [r6, #92]
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 953              		.loc 1 1702 10 is_stmt 0 view .LVU313
 954 00d2 0020     		movs	r0, #0
 955 00d4 DFE7     		b	.L50
 956              	.L59:
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 957              		.loc 1 1696 9 is_stmt 1 view .LVU314
 958 00d6 1022     		movs	r2, #16
 959 00d8 1A60     		str	r2, [r3]
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 960              		.loc 1 1702 10 is_stmt 0 view .LVU315
 961 00da 0020     		movs	r0, #0
 962 00dc DBE7     		b	.L50
 963              		.cfi_endproc
 964              	.LFE299:
 966              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 967              		.align	1
 968              		.global	HAL_ADC_GetValue
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv4-sp-d16
 974              	HAL_ADC_GetValue:
 975              	.LVL66:
ARM GAS  /tmp/ccNlWecU.s 			page 163


 976              	.LFB304:
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         OVR overrun.
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC Master.
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         mode), the user must:
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
ARM GAS  /tmp/ccNlWecU.s 			page 164


1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
ARM GAS  /tmp/ccNlWecU.s 			page 165


1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
ARM GAS  /tmp/ccNlWecU.s 			page 166


1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           default:
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
ARM GAS  /tmp/ccNlWecU.s 			page 167


1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param pData Destination Buffer address.
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccNlWecU.s 			page 168


1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state                                                        */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            )
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
ARM GAS  /tmp/ccNlWecU.s 			page 169


2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA error callback */
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* operations)                                                        */
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start the DMA channel */
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* trigger event.                                                       */
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
ARM GAS  /tmp/ccNlWecU.s 			page 170


2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC peripheral.
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
ARM GAS  /tmp/ccNlWecU.s 			page 171


2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            to flag EOC.
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To clear this flag, either use function:
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
ARM GAS  /tmp/ccNlWecU.s 			page 172


 977              		.loc 1 2215 1 is_stmt 1 view -0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 982              		.loc 1 2217 3 view .LVU317
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC converted value */
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->Instance->DR;
 983              		.loc 1 2223 3 view .LVU318
 984              		.loc 1 2223 14 is_stmt 0 view .LVU319
 985 0000 0368     		ldr	r3, [r0]
 986              		.loc 1 2223 24 view .LVU320
 987 0002 186C     		ldr	r0, [r3, #64]
 988              	.LVL67:
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 989              		.loc 1 2224 1 view .LVU321
 990 0004 7047     		bx	lr
 991              		.cfi_endproc
 992              	.LFE304:
 994              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 995              		.align	1
 996              		.weak	HAL_ADC_ConvCpltCallback
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	HAL_ADC_ConvCpltCallback:
 1003              	.LVL68:
 1004              	.LFB306:
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
ARM GAS  /tmp/ccNlWecU.s 			page 173


2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling callback */
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* available).                                                          */
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccNlWecU.s 			page 174


2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Change ADC state to error state */
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       possibility to use:                                              */
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
ARM GAS  /tmp/ccNlWecU.s 			page 175


2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* available).                                                        */
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Particular case if injected contexts queue is enabled:             */
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* when the last context has been fully processed, JSQR is reset      */
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* by the hardware. Even if no injected conversion is planned to come */
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (queue empty, triggers are ignored), it can start again            */
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* immediately after setting a new context (JADSTART is still set).   */
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
ARM GAS  /tmp/ccNlWecU.s 			page 176


2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* JADSTART==0 (no conversion on going)                             */
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt  */
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Update ADC state machine to error */
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               sequence.    */
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 1 callback */
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 177


2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 2 callback */
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 3 callback */
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun ")                                                             */
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* error.                                                                 */
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       overrun_error = 1UL;
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check DMA configuration */
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccNlWecU.s 			page 178


2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (overrun_error == 1UL)
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state to error state */
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Error callback */
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
ARM GAS  /tmp/ccNlWecU.s 			page 179


2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1005              		.loc 1 2602 1 is_stmt 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 1010              		.loc 1 2604 3 view .LVU323
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1011              		.loc 1 2609 1 is_stmt 0 view .LVU324
 1012 0000 7047     		bx	lr
 1013              		.cfi_endproc
 1014              	.LFE306:
 1016              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1017              		.align	1
 1018              		.weak	HAL_ADC_ConvHalfCpltCallback
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.fpu fpv4-sp-d16
 1024              	HAL_ADC_ConvHalfCpltCallback:
 1025              	.LVL69:
 1026              	.LFB307:
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1027              		.loc 1 2617 1 is_stmt 1 view -0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 1032              		.loc 1 2619 3 view .LVU326
ARM GAS  /tmp/ccNlWecU.s 			page 180


2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1033              		.loc 1 2624 1 is_stmt 0 view .LVU327
 1034 0000 7047     		bx	lr
 1035              		.cfi_endproc
 1036              	.LFE307:
 1038              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1039              		.align	1
 1040              		.global	ADC_DMAHalfConvCplt
 1041              		.syntax unified
 1042              		.thumb
 1043              		.thumb_func
 1044              		.fpu fpv4-sp-d16
 1046              	ADC_DMAHalfConvCplt:
 1047              	.LVL70:
 1048              	.LFB318:
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 181


2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure channels on regular group
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure the analog watchdog
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without resetting the ADC.
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ignored (considered as reset) */
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 182


2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification of channel number */
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel number                                                        */
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if !defined (USE_FULL_ASSERT)
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Correspondence for compatibility with legacy definition of             */
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* sequencer ranks in direct number format. This correspondence can       */
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* be done only on ranks 1 to 5 due to literal values.                    */
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Sequencer ranks in direct number format are no more used         */
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       and are detected by activating USE_FULL_ASSERT feature.          */
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (sConfig->Rank <= 5U)
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (sConfig->Rank)
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 2U:
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_2;
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 3U:
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_3;
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 4U:
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_4;
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 5U:
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_5;
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case 1U */
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_1;
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
ARM GAS  /tmp/ccNlWecU.s 			page 183


2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_SMPR1_SMPPLUS)
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC selected offset number */
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
ARM GAS  /tmp/ccNlWecU.s 			page 184


2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of differential mode */
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* paths.                                                                 */
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
ARM GAS  /tmp/ccNlWecU.s 			page 185


2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (SystemCoreClock / (100000U
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             wait_loop_index--;
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PAT
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* nothing to do */
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* parameters.                                                              */
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the ADC.
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
ARM GAS  /tmp/ccNlWecU.s 			page 186


2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds cannot be modified
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         while ADC conversion is on going.
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verify thresholds range */
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
ARM GAS  /tmp/ccNlWecU.s 			page 187


3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog configuration */
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* are set to 0                                                         */
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
ARM GAS  /tmp/ccNlWecU.s 			page 188


3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
ARM GAS  /tmp/ccNlWecU.s 			page 189


3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
ARM GAS  /tmp/ccNlWecU.s 			page 190


3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     peripheral.
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC state
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC error code
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         compared with states bits.
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For example:
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC handle state */
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->State;
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->ErrorCode;
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 191


3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (see reference manual).                                                */
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Use stop of regular group */
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
ARM GAS  /tmp/ccNlWecU.s 			page 192


3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear JEOS */
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (conversion_group_reassigned)
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
ARM GAS  /tmp/ccNlWecU.s 			page 193


3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default:
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccNlWecU.s 			page 194


3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           calibration logic.
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           4 ADC clock cycle duration */
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         stopped.
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       disabled.                                                          */
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
ARM GAS  /tmp/ccNlWecU.s 			page 195


3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get tick count */
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
ARM GAS  /tmp/ccNlWecU.s 			page 196


3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Is CONT bit set ? */
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccNlWecU.s 			page 197


3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1049              		.loc 1 3587 1 is_stmt 1 view -0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              		.loc 1 3587 1 is_stmt 0 view .LVU329
 1054 0000 08B5     		push	{r3, lr}
 1055              	.LCFI6:
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 3, -8
 1058              		.cfi_offset 14, -4
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1059              		.loc 1 3589 3 is_stmt 1 view .LVU330
 1060              	.LVL71:
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Half conversion callback */
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1061              		.loc 1 3595 3 view .LVU331
 1062 0002 806A     		ldr	r0, [r0, #40]
 1063              	.LVL72:
 1064              		.loc 1 3595 3 is_stmt 0 view .LVU332
 1065 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1066              	.LVL73:
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1067              		.loc 1 3597 1 view .LVU333
 1068 0008 08BD     		pop	{r3, pc}
 1069              		.cfi_endproc
 1070              	.LFE318:
 1072              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1073              		.align	1
 1074              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu fpv4-sp-d16
 1080              	HAL_ADC_LevelOutOfWindowCallback:
 1081              	.LVL74:
 1082              	.LFB308:
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1083              		.loc 1 2632 1 is_stmt 1 view -0
ARM GAS  /tmp/ccNlWecU.s 			page 198


 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1088              		.loc 1 2634 3 view .LVU335
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1089              		.loc 1 2639 1 is_stmt 0 view .LVU336
 1090 0000 7047     		bx	lr
 1091              		.cfi_endproc
 1092              	.LFE308:
 1094              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1095              		.align	1
 1096              		.weak	HAL_ADC_ErrorCallback
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1100              		.fpu fpv4-sp-d16
 1102              	HAL_ADC_ErrorCallback:
 1103              	.LVL75:
 1104              	.LFB309:
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1105              		.loc 1 2654 1 is_stmt 1 view -0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1110              		.loc 1 2656 3 view .LVU338
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1111              		.loc 1 2661 1 is_stmt 0 view .LVU339
 1112 0000 7047     		bx	lr
 1113              		.cfi_endproc
 1114              	.LFE309:
 1116              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1117              		.align	1
 1118              		.global	HAL_ADC_IRQHandler
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1122              		.fpu fpv4-sp-d16
 1124              	HAL_ADC_IRQHandler:
 1125              	.LVL76:
 1126              	.LFB305:
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1127              		.loc 1 2232 1 is_stmt 1 view -0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1131              		.loc 1 2232 1 is_stmt 0 view .LVU341
 1132 0000 70B5     		push	{r4, r5, r6, lr}
 1133              	.LCFI7:
 1134              		.cfi_def_cfa_offset 16
 1135              		.cfi_offset 4, -16
 1136              		.cfi_offset 5, -12
 1137              		.cfi_offset 6, -8
ARM GAS  /tmp/ccNlWecU.s 			page 199


 1138              		.cfi_offset 14, -4
 1139 0002 0446     		mov	r4, r0
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1140              		.loc 1 2233 3 is_stmt 1 view .LVU342
 1141              	.LVL77:
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1142              		.loc 1 2234 3 view .LVU343
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1143              		.loc 1 2234 26 is_stmt 0 view .LVU344
 1144 0004 0368     		ldr	r3, [r0]
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1145              		.loc 1 2234 12 view .LVU345
 1146 0006 1E68     		ldr	r6, [r3]
 1147              	.LVL78:
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1148              		.loc 1 2235 3 is_stmt 1 view .LVU346
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1149              		.loc 1 2235 12 is_stmt 0 view .LVU347
 1150 0008 5D68     		ldr	r5, [r3, #4]
 1151              	.LVL79:
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1152              		.loc 1 2236 3 is_stmt 1 view .LVU348
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
 1153              		.loc 1 2237 3 view .LVU349
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 1154              		.loc 1 2238 3 view .LVU350
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1155              		.loc 1 2245 3 view .LVU351
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1156              		.loc 1 2246 3 view .LVU352
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1157              		.loc 1 2249 3 view .LVU353
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1158              		.loc 1 2249 6 is_stmt 0 view .LVU354
 1159 000a 16F0020F 		tst	r6, #2
 1160 000e 10D0     		beq	.L70
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1161              		.loc 1 2249 54 discriminator 1 view .LVU355
 1162 0010 15F0020F 		tst	r5, #2
 1163 0014 0DD0     		beq	.L70
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1164              		.loc 1 2252 5 is_stmt 1 view .LVU356
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1165              		.loc 1 2252 14 is_stmt 0 view .LVU357
 1166 0016 836D     		ldr	r3, [r0, #88]
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1167              		.loc 1 2252 8 view .LVU358
 1168 0018 13F0100F 		tst	r3, #16
 1169 001c 03D1     		bne	.L71
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1170              		.loc 1 2255 7 is_stmt 1 view .LVU359
 1171 001e 836D     		ldr	r3, [r0, #88]
 1172 0020 43F40063 		orr	r3, r3, #2048
 1173 0024 8365     		str	r3, [r0, #88]
 1174              	.L71:
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1175              		.loc 1 2262 5 view .LVU360
ARM GAS  /tmp/ccNlWecU.s 			page 200


 1176 0026 2046     		mov	r0, r4
 1177              	.LVL80:
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1178              		.loc 1 2262 5 is_stmt 0 view .LVU361
 1179 0028 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1180              	.LVL81:
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1181              		.loc 1 2266 5 is_stmt 1 view .LVU362
 1182 002c 2368     		ldr	r3, [r4]
 1183 002e 0222     		movs	r2, #2
 1184 0030 1A60     		str	r2, [r3]
 1185              	.L70:
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1186              		.loc 1 2270 3 view .LVU363
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1187              		.loc 1 2270 6 is_stmt 0 view .LVU364
 1188 0032 16F0040F 		tst	r6, #4
 1189 0036 02D0     		beq	.L72
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1190              		.loc 1 2270 51 discriminator 1 view .LVU365
 1191 0038 15F0040F 		tst	r5, #4
 1192 003c 05D1     		bne	.L73
 1193              	.L72:
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1194              		.loc 1 2270 94 discriminator 3 view .LVU366
 1195 003e 16F0080F 		tst	r6, #8
 1196 0042 3AD0     		beq	.L74
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1197              		.loc 1 2271 51 view .LVU367
 1198 0044 15F0080F 		tst	r5, #8
 1199 0048 37D0     		beq	.L74
 1200              	.L73:
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1201              		.loc 1 2274 5 is_stmt 1 view .LVU368
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1202              		.loc 1 2274 14 is_stmt 0 view .LVU369
 1203 004a A36D     		ldr	r3, [r4, #88]
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1204              		.loc 1 2274 8 view .LVU370
 1205 004c 13F0100F 		tst	r3, #16
 1206 0050 03D1     		bne	.L75
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1207              		.loc 1 2277 7 is_stmt 1 view .LVU371
 1208 0052 A36D     		ldr	r3, [r4, #88]
 1209 0054 43F40073 		orr	r3, r3, #512
 1210 0058 A365     		str	r3, [r4, #88]
 1211              	.L75:
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1212              		.loc 1 2283 5 view .LVU372
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1213              		.loc 1 2283 9 is_stmt 0 view .LVU373
 1214 005a 2368     		ldr	r3, [r4]
 1215              	.LVL82:
 1216              	.LBB350:
 1217              	.LBI350:
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1218              		.loc 2 3246 26 is_stmt 1 view .LVU374
ARM GAS  /tmp/ccNlWecU.s 			page 201


 1219              	.LBB351:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1220              		.loc 2 3248 3 view .LVU375
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1221              		.loc 2 3248 12 is_stmt 0 view .LVU376
 1222 005c DA68     		ldr	r2, [r3, #12]
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1223              		.loc 2 3248 103 view .LVU377
 1224 005e 12F4406F 		tst	r2, #3072
 1225 0062 24D1     		bne	.L76
 1226              	.LVL83:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1227              		.loc 2 3248 103 view .LVU378
 1228              	.LBE351:
 1229              	.LBE350:
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 1230              		.loc 1 2305 7 is_stmt 1 view .LVU379
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 1231              		.loc 1 2305 16 is_stmt 0 view .LVU380
 1232 0064 DA68     		ldr	r2, [r3, #12]
 1233              	.LVL84:
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1234              		.loc 1 2309 7 is_stmt 1 view .LVU381
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1235              		.loc 1 2309 10 is_stmt 0 view .LVU382
 1236 0066 12F4005F 		tst	r2, #8192
 1237 006a 20D1     		bne	.L76
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1238              		.loc 1 2312 9 is_stmt 1 view .LVU383
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1239              		.loc 1 2312 13 is_stmt 0 view .LVU384
 1240 006c 1A68     		ldr	r2, [r3]
 1241              	.LVL85:
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1242              		.loc 1 2312 12 view .LVU385
 1243 006e 12F0080F 		tst	r2, #8
 1244 0072 1CD0     		beq	.L76
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1245              		.loc 1 2316 11 is_stmt 1 view .LVU386
 1246              	.LVL86:
 1247              	.LBB352:
 1248              	.LBI352:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1249              		.loc 2 6168 26 view .LVU387
 1250              	.LBB353:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1251              		.loc 2 6170 3 view .LVU388
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1252              		.loc 2 6170 12 is_stmt 0 view .LVU389
 1253 0074 9A68     		ldr	r2, [r3, #8]
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1254              		.loc 2 6170 74 view .LVU390
 1255 0076 12F0040F 		tst	r2, #4
 1256 007a 10D1     		bne	.L77
 1257              	.LVL87:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1258              		.loc 2 6170 74 view .LVU391
ARM GAS  /tmp/ccNlWecU.s 			page 202


 1259              	.LBE353:
 1260              	.LBE352:
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1261              		.loc 1 2322 13 is_stmt 1 view .LVU392
 1262 007c 5A68     		ldr	r2, [r3, #4]
 1263 007e 22F00C02 		bic	r2, r2, #12
 1264 0082 5A60     		str	r2, [r3, #4]
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1265              		.loc 1 2325 13 view .LVU393
 1266 0084 A36D     		ldr	r3, [r4, #88]
 1267 0086 23F48073 		bic	r3, r3, #256
 1268 008a A365     		str	r3, [r4, #88]
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1269              		.loc 1 2327 13 view .LVU394
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1270              		.loc 1 2327 22 is_stmt 0 view .LVU395
 1271 008c A36D     		ldr	r3, [r4, #88]
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1272              		.loc 1 2327 16 view .LVU396
 1273 008e 13F4805F 		tst	r3, #4096
 1274 0092 0CD1     		bne	.L76
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
 1275              		.loc 1 2329 15 is_stmt 1 view .LVU397
 1276 0094 A36D     		ldr	r3, [r4, #88]
 1277 0096 43F00103 		orr	r3, r3, #1
 1278 009a A365     		str	r3, [r4, #88]
 1279 009c 07E0     		b	.L76
 1280              	.LVL88:
 1281              	.L77:
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1282              		.loc 1 2335 13 view .LVU398
 1283 009e A36D     		ldr	r3, [r4, #88]
 1284 00a0 43F01003 		orr	r3, r3, #16
 1285 00a4 A365     		str	r3, [r4, #88]
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1286              		.loc 1 2338 13 view .LVU399
 1287 00a6 E36D     		ldr	r3, [r4, #92]
 1288 00a8 43F00103 		orr	r3, r3, #1
 1289 00ac E365     		str	r3, [r4, #92]
 1290              	.L76:
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1291              		.loc 1 2352 5 view .LVU400
 1292 00ae 2046     		mov	r0, r4
 1293 00b0 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1294              	.LVL89:
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1295              		.loc 1 2360 5 view .LVU401
 1296 00b4 2368     		ldr	r3, [r4]
 1297 00b6 0C22     		movs	r2, #12
 1298 00b8 1A60     		str	r2, [r3]
 1299              	.L74:
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1300              		.loc 1 2364 3 view .LVU402
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1301              		.loc 1 2364 6 is_stmt 0 view .LVU403
 1302 00ba 16F0200F 		tst	r6, #32
 1303 00be 02D0     		beq	.L79
ARM GAS  /tmp/ccNlWecU.s 			page 203


2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1304              		.loc 1 2364 53 discriminator 1 view .LVU404
 1305 00c0 15F0200F 		tst	r5, #32
 1306 00c4 05D1     		bne	.L80
 1307              	.L79:
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1308              		.loc 1 2364 98 discriminator 3 view .LVU405
 1309 00c6 16F0400F 		tst	r6, #64
 1310 00ca 4CD0     		beq	.L81
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1311              		.loc 1 2365 53 view .LVU406
 1312 00cc 15F0400F 		tst	r5, #64
 1313 00d0 49D0     		beq	.L81
 1314              	.L80:
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1315              		.loc 1 2368 5 is_stmt 1 view .LVU407
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1316              		.loc 1 2368 14 is_stmt 0 view .LVU408
 1317 00d2 A36D     		ldr	r3, [r4, #88]
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1318              		.loc 1 2368 8 view .LVU409
 1319 00d4 13F0100F 		tst	r3, #16
 1320 00d8 03D1     		bne	.L82
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1321              		.loc 1 2371 7 is_stmt 1 view .LVU410
 1322 00da A36D     		ldr	r3, [r4, #88]
 1323 00dc 43F40053 		orr	r3, r3, #8192
 1324 00e0 A365     		str	r3, [r4, #88]
 1325              	.L82:
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1326              		.loc 1 2375 5 view .LVU411
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1327              		.loc 1 2375 46 is_stmt 0 view .LVU412
 1328 00e2 2368     		ldr	r3, [r4]
 1329              	.LVL90:
 1330              	.LBB354:
 1331              	.LBI354:
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1332              		.loc 2 3972 26 is_stmt 1 view .LVU413
 1333              	.LBB355:
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1334              		.loc 2 3974 3 view .LVU414
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1335              		.loc 2 3974 12 is_stmt 0 view .LVU415
 1336 00e4 DA6C     		ldr	r2, [r3, #76]
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1337              		.loc 2 3974 105 view .LVU416
 1338 00e6 12F0C00F 		tst	r2, #192
 1339 00ea 2AD1     		bne	.L96
 1340 00ec 0121     		movs	r1, #1
 1341              	.L83:
 1342              	.LVL91:
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1343              		.loc 2 3974 105 view .LVU417
 1344              	.LBE355:
 1345              	.LBE354:
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
ARM GAS  /tmp/ccNlWecU.s 			page 204


 1346              		.loc 1 2376 5 is_stmt 1 view .LVU418
 1347              	.LBB357:
 1348              	.LBI357:
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1349              		.loc 2 3246 26 view .LVU419
 1350              	.LBB358:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1351              		.loc 2 3248 3 view .LVU420
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1352              		.loc 2 3248 12 is_stmt 0 view .LVU421
 1353 00ee DA68     		ldr	r2, [r3, #12]
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1354              		.loc 2 3248 103 view .LVU422
 1355 00f0 12F4406F 		tst	r2, #3072
 1356 00f4 27D1     		bne	.L97
 1357 00f6 0120     		movs	r0, #1
 1358              	.L84:
 1359              	.LVL92:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1360              		.loc 2 3248 103 view .LVU423
 1361              	.LBE358:
 1362              	.LBE357:
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 1363              		.loc 1 2395 5 is_stmt 1 view .LVU424
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 1364              		.loc 1 2395 14 is_stmt 0 view .LVU425
 1365 00f8 DA68     		ldr	r2, [r3, #12]
 1366              	.LVL93:
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1367              		.loc 1 2403 5 is_stmt 1 view .LVU426
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1368              		.loc 1 2403 8 is_stmt 0 view .LVU427
 1369 00fa 31B9     		cbnz	r1, .L85
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1370              		.loc 1 2403 68 discriminator 1 view .LVU428
 1371 00fc 12F0007F 		tst	r2, #33554432
 1372 0100 2BD1     		bne	.L86
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 1373              		.loc 1 2404 59 view .LVU429
 1374 0102 50B3     		cbz	r0, .L86
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 1375              		.loc 1 2405 60 view .LVU430
 1376 0104 12F4005F 		tst	r2, #8192
 1377 0108 27D1     		bne	.L86
 1378              	.L85:
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1379              		.loc 1 2409 7 is_stmt 1 view .LVU431
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1380              		.loc 1 2409 11 is_stmt 0 view .LVU432
 1381 010a 1968     		ldr	r1, [r3]
 1382              	.LVL94:
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1383              		.loc 1 2409 10 view .LVU433
 1384 010c 11F0400F 		tst	r1, #64
 1385 0110 23D0     		beq	.L86
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1386              		.loc 1 2417 9 is_stmt 1 view .LVU434
ARM GAS  /tmp/ccNlWecU.s 			page 205


2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1387              		.loc 1 2417 12 is_stmt 0 view .LVU435
 1388 0112 12F4001F 		tst	r2, #2097152
 1389 0116 20D1     		bne	.L86
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1390              		.loc 1 2421 11 is_stmt 1 view .LVU436
 1391              	.LVL95:
 1392              	.LBB360:
 1393              	.LBI360:
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1394              		.loc 2 6351 26 view .LVU437
 1395              	.LBB361:
 1396              		.loc 2 6353 3 view .LVU438
 1397              		.loc 2 6353 12 is_stmt 0 view .LVU439
 1398 0118 9A68     		ldr	r2, [r3, #8]
 1399              	.LVL96:
 1400              		.loc 2 6353 76 view .LVU440
 1401 011a 12F0080F 		tst	r2, #8
 1402 011e 14D1     		bne	.L87
 1403              	.LVL97:
 1404              		.loc 2 6353 76 view .LVU441
 1405              	.LBE361:
 1406              	.LBE360:
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1407              		.loc 1 2424 13 is_stmt 1 view .LVU442
 1408 0120 5A68     		ldr	r2, [r3, #4]
 1409 0122 22F06002 		bic	r2, r2, #96
 1410 0126 5A60     		str	r2, [r3, #4]
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1411              		.loc 1 2427 13 view .LVU443
 1412 0128 A36D     		ldr	r3, [r4, #88]
 1413 012a 23F48053 		bic	r3, r3, #4096
 1414 012e A365     		str	r3, [r4, #88]
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1415              		.loc 1 2429 13 view .LVU444
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1416              		.loc 1 2429 22 is_stmt 0 view .LVU445
 1417 0130 A36D     		ldr	r3, [r4, #88]
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1418              		.loc 1 2429 16 view .LVU446
 1419 0132 13F4807F 		tst	r3, #256
 1420 0136 10D1     		bne	.L86
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
 1421              		.loc 1 2431 15 is_stmt 1 view .LVU447
 1422 0138 A36D     		ldr	r3, [r4, #88]
 1423 013a 43F00103 		orr	r3, r3, #1
 1424 013e A365     		str	r3, [r4, #88]
 1425 0140 0BE0     		b	.L86
 1426              	.LVL98:
 1427              	.L96:
 1428              	.LBB362:
 1429              	.LBB356:
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1430              		.loc 2 3974 105 is_stmt 0 view .LVU448
 1431 0142 0021     		movs	r1, #0
 1432 0144 D3E7     		b	.L83
 1433              	.LVL99:
ARM GAS  /tmp/ccNlWecU.s 			page 206


 1434              	.L97:
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1435              		.loc 2 3974 105 view .LVU449
 1436              	.LBE356:
 1437              	.LBE362:
 1438              	.LBB363:
 1439              	.LBB359:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1440              		.loc 2 3248 103 view .LVU450
 1441 0146 0020     		movs	r0, #0
 1442 0148 D6E7     		b	.L84
 1443              	.LVL100:
 1444              	.L87:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1445              		.loc 2 3248 103 view .LVU451
 1446              	.LBE359:
 1447              	.LBE363:
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1448              		.loc 1 2437 13 is_stmt 1 view .LVU452
 1449 014a A36D     		ldr	r3, [r4, #88]
 1450 014c 43F01003 		orr	r3, r3, #16
 1451 0150 A365     		str	r3, [r4, #88]
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1452              		.loc 1 2440 13 view .LVU453
 1453 0152 E36D     		ldr	r3, [r4, #92]
 1454 0154 43F00103 		orr	r3, r3, #1
 1455 0158 E365     		str	r3, [r4, #92]
 1456              	.L86:
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1457              		.loc 1 2455 5 view .LVU454
 1458 015a 2046     		mov	r0, r4
 1459              	.LVL101:
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1460              		.loc 1 2455 5 is_stmt 0 view .LVU455
 1461 015c FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1462              	.LVL102:
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1463              		.loc 1 2459 5 is_stmt 1 view .LVU456
 1464 0160 2368     		ldr	r3, [r4]
 1465 0162 6022     		movs	r2, #96
 1466 0164 1A60     		str	r2, [r3]
 1467              	.L81:
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1468              		.loc 1 2463 3 view .LVU457
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1469              		.loc 1 2463 6 is_stmt 0 view .LVU458
 1470 0166 16F0800F 		tst	r6, #128
 1471 016a 02D0     		beq	.L89
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1472              		.loc 1 2463 52 discriminator 1 view .LVU459
 1473 016c 15F0800F 		tst	r5, #128
 1474 0170 2DD1     		bne	.L99
 1475              	.L89:
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1476              		.loc 1 2480 3 is_stmt 1 view .LVU460
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1477              		.loc 1 2480 6 is_stmt 0 view .LVU461
ARM GAS  /tmp/ccNlWecU.s 			page 207


 1478 0172 16F4807F 		tst	r6, #256
 1479 0176 02D0     		beq	.L90
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1480              		.loc 1 2480 52 discriminator 1 view .LVU462
 1481 0178 15F4807F 		tst	r5, #256
 1482 017c 32D1     		bne	.L100
 1483              	.L90:
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1484              		.loc 1 2497 3 is_stmt 1 view .LVU463
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1485              		.loc 1 2497 6 is_stmt 0 view .LVU464
 1486 017e 16F4007F 		tst	r6, #512
 1487 0182 02D0     		beq	.L91
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1488              		.loc 1 2497 52 discriminator 1 view .LVU465
 1489 0184 15F4007F 		tst	r5, #512
 1490 0188 38D1     		bne	.L101
 1491              	.L91:
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1492              		.loc 1 2514 3 is_stmt 1 view .LVU466
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1493              		.loc 1 2514 6 is_stmt 0 view .LVU467
 1494 018a 16F0100F 		tst	r6, #16
 1495 018e 17D0     		beq	.L92
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1496              		.loc 1 2514 50 discriminator 1 view .LVU468
 1497 0190 15F0100F 		tst	r5, #16
 1498 0194 14D0     		beq	.L92
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1499              		.loc 1 2522 5 is_stmt 1 view .LVU469
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1500              		.loc 1 2522 19 is_stmt 0 view .LVU470
 1501 0196 636B     		ldr	r3, [r4, #52]
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1502              		.loc 1 2522 8 view .LVU471
 1503 0198 23B1     		cbz	r3, .L93
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1504              		.loc 1 2543 9 is_stmt 1 view .LVU472
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1505              		.loc 1 2543 18 is_stmt 0 view .LVU473
 1506 019a 2368     		ldr	r3, [r4]
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1507              		.loc 1 2543 28 view .LVU474
 1508 019c DB68     		ldr	r3, [r3, #12]
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1509              		.loc 1 2543 12 view .LVU475
 1510 019e 13F0010F 		tst	r3, #1
 1511 01a2 0AD0     		beq	.L94
 1512              	.L93:
 1513              	.LVL103:
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1514              		.loc 1 2553 7 is_stmt 1 view .LVU476
 1515 01a4 A36D     		ldr	r3, [r4, #88]
 1516 01a6 43F48063 		orr	r3, r3, #1024
 1517 01aa A365     		str	r3, [r4, #88]
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1518              		.loc 1 2556 7 view .LVU477
ARM GAS  /tmp/ccNlWecU.s 			page 208


 1519 01ac E36D     		ldr	r3, [r4, #92]
 1520 01ae 43F00203 		orr	r3, r3, #2
 1521 01b2 E365     		str	r3, [r4, #92]
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1522              		.loc 1 2566 7 view .LVU478
 1523 01b4 2046     		mov	r0, r4
 1524 01b6 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1525              	.LVL104:
 1526              	.L94:
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1527              		.loc 1 2571 5 view .LVU479
 1528 01ba 2368     		ldr	r3, [r4]
 1529 01bc 1022     		movs	r2, #16
 1530 01be 1A60     		str	r2, [r3]
 1531              	.L92:
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1532              		.loc 1 2575 3 view .LVU480
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1533              		.loc 1 2575 6 is_stmt 0 view .LVU481
 1534 01c0 16F4806F 		tst	r6, #1024
 1535 01c4 02D0     		beq	.L69
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1536              		.loc 1 2575 54 discriminator 1 view .LVU482
 1537 01c6 15F4806F 		tst	r5, #1024
 1538 01ca 23D1     		bne	.L102
 1539              	.L69:
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1540              		.loc 1 2594 1 view .LVU483
 1541 01cc 70BD     		pop	{r4, r5, r6, pc}
 1542              	.LVL105:
 1543              	.L99:
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1544              		.loc 1 2466 5 is_stmt 1 view .LVU484
 1545 01ce A36D     		ldr	r3, [r4, #88]
 1546 01d0 43F48033 		orr	r3, r3, #65536
 1547 01d4 A365     		str	r3, [r4, #88]
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1548              		.loc 1 2472 5 view .LVU485
 1549 01d6 2046     		mov	r0, r4
 1550 01d8 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1551              	.LVL106:
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1552              		.loc 1 2476 5 view .LVU486
 1553 01dc 2368     		ldr	r3, [r4]
 1554 01de 8022     		movs	r2, #128
 1555 01e0 1A60     		str	r2, [r3]
 1556 01e2 C6E7     		b	.L89
 1557              	.L100:
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1558              		.loc 1 2483 5 view .LVU487
 1559 01e4 A36D     		ldr	r3, [r4, #88]
 1560 01e6 43F40033 		orr	r3, r3, #131072
 1561 01ea A365     		str	r3, [r4, #88]
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1562              		.loc 1 2489 5 view .LVU488
 1563 01ec 2046     		mov	r0, r4
 1564 01ee FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
ARM GAS  /tmp/ccNlWecU.s 			page 209


 1565              	.LVL107:
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1566              		.loc 1 2493 5 view .LVU489
 1567 01f2 2368     		ldr	r3, [r4]
 1568 01f4 4FF48072 		mov	r2, #256
 1569 01f8 1A60     		str	r2, [r3]
 1570 01fa C0E7     		b	.L90
 1571              	.L101:
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1572              		.loc 1 2500 5 view .LVU490
 1573 01fc A36D     		ldr	r3, [r4, #88]
 1574 01fe 43F48023 		orr	r3, r3, #262144
 1575 0202 A365     		str	r3, [r4, #88]
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1576              		.loc 1 2506 5 view .LVU491
 1577 0204 2046     		mov	r0, r4
 1578 0206 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1579              	.LVL108:
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1580              		.loc 1 2510 5 view .LVU492
 1581 020a 2368     		ldr	r3, [r4]
 1582 020c 4FF40072 		mov	r2, #512
 1583 0210 1A60     		str	r2, [r3]
 1584 0212 BAE7     		b	.L91
 1585              	.LVL109:
 1586              	.L102:
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1587              		.loc 1 2578 5 view .LVU493
 1588 0214 A36D     		ldr	r3, [r4, #88]
 1589 0216 43F48043 		orr	r3, r3, #16384
 1590 021a A365     		str	r3, [r4, #88]
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1591              		.loc 1 2581 5 view .LVU494
 1592 021c E36D     		ldr	r3, [r4, #92]
 1593 021e 43F00803 		orr	r3, r3, #8
 1594 0222 E365     		str	r3, [r4, #92]
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1595              		.loc 1 2584 5 view .LVU495
 1596 0224 2368     		ldr	r3, [r4]
 1597 0226 4FF48062 		mov	r2, #1024
 1598 022a 1A60     		str	r2, [r3]
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1599              		.loc 1 2590 5 view .LVU496
 1600 022c 2046     		mov	r0, r4
 1601 022e FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1602              	.LVL110:
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1603              		.loc 1 2594 1 is_stmt 0 view .LVU497
 1604 0232 CBE7     		b	.L69
 1605              		.cfi_endproc
 1606              	.LFE305:
 1608              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1609              		.align	1
 1610              		.global	ADC_DMAConvCplt
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
ARM GAS  /tmp/ccNlWecU.s 			page 210


 1614              		.fpu fpv4-sp-d16
 1616              	ADC_DMAConvCplt:
 1617              	.LVL111:
 1618              	.LFB317:
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1619              		.loc 1 3509 1 is_stmt 1 view -0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 0
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1623              		.loc 1 3509 1 is_stmt 0 view .LVU499
 1624 0000 08B5     		push	{r3, lr}
 1625              	.LCFI8:
 1626              		.cfi_def_cfa_offset 8
 1627              		.cfi_offset 3, -8
 1628              		.cfi_offset 14, -4
 1629 0002 0346     		mov	r3, r0
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1630              		.loc 1 3511 3 is_stmt 1 view .LVU500
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1631              		.loc 1 3511 22 is_stmt 0 view .LVU501
 1632 0004 806A     		ldr	r0, [r0, #40]
 1633              	.LVL112:
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1634              		.loc 1 3514 3 is_stmt 1 view .LVU502
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1635              		.loc 1 3514 12 is_stmt 0 view .LVU503
 1636 0006 826D     		ldr	r2, [r0, #88]
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1637              		.loc 1 3514 6 view .LVU504
 1638 0008 12F0500F 		tst	r2, #80
 1639 000c 30D1     		bne	.L104
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1640              		.loc 1 3517 5 is_stmt 1 view .LVU505
 1641 000e 836D     		ldr	r3, [r0, #88]
 1642              	.LVL113:
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1643              		.loc 1 3517 5 is_stmt 0 view .LVU506
 1644 0010 43F40073 		orr	r3, r3, #512
 1645 0014 8365     		str	r3, [r0, #88]
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1646              		.loc 1 3523 5 is_stmt 1 view .LVU507
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1647              		.loc 1 3523 14 is_stmt 0 view .LVU508
 1648 0016 0368     		ldr	r3, [r0]
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1649              		.loc 1 3523 24 view .LVU509
 1650 0018 1A68     		ldr	r2, [r3]
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1651              		.loc 1 3523 8 view .LVU510
 1652 001a 12F0080F 		tst	r2, #8
 1653 001e 14D0     		beq	.L105
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1654              		.loc 1 3526 7 is_stmt 1 view .LVU511
 1655              	.LVL114:
 1656              	.LBB364:
 1657              	.LBI364:
ARM GAS  /tmp/ccNlWecU.s 			page 211


3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1658              		.loc 2 3246 26 view .LVU512
 1659              	.LBB365:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1660              		.loc 2 3248 3 view .LVU513
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1661              		.loc 2 3248 12 is_stmt 0 view .LVU514
 1662 0020 DA68     		ldr	r2, [r3, #12]
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1663              		.loc 2 3248 103 view .LVU515
 1664 0022 12F4406F 		tst	r2, #3072
 1665 0026 20D1     		bne	.L106
 1666              	.LVL115:
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1667              		.loc 2 3248 103 view .LVU516
 1668              	.LBE365:
 1669              	.LBE364:
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1670              		.loc 1 3529 9 is_stmt 1 view .LVU517
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1671              		.loc 1 3529 13 is_stmt 0 view .LVU518
 1672 0028 DB68     		ldr	r3, [r3, #12]
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1673              		.loc 1 3529 12 view .LVU519
 1674 002a 13F4005F 		tst	r3, #8192
 1675 002e 1CD1     		bne	.L106
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1676              		.loc 1 3532 11 is_stmt 1 view .LVU520
 1677 0030 836D     		ldr	r3, [r0, #88]
 1678 0032 23F48073 		bic	r3, r3, #256
 1679 0036 8365     		str	r3, [r0, #88]
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1680              		.loc 1 3533 11 view .LVU521
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1681              		.loc 1 3533 20 is_stmt 0 view .LVU522
 1682 0038 836D     		ldr	r3, [r0, #88]
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1683              		.loc 1 3533 14 view .LVU523
 1684 003a 13F4805F 		tst	r3, #4096
 1685 003e 14D1     		bne	.L106
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1686              		.loc 1 3535 13 is_stmt 1 view .LVU524
 1687 0040 836D     		ldr	r3, [r0, #88]
 1688 0042 43F00103 		orr	r3, r3, #1
 1689 0046 8365     		str	r3, [r0, #88]
 1690 0048 0FE0     		b	.L106
 1691              	.L105:
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1692              		.loc 1 3544 7 view .LVU525
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1693              		.loc 1 3544 11 is_stmt 0 view .LVU526
 1694 004a DB68     		ldr	r3, [r3, #12]
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1695              		.loc 1 3544 10 view .LVU527
 1696 004c 13F0020F 		tst	r3, #2
 1697 0050 0BD1     		bne	.L106
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
ARM GAS  /tmp/ccNlWecU.s 			page 212


 1698              		.loc 1 3547 9 is_stmt 1 view .LVU528
 1699 0052 836D     		ldr	r3, [r0, #88]
 1700 0054 23F48073 		bic	r3, r3, #256
 1701 0058 8365     		str	r3, [r0, #88]
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1702              		.loc 1 3548 9 view .LVU529
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1703              		.loc 1 3548 18 is_stmt 0 view .LVU530
 1704 005a 836D     		ldr	r3, [r0, #88]
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1705              		.loc 1 3548 12 view .LVU531
 1706 005c 13F4805F 		tst	r3, #4096
 1707 0060 03D1     		bne	.L106
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 1708              		.loc 1 3550 11 is_stmt 1 view .LVU532
 1709 0062 836D     		ldr	r3, [r0, #88]
 1710 0064 43F00103 		orr	r3, r3, #1
 1711 0068 8365     		str	r3, [r0, #88]
 1712              	.L106:
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1713              		.loc 1 3559 5 view .LVU533
 1714 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1715              	.LVL116:
 1716              	.L103:
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1717              		.loc 1 3579 1 is_stmt 0 view .LVU534
 1718 006e 08BD     		pop	{r3, pc}
 1719              	.LVL117:
 1720              	.L104:
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1721              		.loc 1 3564 5 is_stmt 1 view .LVU535
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1722              		.loc 1 3564 14 is_stmt 0 view .LVU536
 1723 0070 826D     		ldr	r2, [r0, #88]
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1724              		.loc 1 3564 8 view .LVU537
 1725 0072 12F0100F 		tst	r2, #16
 1726 0076 04D1     		bne	.L110
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1727              		.loc 1 3576 7 is_stmt 1 view .LVU538
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1728              		.loc 1 3576 11 is_stmt 0 view .LVU539
 1729 0078 026D     		ldr	r2, [r0, #80]
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1730              		.loc 1 3576 23 view .LVU540
 1731 007a 526B     		ldr	r2, [r2, #52]
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1732              		.loc 1 3576 7 view .LVU541
 1733 007c 1846     		mov	r0, r3
 1734              	.LVL118:
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1735              		.loc 1 3576 7 view .LVU542
 1736 007e 9047     		blx	r2
 1737              	.LVL119:
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1738              		.loc 1 3579 1 view .LVU543
 1739 0080 F5E7     		b	.L103
ARM GAS  /tmp/ccNlWecU.s 			page 213


 1740              	.LVL120:
 1741              	.L110:
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1742              		.loc 1 3570 7 is_stmt 1 view .LVU544
 1743 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1744              	.LVL121:
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1745              		.loc 1 3570 7 is_stmt 0 view .LVU545
 1746 0086 F2E7     		b	.L103
 1747              		.cfi_endproc
 1748              	.LFE317:
 1750              		.section	.text.ADC_DMAError,"ax",%progbits
 1751              		.align	1
 1752              		.global	ADC_DMAError
 1753              		.syntax unified
 1754              		.thumb
 1755              		.thumb_func
 1756              		.fpu fpv4-sp-d16
 1758              	ADC_DMAError:
 1759              	.LVL122:
 1760              	.LFB319:
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA error callback.
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1761              		.loc 1 3605 1 is_stmt 1 view -0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765              		.loc 1 3605 1 is_stmt 0 view .LVU547
 1766 0000 08B5     		push	{r3, lr}
 1767              	.LCFI9:
 1768              		.cfi_def_cfa_offset 8
 1769              		.cfi_offset 3, -8
 1770              		.cfi_offset 14, -4
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1771              		.loc 1 3607 3 is_stmt 1 view .LVU548
 1772              		.loc 1 3607 22 is_stmt 0 view .LVU549
 1773 0002 806A     		ldr	r0, [r0, #40]
 1774              	.LVL123:
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1775              		.loc 1 3610 3 is_stmt 1 view .LVU550
 1776 0004 836D     		ldr	r3, [r0, #88]
 1777 0006 43F04003 		orr	r3, r3, #64
 1778 000a 8365     		str	r3, [r0, #88]
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1779              		.loc 1 3613 3 view .LVU551
 1780 000c C36D     		ldr	r3, [r0, #92]
ARM GAS  /tmp/ccNlWecU.s 			page 214


 1781 000e 43F00403 		orr	r3, r3, #4
 1782 0012 C365     		str	r3, [r0, #92]
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Error callback */
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1783              		.loc 1 3619 3 view .LVU552
 1784 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1785              	.LVL124:
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1786              		.loc 1 3621 1 is_stmt 0 view .LVU553
 1787 0018 08BD     		pop	{r3, pc}
 1788              		.cfi_endproc
 1789              	.LFE319:
 1791              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1792              		.align	1
 1793              		.global	HAL_ADC_ConfigChannel
 1794              		.syntax unified
 1795              		.thumb
 1796              		.thumb_func
 1797              		.fpu fpv4-sp-d16
 1799              	HAL_ADC_ConfigChannel:
 1800              	.LVL125:
 1801              	.LFB310:
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1802              		.loc 1 2700 1 is_stmt 1 view -0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 8
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 1806              		@ link register save eliminated.
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1807              		.loc 1 2700 1 is_stmt 0 view .LVU555
 1808 0000 F0B4     		push	{r4, r5, r6, r7}
 1809              	.LCFI10:
 1810              		.cfi_def_cfa_offset 16
 1811              		.cfi_offset 4, -16
 1812              		.cfi_offset 5, -12
 1813              		.cfi_offset 6, -8
 1814              		.cfi_offset 7, -4
 1815 0002 82B0     		sub	sp, sp, #8
 1816              	.LCFI11:
 1817              		.cfi_def_cfa_offset 24
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 1818              		.loc 1 2701 3 is_stmt 1 view .LVU556
 1819              	.LVL126:
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1820              		.loc 1 2702 3 view .LVU557
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 1821              		.loc 1 2703 3 view .LVU558
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1822              		.loc 1 2704 3 view .LVU559
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1823              		.loc 1 2704 17 is_stmt 0 view .LVU560
 1824 0004 0022     		movs	r2, #0
ARM GAS  /tmp/ccNlWecU.s 			page 215


 1825 0006 0192     		str	r2, [sp, #4]
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1826              		.loc 1 2705 3 is_stmt 1 view .LVU561
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1827              		.loc 1 2706 3 view .LVU562
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 1828              		.loc 1 2709 3 view .LVU563
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 1829              		.loc 1 2710 3 view .LVU564
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 1830              		.loc 1 2711 3 view .LVU565
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 1831              		.loc 1 2712 3 view .LVU566
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 1832              		.loc 1 2713 3 view .LVU567
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1833              		.loc 1 2714 3 view .LVU568
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1834              		.loc 1 2718 3 view .LVU569
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1835              		.loc 1 2721 3 view .LVU570
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1836              		.loc 1 2727 5 view .LVU571
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1837              		.loc 1 2731 3 view .LVU572
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1838              		.loc 1 2731 3 view .LVU573
 1839 0008 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 1840 000c 012A     		cmp	r2, #1
 1841 000e 00F04D82 		beq	.L173
 1842 0012 0346     		mov	r3, r0
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1843              		.loc 1 2731 3 discriminator 2 view .LVU574
 1844 0014 0122     		movs	r2, #1
 1845 0016 80F85420 		strb	r2, [r0, #84]
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1846              		.loc 1 2731 3 discriminator 2 view .LVU575
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1847              		.loc 1 2738 3 discriminator 2 view .LVU576
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1848              		.loc 1 2738 7 is_stmt 0 discriminator 2 view .LVU577
 1849 001a 0268     		ldr	r2, [r0]
 1850              	.LVL127:
 1851              	.LBB366:
 1852              	.LBI366:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1853              		.loc 2 6168 26 is_stmt 1 discriminator 2 view .LVU578
 1854              	.LBB367:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1855              		.loc 2 6170 3 discriminator 2 view .LVU579
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1856              		.loc 2 6170 12 is_stmt 0 discriminator 2 view .LVU580
 1857 001c 9268     		ldr	r2, [r2, #8]
 1858              	.LVL128:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1859              		.loc 2 6170 74 discriminator 2 view .LVU581
 1860 001e 12F0040F 		tst	r2, #4
ARM GAS  /tmp/ccNlWecU.s 			page 216


 1861 0022 0AD0     		beq	.L115
 1862              	.LVL129:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1863              		.loc 2 6170 74 discriminator 2 view .LVU582
 1864              	.LBE367:
 1865              	.LBE366:
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1866              		.loc 1 2928 5 is_stmt 1 view .LVU583
 1867 0024 826D     		ldr	r2, [r0, #88]
 1868 0026 42F02002 		orr	r2, r2, #32
 1869 002a 8265     		str	r2, [r0, #88]
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1870              		.loc 1 2930 5 view .LVU584
 1871              	.LVL130:
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1872              		.loc 1 2930 20 is_stmt 0 view .LVU585
 1873 002c 0120     		movs	r0, #1
 1874              	.LVL131:
 1875              	.L116:
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1876              		.loc 1 2934 3 is_stmt 1 view .LVU586
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1877              		.loc 1 2934 3 view .LVU587
 1878 002e 0022     		movs	r2, #0
 1879 0030 83F85420 		strb	r2, [r3, #84]
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1880              		.loc 1 2934 3 view .LVU588
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1881              		.loc 1 2937 3 view .LVU589
 1882              	.LVL132:
 1883              	.L114:
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1884              		.loc 1 2938 1 is_stmt 0 view .LVU590
 1885 0034 02B0     		add	sp, sp, #8
 1886              	.LCFI12:
 1887              		.cfi_remember_state
 1888              		.cfi_def_cfa_offset 16
 1889              		@ sp needed
 1890 0036 F0BC     		pop	{r4, r5, r6, r7}
 1891              	.LCFI13:
 1892              		.cfi_restore 7
 1893              		.cfi_restore 6
 1894              		.cfi_restore 5
 1895              		.cfi_restore 4
 1896              		.cfi_def_cfa_offset 0
 1897 0038 7047     		bx	lr
 1898              	.LVL133:
 1899              	.L115:
 1900              	.LCFI14:
 1901              		.cfi_restore_state
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1902              		.loc 1 2746 5 is_stmt 1 view .LVU591
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1903              		.loc 1 2746 16 is_stmt 0 view .LVU592
 1904 003a 4A68     		ldr	r2, [r1, #4]
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1905              		.loc 1 2746 8 view .LVU593
ARM GAS  /tmp/ccNlWecU.s 			page 217


 1906 003c 052A     		cmp	r2, #5
 1907 003e 09D8     		bhi	.L117
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1908              		.loc 1 2748 7 is_stmt 1 view .LVU594
 1909 0040 023A     		subs	r2, r2, #2
 1910 0042 032A     		cmp	r2, #3
 1911 0044 00F29780 		bhi	.L118
 1912 0048 DFE802F0 		tbb	[pc, r2]
 1913              	.LVL134:
 1914              	.L120:
 1915 004c 02       		.byte	(.L123-.L120)/2
 1916 004d 8B       		.byte	(.L122-.L120)/2
 1917 004e 8E       		.byte	(.L121-.L120)/2
 1918 004f 91       		.byte	(.L119-.L120)/2
 1919              		.p2align 1
 1920              	.L123:
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 1921              		.loc 1 2751 11 view .LVU595
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 1922              		.loc 1 2751 25 is_stmt 0 view .LVU596
 1923 0050 0C22     		movs	r2, #12
 1924 0052 4A60     		str	r2, [r1, #4]
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 3U:
 1925              		.loc 1 2752 11 is_stmt 1 view .LVU597
 1926              	.L117:
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1927              		.loc 1 2771 5 view .LVU598
 1928 0054 1E68     		ldr	r6, [r3]
 1929 0056 4D68     		ldr	r5, [r1, #4]
 1930 0058 0C68     		ldr	r4, [r1]
 1931              	.LVL135:
 1932              	.LBB368:
 1933              	.LBI368:
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1934              		.loc 2 3548 22 view .LVU599
 1935              	.LBB369:
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1936              		.loc 2 3554 3 view .LVU600
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1937              		.loc 2 3554 25 is_stmt 0 view .LVU601
 1938 005a 3036     		adds	r6, r6, #48
 1939              	.LVL136:
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1940              		.loc 2 3554 25 view .LVU602
 1941 005c 2A0A     		lsrs	r2, r5, #8
 1942 005e 9200     		lsls	r2, r2, #2
 1943 0060 02F00C02 		and	r2, r2, #12
 1944              	.LVL137:
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1945              		.loc 2 3556 3 is_stmt 1 view .LVU603
 1946 0064 B058     		ldr	r0, [r6, r2]
 1947 0066 05F01F05 		and	r5, r5, #31
 1948              	.LVL138:
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1949              		.loc 2 3556 3 is_stmt 0 view .LVU604
 1950 006a 1F27     		movs	r7, #31
 1951 006c AF40     		lsls	r7, r7, r5
ARM GAS  /tmp/ccNlWecU.s 			page 218


 1952 006e 20EA0700 		bic	r0, r0, r7
 1953 0072 C4F38464 		ubfx	r4, r4, #26, #5
 1954              	.LVL139:
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1955              		.loc 2 3556 3 view .LVU605
 1956 0076 AC40     		lsls	r4, r4, r5
 1957 0078 2043     		orrs	r0, r0, r4
 1958 007a B050     		str	r0, [r6, r2]
 1959              	.LVL140:
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1960              		.loc 2 3556 3 view .LVU606
 1961              	.LBE369:
 1962              	.LBE368:
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1963              		.loc 1 2778 5 is_stmt 1 view .LVU607
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1964              		.loc 1 2778 46 is_stmt 0 view .LVU608
 1965 007c 1C68     		ldr	r4, [r3]
 1966              	.LVL141:
 1967              	.LBB370:
 1968              	.LBI370:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1969              		.loc 2 6168 26 is_stmt 1 view .LVU609
 1970              	.LBB371:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1971              		.loc 2 6170 3 view .LVU610
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1972              		.loc 2 6170 12 is_stmt 0 view .LVU611
 1973 007e A268     		ldr	r2, [r4, #8]
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1974              		.loc 2 6170 74 view .LVU612
 1975 0080 12F00402 		ands	r2, r2, #4
 1976 0084 00D0     		beq	.L124
 1977 0086 0122     		movs	r2, #1
 1978              	.L124:
 1979              	.LVL142:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1980              		.loc 2 6170 74 view .LVU613
 1981              	.LBE371:
 1982              	.LBE370:
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 1983              		.loc 1 2779 5 is_stmt 1 view .LVU614
 1984              	.LBB372:
 1985              	.LBI372:
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1986              		.loc 2 6351 26 view .LVU615
 1987              	.LBB373:
 1988              		.loc 2 6353 3 view .LVU616
 1989              		.loc 2 6353 12 is_stmt 0 view .LVU617
 1990 0088 A068     		ldr	r0, [r4, #8]
 1991              		.loc 2 6353 76 view .LVU618
 1992 008a 10F00800 		ands	r0, r0, #8
 1993 008e 00D0     		beq	.L125
 1994 0090 0120     		movs	r0, #1
 1995              	.L125:
 1996              	.LVL143:
 1997              		.loc 2 6353 76 view .LVU619
ARM GAS  /tmp/ccNlWecU.s 			page 219


 1998              	.LBE373:
 1999              	.LBE372:
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2000              		.loc 1 2780 5 is_stmt 1 view .LVU620
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2001              		.loc 1 2780 8 is_stmt 0 view .LVU621
 2002 0092 002A     		cmp	r2, #0
 2003 0094 32D1     		bne	.L126
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 2004              		.loc 1 2781 9 view .LVU622
 2005 0096 88BB     		cbnz	r0, .L126
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2006              		.loc 1 2786 7 is_stmt 1 view .LVU623
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2007              		.loc 1 2786 18 is_stmt 0 view .LVU624
 2008 0098 8868     		ldr	r0, [r1, #8]
 2009              	.LVL144:
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2010              		.loc 1 2786 10 view .LVU625
 2011 009a B0F1004F 		cmp	r0, #-2147483648
 2012 009e 6DD0     		beq	.L192
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2013              		.loc 1 2797 9 is_stmt 1 view .LVU626
 2014 00a0 0E68     		ldr	r6, [r1]
 2015              	.LVL145:
 2016              	.LBB374:
 2017              	.LBI374:
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2018              		.loc 2 4714 22 view .LVU627
 2019              	.LBB375:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2020              		.loc 2 4720 3 view .LVU628
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2021              		.loc 2 4720 25 is_stmt 0 view .LVU629
 2022 00a2 1434     		adds	r4, r4, #20
 2023              	.LVL146:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2024              		.loc 2 4720 25 view .LVU630
 2025 00a4 720E     		lsrs	r2, r6, #25
 2026              	.LVL147:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2027              		.loc 2 4720 25 view .LVU631
 2028 00a6 9200     		lsls	r2, r2, #2
 2029 00a8 02F00402 		and	r2, r2, #4
 2030              	.LVL148:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2031              		.loc 2 4722 3 is_stmt 1 view .LVU632
 2032 00ac A558     		ldr	r5, [r4, r2]
 2033 00ae C6F30456 		ubfx	r6, r6, #20, #5
 2034              	.LVL149:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2035              		.loc 2 4722 3 is_stmt 0 view .LVU633
 2036 00b2 0727     		movs	r7, #7
 2037 00b4 B740     		lsls	r7, r7, r6
 2038 00b6 25EA0705 		bic	r5, r5, r7
 2039 00ba B040     		lsls	r0, r0, r6
 2040              	.LVL150:
ARM GAS  /tmp/ccNlWecU.s 			page 220


4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2041              		.loc 2 4722 3 view .LVU634
 2042 00bc 2843     		orrs	r0, r0, r5
 2043 00be A050     		str	r0, [r4, r2]
 2044              	.LVL151:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2045              		.loc 2 4722 3 view .LVU635
 2046              	.LBE375:
 2047              	.LBE374:
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2048              		.loc 1 2800 9 is_stmt 1 view .LVU636
 2049 00c0 1868     		ldr	r0, [r3]
 2050              	.LVL152:
 2051              	.LBB376:
 2052              	.LBI376:
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2053              		.loc 2 3113 22 view .LVU637
 2054              	.LBB377:
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2055              		.loc 2 3115 3 view .LVU638
 2056 00c2 4269     		ldr	r2, [r0, #20]
 2057 00c4 22F00042 		bic	r2, r2, #-2147483648
 2058 00c8 4261     		str	r2, [r0, #20]
 2059              	.LVL153:
 2060              	.L128:
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2061              		.loc 2 3115 3 is_stmt 0 view .LVU639
 2062              	.LBE377:
 2063              	.LBE376:
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2064              		.loc 1 2811 7 is_stmt 1 view .LVU640
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2065              		.loc 1 2811 26 is_stmt 0 view .LVU641
 2066 00ca 4C69     		ldr	r4, [r1, #20]
 2067 00cc 1868     		ldr	r0, [r3]
 2068 00ce C268     		ldr	r2, [r0, #12]
 2069 00d0 C2F3C102 		ubfx	r2, r2, #3, #2
 2070 00d4 5200     		lsls	r2, r2, #1
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2071              		.loc 1 2811 24 view .LVU642
 2072 00d6 04FA02F2 		lsl	r2, r4, r2
 2073              	.LVL154:
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2074              		.loc 1 2813 7 is_stmt 1 view .LVU643
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2075              		.loc 1 2813 18 is_stmt 0 view .LVU644
 2076 00da 0D69     		ldr	r5, [r1, #16]
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2077              		.loc 1 2813 10 view .LVU645
 2078 00dc 042D     		cmp	r5, #4
 2079 00de 62D0     		beq	.L129
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2080              		.loc 1 2816 9 is_stmt 1 view .LVU646
 2081 00e0 0E68     		ldr	r6, [r1]
 2082              	.LVL155:
 2083              	.LBB378:
 2084              	.LBI378:
ARM GAS  /tmp/ccNlWecU.s 			page 221


2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2085              		.loc 2 2927 22 view .LVU647
 2086              	.LBB379:
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2087              		.loc 2 2929 3 view .LVU648
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2088              		.loc 2 2929 25 is_stmt 0 view .LVU649
 2089 00e2 6030     		adds	r0, r0, #96
 2090              	.LVL156:
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2091              		.loc 2 2931 3 is_stmt 1 view .LVU650
 2092 00e4 50F82570 		ldr	r7, [r0, r5, lsl #2]
 2093 00e8 B04C     		ldr	r4, .L203
 2094 00ea 3C40     		ands	r4, r4, r7
 2095 00ec 06F0F846 		and	r6, r6, #2080374784
 2096              	.LVL157:
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2097              		.loc 2 2931 3 is_stmt 0 view .LVU651
 2098 00f0 3243     		orrs	r2, r2, r6
 2099              	.LVL158:
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2100              		.loc 2 2931 3 view .LVU652
 2101 00f2 1443     		orrs	r4, r4, r2
 2102 00f4 44F00044 		orr	r4, r4, #-2147483648
 2103 00f8 40F82540 		str	r4, [r0, r5, lsl #2]
 2104              	.LVL159:
 2105              	.L126:
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2106              		.loc 2 2931 3 view .LVU653
 2107              	.LBE379:
 2108              	.LBE378:
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2109              		.loc 1 2849 5 is_stmt 1 view .LVU654
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2110              		.loc 1 2849 9 is_stmt 0 view .LVU655
 2111 00fc 1868     		ldr	r0, [r3]
 2112              	.LVL160:
 2113              	.LBB380:
 2114              	.LBI380:
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2115              		.loc 2 6046 26 is_stmt 1 view .LVU656
 2116              	.LBB381:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2117              		.loc 2 6048 3 view .LVU657
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2118              		.loc 2 6048 12 is_stmt 0 view .LVU658
 2119 00fe 8268     		ldr	r2, [r0, #8]
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2120              		.loc 2 6048 68 view .LVU659
 2121 0100 12F0010F 		tst	r2, #1
 2122 0104 16D1     		bne	.L145
 2123              	.LVL161:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2124              		.loc 2 6048 68 view .LVU660
 2125              	.LBE381:
 2126              	.LBE380:
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 222


 2127              		.loc 1 2852 7 is_stmt 1 view .LVU661
 2128 0106 0A68     		ldr	r2, [r1]
 2129 0108 CD68     		ldr	r5, [r1, #12]
 2130              	.LVL162:
 2131              	.LBB382:
 2132              	.LBI382:
4868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2133              		.loc 2 4868 22 view .LVU662
 2134              	.LBB383:
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2135              		.loc 2 4873 3 view .LVU663
 2136 010a D0F8B040 		ldr	r4, [r0, #176]
 2137 010e C2F31206 		ubfx	r6, r2, #0, #19
 2138 0112 24EA0604 		bic	r4, r4, r6
 2139 0116 05F01806 		and	r6, r5, #24
 2140 011a A54D     		ldr	r5, .L203+4
 2141              	.LVL163:
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2142              		.loc 2 4873 3 is_stmt 0 view .LVU664
 2143 011c F540     		lsrs	r5, r5, r6
 2144 011e 2A40     		ands	r2, r2, r5
 2145              	.LVL164:
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2146              		.loc 2 4873 3 view .LVU665
 2147 0120 C2F31202 		ubfx	r2, r2, #0, #19
 2148 0124 2243     		orrs	r2, r2, r4
 2149 0126 C0F8B020 		str	r2, [r0, #176]
 2150              	.LVL165:
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2151              		.loc 2 4873 3 view .LVU666
 2152              	.LBE383:
 2153              	.LBE382:
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2154              		.loc 1 2855 7 is_stmt 1 view .LVU667
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2155              		.loc 1 2855 18 is_stmt 0 view .LVU668
 2156 012a C868     		ldr	r0, [r1, #12]
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2157              		.loc 1 2855 10 view .LVU669
 2158 012c A14A     		ldr	r2, .L203+8
 2159 012e 9042     		cmp	r0, r2
 2160 0130 00F0A180 		beq	.L193
 2161              	.L145:
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2162              		.loc 1 2872 5 is_stmt 1 view .LVU670
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2163              		.loc 1 2872 9 is_stmt 0 view .LVU671
 2164 0134 0A68     		ldr	r2, [r1]
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2165              		.loc 1 2872 8 view .LVU672
 2166 0136 A049     		ldr	r1, .L203+12
 2167              	.LVL166:
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2168              		.loc 1 2872 8 view .LVU673
 2169 0138 0A42     		tst	r2, r1
 2170 013a 00F0B381 		beq	.L185
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 223


 2171              		.loc 1 2874 7 is_stmt 1 view .LVU674
 2172              	.LVL167:
 2173              	.LBB384:
 2174              	.LBI384:
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2175              		.loc 2 2588 26 view .LVU675
 2176              	.LBB385:
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2177              		.loc 2 2590 3 view .LVU676
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2178              		.loc 2 2590 21 is_stmt 0 view .LVU677
 2179 013e 9F49     		ldr	r1, .L203+16
 2180 0140 8968     		ldr	r1, [r1, #8]
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2181              		.loc 2 2590 10 view .LVU678
 2182 0142 01F0E074 		and	r4, r1, #29360128
 2183              	.LVL168:
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2184              		.loc 2 2590 10 view .LVU679
 2185              	.LBE385:
 2186              	.LBE384:
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2187              		.loc 1 2878 7 is_stmt 1 view .LVU680
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2188              		.loc 1 2878 10 is_stmt 0 view .LVU681
 2189 0146 9E48     		ldr	r0, .L203+20
 2190 0148 8242     		cmp	r2, r0
 2191 014a 00F05E81 		beq	.L194
 2192              	.L169:
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2193              		.loc 1 2898 12 is_stmt 1 view .LVU682
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2194              		.loc 1 2898 15 is_stmt 0 view .LVU683
 2195 014e 9D48     		ldr	r0, .L203+24
 2196 0150 8242     		cmp	r2, r0
 2197 0152 00F08081 		beq	.L195
 2198              	.L172:
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2199              		.loc 1 2906 12 is_stmt 1 view .LVU684
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2200              		.loc 1 2906 15 is_stmt 0 view .LVU685
 2201 0156 9C48     		ldr	r0, .L203+28
 2202 0158 8242     		cmp	r2, r0
 2203 015a 00F09081 		beq	.L196
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2204              		.loc 1 2701 21 view .LVU686
 2205 015e 0020     		movs	r0, #0
 2206 0160 65E7     		b	.L116
 2207              	.LVL169:
 2208              	.L122:
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2209              		.loc 1 2754 11 is_stmt 1 view .LVU687
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2210              		.loc 1 2754 25 is_stmt 0 view .LVU688
 2211 0162 1222     		movs	r2, #18
 2212 0164 4A60     		str	r2, [r1, #4]
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 4U:
ARM GAS  /tmp/ccNlWecU.s 			page 224


 2213              		.loc 1 2755 11 is_stmt 1 view .LVU689
 2214 0166 75E7     		b	.L117
 2215              	.L121:
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2216              		.loc 1 2757 11 view .LVU690
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2217              		.loc 1 2757 25 is_stmt 0 view .LVU691
 2218 0168 1822     		movs	r2, #24
 2219 016a 4A60     		str	r2, [r1, #4]
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 5U:
 2220              		.loc 1 2758 11 is_stmt 1 view .LVU692
 2221 016c 72E7     		b	.L117
 2222              	.L119:
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2223              		.loc 1 2760 11 view .LVU693
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2224              		.loc 1 2760 25 is_stmt 0 view .LVU694
 2225 016e 4FF48072 		mov	r2, #256
 2226 0172 4A60     		str	r2, [r1, #4]
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case 1U */
 2227              		.loc 1 2761 11 is_stmt 1 view .LVU695
 2228 0174 6EE7     		b	.L117
 2229              	.L118:
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2230              		.loc 1 2764 11 view .LVU696
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 2231              		.loc 1 2764 25 is_stmt 0 view .LVU697
 2232 0176 0622     		movs	r2, #6
 2233 0178 4A60     		str	r2, [r1, #4]
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2234              		.loc 1 2765 11 is_stmt 1 view .LVU698
 2235 017a 6BE7     		b	.L117
 2236              	.LVL170:
 2237              	.L192:
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2238              		.loc 1 2789 9 view .LVU699
 2239 017c 0868     		ldr	r0, [r1]
 2240              	.LVL171:
 2241              	.LBB386:
 2242              	.LBI386:
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2243              		.loc 2 4714 22 view .LVU700
 2244              	.LBB387:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2245              		.loc 2 4720 3 view .LVU701
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2246              		.loc 2 4720 25 is_stmt 0 view .LVU702
 2247 017e 1434     		adds	r4, r4, #20
 2248              	.LVL172:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2249              		.loc 2 4720 25 view .LVU703
 2250 0180 420E     		lsrs	r2, r0, #25
 2251              	.LVL173:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2252              		.loc 2 4720 25 view .LVU704
 2253 0182 9200     		lsls	r2, r2, #2
 2254 0184 02F00402 		and	r2, r2, #4
ARM GAS  /tmp/ccNlWecU.s 			page 225


 2255              	.LVL174:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2256              		.loc 2 4722 3 is_stmt 1 view .LVU705
 2257 0188 A558     		ldr	r5, [r4, r2]
 2258 018a C0F30450 		ubfx	r0, r0, #20, #5
 2259              	.LVL175:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2260              		.loc 2 4722 3 is_stmt 0 view .LVU706
 2261 018e 0726     		movs	r6, #7
 2262 0190 06FA00F0 		lsl	r0, r6, r0
 2263 0194 25EA0000 		bic	r0, r5, r0
 2264 0198 A050     		str	r0, [r4, r2]
 2265              	.LVL176:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2266              		.loc 2 4722 3 view .LVU707
 2267              	.LBE387:
 2268              	.LBE386:
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2269              		.loc 1 2792 9 is_stmt 1 view .LVU708
 2270 019a 1868     		ldr	r0, [r3]
 2271              	.LVL177:
 2272              	.LBB388:
 2273              	.LBI388:
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2274              		.loc 2 3113 22 view .LVU709
 2275              	.LBB389:
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2276              		.loc 2 3115 3 view .LVU710
 2277 019c 4269     		ldr	r2, [r0, #20]
 2278 019e 42F00042 		orr	r2, r2, #-2147483648
 2279 01a2 4261     		str	r2, [r0, #20]
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2280              		.loc 2 3116 1 is_stmt 0 view .LVU711
 2281 01a4 91E7     		b	.L128
 2282              	.LVL178:
 2283              	.L129:
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2284              		.loc 2 3116 1 view .LVU712
 2285              	.LBE389:
 2286              	.LBE388:
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2287              		.loc 1 2823 9 is_stmt 1 view .LVU713
 2288              	.LBB390:
 2289              	.LBI390:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2290              		.loc 2 3006 26 view .LVU714
 2291              	.LBB391:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2292              		.loc 2 3008 3 view .LVU715
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2293              		.loc 2 3010 3 view .LVU716
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2294              		.loc 2 3010 10 is_stmt 0 view .LVU717
 2295 01a6 026E     		ldr	r2, [r0, #96]
 2296              	.LVL179:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2297              		.loc 2 3010 10 view .LVU718
ARM GAS  /tmp/ccNlWecU.s 			page 226


 2298              	.LBE391:
 2299              	.LBE390:
 2300              	.LBB392:
 2301              	.LBI392:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2302              		.loc 2 3006 26 is_stmt 1 view .LVU719
 2303              	.LBB393:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2304              		.loc 2 3008 3 view .LVU720
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2305              		.loc 2 3010 3 view .LVU721
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2306              		.loc 2 3010 10 is_stmt 0 view .LVU722
 2307 01a8 046E     		ldr	r4, [r0, #96]
 2308              	.LVL180:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2309              		.loc 2 3010 10 view .LVU723
 2310              	.LBE393:
 2311              	.LBE392:
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2312              		.loc 1 2823 13 view .LVU724
 2313 01aa C4F38464 		ubfx	r4, r4, #26, #5
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2314              		.loc 1 2824 16 view .LVU725
 2315 01ae 0A68     		ldr	r2, [r1]
 2316 01b0 C2F31205 		ubfx	r5, r2, #0, #19
 2317 01b4 85BB     		cbnz	r5, .L130
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2318              		.loc 1 2824 16 discriminator 1 view .LVU726
 2319 01b6 C2F38462 		ubfx	r2, r2, #26, #5
 2320              	.L131:
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2321              		.loc 1 2823 12 view .LVU727
 2322 01ba 9442     		cmp	r4, r2
 2323 01bc 34D0     		beq	.L197
 2324              	.L133:
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2325              		.loc 1 2828 9 is_stmt 1 view .LVU728
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2326              		.loc 1 2828 13 is_stmt 0 view .LVU729
 2327 01be 1C68     		ldr	r4, [r3]
 2328              	.LVL181:
 2329              	.LBB394:
 2330              	.LBI394:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2331              		.loc 2 3006 26 is_stmt 1 view .LVU730
 2332              	.LBB395:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2333              		.loc 2 3008 3 view .LVU731
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2334              		.loc 2 3010 3 view .LVU732
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2335              		.loc 2 3010 10 is_stmt 0 view .LVU733
 2336 01c0 626E     		ldr	r2, [r4, #100]
 2337              	.LVL182:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2338              		.loc 2 3010 10 view .LVU734
ARM GAS  /tmp/ccNlWecU.s 			page 227


 2339              	.LBE395:
 2340              	.LBE394:
 2341              	.LBB396:
 2342              	.LBI396:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2343              		.loc 2 3006 26 is_stmt 1 view .LVU735
 2344              	.LBB397:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2345              		.loc 2 3008 3 view .LVU736
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2346              		.loc 2 3010 3 view .LVU737
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2347              		.loc 2 3010 10 is_stmt 0 view .LVU738
 2348 01c2 606E     		ldr	r0, [r4, #100]
 2349              	.LVL183:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2350              		.loc 2 3010 10 view .LVU739
 2351              	.LBE397:
 2352              	.LBE396:
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2353              		.loc 1 2828 13 view .LVU740
 2354 01c4 C0F38460 		ubfx	r0, r0, #26, #5
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2355              		.loc 1 2829 16 view .LVU741
 2356 01c8 0A68     		ldr	r2, [r1]
 2357 01ca C2F31205 		ubfx	r5, r2, #0, #19
 2358 01ce 85BB     		cbnz	r5, .L134
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2359              		.loc 1 2829 16 discriminator 1 view .LVU742
 2360 01d0 C2F38462 		ubfx	r2, r2, #26, #5
 2361              	.L135:
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2362              		.loc 1 2828 12 view .LVU743
 2363 01d4 9042     		cmp	r0, r2
 2364 01d6 34D0     		beq	.L198
 2365              	.L137:
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2366              		.loc 1 2833 9 is_stmt 1 view .LVU744
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2367              		.loc 1 2833 13 is_stmt 0 view .LVU745
 2368 01d8 1C68     		ldr	r4, [r3]
 2369              	.LVL184:
 2370              	.LBB398:
 2371              	.LBI398:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2372              		.loc 2 3006 26 is_stmt 1 view .LVU746
 2373              	.LBB399:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2374              		.loc 2 3008 3 view .LVU747
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2375              		.loc 2 3010 3 view .LVU748
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2376              		.loc 2 3010 10 is_stmt 0 view .LVU749
 2377 01da A26E     		ldr	r2, [r4, #104]
 2378              	.LVL185:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2379              		.loc 2 3010 10 view .LVU750
ARM GAS  /tmp/ccNlWecU.s 			page 228


 2380              	.LBE399:
 2381              	.LBE398:
 2382              	.LBB400:
 2383              	.LBI400:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2384              		.loc 2 3006 26 is_stmt 1 view .LVU751
 2385              	.LBB401:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2386              		.loc 2 3008 3 view .LVU752
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2387              		.loc 2 3010 3 view .LVU753
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2388              		.loc 2 3010 10 is_stmt 0 view .LVU754
 2389 01dc A06E     		ldr	r0, [r4, #104]
 2390              	.LVL186:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2391              		.loc 2 3010 10 view .LVU755
 2392              	.LBE401:
 2393              	.LBE400:
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2394              		.loc 1 2833 13 view .LVU756
 2395 01de C0F38460 		ubfx	r0, r0, #26, #5
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2396              		.loc 1 2834 16 view .LVU757
 2397 01e2 0A68     		ldr	r2, [r1]
 2398 01e4 C2F31205 		ubfx	r5, r2, #0, #19
 2399 01e8 85BB     		cbnz	r5, .L138
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2400              		.loc 1 2834 16 discriminator 1 view .LVU758
 2401 01ea C2F38462 		ubfx	r2, r2, #26, #5
 2402              	.L139:
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2403              		.loc 1 2833 12 view .LVU759
 2404 01ee 9042     		cmp	r0, r2
 2405 01f0 34D0     		beq	.L199
 2406              	.L141:
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2407              		.loc 1 2838 9 is_stmt 1 view .LVU760
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2408              		.loc 1 2838 13 is_stmt 0 view .LVU761
 2409 01f2 1C68     		ldr	r4, [r3]
 2410              	.LVL187:
 2411              	.LBB402:
 2412              	.LBI402:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2413              		.loc 2 3006 26 is_stmt 1 view .LVU762
 2414              	.LBB403:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2415              		.loc 2 3008 3 view .LVU763
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2416              		.loc 2 3010 3 view .LVU764
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2417              		.loc 2 3010 10 is_stmt 0 view .LVU765
 2418 01f4 E26E     		ldr	r2, [r4, #108]
 2419              	.LVL188:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2420              		.loc 2 3010 10 view .LVU766
ARM GAS  /tmp/ccNlWecU.s 			page 229


 2421              	.LBE403:
 2422              	.LBE402:
 2423              	.LBB404:
 2424              	.LBI404:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2425              		.loc 2 3006 26 is_stmt 1 view .LVU767
 2426              	.LBB405:
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2427              		.loc 2 3008 3 view .LVU768
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2428              		.loc 2 3010 3 view .LVU769
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2429              		.loc 2 3010 10 is_stmt 0 view .LVU770
 2430 01f6 E06E     		ldr	r0, [r4, #108]
 2431              	.LVL189:
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2432              		.loc 2 3010 10 view .LVU771
 2433              	.LBE405:
 2434              	.LBE404:
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2435              		.loc 1 2838 13 view .LVU772
 2436 01f8 C0F38460 		ubfx	r0, r0, #26, #5
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2437              		.loc 1 2839 16 view .LVU773
 2438 01fc 0A68     		ldr	r2, [r1]
 2439 01fe C2F31205 		ubfx	r5, r2, #0, #19
 2440 0202 85BB     		cbnz	r5, .L142
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2441              		.loc 1 2839 16 discriminator 1 view .LVU774
 2442 0204 C2F38462 		ubfx	r2, r2, #26, #5
 2443              	.L143:
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2444              		.loc 1 2838 12 view .LVU775
 2445 0208 9042     		cmp	r0, r2
 2446 020a 7FF477AF 		bne	.L126
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2447              		.loc 1 2841 11 is_stmt 1 view .LVU776
 2448              	.LVL190:
 2449              	.LBB406:
 2450              	.LBI406:
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2451              		.loc 2 3065 22 view .LVU777
 2452              	.LBB407:
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2453              		.loc 2 3067 3 view .LVU778
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2454              		.loc 2 3069 3 view .LVU779
 2455 020e E26E     		ldr	r2, [r4, #108]
 2456 0210 22F00042 		bic	r2, r2, #-2147483648
 2457 0214 E266     		str	r2, [r4, #108]
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2458              		.loc 2 3072 1 is_stmt 0 view .LVU780
 2459 0216 71E7     		b	.L126
 2460              	.LVL191:
 2461              	.L130:
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2462              		.loc 2 3072 1 view .LVU781
ARM GAS  /tmp/ccNlWecU.s 			page 230


 2463              	.LBE407:
 2464              	.LBE406:
 2465              	.LBB408:
 2466              	.LBI408:
 2467              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  /tmp/ccNlWecU.s 			page 231


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccNlWecU.s 			page 232


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
ARM GAS  /tmp/ccNlWecU.s 			page 233


 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccNlWecU.s 			page 234


 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 235


 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 236


 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
ARM GAS  /tmp/ccNlWecU.s 			page 237


 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccNlWecU.s 			page 238


 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
ARM GAS  /tmp/ccNlWecU.s 			page 239


 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 240


 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  /tmp/ccNlWecU.s 			page 241


 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
ARM GAS  /tmp/ccNlWecU.s 			page 242


 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 243


 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccNlWecU.s 			page 244


 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccNlWecU.s 			page 245


 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
ARM GAS  /tmp/ccNlWecU.s 			page 246


 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /tmp/ccNlWecU.s 			page 247


 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
ARM GAS  /tmp/ccNlWecU.s 			page 248


1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2468              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU782
 2469              	.LBB409:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2470              		.loc 3 1050 3 discriminator 2 view .LVU783
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2471              		.loc 3 1055 4 discriminator 2 view .LVU784
 2472              		.syntax unified
 2473              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2474 0218 92FAA2F2 		rbit r2, r2
 2475              	@ 0 "" 2
 2476              	.LVL192:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2477              		.loc 3 1068 3 discriminator 2 view .LVU785
ARM GAS  /tmp/ccNlWecU.s 			page 249


 2478              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU786
 2479              		.thumb
 2480              		.syntax unified
 2481              	.LBE409:
 2482              	.LBE408:
 2483              	.LBB410:
 2484              	.LBI410:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2485              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU787
 2486              	.LBB411:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2487              		.loc 3 1089 3 discriminator 2 view .LVU788
 2488              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU789
 2489 021c 12B1     		cbz	r2, .L174
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2490              		.loc 3 1093 3 is_stmt 1 view .LVU790
 2491              		.loc 3 1093 10 is_stmt 0 view .LVU791
 2492 021e B2FA82F2 		clz	r2, r2
 2493              	.LVL193:
 2494              		.loc 3 1093 10 view .LVU792
 2495 0222 CAE7     		b	.L131
 2496              	.LVL194:
 2497              	.L174:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2498              		.loc 3 1091 12 view .LVU793
 2499 0224 2022     		movs	r2, #32
 2500              	.LVL195:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2501              		.loc 3 1091 12 view .LVU794
 2502 0226 C8E7     		b	.L131
 2503              	.L197:
 2504              	.LBE411:
 2505              	.LBE410:
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2506              		.loc 1 2826 11 is_stmt 1 view .LVU795
ARM GAS  /tmp/ccNlWecU.s 			page 250


 2507              	.LVL196:
 2508              	.LBB412:
 2509              	.LBI412:
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2510              		.loc 2 3065 22 view .LVU796
 2511              	.LBB413:
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2512              		.loc 2 3067 3 view .LVU797
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2513              		.loc 2 3069 3 view .LVU798
 2514 0228 026E     		ldr	r2, [r0, #96]
 2515 022a 22F00042 		bic	r2, r2, #-2147483648
 2516 022e 0266     		str	r2, [r0, #96]
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2517              		.loc 2 3072 1 is_stmt 0 view .LVU799
 2518 0230 C5E7     		b	.L133
 2519              	.LVL197:
 2520              	.L134:
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2521              		.loc 2 3072 1 view .LVU800
 2522              	.LBE413:
 2523              	.LBE412:
 2524              	.LBB414:
 2525              	.LBI414:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2526              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU801
 2527              	.LBB415:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2528              		.loc 3 1050 3 discriminator 2 view .LVU802
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2529              		.loc 3 1055 4 discriminator 2 view .LVU803
 2530              		.syntax unified
 2531              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2532 0232 92FAA2F2 		rbit r2, r2
 2533              	@ 0 "" 2
 2534              	.LVL198:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2535              		.loc 3 1068 3 discriminator 2 view .LVU804
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2536              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU805
 2537              		.thumb
 2538              		.syntax unified
 2539              	.LBE415:
 2540              	.LBE414:
 2541              	.LBB416:
 2542              	.LBI416:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2543              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU806
 2544              	.LBB417:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2545              		.loc 3 1089 3 discriminator 2 view .LVU807
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2546              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU808
 2547 0236 12B1     		cbz	r2, .L175
 2548              		.loc 3 1093 3 is_stmt 1 view .LVU809
 2549              		.loc 3 1093 10 is_stmt 0 view .LVU810
 2550 0238 B2FA82F2 		clz	r2, r2
ARM GAS  /tmp/ccNlWecU.s 			page 251


 2551              	.LVL199:
 2552              		.loc 3 1093 10 view .LVU811
 2553 023c CAE7     		b	.L135
 2554              	.LVL200:
 2555              	.L175:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2556              		.loc 3 1091 12 view .LVU812
 2557 023e 2022     		movs	r2, #32
 2558              	.LVL201:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2559              		.loc 3 1091 12 view .LVU813
 2560 0240 C8E7     		b	.L135
 2561              	.L198:
 2562              	.LBE417:
 2563              	.LBE416:
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2564              		.loc 1 2831 11 is_stmt 1 view .LVU814
 2565              	.LVL202:
 2566              	.LBB418:
 2567              	.LBI418:
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2568              		.loc 2 3065 22 view .LVU815
 2569              	.LBB419:
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2570              		.loc 2 3067 3 view .LVU816
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2571              		.loc 2 3069 3 view .LVU817
 2572 0242 626E     		ldr	r2, [r4, #100]
 2573 0244 22F00042 		bic	r2, r2, #-2147483648
 2574 0248 6266     		str	r2, [r4, #100]
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2575              		.loc 2 3072 1 is_stmt 0 view .LVU818
 2576 024a C5E7     		b	.L137
 2577              	.LVL203:
 2578              	.L138:
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2579              		.loc 2 3072 1 view .LVU819
 2580              	.LBE419:
 2581              	.LBE418:
 2582              	.LBB420:
 2583              	.LBI420:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2584              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU820
 2585              	.LBB421:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2586              		.loc 3 1050 3 discriminator 2 view .LVU821
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2587              		.loc 3 1055 4 discriminator 2 view .LVU822
 2588              		.syntax unified
 2589              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2590 024c 92FAA2F2 		rbit r2, r2
 2591              	@ 0 "" 2
 2592              	.LVL204:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2593              		.loc 3 1068 3 discriminator 2 view .LVU823
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2594              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU824
ARM GAS  /tmp/ccNlWecU.s 			page 252


 2595              		.thumb
 2596              		.syntax unified
 2597              	.LBE421:
 2598              	.LBE420:
 2599              	.LBB422:
 2600              	.LBI422:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2601              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU825
 2602              	.LBB423:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2603              		.loc 3 1089 3 discriminator 2 view .LVU826
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2604              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU827
 2605 0250 12B1     		cbz	r2, .L176
 2606              		.loc 3 1093 3 is_stmt 1 view .LVU828
 2607              		.loc 3 1093 10 is_stmt 0 view .LVU829
 2608 0252 B2FA82F2 		clz	r2, r2
 2609              	.LVL205:
 2610              		.loc 3 1093 10 view .LVU830
 2611 0256 CAE7     		b	.L139
 2612              	.LVL206:
 2613              	.L176:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2614              		.loc 3 1091 12 view .LVU831
 2615 0258 2022     		movs	r2, #32
 2616              	.LVL207:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2617              		.loc 3 1091 12 view .LVU832
 2618 025a C8E7     		b	.L139
 2619              	.L199:
 2620              	.LBE423:
 2621              	.LBE422:
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2622              		.loc 1 2836 11 is_stmt 1 view .LVU833
 2623              	.LVL208:
 2624              	.LBB424:
 2625              	.LBI424:
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2626              		.loc 2 3065 22 view .LVU834
 2627              	.LBB425:
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2628              		.loc 2 3067 3 view .LVU835
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2629              		.loc 2 3069 3 view .LVU836
 2630 025c A26E     		ldr	r2, [r4, #104]
 2631 025e 22F00042 		bic	r2, r2, #-2147483648
 2632 0262 A266     		str	r2, [r4, #104]
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2633              		.loc 2 3072 1 is_stmt 0 view .LVU837
 2634 0264 C5E7     		b	.L141
 2635              	.LVL209:
 2636              	.L142:
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2637              		.loc 2 3072 1 view .LVU838
 2638              	.LBE425:
 2639              	.LBE424:
 2640              	.LBB426:
ARM GAS  /tmp/ccNlWecU.s 			page 253


 2641              	.LBI426:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2642              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU839
 2643              	.LBB427:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2644              		.loc 3 1050 3 discriminator 2 view .LVU840
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2645              		.loc 3 1055 4 discriminator 2 view .LVU841
 2646              		.syntax unified
 2647              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2648 0266 92FAA2F2 		rbit r2, r2
 2649              	@ 0 "" 2
 2650              	.LVL210:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2651              		.loc 3 1068 3 discriminator 2 view .LVU842
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2652              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU843
 2653              		.thumb
 2654              		.syntax unified
 2655              	.LBE427:
 2656              	.LBE426:
 2657              	.LBB428:
 2658              	.LBI428:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2659              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU844
 2660              	.LBB429:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2661              		.loc 3 1089 3 discriminator 2 view .LVU845
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2662              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU846
 2663 026a 12B1     		cbz	r2, .L177
 2664              		.loc 3 1093 3 is_stmt 1 view .LVU847
 2665              		.loc 3 1093 10 is_stmt 0 view .LVU848
 2666 026c B2FA82F2 		clz	r2, r2
 2667              	.LVL211:
 2668              		.loc 3 1093 10 view .LVU849
 2669 0270 CAE7     		b	.L143
 2670              	.LVL212:
 2671              	.L177:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2672              		.loc 3 1091 12 view .LVU850
 2673 0272 2022     		movs	r2, #32
 2674              	.LVL213:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2675              		.loc 3 1091 12 view .LVU851
 2676 0274 C8E7     		b	.L143
 2677              	.L193:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2678              		.loc 3 1091 12 view .LVU852
 2679              	.LBE429:
 2680              	.LBE428:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2681              		.loc 1 2859 9 is_stmt 1 view .LVU853
 2682 0276 1D68     		ldr	r5, [r3]
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2683              		.loc 1 2860 50 is_stmt 0 view .LVU854
 2684 0278 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccNlWecU.s 			page 254


 2685 027a C2F31206 		ubfx	r6, r2, #0, #19
 2686 027e 002E     		cmp	r6, #0
 2687 0280 35D1     		bne	.L146
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2688              		.loc 1 2860 50 discriminator 1 view .LVU855
 2689 0282 900E     		lsrs	r0, r2, #26
 2690 0284 0130     		adds	r0, r0, #1
 2691 0286 00F01F00 		and	r0, r0, #31
 2692 028a 0928     		cmp	r0, #9
 2693 028c 8CBF     		ite	hi
 2694 028e 0020     		movhi	r0, #0
 2695 0290 0120     		movls	r0, #1
 2696              	.L147:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2697              		.loc 1 2859 9 view .LVU856
 2698 0292 0028     		cmp	r0, #0
 2699 0294 62D0     		beq	.L149
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2700              		.loc 1 2860 50 view .LVU857
 2701 0296 002E     		cmp	r6, #0
 2702 0298 38D1     		bne	.L150
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2703              		.loc 1 2860 50 discriminator 3 view .LVU858
 2704 029a 940E     		lsrs	r4, r2, #26
 2705 029c 0134     		adds	r4, r4, #1
 2706 029e A406     		lsls	r4, r4, #26
 2707 02a0 04F0F844 		and	r4, r4, #2080374784
 2708              	.L151:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2709              		.loc 1 2860 50 discriminator 6 view .LVU859
 2710 02a4 002E     		cmp	r6, #0
 2711 02a6 3DD1     		bne	.L153
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2712              		.loc 1 2860 50 discriminator 7 view .LVU860
 2713 02a8 900E     		lsrs	r0, r2, #26
 2714 02aa 0130     		adds	r0, r0, #1
 2715 02ac 00F01F07 		and	r7, r0, #31
 2716 02b0 0120     		movs	r0, #1
 2717 02b2 B840     		lsls	r0, r0, r7
 2718              	.L154:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2719              		.loc 1 2860 50 discriminator 10 view .LVU861
 2720 02b4 0443     		orrs	r4, r4, r0
 2721 02b6 002E     		cmp	r6, #0
 2722 02b8 42D1     		bne	.L156
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2723              		.loc 1 2860 50 discriminator 11 view .LVU862
 2724 02ba 920E     		lsrs	r2, r2, #26
 2725 02bc 0132     		adds	r2, r2, #1
 2726 02be 02F01F02 		and	r2, r2, #31
 2727 02c2 02EB4202 		add	r2, r2, r2, lsl #1
 2728 02c6 1205     		lsls	r2, r2, #20
 2729              	.L157:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2730              		.loc 1 2859 9 view .LVU863
 2731 02c8 2243     		orrs	r2, r2, r4
 2732              	.L159:
ARM GAS  /tmp/ccNlWecU.s 			page 255


2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2733              		.loc 1 2859 9 discriminator 1 view .LVU864
 2734 02ca 8C68     		ldr	r4, [r1, #8]
 2735              	.LVL214:
 2736              	.LBB430:
 2737              	.LBI430:
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2738              		.loc 2 4714 22 is_stmt 1 discriminator 1 view .LVU865
 2739              	.LBB431:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2740              		.loc 2 4720 3 discriminator 1 view .LVU866
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2741              		.loc 2 4720 25 is_stmt 0 discriminator 1 view .LVU867
 2742 02cc 1435     		adds	r5, r5, #20
 2743              	.LVL215:
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2744              		.loc 2 4720 25 discriminator 1 view .LVU868
 2745 02ce 500E     		lsrs	r0, r2, #25
 2746 02d0 8000     		lsls	r0, r0, #2
 2747 02d2 00F00400 		and	r0, r0, #4
 2748              	.LVL216:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2749              		.loc 2 4722 3 is_stmt 1 discriminator 1 view .LVU869
 2750 02d6 2E58     		ldr	r6, [r5, r0]
 2751 02d8 C2F30452 		ubfx	r2, r2, #20, #5
 2752              	.LVL217:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2753              		.loc 2 4722 3 is_stmt 0 discriminator 1 view .LVU870
 2754 02dc 0727     		movs	r7, #7
 2755 02de 9740     		lsls	r7, r7, r2
 2756 02e0 26EA0706 		bic	r6, r6, r7
 2757 02e4 04FA02F2 		lsl	r2, r4, r2
 2758 02e8 3243     		orrs	r2, r2, r6
 2759 02ea 2A50     		str	r2, [r5, r0]
 2760              	.LVL218:
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2761              		.loc 2 4725 1 discriminator 1 view .LVU871
 2762 02ec 22E7     		b	.L145
 2763              	.LVL219:
 2764              	.L146:
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2765              		.loc 2 4725 1 discriminator 1 view .LVU872
 2766              	.LBE431:
 2767              	.LBE430:
 2768              	.LBB432:
 2769              	.LBI432:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2770              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU873
 2771              	.LBB433:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2772              		.loc 3 1050 3 discriminator 2 view .LVU874
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2773              		.loc 3 1055 4 discriminator 2 view .LVU875
 2774              		.syntax unified
 2775              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2776 02ee 92FAA2F0 		rbit r0, r2
 2777              	@ 0 "" 2
ARM GAS  /tmp/ccNlWecU.s 			page 256


 2778              	.LVL220:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2779              		.loc 3 1068 3 discriminator 2 view .LVU876
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2780              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU877
 2781              		.thumb
 2782              		.syntax unified
 2783              	.LBE433:
 2784              	.LBE432:
 2785              	.LBB434:
 2786              	.LBI434:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2787              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU878
 2788              	.LBB435:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2789              		.loc 3 1089 3 discriminator 2 view .LVU879
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2790              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU880
 2791 02f2 48B1     		cbz	r0, .L178
 2792              		.loc 3 1093 3 is_stmt 1 view .LVU881
 2793              		.loc 3 1093 10 is_stmt 0 view .LVU882
 2794 02f4 B0FA80F0 		clz	r0, r0
 2795              	.LVL221:
 2796              	.L148:
 2797              		.loc 3 1093 10 view .LVU883
 2798              	.LBE435:
 2799              	.LBE434:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2800              		.loc 1 2860 50 view .LVU884
 2801 02f8 0130     		adds	r0, r0, #1
 2802 02fa 00F01F00 		and	r0, r0, #31
 2803 02fe 0928     		cmp	r0, #9
 2804 0300 8CBF     		ite	hi
 2805 0302 0020     		movhi	r0, #0
 2806 0304 0120     		movls	r0, #1
 2807 0306 C4E7     		b	.L147
 2808              	.LVL222:
 2809              	.L178:
 2810              	.LBB437:
 2811              	.LBB436:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2812              		.loc 3 1091 12 view .LVU885
 2813 0308 2020     		movs	r0, #32
 2814              	.LVL223:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2815              		.loc 3 1091 12 view .LVU886
 2816 030a F5E7     		b	.L148
 2817              	.L150:
 2818              	.LVL224:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2819              		.loc 3 1091 12 view .LVU887
 2820              	.LBE436:
 2821              	.LBE437:
 2822              	.LBB438:
 2823              	.LBI438:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2824              		.loc 3 1048 31 is_stmt 1 discriminator 4 view .LVU888
ARM GAS  /tmp/ccNlWecU.s 			page 257


 2825              	.LBB439:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2826              		.loc 3 1050 3 discriminator 4 view .LVU889
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2827              		.loc 3 1055 4 discriminator 4 view .LVU890
 2828              		.syntax unified
 2829              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2830 030c 92FAA2F4 		rbit r4, r2
 2831              	@ 0 "" 2
 2832              	.LVL225:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2833              		.loc 3 1068 3 discriminator 4 view .LVU891
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2834              		.loc 3 1068 3 is_stmt 0 discriminator 4 view .LVU892
 2835              		.thumb
 2836              		.syntax unified
 2837              	.LBE439:
 2838              	.LBE438:
 2839              	.LBB440:
 2840              	.LBI440:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2841              		.loc 3 1078 30 is_stmt 1 discriminator 4 view .LVU893
 2842              	.LBB441:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2843              		.loc 3 1089 3 discriminator 4 view .LVU894
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2844              		.loc 3 1089 6 is_stmt 0 discriminator 4 view .LVU895
 2845 0310 34B1     		cbz	r4, .L179
 2846              		.loc 3 1093 3 is_stmt 1 view .LVU896
 2847              		.loc 3 1093 10 is_stmt 0 view .LVU897
 2848 0312 B4FA84F4 		clz	r4, r4
 2849              	.LVL226:
 2850              	.L152:
 2851              		.loc 3 1093 10 view .LVU898
 2852              	.LBE441:
 2853              	.LBE440:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2854              		.loc 1 2860 50 view .LVU899
 2855 0316 0134     		adds	r4, r4, #1
 2856 0318 A406     		lsls	r4, r4, #26
 2857 031a 04F0F844 		and	r4, r4, #2080374784
 2858 031e C1E7     		b	.L151
 2859              	.LVL227:
 2860              	.L179:
 2861              	.LBB443:
 2862              	.LBB442:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2863              		.loc 3 1091 12 view .LVU900
 2864 0320 2024     		movs	r4, #32
 2865              	.LVL228:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2866              		.loc 3 1091 12 view .LVU901
 2867 0322 F8E7     		b	.L152
 2868              	.L153:
 2869              	.LVL229:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2870              		.loc 3 1091 12 view .LVU902
ARM GAS  /tmp/ccNlWecU.s 			page 258


 2871              	.LBE442:
 2872              	.LBE443:
 2873              	.LBB444:
 2874              	.LBI444:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2875              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU903
 2876              	.LBB445:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2877              		.loc 3 1050 3 discriminator 8 view .LVU904
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2878              		.loc 3 1055 4 discriminator 8 view .LVU905
 2879              		.syntax unified
 2880              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2881 0324 92FAA2F0 		rbit r0, r2
 2882              	@ 0 "" 2
 2883              	.LVL230:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2884              		.loc 3 1068 3 discriminator 8 view .LVU906
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2885              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU907
 2886              		.thumb
 2887              		.syntax unified
 2888              	.LBE445:
 2889              	.LBE444:
 2890              	.LBB446:
 2891              	.LBI446:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2892              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU908
 2893              	.LBB447:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2894              		.loc 3 1089 3 discriminator 8 view .LVU909
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2895              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU910
 2896 0328 40B1     		cbz	r0, .L180
 2897              		.loc 3 1093 3 is_stmt 1 view .LVU911
 2898              		.loc 3 1093 10 is_stmt 0 view .LVU912
 2899 032a B0FA80F0 		clz	r0, r0
 2900              	.LVL231:
 2901              	.L155:
 2902              		.loc 3 1093 10 view .LVU913
 2903              	.LBE447:
 2904              	.LBE446:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2905              		.loc 1 2860 50 view .LVU914
 2906 032e 0130     		adds	r0, r0, #1
 2907 0330 00F01F00 		and	r0, r0, #31
 2908 0334 0127     		movs	r7, #1
 2909 0336 07FA00F0 		lsl	r0, r7, r0
 2910 033a BBE7     		b	.L154
 2911              	.LVL232:
 2912              	.L180:
 2913              	.LBB449:
 2914              	.LBB448:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2915              		.loc 3 1091 12 view .LVU915
 2916 033c 2020     		movs	r0, #32
 2917              	.LVL233:
ARM GAS  /tmp/ccNlWecU.s 			page 259


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2918              		.loc 3 1091 12 view .LVU916
 2919 033e F6E7     		b	.L155
 2920              	.L156:
 2921              	.LVL234:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2922              		.loc 3 1091 12 view .LVU917
 2923              	.LBE448:
 2924              	.LBE449:
 2925              	.LBB450:
 2926              	.LBI450:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2927              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU918
 2928              	.LBB451:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2929              		.loc 3 1050 3 discriminator 12 view .LVU919
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2930              		.loc 3 1055 4 discriminator 12 view .LVU920
 2931              		.syntax unified
 2932              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2933 0340 92FAA2F2 		rbit r2, r2
 2934              	@ 0 "" 2
 2935              	.LVL235:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2936              		.loc 3 1068 3 discriminator 12 view .LVU921
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2937              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU922
 2938              		.thumb
 2939              		.syntax unified
 2940              	.LBE451:
 2941              	.LBE450:
 2942              	.LBB452:
 2943              	.LBI452:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2944              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU923
 2945              	.LBB453:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2946              		.loc 3 1089 3 discriminator 12 view .LVU924
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2947              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU925
 2948 0344 42B1     		cbz	r2, .L181
 2949              		.loc 3 1093 3 is_stmt 1 view .LVU926
 2950              		.loc 3 1093 10 is_stmt 0 view .LVU927
 2951 0346 B2FA82F2 		clz	r2, r2
 2952              	.LVL236:
 2953              	.L158:
 2954              		.loc 3 1093 10 view .LVU928
 2955              	.LBE453:
 2956              	.LBE452:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2957              		.loc 1 2860 50 view .LVU929
 2958 034a 0132     		adds	r2, r2, #1
 2959 034c 02F01F02 		and	r2, r2, #31
 2960 0350 02EB4202 		add	r2, r2, r2, lsl #1
 2961 0354 1205     		lsls	r2, r2, #20
 2962 0356 B7E7     		b	.L157
 2963              	.LVL237:
ARM GAS  /tmp/ccNlWecU.s 			page 260


 2964              	.L181:
 2965              	.LBB455:
 2966              	.LBB454:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2967              		.loc 3 1091 12 view .LVU930
 2968 0358 2022     		movs	r2, #32
 2969              	.LVL238:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2970              		.loc 3 1091 12 view .LVU931
 2971 035a F6E7     		b	.L158
 2972              	.L149:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2973              		.loc 3 1091 12 view .LVU932
 2974              	.LBE454:
 2975              	.LBE455:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2976              		.loc 1 2860 50 view .LVU933
 2977 035c CEB9     		cbnz	r6, .L160
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2978              		.loc 1 2860 50 discriminator 13 view .LVU934
 2979 035e 940E     		lsrs	r4, r2, #26
 2980 0360 0134     		adds	r4, r4, #1
 2981 0362 A406     		lsls	r4, r4, #26
 2982 0364 04F0F844 		and	r4, r4, #2080374784
 2983              	.L161:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2984              		.loc 1 2860 50 discriminator 16 view .LVU935
 2985 0368 86BB     		cbnz	r6, .L163
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2986              		.loc 1 2860 50 discriminator 17 view .LVU936
 2987 036a 900E     		lsrs	r0, r2, #26
 2988 036c 0130     		adds	r0, r0, #1
 2989 036e 00F01F07 		and	r7, r0, #31
 2990 0372 0120     		movs	r0, #1
 2991 0374 B840     		lsls	r0, r0, r7
 2992              	.L164:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2993              		.loc 1 2860 50 discriminator 20 view .LVU937
 2994 0376 0443     		orrs	r4, r4, r0
 2995 0378 B6BB     		cbnz	r6, .L166
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2996              		.loc 1 2860 50 discriminator 21 view .LVU938
 2997 037a 900E     		lsrs	r0, r2, #26
 2998 037c 0130     		adds	r0, r0, #1
 2999 037e 00F01F00 		and	r0, r0, #31
 3000 0382 00EB4002 		add	r2, r0, r0, lsl #1
 3001 0386 1E3A     		subs	r2, r2, #30
 3002 0388 1205     		lsls	r2, r2, #20
 3003 038a 42F00072 		orr	r2, r2, #33554432
 3004              	.L167:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3005              		.loc 1 2859 9 discriminator 2 view .LVU939
 3006 038e 2243     		orrs	r2, r2, r4
 3007 0390 9BE7     		b	.L159
 3008              	.L160:
 3009              	.LVL239:
 3010              	.LBB456:
ARM GAS  /tmp/ccNlWecU.s 			page 261


 3011              	.LBI456:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3012              		.loc 3 1048 31 is_stmt 1 discriminator 14 view .LVU940
 3013              	.LBB457:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3014              		.loc 3 1050 3 discriminator 14 view .LVU941
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3015              		.loc 3 1055 4 discriminator 14 view .LVU942
 3016              		.syntax unified
 3017              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3018 0392 92FAA2F4 		rbit r4, r2
 3019              	@ 0 "" 2
 3020              	.LVL240:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3021              		.loc 3 1068 3 discriminator 14 view .LVU943
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3022              		.loc 3 1068 3 is_stmt 0 discriminator 14 view .LVU944
 3023              		.thumb
 3024              		.syntax unified
 3025              	.LBE457:
 3026              	.LBE456:
 3027              	.LBB458:
 3028              	.LBI458:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3029              		.loc 3 1078 30 is_stmt 1 discriminator 14 view .LVU945
 3030              	.LBB459:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3031              		.loc 3 1089 3 discriminator 14 view .LVU946
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3032              		.loc 3 1089 6 is_stmt 0 discriminator 14 view .LVU947
 3033 0396 34B1     		cbz	r4, .L182
 3034              		.loc 3 1093 3 is_stmt 1 view .LVU948
 3035              		.loc 3 1093 10 is_stmt 0 view .LVU949
 3036 0398 B4FA84F4 		clz	r4, r4
 3037              	.LVL241:
 3038              	.L162:
 3039              		.loc 3 1093 10 view .LVU950
 3040              	.LBE459:
 3041              	.LBE458:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3042              		.loc 1 2860 50 view .LVU951
 3043 039c 0134     		adds	r4, r4, #1
 3044 039e A406     		lsls	r4, r4, #26
 3045 03a0 04F0F844 		and	r4, r4, #2080374784
 3046 03a4 E0E7     		b	.L161
 3047              	.LVL242:
 3048              	.L182:
 3049              	.LBB461:
 3050              	.LBB460:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3051              		.loc 3 1091 12 view .LVU952
 3052 03a6 2024     		movs	r4, #32
 3053              	.LVL243:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3054              		.loc 3 1091 12 view .LVU953
 3055 03a8 F8E7     		b	.L162
 3056              	.L204:
ARM GAS  /tmp/ccNlWecU.s 			page 262


 3057 03aa 00BF     		.align	2
 3058              	.L203:
 3059 03ac 00F0FF03 		.word	67104768
 3060 03b0 FFFF0700 		.word	524287
 3061 03b4 00007F40 		.word	1082064896
 3062 03b8 00000880 		.word	-2146959360
 3063 03bc 00030450 		.word	1342440192
 3064 03c0 000052C7 		.word	-950927360
 3065 03c4 000084CB 		.word	-880541696
 3066 03c8 01000080 		.word	-2147483647
 3067              	.L163:
 3068              	.LVL244:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3069              		.loc 3 1091 12 view .LVU954
 3070              	.LBE460:
 3071              	.LBE461:
 3072              	.LBB462:
 3073              	.LBI462:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3074              		.loc 3 1048 31 is_stmt 1 discriminator 18 view .LVU955
 3075              	.LBB463:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3076              		.loc 3 1050 3 discriminator 18 view .LVU956
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3077              		.loc 3 1055 4 discriminator 18 view .LVU957
 3078              		.syntax unified
 3079              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3080 03cc 92FAA2F0 		rbit r0, r2
 3081              	@ 0 "" 2
 3082              	.LVL245:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3083              		.loc 3 1068 3 discriminator 18 view .LVU958
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3084              		.loc 3 1068 3 is_stmt 0 discriminator 18 view .LVU959
 3085              		.thumb
 3086              		.syntax unified
 3087              	.LBE463:
 3088              	.LBE462:
 3089              	.LBB464:
 3090              	.LBI464:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3091              		.loc 3 1078 30 is_stmt 1 discriminator 18 view .LVU960
 3092              	.LBB465:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3093              		.loc 3 1089 3 discriminator 18 view .LVU961
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3094              		.loc 3 1089 6 is_stmt 0 discriminator 18 view .LVU962
 3095 03d0 40B1     		cbz	r0, .L183
 3096              		.loc 3 1093 3 is_stmt 1 view .LVU963
 3097              		.loc 3 1093 10 is_stmt 0 view .LVU964
 3098 03d2 B0FA80F0 		clz	r0, r0
 3099              	.LVL246:
 3100              	.L165:
 3101              		.loc 3 1093 10 view .LVU965
 3102              	.LBE465:
 3103              	.LBE464:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
ARM GAS  /tmp/ccNlWecU.s 			page 263


 3104              		.loc 1 2860 50 view .LVU966
 3105 03d6 0130     		adds	r0, r0, #1
 3106 03d8 00F01F00 		and	r0, r0, #31
 3107 03dc 0127     		movs	r7, #1
 3108 03de 07FA00F0 		lsl	r0, r7, r0
 3109 03e2 C8E7     		b	.L164
 3110              	.LVL247:
 3111              	.L183:
 3112              	.LBB467:
 3113              	.LBB466:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3114              		.loc 3 1091 12 view .LVU967
 3115 03e4 2020     		movs	r0, #32
 3116              	.LVL248:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3117              		.loc 3 1091 12 view .LVU968
 3118 03e6 F6E7     		b	.L165
 3119              	.L166:
 3120              	.LVL249:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3121              		.loc 3 1091 12 view .LVU969
 3122              	.LBE466:
 3123              	.LBE467:
 3124              	.LBB468:
 3125              	.LBI468:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3126              		.loc 3 1048 31 is_stmt 1 discriminator 22 view .LVU970
 3127              	.LBB469:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3128              		.loc 3 1050 3 discriminator 22 view .LVU971
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3129              		.loc 3 1055 4 discriminator 22 view .LVU972
 3130              		.syntax unified
 3131              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3132 03e8 92FAA2F2 		rbit r2, r2
 3133              	@ 0 "" 2
 3134              	.LVL250:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3135              		.loc 3 1068 3 discriminator 22 view .LVU973
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3136              		.loc 3 1068 3 is_stmt 0 discriminator 22 view .LVU974
 3137              		.thumb
 3138              		.syntax unified
 3139              	.LBE469:
 3140              	.LBE468:
 3141              	.LBB470:
 3142              	.LBI470:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3143              		.loc 3 1078 30 is_stmt 1 discriminator 22 view .LVU975
 3144              	.LBB471:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3145              		.loc 3 1089 3 discriminator 22 view .LVU976
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3146              		.loc 3 1089 6 is_stmt 0 discriminator 22 view .LVU977
 3147 03ec 5AB1     		cbz	r2, .L184
 3148              		.loc 3 1093 3 is_stmt 1 view .LVU978
 3149              		.loc 3 1093 10 is_stmt 0 view .LVU979
ARM GAS  /tmp/ccNlWecU.s 			page 264


 3150 03ee B2FA82F0 		clz	r0, r2
 3151              	.L168:
 3152              	.LVL251:
 3153              		.loc 3 1093 10 view .LVU980
 3154              	.LBE471:
 3155              	.LBE470:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3156              		.loc 1 2860 50 view .LVU981
 3157 03f2 0130     		adds	r0, r0, #1
 3158 03f4 00F01F00 		and	r0, r0, #31
 3159 03f8 00EB4002 		add	r2, r0, r0, lsl #1
 3160 03fc 1E3A     		subs	r2, r2, #30
 3161 03fe 1205     		lsls	r2, r2, #20
 3162 0400 42F00072 		orr	r2, r2, #33554432
 3163 0404 C3E7     		b	.L167
 3164              	.LVL252:
 3165              	.L184:
 3166              	.LBB473:
 3167              	.LBB472:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3168              		.loc 3 1091 12 view .LVU982
 3169 0406 2020     		movs	r0, #32
 3170 0408 F3E7     		b	.L168
 3171              	.LVL253:
 3172              	.L194:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3173              		.loc 3 1091 12 view .LVU983
 3174              	.LBE472:
 3175              	.LBE473:
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3176              		.loc 1 2879 11 view .LVU984
 3177 040a 11F4000F 		tst	r1, #8388608
 3178 040e 7FF49EAE 		bne	.L169
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3179              		.loc 1 2881 9 is_stmt 1 view .LVU985
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3180              		.loc 1 2881 13 is_stmt 0 view .LVU986
 3181 0412 1968     		ldr	r1, [r3]
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3182              		.loc 1 2881 12 view .LVU987
 3183 0414 264A     		ldr	r2, .L205
 3184 0416 9142     		cmp	r1, r2
 3185 0418 01D0     		beq	.L200
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3186              		.loc 1 2701 21 view .LVU988
 3187 041a 0020     		movs	r0, #0
 3188 041c 07E6     		b	.L116
 3189              	.L200:
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3190              		.loc 1 2883 11 is_stmt 1 view .LVU989
 3191 041e 44F40002 		orr	r2, r4, #8388608
 3192              	.LVL254:
 3193              	.LBB474:
 3194              	.LBI474:
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3195              		.loc 2 2507 22 view .LVU990
 3196              	.LBB475:
ARM GAS  /tmp/ccNlWecU.s 			page 265


2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3197              		.loc 2 2509 3 view .LVU991
 3198 0422 2448     		ldr	r0, .L205+4
 3199 0424 8168     		ldr	r1, [r0, #8]
 3200 0426 21F0E071 		bic	r1, r1, #29360128
 3201 042a 0A43     		orrs	r2, r2, r1
 3202              	.LVL255:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3203              		.loc 2 2509 3 is_stmt 0 view .LVU992
 3204 042c 8260     		str	r2, [r0, #8]
 3205              	.LVL256:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3206              		.loc 2 2509 3 view .LVU993
 3207              	.LBE475:
 3208              	.LBE474:
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3209              		.loc 1 2891 11 is_stmt 1 view .LVU994
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3210              		.loc 1 2891 90 is_stmt 0 view .LVU995
 3211 042e 224A     		ldr	r2, .L205+8
 3212 0430 1268     		ldr	r2, [r2]
 3213 0432 9209     		lsrs	r2, r2, #6
 3214 0434 2149     		ldr	r1, .L205+12
 3215 0436 A1FB0212 		umull	r1, r2, r1, r2
 3216 043a 9209     		lsrs	r2, r2, #6
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3217              		.loc 1 2891 71 view .LVU996
 3218 043c 02EB4202 		add	r2, r2, r2, lsl #1
 3219 0440 9200     		lsls	r2, r2, #2
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3220              		.loc 1 2891 27 view .LVU997
 3221 0442 0192     		str	r2, [sp, #4]
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3222              		.loc 1 2892 11 is_stmt 1 view .LVU998
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3223              		.loc 1 2892 17 is_stmt 0 view .LVU999
 3224 0444 02E0     		b	.L170
 3225              	.L171:
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3226              		.loc 1 2894 13 is_stmt 1 view .LVU1000
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3227              		.loc 1 2894 28 is_stmt 0 view .LVU1001
 3228 0446 019A     		ldr	r2, [sp, #4]
 3229 0448 013A     		subs	r2, r2, #1
 3230 044a 0192     		str	r2, [sp, #4]
 3231              	.L170:
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3232              		.loc 1 2892 17 is_stmt 1 view .LVU1002
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3233              		.loc 1 2892 34 is_stmt 0 view .LVU1003
 3234 044c 019A     		ldr	r2, [sp, #4]
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3235              		.loc 1 2892 17 view .LVU1004
 3236 044e 002A     		cmp	r2, #0
 3237 0450 F9D1     		bne	.L171
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3238              		.loc 1 2701 21 view .LVU1005
ARM GAS  /tmp/ccNlWecU.s 			page 266


 3239 0452 0020     		movs	r0, #0
 3240 0454 EBE5     		b	.L116
 3241              	.L195:
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3242              		.loc 1 2898 55 discriminator 1 view .LVU1006
 3243 0456 11F0807F 		tst	r1, #16777216
 3244 045a 7FF47CAE 		bne	.L172
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3245              		.loc 1 2900 9 is_stmt 1 view .LVU1007
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3246              		.loc 1 2900 13 is_stmt 0 view .LVU1008
 3247 045e 1968     		ldr	r1, [r3]
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3248              		.loc 1 2900 12 view .LVU1009
 3249 0460 134A     		ldr	r2, .L205
 3250 0462 9142     		cmp	r1, r2
 3251 0464 01D0     		beq	.L201
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3252              		.loc 1 2701 21 view .LVU1010
 3253 0466 0020     		movs	r0, #0
 3254 0468 E1E5     		b	.L116
 3255              	.L201:
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3256              		.loc 1 2902 11 is_stmt 1 view .LVU1011
 3257 046a 44F08072 		orr	r2, r4, #16777216
 3258              	.LVL257:
 3259              	.LBB476:
 3260              	.LBI476:
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3261              		.loc 2 2507 22 view .LVU1012
 3262              	.LBB477:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3263              		.loc 2 2509 3 view .LVU1013
 3264 046e 1148     		ldr	r0, .L205+4
 3265 0470 8168     		ldr	r1, [r0, #8]
 3266 0472 21F0E071 		bic	r1, r1, #29360128
 3267 0476 0A43     		orrs	r2, r2, r1
 3268              	.LVL258:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3269              		.loc 2 2509 3 is_stmt 0 view .LVU1014
 3270 0478 8260     		str	r2, [r0, #8]
 3271              	.LBE477:
 3272              	.LBE476:
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3273              		.loc 1 2701 21 view .LVU1015
 3274 047a 0020     		movs	r0, #0
 3275              	.LBB479:
 3276              	.LBB478:
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3277              		.loc 2 2510 1 view .LVU1016
 3278 047c D7E5     		b	.L116
 3279              	.LVL259:
 3280              	.L196:
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3281              		.loc 2 2510 1 view .LVU1017
 3282              	.LBE478:
 3283              	.LBE479:
ARM GAS  /tmp/ccNlWecU.s 			page 267


2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3284              		.loc 1 2907 16 view .LVU1018
 3285 047e 11F4800F 		tst	r1, #4194304
 3286 0482 11D1     		bne	.L189
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3287              		.loc 1 2909 9 is_stmt 1 view .LVU1019
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3288              		.loc 1 2909 13 is_stmt 0 view .LVU1020
 3289 0484 1968     		ldr	r1, [r3]
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3290              		.loc 1 2909 12 view .LVU1021
 3291 0486 0A4A     		ldr	r2, .L205
 3292 0488 9142     		cmp	r1, r2
 3293 048a 01D0     		beq	.L202
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3294              		.loc 1 2701 21 view .LVU1022
 3295 048c 0020     		movs	r0, #0
 3296 048e CEE5     		b	.L116
 3297              	.L202:
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3298              		.loc 1 2911 11 is_stmt 1 view .LVU1023
 3299 0490 44F48002 		orr	r2, r4, #4194304
 3300              	.LVL260:
 3301              	.LBB480:
 3302              	.LBI480:
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3303              		.loc 2 2507 22 view .LVU1024
 3304              	.LBB481:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3305              		.loc 2 2509 3 view .LVU1025
 3306 0494 0748     		ldr	r0, .L205+4
 3307 0496 8168     		ldr	r1, [r0, #8]
 3308 0498 21F0E071 		bic	r1, r1, #29360128
 3309 049c 0A43     		orrs	r2, r2, r1
 3310              	.LVL261:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3311              		.loc 2 2509 3 is_stmt 0 view .LVU1026
 3312 049e 8260     		str	r2, [r0, #8]
 3313              	.LBE481:
 3314              	.LBE480:
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3315              		.loc 1 2701 21 view .LVU1027
 3316 04a0 0020     		movs	r0, #0
 3317              	.LBB483:
 3318              	.LBB482:
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3319              		.loc 2 2510 1 view .LVU1028
 3320 04a2 C4E5     		b	.L116
 3321              	.LVL262:
 3322              	.L185:
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3323              		.loc 2 2510 1 view .LVU1029
 3324              	.LBE482:
 3325              	.LBE483:
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3326              		.loc 1 2701 21 view .LVU1030
 3327 04a4 0020     		movs	r0, #0
ARM GAS  /tmp/ccNlWecU.s 			page 268


 3328 04a6 C2E5     		b	.L116
 3329              	.LVL263:
 3330              	.L189:
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3331              		.loc 1 2701 21 view .LVU1031
 3332 04a8 0020     		movs	r0, #0
 3333 04aa C0E5     		b	.L116
 3334              	.LVL264:
 3335              	.L173:
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3336              		.loc 1 2731 3 view .LVU1032
 3337 04ac 0220     		movs	r0, #2
 3338              	.LVL265:
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3339              		.loc 1 2731 3 view .LVU1033
 3340 04ae C1E5     		b	.L114
 3341              	.L206:
 3342              		.align	2
 3343              	.L205:
 3344 04b0 00000450 		.word	1342439424
 3345 04b4 00030450 		.word	1342440192
 3346 04b8 00000000 		.word	SystemCoreClock
 3347 04bc 632D3E05 		.word	87960931
 3348              		.cfi_endproc
 3349              	.LFE310:
 3351              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3352              		.align	1
 3353              		.global	HAL_ADC_AnalogWDGConfig
 3354              		.syntax unified
 3355              		.thumb
 3356              		.thumb_func
 3357              		.fpu fpv4-sp-d16
 3359              	HAL_ADC_AnalogWDGConfig:
 3360              	.LVL266:
 3361              	.LFB311:
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3362              		.loc 1 2957 1 is_stmt 1 view -0
 3363              		.cfi_startproc
 3364              		@ args = 0, pretend = 0, frame = 0
 3365              		@ frame_needed = 0, uses_anonymous_args = 0
 3366              		@ link register save eliminated.
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3367              		.loc 1 2958 3 view .LVU1035
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 3368              		.loc 1 2959 3 view .LVU1036
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3369              		.loc 1 2960 3 view .LVU1037
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3370              		.loc 1 2961 3 view .LVU1038
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3371              		.loc 1 2962 3 view .LVU1039
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3372              		.loc 1 2965 3 view .LVU1040
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3373              		.loc 1 2966 3 view .LVU1041
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3374              		.loc 1 2967 3 view .LVU1042
ARM GAS  /tmp/ccNlWecU.s 			page 269


2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3375              		.loc 1 2968 3 view .LVU1043
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3376              		.loc 1 2970 3 view .LVU1044
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3377              		.loc 1 2974 5 view .LVU1045
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3378              		.loc 1 2978 3 view .LVU1046
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3379              		.loc 1 2989 5 view .LVU1047
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3380              		.loc 1 2990 5 view .LVU1048
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3381              		.loc 1 2994 3 view .LVU1049
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3382              		.loc 1 2994 3 view .LVU1050
 3383 0000 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 3384 0004 012A     		cmp	r2, #1
 3385 0006 00F09B81 		beq	.L243
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3386              		.loc 1 2957 1 is_stmt 0 discriminator 2 view .LVU1051
 3387 000a 70B4     		push	{r4, r5, r6}
 3388              	.LCFI15:
 3389              		.cfi_def_cfa_offset 12
 3390              		.cfi_offset 4, -12
 3391              		.cfi_offset 5, -8
 3392              		.cfi_offset 6, -4
 3393 000c 0346     		mov	r3, r0
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3394              		.loc 1 2994 3 is_stmt 1 discriminator 2 view .LVU1052
 3395 000e 0122     		movs	r2, #1
 3396 0010 80F85420 		strb	r2, [r0, #84]
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3397              		.loc 1 2994 3 discriminator 2 view .LVU1053
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3398              		.loc 1 3001 3 discriminator 2 view .LVU1054
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3399              		.loc 1 3001 44 is_stmt 0 discriminator 2 view .LVU1055
 3400 0014 0468     		ldr	r4, [r0]
 3401              	.LVL267:
 3402              	.LBB484:
 3403              	.LBI484:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3404              		.loc 2 6168 26 is_stmt 1 discriminator 2 view .LVU1056
 3405              	.LBB485:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3406              		.loc 2 6170 3 discriminator 2 view .LVU1057
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3407              		.loc 2 6170 12 is_stmt 0 discriminator 2 view .LVU1058
 3408 0016 A268     		ldr	r2, [r4, #8]
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3409              		.loc 2 6170 74 discriminator 2 view .LVU1059
 3410 0018 12F00402 		ands	r2, r2, #4
 3411 001c 00D0     		beq	.L209
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3412              		.loc 2 6170 74 view .LVU1060
 3413 001e 0122     		movs	r2, #1
ARM GAS  /tmp/ccNlWecU.s 			page 270


 3414              	.L209:
 3415              	.LVL268:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3416              		.loc 2 6170 74 view .LVU1061
 3417              	.LBE485:
 3418              	.LBE484:
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3419              		.loc 1 3002 3 is_stmt 1 view .LVU1062
 3420              	.LBB486:
 3421              	.LBI486:
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3422              		.loc 2 6351 26 view .LVU1063
 3423              	.LBB487:
 3424              		.loc 2 6353 3 view .LVU1064
 3425              		.loc 2 6353 12 is_stmt 0 view .LVU1065
 3426 0020 A068     		ldr	r0, [r4, #8]
 3427              	.LVL269:
 3428              		.loc 2 6353 76 view .LVU1066
 3429 0022 10F00800 		ands	r0, r0, #8
 3430 0026 00D0     		beq	.L210
 3431 0028 0120     		movs	r0, #1
 3432              	.L210:
 3433              	.LVL270:
 3434              		.loc 2 6353 76 view .LVU1067
 3435              	.LBE487:
 3436              	.LBE486:
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3437              		.loc 1 3003 3 is_stmt 1 view .LVU1068
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3438              		.loc 1 3003 6 is_stmt 0 view .LVU1069
 3439 002a 002A     		cmp	r2, #0
 3440 002c 40F07E81 		bne	.L211
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 3441              		.loc 1 3004 7 view .LVU1070
 3442 0030 0028     		cmp	r0, #0
 3443 0032 40F07B81 		bne	.L211
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3444              		.loc 1 3008 5 is_stmt 1 view .LVU1071
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3445              		.loc 1 3008 24 is_stmt 0 view .LVU1072
 3446 0036 0A68     		ldr	r2, [r1]
 3447              	.LVL271:
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3448              		.loc 1 3008 8 view .LVU1073
 3449 0038 BA48     		ldr	r0, .L257
 3450              	.LVL272:
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3451              		.loc 1 3008 8 view .LVU1074
 3452 003a 8242     		cmp	r2, r0
 3453 003c 26D0     		beq	.L250
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3454              		.loc 1 3079 7 is_stmt 1 view .LVU1075
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3455              		.loc 1 3079 30 is_stmt 0 view .LVU1076
 3456 003e 4868     		ldr	r0, [r1, #4]
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3457              		.loc 1 3079 7 view .LVU1077
ARM GAS  /tmp/ccNlWecU.s 			page 271


 3458 0040 B0F1A07F 		cmp	r0, #20971520
 3459 0044 00F0B880 		beq	.L224
 3460 0048 00F2AF80 		bhi	.L225
 3461 004c B0F5400F 		cmp	r0, #12582912
 3462 0050 00F0B280 		beq	.L224
 3463 0054 B0F1807F 		cmp	r0, #16777216
 3464 0058 00F0E580 		beq	.L226
 3465 005c B0F5000F 		cmp	r0, #8388608
 3466 0060 00F0E180 		beq	.L226
 3467              	.L227:
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3468              		.loc 1 3103 11 is_stmt 1 view .LVU1078
 3469              	.LVL273:
 3470              	.LBB488:
 3471              	.LBI488:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3472              		.loc 2 5075 22 view .LVU1079
 3473              	.LBB489:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3474              		.loc 2 5081 3 view .LVU1080
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3475              		.loc 2 5081 25 is_stmt 0 view .LVU1081
 3476 0064 0C34     		adds	r4, r4, #12
 3477              	.LVL274:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3478              		.loc 2 5081 25 view .LVU1082
 3479 0066 C2F30150 		ubfx	r0, r2, #20, #2
 3480 006a 02F00106 		and	r6, r2, #1
 3481 006e F500     		lsls	r5, r6, #3
 3482 0070 3544     		add	r5, r5, r6
 3483 0072 00EB8500 		add	r0, r0, r5, lsl #2
 3484              	.LVL275:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3485              		.loc 2 5084 3 is_stmt 1 view .LVU1083
 3486 0076 54F82050 		ldr	r5, [r4, r0, lsl #2]
 3487 007a 22F00242 		bic	r2, r2, #-2113929216
 3488              	.LVL276:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3489              		.loc 2 5084 3 is_stmt 0 view .LVU1084
 3490 007e 22F46012 		bic	r2, r2, #3670016
 3491 0082 25EA0202 		bic	r2, r5, r2
 3492 0086 44F82020 		str	r2, [r4, r0, lsl #2]
 3493              	.LVL277:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3494              		.loc 2 5087 1 view .LVU1085
 3495 008a E4E0     		b	.L232
 3496              	.LVL278:
 3497              	.L250:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3498              		.loc 2 5087 1 view .LVU1086
 3499              	.LBE489:
 3500              	.LBE488:
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3501              		.loc 1 3013 7 is_stmt 1 view .LVU1087
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3502              		.loc 1 3013 30 is_stmt 0 view .LVU1088
 3503 008c 4A68     		ldr	r2, [r1, #4]
ARM GAS  /tmp/ccNlWecU.s 			page 272


3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3504              		.loc 1 3013 7 view .LVU1089
 3505 008e B2F1A07F 		cmp	r2, #20971520
 3506 0092 67D0     		beq	.L213
 3507 0094 1AD8     		bhi	.L214
 3508 0096 B2F5400F 		cmp	r2, #12582912
 3509 009a 2AD0     		beq	.L215
 3510 009c B2F1807F 		cmp	r2, #16777216
 3511 00a0 08D1     		bne	.L251
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3512              		.loc 1 3035 11 is_stmt 1 view .LVU1090
 3513              	.LVL279:
 3514              	.LBB490:
 3515              	.LBI490:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3516              		.loc 2 5075 22 view .LVU1091
 3517              	.LBB491:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3518              		.loc 2 5081 3 view .LVU1092
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3519              		.loc 2 5084 3 view .LVU1093
 3520 00a2 E268     		ldr	r2, [r4, #12]
 3521 00a4 22F0FB42 		bic	r2, r2, #2105540608
 3522 00a8 22F48002 		bic	r2, r2, #4194304
 3523 00ac 42F08072 		orr	r2, r2, #16777216
 3524 00b0 E260     		str	r2, [r4, #12]
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3525              		.loc 2 5087 1 is_stmt 0 view .LVU1094
 3526 00b2 2AE0     		b	.L221
 3527              	.LVL280:
 3528              	.L251:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3529              		.loc 2 5087 1 view .LVU1095
 3530              	.LBE491:
 3531              	.LBE490:
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3532              		.loc 1 3013 7 view .LVU1096
 3533 00b4 B2F5000F 		cmp	r2, #8388608
 3534 00b8 6AD1     		bne	.L218
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3535              		.loc 1 3031 11 is_stmt 1 view .LVU1097
 3536              	.LVL281:
 3537              	.LBB492:
 3538              	.LBI492:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3539              		.loc 2 5075 22 view .LVU1098
 3540              	.LBB493:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3541              		.loc 2 5081 3 view .LVU1099
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3542              		.loc 2 5084 3 view .LVU1100
 3543 00ba E268     		ldr	r2, [r4, #12]
 3544 00bc 22F0FB42 		bic	r2, r2, #2105540608
 3545 00c0 22F48002 		bic	r2, r2, #4194304
 3546 00c4 42F40002 		orr	r2, r2, #8388608
 3547 00c8 E260     		str	r2, [r4, #12]
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccNlWecU.s 			page 273


 3548              		.loc 2 5087 1 is_stmt 0 view .LVU1101
 3549 00ca 1EE0     		b	.L221
 3550              	.LVL282:
 3551              	.L214:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3552              		.loc 2 5087 1 view .LVU1102
 3553              	.LBE493:
 3554              	.LBE492:
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3555              		.loc 1 3013 7 view .LVU1103
 3556 00cc B2F1C07F 		cmp	r2, #25165824
 3557 00d0 55D0     		beq	.L219
 3558 00d2 B2F1E07F 		cmp	r2, #29360128
 3559 00d6 5BD1     		bne	.L218
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3560              		.loc 1 3026 11 is_stmt 1 view .LVU1104
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3561              		.loc 1 3026 72 is_stmt 0 view .LVU1105
 3562 00d8 8868     		ldr	r0, [r1, #8]
 3563              	.LVL283:
 3564              	.LBB494:
 3565              	.LBI494:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3566              		.loc 2 5075 22 is_stmt 1 view .LVU1106
 3567              	.LBB495:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3568              		.loc 2 5081 3 view .LVU1107
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3569              		.loc 2 5084 3 view .LVU1108
 3570 00da E268     		ldr	r2, [r4, #12]
 3571 00dc 22F0FB42 		bic	r2, r2, #2105540608
 3572 00e0 22F48002 		bic	r2, r2, #4194304
 3573 00e4 00F0F840 		and	r0, r0, #2080374784
 3574              	.LVL284:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3575              		.loc 2 5084 3 is_stmt 0 view .LVU1109
 3576 00e8 40F0E070 		orr	r0, r0, #29360128
 3577 00ec 0243     		orrs	r2, r2, r0
 3578 00ee E260     		str	r2, [r4, #12]
 3579              	.LVL285:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3580              		.loc 2 5087 1 view .LVU1110
 3581 00f0 0BE0     		b	.L221
 3582              	.LVL286:
 3583              	.L215:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3584              		.loc 2 5087 1 view .LVU1111
 3585              	.LBE495:
 3586              	.LBE494:
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3587              		.loc 1 3016 11 is_stmt 1 view .LVU1112
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3588              		.loc 1 3016 72 is_stmt 0 view .LVU1113
 3589 00f2 8868     		ldr	r0, [r1, #8]
 3590              	.LVL287:
 3591              	.LBB496:
 3592              	.LBI496:
ARM GAS  /tmp/ccNlWecU.s 			page 274


5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3593              		.loc 2 5075 22 is_stmt 1 view .LVU1114
 3594              	.LBB497:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3595              		.loc 2 5081 3 view .LVU1115
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3596              		.loc 2 5084 3 view .LVU1116
 3597 00f4 E268     		ldr	r2, [r4, #12]
 3598 00f6 22F0FB42 		bic	r2, r2, #2105540608
 3599 00fa 22F48002 		bic	r2, r2, #4194304
 3600 00fe 00F0F840 		and	r0, r0, #2080374784
 3601              	.LVL288:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3602              		.loc 2 5084 3 is_stmt 0 view .LVU1117
 3603 0102 40F44000 		orr	r0, r0, #12582912
 3604 0106 0243     		orrs	r2, r2, r0
 3605 0108 E260     		str	r2, [r4, #12]
 3606              	.LVL289:
 3607              	.L221:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3608              		.loc 2 5084 3 view .LVU1118
 3609              	.LBE497:
 3610              	.LBE496:
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3611              		.loc 1 3050 7 is_stmt 1 view .LVU1119
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3612              		.loc 1 3050 36 is_stmt 0 view .LVU1120
 3613 010a 0D69     		ldr	r5, [r1, #16]
 3614 010c 1868     		ldr	r0, [r3]
 3615 010e C268     		ldr	r2, [r0, #12]
 3616 0110 C2F3C102 		ubfx	r2, r2, #3, #2
 3617 0114 5200     		lsls	r2, r2, #1
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3618              		.loc 1 3050 34 view .LVU1121
 3619 0116 05FA02F6 		lsl	r6, r5, r2
 3620              	.LVL290:
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3621              		.loc 1 3051 7 is_stmt 1 view .LVU1122
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3622              		.loc 1 3051 36 is_stmt 0 view .LVU1123
 3623 011a 4A69     		ldr	r2, [r1, #20]
 3624 011c C568     		ldr	r5, [r0, #12]
 3625 011e C5F3C105 		ubfx	r5, r5, #3, #2
 3626 0122 6D00     		lsls	r5, r5, #1
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3627              		.loc 1 3051 34 view .LVU1124
 3628 0124 02FA05F5 		lsl	r5, r2, r5
 3629              	.LVL291:
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
 3630              		.loc 1 3054 7 is_stmt 1 view .LVU1125
 3631 0128 0A68     		ldr	r2, [r1]
 3632              	.LVL292:
 3633              	.LBB498:
 3634              	.LBI498:
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 3635              		.loc 2 5319 22 view .LVU1126
 3636              	.LBB499:
ARM GAS  /tmp/ccNlWecU.s 			page 275


5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3637              		.loc 2 5327 3 view .LVU1127
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3638              		.loc 2 5327 25 is_stmt 0 view .LVU1128
 3639 012a 2030     		adds	r0, r0, #32
 3640              	.LVL293:
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3641              		.loc 2 5327 25 view .LVU1129
 3642 012c 120D     		lsrs	r2, r2, #20
 3643              	.LVL294:
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3644              		.loc 2 5327 25 view .LVU1130
 3645 012e 9200     		lsls	r2, r2, #2
 3646 0130 02F00C02 		and	r2, r2, #12
 3647              	.LVL295:
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3648              		.loc 2 5329 3 is_stmt 1 view .LVU1131
 3649 0134 8458     		ldr	r4, [r0, r2]
 3650 0136 04F0F024 		and	r4, r4, #-268374016
 3651 013a 45EA0645 		orr	r5, r5, r6, lsl #16
 3652              	.LVL296:
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3653              		.loc 2 5329 3 is_stmt 0 view .LVU1132
 3654 013e 2C43     		orrs	r4, r4, r5
 3655 0140 8450     		str	r4, [r0, r2]
 3656              	.LVL297:
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3657              		.loc 2 5329 3 view .LVU1133
 3658              	.LBE499:
 3659              	.LBE498:
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3660              		.loc 1 3058 7 is_stmt 1 view .LVU1134
 3661 0142 9A6D     		ldr	r2, [r3, #88]
 3662 0144 22F48032 		bic	r2, r2, #65536
 3663 0148 9A65     		str	r2, [r3, #88]
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3664              		.loc 1 3064 7 view .LVU1135
 3665 014a 1A68     		ldr	r2, [r3]
 3666              	.LVL298:
 3667              	.LBB500:
 3668              	.LBI500:
6354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
6358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
6359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
6361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
6365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
ARM GAS  /tmp/ccNlWecU.s 			page 276


6370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
6373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
6374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
6375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
6376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
6385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
6400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
6401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
6402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
6403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
6412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
ARM GAS  /tmp/ccNlWecU.s 			page 277


6427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
6428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
6429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
6430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
6439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
6454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
6455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
6456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
6457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
6466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
6472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
6481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
6482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
6483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
ARM GAS  /tmp/ccNlWecU.s 			page 278


6484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
6493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
6499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
6506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
6511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
6515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
6519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
6521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
6525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
6526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
6530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
6532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
6536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
6537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccNlWecU.s 			page 279


6541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
6543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
6547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
6548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
6552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
6554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
6558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
6559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
6563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
6565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
6569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
6570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
6574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
6576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
6580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
6581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
6585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
6587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
6591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
6592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
6596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
ARM GAS  /tmp/ccNlWecU.s 			page 280


6598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
6602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
6603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
6607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
6609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
6613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
6614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
6618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
6620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
6624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
6625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
6629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
6631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
6635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
6639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
6643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
6645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
6649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
6650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
6654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccNlWecU.s 			page 281


6655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
6656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
6660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
6661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
6665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
6667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
6671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
6672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
6676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
6678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
6682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
6683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
6687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
6689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
6693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
6694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
6698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
6700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
6704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
6705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
6709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
6711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 282


6712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
6715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
6716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
6720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
6722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
6726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
6727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 3669              		.loc 2 6730 22 view .LVU1136
 3670              	.LBB501:
6731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3671              		.loc 2 6732 3 view .LVU1137
 3672 014c 8020     		movs	r0, #128
 3673 014e 1060     		str	r0, [r2]
 3674              	.LVL299:
 3675              		.loc 2 6732 3 is_stmt 0 view .LVU1138
 3676              	.LBE501:
 3677              	.LBE500:
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3678              		.loc 1 3067 7 is_stmt 1 view .LVU1139
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3679              		.loc 1 3067 26 is_stmt 0 view .LVU1140
 3680 0150 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3681              		.loc 1 3067 10 view .LVU1141
 3682 0152 012A     		cmp	r2, #1
 3683 0154 23D0     		beq	.L252
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3684              		.loc 1 3073 9 is_stmt 1 view .LVU1142
 3685 0156 1968     		ldr	r1, [r3]
 3686              	.LVL300:
 3687              	.LBB502:
 3688              	.LBI502:
6733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
6737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
6738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
6742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
6744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 283


6745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
6748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
6749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
6753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
6755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
6760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
6761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
6768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
6772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
6773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
6780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
6784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
6785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
6790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
6796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
6797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
ARM GAS  /tmp/ccNlWecU.s 			page 284


6802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
6808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
6809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
6816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
6820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
6821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
6832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
6833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
6840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
6844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
6845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
6852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
6856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
6857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /tmp/ccNlWecU.s 			page 285


6859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
6864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
6868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
6869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
6876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
6880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
6881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
6888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
6892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
6893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
6900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
6904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
6905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
6912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
ARM GAS  /tmp/ccNlWecU.s 			page 286


6916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
6917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
6924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
6928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
6929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
6936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
6940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
6941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
6952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
6953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
6960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
6964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
6965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
6972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 287


6973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
6976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
6977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
6984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
6988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
6989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
6996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
7025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
7029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccNlWecU.s 			page 288


7030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC ready.
7033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccNlWecU.s 			page 289


7087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
ARM GAS  /tmp/ccNlWecU.s 			page 290


7144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccNlWecU.s 			page 291


7201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 3689              		.loc 2 7246 22 view .LVU1143
 3690              	.LBB503:
7247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3691              		.loc 2 7248 3 view .LVU1144
 3692 0158 4A68     		ldr	r2, [r1, #4]
 3693 015a 22F08002 		bic	r2, r2, #128
 3694 015e 4A60     		str	r2, [r1, #4]
 3695              	.LBE503:
 3696              	.LBE502:
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
ARM GAS  /tmp/ccNlWecU.s 			page 292


 3697              		.loc 1 2958 21 is_stmt 0 view .LVU1145
 3698 0160 0020     		movs	r0, #0
 3699              	.LBB505:
 3700              	.LBB504:
7249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3701              		.loc 2 7249 1 view .LVU1146
 3702 0162 E8E0     		b	.L223
 3703              	.LVL301:
 3704              	.L213:
 3705              		.loc 2 7249 1 view .LVU1147
 3706              	.LBE504:
 3707              	.LBE505:
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3708              		.loc 1 3021 11 is_stmt 1 view .LVU1148
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3709              		.loc 1 3021 72 is_stmt 0 view .LVU1149
 3710 0164 8868     		ldr	r0, [r1, #8]
 3711              	.LVL302:
 3712              	.LBB506:
 3713              	.LBI506:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3714              		.loc 2 5075 22 is_stmt 1 view .LVU1150
 3715              	.LBB507:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3716              		.loc 2 5081 3 view .LVU1151
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3717              		.loc 2 5084 3 view .LVU1152
 3718 0166 E268     		ldr	r2, [r4, #12]
 3719 0168 22F0FB42 		bic	r2, r2, #2105540608
 3720 016c 22F48002 		bic	r2, r2, #4194304
 3721 0170 00F0F840 		and	r0, r0, #2080374784
 3722              	.LVL303:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3723              		.loc 2 5084 3 is_stmt 0 view .LVU1153
 3724 0174 40F0A070 		orr	r0, r0, #20971520
 3725 0178 0243     		orrs	r2, r2, r0
 3726 017a E260     		str	r2, [r4, #12]
 3727              	.LVL304:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3728              		.loc 2 5087 1 view .LVU1154
 3729 017c C5E7     		b	.L221
 3730              	.LVL305:
 3731              	.L219:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3732              		.loc 2 5087 1 view .LVU1155
 3733              	.LBE507:
 3734              	.LBE506:
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3735              		.loc 1 3039 11 is_stmt 1 view .LVU1156
 3736              	.LBB508:
 3737              	.LBI508:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3738              		.loc 2 5075 22 view .LVU1157
 3739              	.LBB509:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3740              		.loc 2 5081 3 view .LVU1158
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
ARM GAS  /tmp/ccNlWecU.s 			page 293


 3741              		.loc 2 5084 3 view .LVU1159
 3742 017e E268     		ldr	r2, [r4, #12]
 3743 0180 22F0FB42 		bic	r2, r2, #2105540608
 3744 0184 22F48002 		bic	r2, r2, #4194304
 3745 0188 42F0C072 		orr	r2, r2, #25165824
 3746 018c E260     		str	r2, [r4, #12]
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3747              		.loc 2 5087 1 is_stmt 0 view .LVU1160
 3748 018e BCE7     		b	.L221
 3749              	.LVL306:
 3750              	.L218:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3751              		.loc 2 5087 1 view .LVU1161
 3752              	.LBE509:
 3753              	.LBE508:
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3754              		.loc 1 3043 11 is_stmt 1 view .LVU1162
 3755              	.LBB510:
 3756              	.LBI510:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3757              		.loc 2 5075 22 view .LVU1163
 3758              	.LBB511:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3759              		.loc 2 5081 3 view .LVU1164
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3760              		.loc 2 5084 3 view .LVU1165
 3761 0190 E268     		ldr	r2, [r4, #12]
 3762 0192 22F0FB42 		bic	r2, r2, #2105540608
 3763 0196 22F48002 		bic	r2, r2, #4194304
 3764 019a E260     		str	r2, [r4, #12]
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3765              		.loc 2 5087 1 is_stmt 0 view .LVU1166
 3766 019c B5E7     		b	.L221
 3767              	.LVL307:
 3768              	.L252:
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3769              		.loc 2 5087 1 view .LVU1167
 3770              	.LBE511:
 3771              	.LBE510:
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3772              		.loc 1 3069 9 is_stmt 1 view .LVU1168
 3773 019e 1968     		ldr	r1, [r3]
 3774              	.LVL308:
 3775              	.LBB512:
 3776              	.LBI512:
7125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3777              		.loc 2 7125 22 view .LVU1169
 3778              	.LBB513:
7127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3779              		.loc 2 7127 3 view .LVU1170
 3780 01a0 4A68     		ldr	r2, [r1, #4]
 3781 01a2 0243     		orrs	r2, r2, r0
 3782 01a4 4A60     		str	r2, [r1, #4]
 3783              	.LBE513:
 3784              	.LBE512:
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3785              		.loc 1 2958 21 is_stmt 0 view .LVU1171
ARM GAS  /tmp/ccNlWecU.s 			page 294


 3786 01a6 0020     		movs	r0, #0
 3787              	.LBB515:
 3788              	.LBB514:
7128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3789              		.loc 2 7128 1 view .LVU1172
 3790 01a8 C5E0     		b	.L223
 3791              	.LVL309:
 3792              	.L225:
7128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3793              		.loc 2 7128 1 view .LVU1173
 3794              	.LBE514:
 3795              	.LBE515:
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3796              		.loc 1 3079 7 view .LVU1174
 3797 01aa B0F1C07F 		cmp	r0, #25165824
 3798 01ae 3AD0     		beq	.L226
 3799 01b0 B0F1E07F 		cmp	r0, #29360128
 3800 01b4 7FF456AF 		bne	.L227
 3801              	.L224:
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3802              		.loc 1 3086 11 is_stmt 1 view .LVU1175
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3803              		.loc 1 3086 14 is_stmt 0 view .LVU1176
 3804 01b8 5B48     		ldr	r0, .L257+4
 3805 01ba 8242     		cmp	r2, r0
 3806 01bc 0DD0     		beq	.L253
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3807              		.loc 1 3092 13 is_stmt 1 view .LVU1177
 3808 01be 8A68     		ldr	r2, [r1, #8]
 3809 01c0 C2F31200 		ubfx	r0, r2, #0, #19
 3810 01c4 18BB     		cbnz	r0, .L233
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3811              		.loc 1 3092 13 is_stmt 0 discriminator 1 view .LVU1178
 3812 01c6 C2F38462 		ubfx	r2, r2, #26, #5
 3813 01ca 0120     		movs	r0, #1
 3814 01cc 9040     		lsls	r0, r0, r2
 3815              	.L234:
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3816              		.loc 1 3092 13 discriminator 4 view .LVU1179
 3817 01ce D4F8A420 		ldr	r2, [r4, #164]
 3818 01d2 0243     		orrs	r2, r2, r0
 3819 01d4 C4F8A420 		str	r2, [r4, #164]
 3820 01d8 3DE0     		b	.L232
 3821              	.L253:
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3822              		.loc 1 3088 13 is_stmt 1 view .LVU1180
 3823 01da 8A68     		ldr	r2, [r1, #8]
 3824 01dc C2F31200 		ubfx	r0, r2, #0, #19
 3825 01e0 48B9     		cbnz	r0, .L229
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3826              		.loc 1 3088 13 is_stmt 0 discriminator 1 view .LVU1181
 3827 01e2 C2F38462 		ubfx	r2, r2, #26, #5
 3828 01e6 0120     		movs	r0, #1
 3829 01e8 9040     		lsls	r0, r0, r2
 3830              	.L230:
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3831              		.loc 1 3088 13 discriminator 4 view .LVU1182
ARM GAS  /tmp/ccNlWecU.s 			page 295


 3832 01ea D4F8A020 		ldr	r2, [r4, #160]
 3833 01ee 0243     		orrs	r2, r2, r0
 3834 01f0 C4F8A020 		str	r2, [r4, #160]
 3835 01f4 2FE0     		b	.L232
 3836              	.L229:
 3837              	.LVL310:
 3838              	.LBB516:
 3839              	.LBI516:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3840              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1183
 3841              	.LBB517:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3842              		.loc 3 1050 3 discriminator 2 view .LVU1184
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3843              		.loc 3 1055 4 discriminator 2 view .LVU1185
 3844              		.syntax unified
 3845              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3846 01f6 92FAA2F2 		rbit r2, r2
 3847              	@ 0 "" 2
 3848              	.LVL311:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3849              		.loc 3 1068 3 discriminator 2 view .LVU1186
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3850              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1187
 3851              		.thumb
 3852              		.syntax unified
 3853              	.LBE517:
 3854              	.LBE516:
 3855              	.LBB518:
 3856              	.LBI518:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3857              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1188
 3858              	.LBB519:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3859              		.loc 3 1089 3 discriminator 2 view .LVU1189
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3860              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1190
 3861 01fa 32B1     		cbz	r2, .L244
 3862              		.loc 3 1093 3 is_stmt 1 view .LVU1191
 3863              		.loc 3 1093 10 is_stmt 0 view .LVU1192
 3864 01fc B2FA82F2 		clz	r2, r2
 3865              	.LVL312:
 3866              	.L231:
 3867              		.loc 3 1093 10 view .LVU1193
 3868              	.LBE519:
 3869              	.LBE518:
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3870              		.loc 1 3088 13 view .LVU1194
 3871 0200 02F01F02 		and	r2, r2, #31
 3872 0204 0120     		movs	r0, #1
 3873 0206 9040     		lsls	r0, r0, r2
 3874 0208 EFE7     		b	.L230
 3875              	.LVL313:
 3876              	.L244:
 3877              	.LBB521:
 3878              	.LBB520:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/ccNlWecU.s 			page 296


 3879              		.loc 3 1091 12 view .LVU1195
 3880 020a 2022     		movs	r2, #32
 3881              	.LVL314:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3882              		.loc 3 1091 12 view .LVU1196
 3883 020c F8E7     		b	.L231
 3884              	.L233:
 3885              	.LVL315:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3886              		.loc 3 1091 12 view .LVU1197
 3887              	.LBE520:
 3888              	.LBE521:
 3889              	.LBB522:
 3890              	.LBI522:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3891              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1198
 3892              	.LBB523:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3893              		.loc 3 1050 3 discriminator 2 view .LVU1199
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3894              		.loc 3 1055 4 discriminator 2 view .LVU1200
 3895              		.syntax unified
 3896              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3897 020e 92FAA2F2 		rbit r2, r2
 3898              	@ 0 "" 2
 3899              	.LVL316:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3900              		.loc 3 1068 3 discriminator 2 view .LVU1201
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3901              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1202
 3902              		.thumb
 3903              		.syntax unified
 3904              	.LBE523:
 3905              	.LBE522:
 3906              	.LBB524:
 3907              	.LBI524:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3908              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1203
 3909              	.LBB525:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3910              		.loc 3 1089 3 discriminator 2 view .LVU1204
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3911              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1205
 3912 0212 32B1     		cbz	r2, .L245
 3913              		.loc 3 1093 3 is_stmt 1 view .LVU1206
 3914              		.loc 3 1093 10 is_stmt 0 view .LVU1207
 3915 0214 B2FA82F2 		clz	r2, r2
 3916              	.LVL317:
 3917              	.L235:
 3918              		.loc 3 1093 10 view .LVU1208
 3919              	.LBE525:
 3920              	.LBE524:
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3921              		.loc 1 3092 13 view .LVU1209
 3922 0218 02F01F02 		and	r2, r2, #31
 3923 021c 0120     		movs	r0, #1
 3924 021e 9040     		lsls	r0, r0, r2
ARM GAS  /tmp/ccNlWecU.s 			page 297


 3925 0220 D5E7     		b	.L234
 3926              	.LVL318:
 3927              	.L245:
 3928              	.LBB527:
 3929              	.LBB526:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3930              		.loc 3 1091 12 view .LVU1210
 3931 0222 2022     		movs	r2, #32
 3932              	.LVL319:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3933              		.loc 3 1091 12 view .LVU1211
 3934 0224 F8E7     		b	.L235
 3935              	.L226:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3936              		.loc 3 1091 12 view .LVU1212
 3937              	.LBE526:
 3938              	.LBE527:
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3939              		.loc 1 3099 11 is_stmt 1 view .LVU1213
 3940              	.LVL320:
 3941              	.LBB528:
 3942              	.LBI528:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3943              		.loc 2 5075 22 view .LVU1214
 3944              	.LBB529:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3945              		.loc 2 5081 3 view .LVU1215
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3946              		.loc 2 5081 25 is_stmt 0 view .LVU1216
 3947 0226 0C34     		adds	r4, r4, #12
 3948              	.LVL321:
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3949              		.loc 2 5081 25 view .LVU1217
 3950 0228 C2F30155 		ubfx	r5, r2, #20, #2
 3951 022c 02F00106 		and	r6, r2, #1
 3952 0230 F000     		lsls	r0, r6, #3
 3953 0232 3044     		add	r0, r0, r6
 3954 0234 05EB8005 		add	r5, r5, r0, lsl #2
 3955              	.LVL322:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3956              		.loc 2 5084 3 is_stmt 1 view .LVU1218
 3957 0238 54F82500 		ldr	r0, [r4, r5, lsl #2]
 3958 023c 22F00246 		bic	r6, r2, #-2113929216
 3959 0240 26F46016 		bic	r6, r6, #3670016
 3960 0244 20EA0600 		bic	r0, r0, r6
 3961 0248 22F07E42 		bic	r2, r2, #-33554432
 3962              	.LVL323:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3963              		.loc 2 5084 3 is_stmt 0 view .LVU1219
 3964 024c 22F4F002 		bic	r2, r2, #7864320
 3965 0250 0243     		orrs	r2, r2, r0
 3966 0252 44F82520 		str	r2, [r4, r5, lsl #2]
 3967              	.LVL324:
 3968              	.L232:
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3969              		.loc 2 5084 3 view .LVU1220
 3970              	.LBE529:
ARM GAS  /tmp/ccNlWecU.s 			page 298


 3971              	.LBE528:
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3972              		.loc 1 3109 7 is_stmt 1 view .LVU1221
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3973              		.loc 1 3109 36 is_stmt 0 view .LVU1222
 3974 0256 1868     		ldr	r0, [r3]
 3975 0258 C268     		ldr	r2, [r0, #12]
 3976 025a 02F01802 		and	r2, r2, #24
 3977 025e 182A     		cmp	r2, #24
 3978 0260 3BD0     		beq	.L236
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3979              		.loc 1 3109 36 discriminator 1 view .LVU1223
 3980 0262 0D69     		ldr	r5, [r1, #16]
 3981 0264 C268     		ldr	r2, [r0, #12]
 3982 0266 C2F3C102 		ubfx	r2, r2, #3, #2
 3983 026a C2F10202 		rsb	r2, r2, #2
 3984 026e 5200     		lsls	r2, r2, #1
 3985 0270 02F01E02 		and	r2, r2, #30
 3986 0274 D540     		lsrs	r5, r5, r2
 3987              	.L237:
 3988              	.LVL325:
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3989              		.loc 1 3110 7 is_stmt 1 discriminator 4 view .LVU1224
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3990              		.loc 1 3110 36 is_stmt 0 discriminator 4 view .LVU1225
 3991 0276 C268     		ldr	r2, [r0, #12]
 3992 0278 02F01802 		and	r2, r2, #24
 3993 027c 182A     		cmp	r2, #24
 3994 027e 2FD0     		beq	.L238
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3995              		.loc 1 3110 36 discriminator 1 view .LVU1226
 3996 0280 4C69     		ldr	r4, [r1, #20]
 3997 0282 C268     		ldr	r2, [r0, #12]
 3998 0284 C2F3C102 		ubfx	r2, r2, #3, #2
 3999 0288 C2F10202 		rsb	r2, r2, #2
 4000 028c 5200     		lsls	r2, r2, #1
 4001 028e 02F01E02 		and	r2, r2, #30
 4002 0292 D440     		lsrs	r4, r4, r2
 4003              	.L239:
 4004              	.LVL326:
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
 4005              		.loc 1 3113 7 is_stmt 1 discriminator 4 view .LVU1227
 4006 0294 0A68     		ldr	r2, [r1]
 4007              	.LVL327:
 4008              	.LBB530:
 4009              	.LBI530:
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 4010              		.loc 2 5319 22 discriminator 4 view .LVU1228
 4011              	.LBB531:
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4012              		.loc 2 5327 3 discriminator 4 view .LVU1229
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4013              		.loc 2 5327 25 is_stmt 0 discriminator 4 view .LVU1230
 4014 0296 2030     		adds	r0, r0, #32
 4015              	.LVL328:
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4016              		.loc 2 5327 25 discriminator 4 view .LVU1231
ARM GAS  /tmp/ccNlWecU.s 			page 299


 4017 0298 120D     		lsrs	r2, r2, #20
 4018              	.LVL329:
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4019              		.loc 2 5327 25 discriminator 4 view .LVU1232
 4020 029a 9200     		lsls	r2, r2, #2
 4021 029c 02F00C02 		and	r2, r2, #12
 4022              	.LVL330:
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4023              		.loc 2 5329 3 is_stmt 1 discriminator 4 view .LVU1233
 4024 02a0 8658     		ldr	r6, [r0, r2]
 4025 02a2 06F0F026 		and	r6, r6, #-268374016
 4026 02a6 44EA0545 		orr	r5, r4, r5, lsl #16
 4027              	.LVL331:
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4028              		.loc 2 5329 3 is_stmt 0 discriminator 4 view .LVU1234
 4029 02aa 3543     		orrs	r5, r5, r6
 4030 02ac 8550     		str	r5, [r0, r2]
 4031              	.LVL332:
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4032              		.loc 2 5329 3 discriminator 4 view .LVU1235
 4033              	.LBE531:
 4034              	.LBE530:
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4035              		.loc 1 3116 7 is_stmt 1 discriminator 4 view .LVU1236
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4036              		.loc 1 3116 26 is_stmt 0 discriminator 4 view .LVU1237
 4037 02ae 0868     		ldr	r0, [r1]
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4038              		.loc 1 3116 10 discriminator 4 view .LVU1238
 4039 02b0 1D4A     		ldr	r2, .L257+4
 4040 02b2 9042     		cmp	r0, r2
 4041 02b4 17D0     		beq	.L254
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4042              		.loc 1 3141 9 is_stmt 1 view .LVU1239
 4043 02b6 9A6D     		ldr	r2, [r3, #88]
 4044 02b8 22F48022 		bic	r2, r2, #262144
 4045 02bc 9A65     		str	r2, [r3, #88]
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4046              		.loc 1 3147 9 view .LVU1240
 4047 02be 1A68     		ldr	r2, [r3]
 4048              	.LVL333:
 4049              	.LBB532:
 4050              	.LBI532:
6752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4051              		.loc 2 6752 22 view .LVU1241
 4052              	.LBB533:
6754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4053              		.loc 2 6754 3 view .LVU1242
 4054 02c0 4FF40070 		mov	r0, #512
 4055 02c4 1060     		str	r0, [r2]
 4056              	.LVL334:
6754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4057              		.loc 2 6754 3 is_stmt 0 view .LVU1243
 4058              	.LBE533:
 4059              	.LBE532:
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4060              		.loc 1 3150 9 is_stmt 1 view .LVU1244
ARM GAS  /tmp/ccNlWecU.s 			page 300


3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4061              		.loc 1 3150 28 is_stmt 0 view .LVU1245
 4062 02c6 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4063              		.loc 1 3150 12 view .LVU1246
 4064 02c8 012A     		cmp	r2, #1
 4065 02ca 24D0     		beq	.L255
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4066              		.loc 1 3156 11 is_stmt 1 view .LVU1247
 4067 02cc 1968     		ldr	r1, [r3]
 4068              	.LVL335:
 4069              	.LBB534:
 4070              	.LBI534:
7250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 4071              		.loc 2 7268 22 view .LVU1248
 4072              	.LBB535:
7269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 4073              		.loc 2 7270 3 view .LVU1249
 4074 02ce 4A68     		ldr	r2, [r1, #4]
 4075 02d0 22F40072 		bic	r2, r2, #512
 4076 02d4 4A60     		str	r2, [r1, #4]
 4077              	.LBE535:
 4078              	.LBE534:
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4079              		.loc 1 2958 21 is_stmt 0 view .LVU1250
 4080 02d6 0020     		movs	r0, #0
 4081              	.LBB537:
 4082              	.LBB536:
7271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4083              		.loc 2 7271 1 view .LVU1251
 4084 02d8 2DE0     		b	.L223
 4085              	.LVL336:
 4086              	.L236:
 4087              		.loc 2 7271 1 view .LVU1252
 4088              	.LBE536:
 4089              	.LBE537:
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 4090              		.loc 1 3109 36 discriminator 2 view .LVU1253
ARM GAS  /tmp/ccNlWecU.s 			page 301


 4091 02da 0D69     		ldr	r5, [r1, #16]
 4092 02dc AD00     		lsls	r5, r5, #2
 4093 02de CAE7     		b	.L237
 4094              	.LVL337:
 4095              	.L238:
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4096              		.loc 1 3110 36 discriminator 2 view .LVU1254
 4097 02e0 4C69     		ldr	r4, [r1, #20]
 4098 02e2 A400     		lsls	r4, r4, #2
 4099 02e4 D6E7     		b	.L239
 4100              	.LVL338:
 4101              	.L254:
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4102              		.loc 1 3119 9 is_stmt 1 view .LVU1255
 4103 02e6 9A6D     		ldr	r2, [r3, #88]
 4104 02e8 22F40032 		bic	r2, r2, #131072
 4105 02ec 9A65     		str	r2, [r3, #88]
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4106              		.loc 1 3125 9 view .LVU1256
 4107 02ee 1A68     		ldr	r2, [r3]
 4108              	.LVL339:
 4109              	.LBB538:
 4110              	.LBI538:
6741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4111              		.loc 2 6741 22 view .LVU1257
 4112              	.LBB539:
6743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4113              		.loc 2 6743 3 view .LVU1258
 4114 02f0 4FF48070 		mov	r0, #256
 4115 02f4 1060     		str	r0, [r2]
 4116              	.LVL340:
6743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4117              		.loc 2 6743 3 is_stmt 0 view .LVU1259
 4118              	.LBE539:
 4119              	.LBE538:
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4120              		.loc 1 3128 9 is_stmt 1 view .LVU1260
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4121              		.loc 1 3128 28 is_stmt 0 view .LVU1261
 4122 02f6 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4123              		.loc 1 3128 12 view .LVU1262
 4124 02f8 012A     		cmp	r2, #1
 4125 02fa 06D0     		beq	.L256
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4126              		.loc 1 3134 11 is_stmt 1 view .LVU1263
 4127 02fc 1968     		ldr	r1, [r3]
 4128              	.LVL341:
 4129              	.LBB540:
 4130              	.LBI540:
7257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4131              		.loc 2 7257 22 view .LVU1264
 4132              	.LBB541:
7259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4133              		.loc 2 7259 3 view .LVU1265
 4134 02fe 4A68     		ldr	r2, [r1, #4]
 4135 0300 22F48072 		bic	r2, r2, #256
ARM GAS  /tmp/ccNlWecU.s 			page 302


 4136 0304 4A60     		str	r2, [r1, #4]
 4137              	.LBE541:
 4138              	.LBE540:
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4139              		.loc 1 2958 21 is_stmt 0 view .LVU1266
 4140 0306 0020     		movs	r0, #0
 4141              	.LBB543:
 4142              	.LBB542:
7260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4143              		.loc 2 7260 1 view .LVU1267
 4144 0308 15E0     		b	.L223
 4145              	.LVL342:
 4146              	.L256:
7260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4147              		.loc 2 7260 1 view .LVU1268
 4148              	.LBE542:
 4149              	.LBE543:
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4150              		.loc 1 3130 11 is_stmt 1 view .LVU1269
 4151 030a 1968     		ldr	r1, [r3]
 4152              	.LVL343:
 4153              	.LBB544:
 4154              	.LBI544:
7136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4155              		.loc 2 7136 22 view .LVU1270
 4156              	.LBB545:
7138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4157              		.loc 2 7138 3 view .LVU1271
 4158 030c 4A68     		ldr	r2, [r1, #4]
 4159 030e 0243     		orrs	r2, r2, r0
 4160 0310 4A60     		str	r2, [r1, #4]
 4161              	.LBE545:
 4162              	.LBE544:
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4163              		.loc 1 2958 21 is_stmt 0 view .LVU1272
 4164 0312 0020     		movs	r0, #0
 4165              	.LBB547:
 4166              	.LBB546:
7139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4167              		.loc 2 7139 1 view .LVU1273
 4168 0314 0FE0     		b	.L223
 4169              	.LVL344:
 4170              	.L255:
7139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4171              		.loc 2 7139 1 view .LVU1274
 4172              	.LBE546:
 4173              	.LBE547:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4174              		.loc 1 3152 11 is_stmt 1 view .LVU1275
 4175 0316 1968     		ldr	r1, [r3]
 4176              	.LVL345:
 4177              	.LBB548:
 4178              	.LBI548:
7147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4179              		.loc 2 7147 22 view .LVU1276
 4180              	.LBB549:
7149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccNlWecU.s 			page 303


 4181              		.loc 2 7149 3 view .LVU1277
 4182 0318 4A68     		ldr	r2, [r1, #4]
 4183 031a 0243     		orrs	r2, r2, r0
 4184 031c 4A60     		str	r2, [r1, #4]
 4185              	.LBE549:
 4186              	.LBE548:
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4187              		.loc 1 2958 21 is_stmt 0 view .LVU1278
 4188 031e 0020     		movs	r0, #0
 4189              	.LBB551:
 4190              	.LBB550:
7150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4191              		.loc 2 7150 1 view .LVU1279
 4192 0320 09E0     		b	.L223
 4193              	.L258:
 4194 0322 00BF     		.align	2
 4195              	.L257:
 4196 0324 0000C07D 		.word	2109734912
 4197 0328 FFFF1700 		.word	1572863
 4198              	.LVL346:
 4199              	.L211:
7150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4200              		.loc 2 7150 1 view .LVU1280
 4201              	.LBE550:
 4202              	.LBE551:
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4203              		.loc 1 3167 5 is_stmt 1 view .LVU1281
 4204 032c 9A6D     		ldr	r2, [r3, #88]
 4205              	.LVL347:
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4206              		.loc 1 3167 5 is_stmt 0 view .LVU1282
 4207 032e 42F02002 		orr	r2, r2, #32
 4208 0332 9A65     		str	r2, [r3, #88]
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 4209              		.loc 1 3169 5 is_stmt 1 view .LVU1283
 4210              	.LVL348:
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 4211              		.loc 1 3169 20 is_stmt 0 view .LVU1284
 4212 0334 0120     		movs	r0, #1
 4213              	.LVL349:
 4214              	.L223:
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4215              		.loc 1 3172 3 is_stmt 1 view .LVU1285
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4216              		.loc 1 3172 3 view .LVU1286
 4217 0336 0022     		movs	r2, #0
 4218 0338 83F85420 		strb	r2, [r3, #84]
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4219              		.loc 1 3172 3 view .LVU1287
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4220              		.loc 1 3175 3 view .LVU1288
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4221              		.loc 1 3176 1 is_stmt 0 view .LVU1289
 4222 033c 70BC     		pop	{r4, r5, r6}
 4223              	.LCFI16:
 4224              		.cfi_restore 6
 4225              		.cfi_restore 5
ARM GAS  /tmp/ccNlWecU.s 			page 304


 4226              		.cfi_restore 4
 4227              		.cfi_def_cfa_offset 0
 4228 033e 7047     		bx	lr
 4229              	.LVL350:
 4230              	.L243:
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4231              		.loc 1 2994 3 view .LVU1290
 4232 0340 0220     		movs	r0, #2
 4233              	.LVL351:
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4234              		.loc 1 3176 1 view .LVU1291
 4235 0342 7047     		bx	lr
 4236              		.cfi_endproc
 4237              	.LFE311:
 4239              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 4240              		.align	1
 4241              		.global	HAL_ADC_GetState
 4242              		.syntax unified
 4243              		.thumb
 4244              		.thumb_func
 4245              		.fpu fpv4-sp-d16
 4247              	HAL_ADC_GetState:
 4248              	.LVL352:
 4249              	.LFB312:
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 4250              		.loc 1 3211 1 is_stmt 1 view -0
 4251              		.cfi_startproc
 4252              		@ args = 0, pretend = 0, frame = 0
 4253              		@ frame_needed = 0, uses_anonymous_args = 0
 4254              		@ link register save eliminated.
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4255              		.loc 1 3213 3 view .LVU1293
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4256              		.loc 1 3216 3 view .LVU1294
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4257              		.loc 1 3216 14 is_stmt 0 view .LVU1295
 4258 0000 806D     		ldr	r0, [r0, #88]
 4259              	.LVL353:
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4260              		.loc 1 3217 1 view .LVU1296
 4261 0002 7047     		bx	lr
 4262              		.cfi_endproc
 4263              	.LFE312:
 4265              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 4266              		.align	1
 4267              		.global	HAL_ADC_GetError
 4268              		.syntax unified
 4269              		.thumb
 4270              		.thumb_func
 4271              		.fpu fpv4-sp-d16
 4273              	HAL_ADC_GetError:
 4274              	.LVL354:
 4275              	.LFB313:
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 4276              		.loc 1 3225 1 is_stmt 1 view -0
 4277              		.cfi_startproc
 4278              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccNlWecU.s 			page 305


 4279              		@ frame_needed = 0, uses_anonymous_args = 0
 4280              		@ link register save eliminated.
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4281              		.loc 1 3227 3 view .LVU1298
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4282              		.loc 1 3229 3 view .LVU1299
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4283              		.loc 1 3229 14 is_stmt 0 view .LVU1300
 4284 0000 C06D     		ldr	r0, [r0, #92]
 4285              	.LVL355:
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4286              		.loc 1 3230 1 view .LVU1301
 4287 0002 7047     		bx	lr
 4288              		.cfi_endproc
 4289              	.LFE313:
 4291              		.section	.text.ADC_ConversionStop,"ax",%progbits
 4292              		.align	1
 4293              		.global	ADC_ConversionStop
 4294              		.syntax unified
 4295              		.thumb
 4296              		.thumb_func
 4297              		.fpu fpv4-sp-d16
 4299              	ADC_ConversionStop:
 4300              	.LVL356:
 4301              	.LFB314:
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 4302              		.loc 1 3255 1 is_stmt 1 view -0
 4303              		.cfi_startproc
 4304              		@ args = 0, pretend = 0, frame = 0
 4305              		@ frame_needed = 0, uses_anonymous_args = 0
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 4306              		.loc 1 3255 1 is_stmt 0 view .LVU1303
 4307 0000 70B5     		push	{r4, r5, r6, lr}
 4308              	.LCFI17:
 4309              		.cfi_def_cfa_offset 16
 4310              		.cfi_offset 4, -16
 4311              		.cfi_offset 5, -12
 4312              		.cfi_offset 6, -8
 4313              		.cfi_offset 14, -4
 4314 0002 0446     		mov	r4, r0
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 4315              		.loc 1 3256 3 is_stmt 1 view .LVU1304
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4316              		.loc 1 3257 3 view .LVU1305
 4317              	.LVL357:
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 4318              		.loc 1 3258 3 view .LVU1306
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 4319              		.loc 1 3259 3 view .LVU1307
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 4320              		.loc 1 3260 3 view .LVU1308
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4321              		.loc 1 3261 3 view .LVU1309
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4322              		.loc 1 3264 3 view .LVU1310
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4323              		.loc 1 3265 3 view .LVU1311
ARM GAS  /tmp/ccNlWecU.s 			page 306


3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4324              		.loc 1 3269 3 view .LVU1312
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4325              		.loc 1 3269 44 is_stmt 0 view .LVU1313
 4326 0004 0368     		ldr	r3, [r0]
 4327              	.LVL358:
 4328              	.LBB552:
 4329              	.LBI552:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4330              		.loc 2 6168 26 is_stmt 1 view .LVU1314
 4331              	.LBB553:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4332              		.loc 2 6170 3 view .LVU1315
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4333              		.loc 2 6170 12 is_stmt 0 view .LVU1316
 4334 0006 9A68     		ldr	r2, [r3, #8]
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4335              		.loc 2 6170 74 view .LVU1317
 4336 0008 12F00402 		ands	r2, r2, #4
 4337 000c 00D0     		beq	.L262
 4338 000e 0122     		movs	r2, #1
 4339              	.L262:
 4340              	.LVL359:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4341              		.loc 2 6170 74 view .LVU1318
 4342              	.LBE553:
 4343              	.LBE552:
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4344              		.loc 1 3270 3 is_stmt 1 view .LVU1319
 4345              	.LBB554:
 4346              	.LBI554:
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4347              		.loc 2 6351 26 view .LVU1320
 4348              	.LBB555:
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4349              		.loc 2 6353 3 view .LVU1321
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4350              		.loc 2 6353 12 is_stmt 0 view .LVU1322
 4351 0010 9868     		ldr	r0, [r3, #8]
 4352              	.LVL360:
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4353              		.loc 2 6353 76 view .LVU1323
 4354 0012 10F00800 		ands	r0, r0, #8
 4355 0016 00D0     		beq	.L263
 4356 0018 0120     		movs	r0, #1
 4357              	.L263:
 4358              	.LVL361:
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4359              		.loc 2 6353 76 view .LVU1324
 4360              	.LBE555:
 4361              	.LBE554:
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4362              		.loc 1 3271 3 is_stmt 1 view .LVU1325
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4363              		.loc 1 3271 6 is_stmt 0 view .LVU1326
 4364 001a 0AB9     		cbnz	r2, .L264
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
ARM GAS  /tmp/ccNlWecU.s 			page 307


 4365              		.loc 1 3272 7 view .LVU1327
 4366 001c 0028     		cmp	r0, #0
 4367 001e 67D0     		beq	.L276
 4368              	.L264:
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4369              		.loc 1 3281 5 is_stmt 1 view .LVU1328
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4370              		.loc 1 3281 25 is_stmt 0 view .LVU1329
 4371 0020 DA68     		ldr	r2, [r3, #12]
 4372              	.LVL362:
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4373              		.loc 1 3281 8 view .LVU1330
 4374 0022 12F0007F 		tst	r2, #33554432
 4375 0026 04D0     		beq	.L266
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 4376              		.loc 1 3283 9 view .LVU1331
 4377 0028 208B     		ldrh	r0, [r4, #24]
 4378              	.LVL363:
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 4379              		.loc 1 3283 9 view .LVU1332
 4380 002a 40F20112 		movw	r2, #257
 4381 002e 9042     		cmp	r0, r2
 4382 0030 4AD0     		beq	.L281
 4383              	.L266:
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4384              		.loc 1 3310 5 is_stmt 1 view .LVU1333
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4385              		.loc 1 3310 8 is_stmt 0 view .LVU1334
 4386 0032 0229     		cmp	r1, #2
 4387 0034 10D0     		beq	.L271
 4388              	.LVL364:
 4389              	.L270:
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4390              		.loc 1 3313 7 is_stmt 1 view .LVU1335
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4391              		.loc 1 3313 11 is_stmt 0 view .LVU1336
 4392 0036 2368     		ldr	r3, [r4]
 4393              	.LVL365:
 4394              	.LBB556:
 4395              	.LBI556:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4396              		.loc 2 6168 26 is_stmt 1 view .LVU1337
 4397              	.LBB557:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4398              		.loc 2 6170 3 view .LVU1338
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4399              		.loc 2 6170 12 is_stmt 0 view .LVU1339
 4400 0038 9A68     		ldr	r2, [r3, #8]
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4401              		.loc 2 6170 74 view .LVU1340
 4402 003a 12F0040F 		tst	r2, #4
 4403 003e 0BD0     		beq	.L271
 4404              	.LVL366:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4405              		.loc 2 6170 74 view .LVU1341
 4406              	.LBE557:
 4407              	.LBE556:
ARM GAS  /tmp/ccNlWecU.s 			page 308


3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4408              		.loc 1 3315 9 is_stmt 1 view .LVU1342
 4409              	.LBB558:
 4410              	.LBI558:
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4411              		.loc 2 6057 26 view .LVU1343
 4412              	.LBB559:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4413              		.loc 2 6059 3 view .LVU1344
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4414              		.loc 2 6059 12 is_stmt 0 view .LVU1345
 4415 0040 9A68     		ldr	r2, [r3, #8]
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4416              		.loc 2 6059 70 view .LVU1346
 4417 0042 12F0020F 		tst	r2, #2
 4418 0046 07D1     		bne	.L271
 4419              	.LVL367:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4420              		.loc 2 6059 70 view .LVU1347
 4421              	.LBE559:
 4422              	.LBE558:
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4423              		.loc 1 3318 11 is_stmt 1 view .LVU1348
 4424              	.LBB560:
 4425              	.LBI560:
6152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4426              		.loc 2 6152 22 view .LVU1349
 4427              	.LBB561:
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4428              		.loc 2 6157 3 view .LVU1350
 4429 0048 9A68     		ldr	r2, [r3, #8]
 4430 004a 22F00042 		bic	r2, r2, #-2147483648
 4431 004e 22F03F02 		bic	r2, r2, #63
 4432 0052 42F01002 		orr	r2, r2, #16
 4433 0056 9A60     		str	r2, [r3, #8]
 4434              	.LVL368:
 4435              	.L271:
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4436              		.loc 2 6157 3 is_stmt 0 view .LVU1351
 4437              	.LBE561:
 4438              	.LBE560:
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4439              		.loc 1 3324 5 is_stmt 1 view .LVU1352
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4440              		.loc 1 3324 8 is_stmt 0 view .LVU1353
 4441 0058 0129     		cmp	r1, #1
 4442 005a 10D0     		beq	.L272
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4443              		.loc 1 3327 7 is_stmt 1 view .LVU1354
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4444              		.loc 1 3327 11 is_stmt 0 view .LVU1355
 4445 005c 2368     		ldr	r3, [r4]
 4446              	.LVL369:
 4447              	.LBB562:
 4448              	.LBI562:
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4449              		.loc 2 6351 26 is_stmt 1 view .LVU1356
ARM GAS  /tmp/ccNlWecU.s 			page 309


 4450              	.LBB563:
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4451              		.loc 2 6353 3 view .LVU1357
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4452              		.loc 2 6353 12 is_stmt 0 view .LVU1358
 4453 005e 9A68     		ldr	r2, [r3, #8]
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4454              		.loc 2 6353 76 view .LVU1359
 4455 0060 12F0080F 		tst	r2, #8
 4456 0064 0BD0     		beq	.L272
 4457              	.LVL370:
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4458              		.loc 2 6353 76 view .LVU1360
 4459              	.LBE563:
 4460              	.LBE562:
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4461              		.loc 1 3329 9 is_stmt 1 view .LVU1361
 4462              	.LBB564:
 4463              	.LBI564:
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4464              		.loc 2 6057 26 view .LVU1362
 4465              	.LBB565:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4466              		.loc 2 6059 3 view .LVU1363
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4467              		.loc 2 6059 12 is_stmt 0 view .LVU1364
 4468 0066 9A68     		ldr	r2, [r3, #8]
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4469              		.loc 2 6059 70 view .LVU1365
 4470 0068 12F0020F 		tst	r2, #2
 4471 006c 07D1     		bne	.L272
 4472              	.LVL371:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4473              		.loc 2 6059 70 view .LVU1366
 4474              	.LBE565:
 4475              	.LBE564:
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4476              		.loc 1 3332 11 is_stmt 1 view .LVU1367
 4477              	.LBB566:
 4478              	.LBI566:
6335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4479              		.loc 2 6335 22 view .LVU1368
 4480              	.LBB567:
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4481              		.loc 2 6340 3 view .LVU1369
 4482 006e 9A68     		ldr	r2, [r3, #8]
 4483 0070 22F00042 		bic	r2, r2, #-2147483648
 4484 0074 22F03F02 		bic	r2, r2, #63
 4485 0078 42F02002 		orr	r2, r2, #32
 4486 007c 9A60     		str	r2, [r3, #8]
 4487              	.LVL372:
 4488              	.L272:
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4489              		.loc 2 6340 3 is_stmt 0 view .LVU1370
 4490              	.LBE567:
 4491              	.LBE566:
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccNlWecU.s 			page 310


 4492              		.loc 1 3338 5 is_stmt 1 view .LVU1371
 4493 007e 0229     		cmp	r1, #2
 4494 0080 30D0     		beq	.L278
 4495 0082 0329     		cmp	r1, #3
 4496 0084 30D1     		bne	.L279
 4497 0086 0C26     		movs	r6, #12
 4498              	.L273:
 4499              	.LVL373:
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4500              		.loc 1 3353 5 view .LVU1372
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4501              		.loc 1 3353 17 is_stmt 0 view .LVU1373
 4502 0088 FFF7FEFF 		bl	HAL_GetTick
 4503              	.LVL374:
 4504 008c 0546     		mov	r5, r0
 4505              	.LVL375:
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4506              		.loc 1 3355 5 is_stmt 1 view .LVU1374
 4507              	.L274:
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4508              		.loc 1 3355 11 view .LVU1375
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4509              		.loc 1 3355 17 is_stmt 0 view .LVU1376
 4510 008e 2368     		ldr	r3, [r4]
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4511              		.loc 1 3355 27 view .LVU1377
 4512 0090 9B68     		ldr	r3, [r3, #8]
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4513              		.loc 1 3355 11 view .LVU1378
 4514 0092 3342     		tst	r3, r6
 4515 0094 2AD0     		beq	.L282
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4516              		.loc 1 3357 7 is_stmt 1 view .LVU1379
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4517              		.loc 1 3357 12 is_stmt 0 view .LVU1380
 4518 0096 FFF7FEFF 		bl	HAL_GetTick
 4519              	.LVL376:
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4520              		.loc 1 3357 26 view .LVU1381
 4521 009a 431B     		subs	r3, r0, r5
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4522              		.loc 1 3357 10 view .LVU1382
 4523 009c 052B     		cmp	r3, #5
 4524 009e F6D9     		bls	.L274
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4525              		.loc 1 3360 9 is_stmt 1 view .LVU1383
 4526 00a0 A36D     		ldr	r3, [r4, #88]
 4527 00a2 43F01003 		orr	r3, r3, #16
 4528 00a6 A365     		str	r3, [r4, #88]
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4529              		.loc 1 3363 9 view .LVU1384
 4530 00a8 E36D     		ldr	r3, [r4, #92]
 4531 00aa 43F00103 		orr	r3, r3, #1
 4532 00ae E365     		str	r3, [r4, #92]
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4533              		.loc 1 3365 9 view .LVU1385
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccNlWecU.s 			page 311


 4534              		.loc 1 3365 16 is_stmt 0 view .LVU1386
 4535 00b0 0120     		movs	r0, #1
 4536 00b2 1CE0     		b	.L265
 4537              	.LVL377:
 4538              	.L284:
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4539              		.loc 1 3295 11 is_stmt 1 view .LVU1387
 4540 00b4 A36D     		ldr	r3, [r4, #88]
 4541 00b6 43F01003 		orr	r3, r3, #16
 4542 00ba A365     		str	r3, [r4, #88]
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4543              		.loc 1 3298 11 view .LVU1388
 4544 00bc E36D     		ldr	r3, [r4, #92]
 4545 00be 43F00103 		orr	r3, r3, #1
 4546 00c2 E365     		str	r3, [r4, #92]
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4547              		.loc 1 3300 11 view .LVU1389
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4548              		.loc 1 3300 18 is_stmt 0 view .LVU1390
 4549 00c4 0120     		movs	r0, #1
 4550 00c6 12E0     		b	.L265
 4551              	.LVL378:
 4552              	.L281:
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4553              		.loc 1 3257 12 view .LVU1391
 4554 00c8 0022     		movs	r2, #0
 4555              	.LVL379:
 4556              	.L267:
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4557              		.loc 1 3290 13 is_stmt 1 view .LVU1392
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4558              		.loc 1 3290 14 is_stmt 0 view .LVU1393
 4559 00ca 1968     		ldr	r1, [r3]
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4560              		.loc 1 3290 13 view .LVU1394
 4561 00cc 11F0400F 		tst	r1, #64
 4562 00d0 04D1     		bne	.L283
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4563              		.loc 1 3292 9 is_stmt 1 view .LVU1395
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4564              		.loc 1 3292 12 is_stmt 0 view .LVU1396
 4565 00d2 0849     		ldr	r1, .L285
 4566 00d4 8A42     		cmp	r2, r1
 4567 00d6 EDD8     		bhi	.L284
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4568              		.loc 1 3302 9 is_stmt 1 view .LVU1397
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4569              		.loc 1 3302 39 is_stmt 0 view .LVU1398
 4570 00d8 0132     		adds	r2, r2, #1
 4571              	.LVL380:
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4572              		.loc 1 3302 39 view .LVU1399
 4573 00da F6E7     		b	.L267
 4574              	.L283:
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4575              		.loc 1 3306 7 is_stmt 1 view .LVU1400
 4576 00dc 4022     		movs	r2, #64
ARM GAS  /tmp/ccNlWecU.s 			page 312


 4577              	.LVL381:
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4578              		.loc 1 3306 7 is_stmt 0 view .LVU1401
 4579 00de 1A60     		str	r2, [r3]
 4580              	.LVL382:
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4581              		.loc 1 3310 5 is_stmt 1 view .LVU1402
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4582              		.loc 1 3287 35 is_stmt 0 view .LVU1403
 4583 00e0 0121     		movs	r1, #1
 4584 00e2 A8E7     		b	.L270
 4585              	.LVL383:
 4586              	.L278:
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 4587              		.loc 1 3344 37 view .LVU1404
 4588 00e4 0826     		movs	r6, #8
 4589 00e6 CFE7     		b	.L273
 4590              	.L279:
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 4591              		.loc 1 3348 37 view .LVU1405
 4592 00e8 0426     		movs	r6, #4
 4593 00ea CDE7     		b	.L273
 4594              	.LVL384:
 4595              	.L282:
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4596              		.loc 1 3372 10 view .LVU1406
 4597 00ec 0020     		movs	r0, #0
 4598              	.LVL385:
 4599              	.L265:
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4600              		.loc 1 3373 1 view .LVU1407
 4601 00ee 70BD     		pop	{r4, r5, r6, pc}
 4602              	.LVL386:
 4603              	.L276:
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4604              		.loc 1 3372 10 view .LVU1408
 4605 00f0 0020     		movs	r0, #0
 4606              	.LVL387:
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4607              		.loc 1 3372 10 view .LVU1409
 4608 00f2 FCE7     		b	.L265
 4609              	.L286:
 4610              		.align	2
 4611              	.L285:
 4612 00f4 FFFF3FA3 		.word	-1556086785
 4613              		.cfi_endproc
 4614              	.LFE314:
 4616              		.section	.text.ADC_Enable,"ax",%progbits
 4617              		.align	1
 4618              		.global	ADC_Enable
 4619              		.syntax unified
 4620              		.thumb
 4621              		.thumb_func
 4622              		.fpu fpv4-sp-d16
 4624              	ADC_Enable:
 4625              	.LVL388:
 4626              	.LFB315:
ARM GAS  /tmp/ccNlWecU.s 			page 313


3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 4627              		.loc 1 3383 1 is_stmt 1 view -0
 4628              		.cfi_startproc
 4629              		@ args = 0, pretend = 0, frame = 0
 4630              		@ frame_needed = 0, uses_anonymous_args = 0
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 4631              		.loc 1 3383 1 is_stmt 0 view .LVU1411
 4632 0000 38B5     		push	{r3, r4, r5, lr}
 4633              	.LCFI18:
 4634              		.cfi_def_cfa_offset 16
 4635              		.cfi_offset 3, -16
 4636              		.cfi_offset 4, -12
 4637              		.cfi_offset 5, -8
 4638              		.cfi_offset 14, -4
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4639              		.loc 1 3384 3 is_stmt 1 view .LVU1412
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4640              		.loc 1 3390 3 view .LVU1413
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4641              		.loc 1 3390 7 is_stmt 0 view .LVU1414
 4642 0002 0368     		ldr	r3, [r0]
 4643              	.LVL389:
 4644              	.LBB568:
 4645              	.LBI568:
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4646              		.loc 2 6046 26 is_stmt 1 view .LVU1415
 4647              	.LBB569:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4648              		.loc 2 6048 3 view .LVU1416
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4649              		.loc 2 6048 12 is_stmt 0 view .LVU1417
 4650 0004 9A68     		ldr	r2, [r3, #8]
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4651              		.loc 2 6048 68 view .LVU1418
 4652 0006 12F0010F 		tst	r2, #1
 4653 000a 3DD1     		bne	.L293
 4654 000c 0446     		mov	r4, r0
 4655              	.LVL390:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4656              		.loc 2 6048 68 view .LVU1419
 4657              	.LBE569:
 4658              	.LBE568:
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4659              		.loc 1 3393 5 is_stmt 1 view .LVU1420
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4660              		.loc 1 3393 24 is_stmt 0 view .LVU1421
 4661 000e 9968     		ldr	r1, [r3, #8]
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4662              		.loc 1 3393 8 view .LVU1422
 4663 0010 1E4A     		ldr	r2, .L297
 4664 0012 1142     		tst	r1, r2
 4665 0014 09D0     		beq	.L289
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4666              		.loc 1 3397 7 is_stmt 1 view .LVU1423
 4667 0016 836D     		ldr	r3, [r0, #88]
 4668 0018 43F01003 		orr	r3, r3, #16
 4669 001c 8365     		str	r3, [r0, #88]
ARM GAS  /tmp/ccNlWecU.s 			page 314


3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4670              		.loc 1 3400 7 view .LVU1424
 4671 001e C36D     		ldr	r3, [r0, #92]
 4672 0020 43F00103 		orr	r3, r3, #1
 4673 0024 C365     		str	r3, [r0, #92]
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4674              		.loc 1 3402 7 view .LVU1425
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4675              		.loc 1 3402 14 is_stmt 0 view .LVU1426
 4676 0026 0120     		movs	r0, #1
 4677              	.LVL391:
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4678              		.loc 1 3402 14 view .LVU1427
 4679 0028 2FE0     		b	.L288
 4680              	.LVL392:
 4681              	.L289:
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4682              		.loc 1 3406 5 is_stmt 1 view .LVU1428
 4683              	.LBB570:
 4684              	.LBI570:
6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4685              		.loc 2 6007 22 view .LVU1429
 4686              	.LBB571:
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4687              		.loc 2 6012 3 view .LVU1430
 4688 002a 9A68     		ldr	r2, [r3, #8]
 4689 002c 22F00042 		bic	r2, r2, #-2147483648
 4690 0030 22F03F02 		bic	r2, r2, #63
 4691 0034 42F00102 		orr	r2, r2, #1
 4692 0038 9A60     		str	r2, [r3, #8]
 4693              	.LVL393:
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4694              		.loc 2 6012 3 is_stmt 0 view .LVU1431
 4695              	.LBE571:
 4696              	.LBE570:
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4697              		.loc 1 3409 5 is_stmt 1 view .LVU1432
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4698              		.loc 1 3409 17 is_stmt 0 view .LVU1433
 4699 003a FFF7FEFF 		bl	HAL_GetTick
 4700              	.LVL394:
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4701              		.loc 1 3409 17 view .LVU1434
 4702 003e 0546     		mov	r5, r0
 4703              	.LVL395:
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4704              		.loc 1 3411 5 is_stmt 1 view .LVU1435
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4705              		.loc 1 3411 11 is_stmt 0 view .LVU1436
 4706 0040 04E0     		b	.L290
 4707              	.LVL396:
 4708              	.L291:
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4709              		.loc 1 3426 7 is_stmt 1 view .LVU1437
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4710              		.loc 1 3426 12 is_stmt 0 view .LVU1438
 4711 0042 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccNlWecU.s 			page 315


 4712              	.LVL397:
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4713              		.loc 1 3426 26 view .LVU1439
 4714 0046 431B     		subs	r3, r0, r5
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4715              		.loc 1 3426 10 view .LVU1440
 4716 0048 022B     		cmp	r3, #2
 4717 004a 11D8     		bhi	.L295
 4718              	.L290:
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4719              		.loc 1 3411 11 is_stmt 1 view .LVU1441
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4720              		.loc 1 3411 12 is_stmt 0 view .LVU1442
 4721 004c 2368     		ldr	r3, [r4]
 4722 004e 1A68     		ldr	r2, [r3]
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4723              		.loc 1 3411 11 view .LVU1443
 4724 0050 12F0010F 		tst	r2, #1
 4725 0054 16D1     		bne	.L296
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4726              		.loc 1 3421 7 is_stmt 1 view .LVU1444
 4727              	.LVL398:
 4728              	.LBB572:
 4729              	.LBI572:
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4730              		.loc 2 6046 26 view .LVU1445
 4731              	.LBB573:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4732              		.loc 2 6048 3 view .LVU1446
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4733              		.loc 2 6048 12 is_stmt 0 view .LVU1447
 4734 0056 9A68     		ldr	r2, [r3, #8]
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4735              		.loc 2 6048 68 view .LVU1448
 4736 0058 12F0010F 		tst	r2, #1
 4737 005c F1D1     		bne	.L291
 4738              	.LVL399:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4739              		.loc 2 6048 68 view .LVU1449
 4740              	.LBE573:
 4741              	.LBE572:
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4742              		.loc 1 3423 9 is_stmt 1 view .LVU1450
 4743              	.LBB574:
 4744              	.LBI574:
6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4745              		.loc 2 6007 22 view .LVU1451
 4746              	.LBB575:
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4747              		.loc 2 6012 3 view .LVU1452
 4748 005e 9A68     		ldr	r2, [r3, #8]
 4749 0060 22F00042 		bic	r2, r2, #-2147483648
 4750 0064 22F03F02 		bic	r2, r2, #63
 4751 0068 42F00102 		orr	r2, r2, #1
 4752 006c 9A60     		str	r2, [r3, #8]
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4753              		.loc 2 6015 1 is_stmt 0 view .LVU1453
ARM GAS  /tmp/ccNlWecU.s 			page 316


 4754 006e E8E7     		b	.L291
 4755              	.LVL400:
 4756              	.L295:
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4757              		.loc 2 6015 1 view .LVU1454
 4758              	.LBE575:
 4759              	.LBE574:
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4760              		.loc 1 3429 9 is_stmt 1 view .LVU1455
 4761 0070 A36D     		ldr	r3, [r4, #88]
 4762 0072 43F01003 		orr	r3, r3, #16
 4763 0076 A365     		str	r3, [r4, #88]
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4764              		.loc 1 3432 9 view .LVU1456
 4765 0078 E36D     		ldr	r3, [r4, #92]
 4766 007a 43F00103 		orr	r3, r3, #1
 4767 007e E365     		str	r3, [r4, #92]
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4768              		.loc 1 3434 9 view .LVU1457
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4769              		.loc 1 3434 16 is_stmt 0 view .LVU1458
 4770 0080 0120     		movs	r0, #1
 4771 0082 02E0     		b	.L288
 4772              	.L296:
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4773              		.loc 1 3440 10 view .LVU1459
 4774 0084 0020     		movs	r0, #0
 4775 0086 00E0     		b	.L288
 4776              	.LVL401:
 4777              	.L293:
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4778              		.loc 1 3440 10 view .LVU1460
 4779 0088 0020     		movs	r0, #0
 4780              	.LVL402:
 4781              	.L288:
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4782              		.loc 1 3441 1 view .LVU1461
 4783 008a 38BD     		pop	{r3, r4, r5, pc}
 4784              	.L298:
 4785              		.align	2
 4786              	.L297:
 4787 008c 3F000080 		.word	-2147483585
 4788              		.cfi_endproc
 4789              	.LFE315:
 4791              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4792              		.align	1
 4793              		.global	HAL_ADC_Start
 4794              		.syntax unified
 4795              		.thumb
 4796              		.thumb_func
 4797              		.fpu fpv4-sp-d16
 4799              	HAL_ADC_Start:
 4800              	.LVL403:
 4801              	.LFB296:
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4802              		.loc 1 1216 1 is_stmt 1 view -0
 4803              		.cfi_startproc
ARM GAS  /tmp/ccNlWecU.s 			page 317


 4804              		@ args = 0, pretend = 0, frame = 0
 4805              		@ frame_needed = 0, uses_anonymous_args = 0
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 4806              		.loc 1 1217 3 view .LVU1463
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4807              		.loc 1 1224 3 view .LVU1464
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4808              		.loc 1 1227 3 view .LVU1465
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4809              		.loc 1 1227 7 is_stmt 0 view .LVU1466
 4810 0000 0368     		ldr	r3, [r0]
 4811              	.LVL404:
 4812              	.LBB576:
 4813              	.LBI576:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4814              		.loc 2 6168 26 is_stmt 1 view .LVU1467
 4815              	.LBB577:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4816              		.loc 2 6170 3 view .LVU1468
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4817              		.loc 2 6170 12 is_stmt 0 view .LVU1469
 4818 0002 9B68     		ldr	r3, [r3, #8]
 4819              	.LVL405:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4820              		.loc 2 6170 74 view .LVU1470
 4821 0004 13F0040F 		tst	r3, #4
 4822 0008 3CD1     		bne	.L305
 4823              	.LBE577:
 4824              	.LBE576:
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4825              		.loc 1 1216 1 view .LVU1471
 4826 000a 10B5     		push	{r4, lr}
 4827              	.LCFI19:
 4828              		.cfi_def_cfa_offset 8
 4829              		.cfi_offset 4, -8
 4830              		.cfi_offset 14, -4
 4831 000c 0446     		mov	r4, r0
 4832              	.LVL406:
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4833              		.loc 1 1230 5 is_stmt 1 view .LVU1472
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4834              		.loc 1 1230 5 view .LVU1473
 4835 000e 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4836 0012 012B     		cmp	r3, #1
 4837 0014 38D0     		beq	.L306
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4838              		.loc 1 1230 5 discriminator 2 view .LVU1474
 4839 0016 0123     		movs	r3, #1
 4840 0018 80F85430 		strb	r3, [r0, #84]
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4841              		.loc 1 1230 5 discriminator 2 view .LVU1475
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4842              		.loc 1 1233 5 discriminator 2 view .LVU1476
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4843              		.loc 1 1233 22 is_stmt 0 discriminator 2 view .LVU1477
 4844 001c FFF7FEFF 		bl	ADC_Enable
 4845              	.LVL407:
ARM GAS  /tmp/ccNlWecU.s 			page 318


1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4846              		.loc 1 1236 5 is_stmt 1 discriminator 2 view .LVU1478
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4847              		.loc 1 1236 8 is_stmt 0 discriminator 2 view .LVU1479
 4848 0020 60BB     		cbnz	r0, .L301
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4849              		.loc 1 1241 7 is_stmt 1 view .LVU1480
 4850 0022 A36D     		ldr	r3, [r4, #88]
 4851 0024 23F47063 		bic	r3, r3, #3840
 4852 0028 23F00103 		bic	r3, r3, #1
 4853 002c 43F48073 		orr	r3, r3, #256
 4854 0030 A365     		str	r3, [r4, #88]
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4855              		.loc 1 1259 7 view .LVU1481
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4856              		.loc 1 1259 11 is_stmt 0 view .LVU1482
 4857 0032 A36D     		ldr	r3, [r4, #88]
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4858              		.loc 1 1259 10 view .LVU1483
 4859 0034 13F4805F 		tst	r3, #4096
 4860 0038 1DD0     		beq	.L302
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4861              		.loc 1 1262 9 is_stmt 1 view .LVU1484
 4862 003a E36D     		ldr	r3, [r4, #92]
 4863 003c 23F00603 		bic	r3, r3, #6
 4864 0040 E365     		str	r3, [r4, #92]
 4865              	.L303:
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4866              		.loc 1 1272 7 view .LVU1485
 4867 0042 2368     		ldr	r3, [r4]
 4868 0044 1C22     		movs	r2, #28
 4869 0046 1A60     		str	r2, [r3]
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4870              		.loc 1 1277 7 view .LVU1486
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4871              		.loc 1 1277 7 view .LVU1487
 4872 0048 0023     		movs	r3, #0
 4873 004a 84F85430 		strb	r3, [r4, #84]
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4874              		.loc 1 1277 7 view .LVU1488
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4875              		.loc 1 1317 7 view .LVU1489
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4876              		.loc 1 1317 11 is_stmt 0 view .LVU1490
 4877 004e 2268     		ldr	r2, [r4]
 4878 0050 D368     		ldr	r3, [r2, #12]
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4879              		.loc 1 1317 10 view .LVU1491
 4880 0052 13F0007F 		tst	r3, #33554432
 4881 0056 05D0     		beq	.L304
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4882              		.loc 1 1319 9 is_stmt 1 view .LVU1492
 4883 0058 A36D     		ldr	r3, [r4, #88]
 4884 005a 23F44053 		bic	r3, r3, #12288
 4885 005e 43F48053 		orr	r3, r3, #4096
 4886 0062 A365     		str	r3, [r4, #88]
 4887              	.L304:
ARM GAS  /tmp/ccNlWecU.s 			page 319


1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 4888              		.loc 1 1323 7 view .LVU1493
 4889              	.LVL408:
 4890              	.LBB578:
 4891              	.LBI578:
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4892              		.loc 2 6132 22 view .LVU1494
 4893              	.LBB579:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4894              		.loc 2 6137 3 view .LVU1495
 4895 0064 9368     		ldr	r3, [r2, #8]
 4896 0066 23F00043 		bic	r3, r3, #-2147483648
 4897 006a 23F03F03 		bic	r3, r3, #63
 4898 006e 43F00403 		orr	r3, r3, #4
 4899 0072 9360     		str	r3, [r2, #8]
 4900              	.LVL409:
 4901              	.L300:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4902              		.loc 2 6137 3 is_stmt 0 view .LVU1496
 4903              	.LBE579:
 4904              	.LBE578:
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4905              		.loc 1 1339 1 view .LVU1497
 4906 0074 10BD     		pop	{r4, pc}
 4907              	.LVL410:
 4908              	.L302:
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4909              		.loc 1 1267 9 is_stmt 1 view .LVU1498
 4910 0076 0023     		movs	r3, #0
 4911 0078 E365     		str	r3, [r4, #92]
 4912 007a E2E7     		b	.L303
 4913              	.L301:
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4914              		.loc 1 1329 7 view .LVU1499
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4915              		.loc 1 1329 7 view .LVU1500
 4916 007c 0023     		movs	r3, #0
 4917 007e 84F85430 		strb	r3, [r4, #84]
 4918 0082 F7E7     		b	.L300
 4919              	.LVL411:
 4920              	.L305:
 4921              	.LCFI20:
 4922              		.cfi_def_cfa_offset 0
 4923              		.cfi_restore 4
 4924              		.cfi_restore 14
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 4925              		.loc 1 1334 20 is_stmt 0 view .LVU1501
 4926 0084 0220     		movs	r0, #2
 4927              	.LVL412:
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4928              		.loc 1 1339 1 view .LVU1502
 4929 0086 7047     		bx	lr
 4930              	.LVL413:
 4931              	.L306:
 4932              	.LCFI21:
 4933              		.cfi_def_cfa_offset 8
 4934              		.cfi_offset 4, -8
ARM GAS  /tmp/ccNlWecU.s 			page 320


 4935              		.cfi_offset 14, -4
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4936              		.loc 1 1230 5 view .LVU1503
 4937 0088 0220     		movs	r0, #2
 4938              	.LVL414:
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4939              		.loc 1 1230 5 view .LVU1504
 4940 008a F3E7     		b	.L300
 4941              		.cfi_endproc
 4942              	.LFE296:
 4944              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4945              		.align	1
 4946              		.global	HAL_ADC_Start_IT
 4947              		.syntax unified
 4948              		.thumb
 4949              		.thumb_func
 4950              		.fpu fpv4-sp-d16
 4952              	HAL_ADC_Start_IT:
 4953              	.LVL415:
 4954              	.LFB300:
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4955              		.loc 1 1729 1 is_stmt 1 view -0
 4956              		.cfi_startproc
 4957              		@ args = 0, pretend = 0, frame = 0
 4958              		@ frame_needed = 0, uses_anonymous_args = 0
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 4959              		.loc 1 1730 3 view .LVU1506
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4960              		.loc 1 1737 3 view .LVU1507
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4961              		.loc 1 1740 3 view .LVU1508
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4962              		.loc 1 1740 7 is_stmt 0 view .LVU1509
 4963 0000 0368     		ldr	r3, [r0]
 4964              	.LVL416:
 4965              	.LBB580:
 4966              	.LBI580:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 4967              		.loc 2 6168 26 is_stmt 1 view .LVU1510
 4968              	.LBB581:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4969              		.loc 2 6170 3 view .LVU1511
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4970              		.loc 2 6170 12 is_stmt 0 view .LVU1512
 4971 0002 9B68     		ldr	r3, [r3, #8]
 4972              	.LVL417:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4973              		.loc 2 6170 74 view .LVU1513
 4974 0004 13F0040F 		tst	r3, #4
 4975 0008 6ED1     		bne	.L321
 4976              	.LBE581:
 4977              	.LBE580:
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4978              		.loc 1 1729 1 view .LVU1514
 4979 000a 10B5     		push	{r4, lr}
 4980              	.LCFI22:
 4981              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccNlWecU.s 			page 321


 4982              		.cfi_offset 4, -8
 4983              		.cfi_offset 14, -4
 4984 000c 0446     		mov	r4, r0
 4985              	.LVL418:
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4986              		.loc 1 1743 5 is_stmt 1 view .LVU1515
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4987              		.loc 1 1743 5 view .LVU1516
 4988 000e 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4989 0012 012B     		cmp	r3, #1
 4990 0014 6AD0     		beq	.L322
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4991              		.loc 1 1743 5 discriminator 2 view .LVU1517
 4992 0016 0123     		movs	r3, #1
 4993 0018 80F85430 		strb	r3, [r0, #84]
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4994              		.loc 1 1743 5 discriminator 2 view .LVU1518
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4995              		.loc 1 1746 5 discriminator 2 view .LVU1519
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4996              		.loc 1 1746 22 is_stmt 0 discriminator 2 view .LVU1520
 4997 001c FFF7FEFF 		bl	ADC_Enable
 4998              	.LVL419:
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4999              		.loc 1 1749 5 is_stmt 1 discriminator 2 view .LVU1521
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5000              		.loc 1 1749 8 is_stmt 0 discriminator 2 view .LVU1522
 5001 0020 0028     		cmp	r0, #0
 5002 0022 5DD1     		bne	.L313
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5003              		.loc 1 1754 7 is_stmt 1 view .LVU1523
 5004 0024 A36D     		ldr	r3, [r4, #88]
 5005 0026 23F47063 		bic	r3, r3, #3840
 5006 002a 23F00103 		bic	r3, r3, #1
 5007 002e 43F48073 		orr	r3, r3, #256
 5008 0032 A365     		str	r3, [r4, #88]
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5009              		.loc 1 1772 7 view .LVU1524
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5010              		.loc 1 1772 16 is_stmt 0 view .LVU1525
 5011 0034 A36D     		ldr	r3, [r4, #88]
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5012              		.loc 1 1772 10 view .LVU1526
 5013 0036 13F4805F 		tst	r3, #4096
 5014 003a 3ED0     		beq	.L314
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5015              		.loc 1 1775 9 is_stmt 1 view .LVU1527
 5016 003c E36D     		ldr	r3, [r4, #92]
 5017 003e 23F00603 		bic	r3, r3, #6
 5018 0042 E365     		str	r3, [r4, #92]
 5019              	.L315:
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5020              		.loc 1 1785 7 view .LVU1528
 5021 0044 2368     		ldr	r3, [r4]
 5022 0046 1C22     		movs	r2, #28
 5023 0048 1A60     		str	r2, [r3]
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 322


 5024              		.loc 1 1790 7 view .LVU1529
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5025              		.loc 1 1790 7 view .LVU1530
 5026 004a 0023     		movs	r3, #0
 5027 004c 84F85430 		strb	r3, [r4, #84]
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5028              		.loc 1 1790 7 view .LVU1531
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5029              		.loc 1 1793 7 view .LVU1532
 5030 0050 2268     		ldr	r2, [r4]
 5031 0052 5368     		ldr	r3, [r2, #4]
 5032 0054 23F01C03 		bic	r3, r3, #28
 5033 0058 5360     		str	r3, [r2, #4]
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5034              		.loc 1 1796 7 view .LVU1533
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5035              		.loc 1 1796 25 is_stmt 0 view .LVU1534
 5036 005a 6369     		ldr	r3, [r4, #20]
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5037              		.loc 1 1796 7 view .LVU1535
 5038 005c 082B     		cmp	r3, #8
 5039 005e 2FD0     		beq	.L327
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5040              		.loc 1 1803 11 is_stmt 1 view .LVU1536
 5041 0060 2268     		ldr	r2, [r4]
 5042 0062 5368     		ldr	r3, [r2, #4]
 5043 0064 43F00403 		orr	r3, r3, #4
 5044 0068 5360     		str	r3, [r2, #4]
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5045              		.loc 1 1804 11 view .LVU1537
 5046              	.L317:
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5047              		.loc 1 1811 7 view .LVU1538
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5048              		.loc 1 1811 21 is_stmt 0 view .LVU1539
 5049 006a 636B     		ldr	r3, [r4, #52]
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5050              		.loc 1 1811 10 view .LVU1540
 5051 006c 23B9     		cbnz	r3, .L318
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5052              		.loc 1 1813 9 is_stmt 1 view .LVU1541
 5053 006e 2268     		ldr	r2, [r4]
 5054 0070 5368     		ldr	r3, [r2, #4]
 5055 0072 43F01003 		orr	r3, r3, #16
 5056 0076 5360     		str	r3, [r2, #4]
 5057              	.L318:
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5058              		.loc 1 1886 7 view .LVU1542
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5059              		.loc 1 1886 11 is_stmt 0 view .LVU1543
 5060 0078 2368     		ldr	r3, [r4]
 5061 007a DA68     		ldr	r2, [r3, #12]
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5062              		.loc 1 1886 10 view .LVU1544
 5063 007c 12F0007F 		tst	r2, #33554432
 5064 0080 11D0     		beq	.L319
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 323


 5065              		.loc 1 1888 9 is_stmt 1 view .LVU1545
 5066 0082 A26D     		ldr	r2, [r4, #88]
 5067 0084 22F44052 		bic	r2, r2, #12288
 5068 0088 42F48052 		orr	r2, r2, #4096
 5069 008c A265     		str	r2, [r4, #88]
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5070              		.loc 1 1894 9 view .LVU1546
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5071              		.loc 1 1894 27 is_stmt 0 view .LVU1547
 5072 008e 6269     		ldr	r2, [r4, #20]
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5073              		.loc 1 1894 9 view .LVU1548
 5074 0090 082A     		cmp	r2, #8
 5075 0092 1BD0     		beq	.L328
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5076              		.loc 1 1902 13 is_stmt 1 view .LVU1549
 5077 0094 5A68     		ldr	r2, [r3, #4]
 5078 0096 22F04002 		bic	r2, r2, #64
 5079 009a 5A60     		str	r2, [r3, #4]
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 5080              		.loc 1 1903 13 view .LVU1550
 5081 009c 2268     		ldr	r2, [r4]
 5082 009e 5368     		ldr	r3, [r2, #4]
 5083 00a0 43F02003 		orr	r3, r3, #32
 5084 00a4 5360     		str	r3, [r2, #4]
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 5085              		.loc 1 1904 13 view .LVU1551
 5086              	.L319:
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 5087              		.loc 1 1909 7 view .LVU1552
 5088 00a6 2268     		ldr	r2, [r4]
 5089              	.LVL420:
 5090              	.LBB582:
 5091              	.LBI582:
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 5092              		.loc 2 6132 22 view .LVU1553
 5093              	.LBB583:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5094              		.loc 2 6137 3 view .LVU1554
 5095 00a8 9368     		ldr	r3, [r2, #8]
 5096 00aa 23F00043 		bic	r3, r3, #-2147483648
 5097 00ae 23F03F03 		bic	r3, r3, #63
 5098 00b2 43F00403 		orr	r3, r3, #4
 5099 00b6 9360     		str	r3, [r2, #8]
 5100              	.LVL421:
 5101              	.L312:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5102              		.loc 2 6137 3 is_stmt 0 view .LVU1555
 5103              	.LBE583:
 5104              	.LBE582:
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5105              		.loc 1 1926 1 view .LVU1556
 5106 00b8 10BD     		pop	{r4, pc}
 5107              	.LVL422:
 5108              	.L314:
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5109              		.loc 1 1780 9 is_stmt 1 view .LVU1557
ARM GAS  /tmp/ccNlWecU.s 			page 324


 5110 00ba 0023     		movs	r3, #0
 5111 00bc E365     		str	r3, [r4, #92]
 5112 00be C1E7     		b	.L315
 5113              	.L327:
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5114              		.loc 1 1799 11 view .LVU1558
 5115 00c0 2268     		ldr	r2, [r4]
 5116 00c2 5368     		ldr	r3, [r2, #4]
 5117 00c4 43F00803 		orr	r3, r3, #8
 5118 00c8 5360     		str	r3, [r2, #4]
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 5119              		.loc 1 1800 11 view .LVU1559
 5120 00ca CEE7     		b	.L317
 5121              	.L328:
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5122              		.loc 1 1897 13 view .LVU1560
 5123 00cc 5A68     		ldr	r2, [r3, #4]
 5124 00ce 22F02002 		bic	r2, r2, #32
 5125 00d2 5A60     		str	r2, [r3, #4]
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 5126              		.loc 1 1898 13 view .LVU1561
 5127 00d4 2268     		ldr	r2, [r4]
 5128 00d6 5368     		ldr	r3, [r2, #4]
 5129 00d8 43F04003 		orr	r3, r3, #64
 5130 00dc 5360     		str	r3, [r2, #4]
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
 5131              		.loc 1 1899 13 view .LVU1562
 5132 00de E2E7     		b	.L319
 5133              	.L313:
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5134              		.loc 1 1915 7 view .LVU1563
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5135              		.loc 1 1915 7 view .LVU1564
 5136 00e0 0023     		movs	r3, #0
 5137 00e2 84F85430 		strb	r3, [r4, #84]
 5138 00e6 E7E7     		b	.L312
 5139              	.LVL423:
 5140              	.L321:
 5141              	.LCFI23:
 5142              		.cfi_def_cfa_offset 0
 5143              		.cfi_restore 4
 5144              		.cfi_restore 14
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5145              		.loc 1 1921 20 is_stmt 0 view .LVU1565
 5146 00e8 0220     		movs	r0, #2
 5147              	.LVL424:
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5148              		.loc 1 1926 1 view .LVU1566
 5149 00ea 7047     		bx	lr
 5150              	.LVL425:
 5151              	.L322:
 5152              	.LCFI24:
 5153              		.cfi_def_cfa_offset 8
 5154              		.cfi_offset 4, -8
 5155              		.cfi_offset 14, -4
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5156              		.loc 1 1743 5 view .LVU1567
ARM GAS  /tmp/ccNlWecU.s 			page 325


 5157 00ec 0220     		movs	r0, #2
 5158              	.LVL426:
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5159              		.loc 1 1743 5 view .LVU1568
 5160 00ee E3E7     		b	.L312
 5161              		.cfi_endproc
 5162              	.LFE300:
 5164              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 5165              		.align	1
 5166              		.global	HAL_ADC_Start_DMA
 5167              		.syntax unified
 5168              		.thumb
 5169              		.thumb_func
 5170              		.fpu fpv4-sp-d16
 5172              	HAL_ADC_Start_DMA:
 5173              	.LVL427:
 5174              	.LFB302:
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5175              		.loc 1 1989 1 is_stmt 1 view -0
 5176              		.cfi_startproc
 5177              		@ args = 0, pretend = 0, frame = 0
 5178              		@ frame_needed = 0, uses_anonymous_args = 0
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 5179              		.loc 1 1990 3 view .LVU1570
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5180              		.loc 1 1996 3 view .LVU1571
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5181              		.loc 1 1999 3 view .LVU1572
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5182              		.loc 1 1999 7 is_stmt 0 view .LVU1573
 5183 0000 0368     		ldr	r3, [r0]
 5184              	.LVL428:
 5185              	.LBB584:
 5186              	.LBI584:
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 5187              		.loc 2 6168 26 is_stmt 1 view .LVU1574
 5188              	.LBB585:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5189              		.loc 2 6170 3 view .LVU1575
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5190              		.loc 2 6170 12 is_stmt 0 view .LVU1576
 5191 0002 9B68     		ldr	r3, [r3, #8]
 5192              	.LVL429:
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5193              		.loc 2 6170 74 view .LVU1577
 5194 0004 13F0040F 		tst	r3, #4
 5195 0008 4FD1     		bne	.L334
 5196              	.LBE585:
 5197              	.LBE584:
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5198              		.loc 1 1989 1 view .LVU1578
 5199 000a 70B5     		push	{r4, r5, r6, lr}
 5200              	.LCFI25:
 5201              		.cfi_def_cfa_offset 16
 5202              		.cfi_offset 4, -16
 5203              		.cfi_offset 5, -12
 5204              		.cfi_offset 6, -8
ARM GAS  /tmp/ccNlWecU.s 			page 326


 5205              		.cfi_offset 14, -4
 5206 000c 0446     		mov	r4, r0
 5207 000e 0E46     		mov	r6, r1
 5208 0010 1546     		mov	r5, r2
 5209              	.LVL430:
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5210              		.loc 1 2002 5 is_stmt 1 view .LVU1579
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5211              		.loc 1 2002 5 view .LVU1580
 5212 0012 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 5213 0016 012B     		cmp	r3, #1
 5214 0018 49D0     		beq	.L335
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5215              		.loc 1 2002 5 discriminator 2 view .LVU1581
 5216 001a 0123     		movs	r3, #1
 5217 001c 80F85430 		strb	r3, [r0, #84]
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5218              		.loc 1 2002 5 discriminator 2 view .LVU1582
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5219              		.loc 1 2014 7 discriminator 2 view .LVU1583
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5220              		.loc 1 2014 24 is_stmt 0 discriminator 2 view .LVU1584
 5221 0020 FFF7FEFF 		bl	ADC_Enable
 5222              	.LVL431:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5223              		.loc 1 2017 7 is_stmt 1 discriminator 2 view .LVU1585
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5224              		.loc 1 2017 10 is_stmt 0 discriminator 2 view .LVU1586
 5225 0024 0028     		cmp	r0, #0
 5226 0026 3CD1     		bne	.L331
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5227              		.loc 1 2022 9 is_stmt 1 view .LVU1587
 5228 0028 A36D     		ldr	r3, [r4, #88]
 5229 002a 23F47063 		bic	r3, r3, #3840
 5230 002e 23F00103 		bic	r3, r3, #1
 5231 0032 43F48073 		orr	r3, r3, #256
 5232 0036 A365     		str	r3, [r4, #88]
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5233              		.loc 1 2039 9 view .LVU1588
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5234              		.loc 1 2039 18 is_stmt 0 view .LVU1589
 5235 0038 A36D     		ldr	r3, [r4, #88]
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5236              		.loc 1 2039 12 view .LVU1590
 5237 003a 13F4805F 		tst	r3, #4096
 5238 003e 2DD0     		beq	.L332
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 5239              		.loc 1 2042 11 is_stmt 1 view .LVU1591
 5240 0040 E36D     		ldr	r3, [r4, #92]
 5241 0042 23F00603 		bic	r3, r3, #6
 5242 0046 E365     		str	r3, [r4, #92]
 5243              	.L333:
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5244              		.loc 1 2051 9 view .LVU1592
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5245              		.loc 1 2051 13 is_stmt 0 view .LVU1593
 5246 0048 236D     		ldr	r3, [r4, #80]
ARM GAS  /tmp/ccNlWecU.s 			page 327


2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5247              		.loc 1 2051 44 view .LVU1594
 5248 004a 1A4A     		ldr	r2, .L340
 5249 004c DA62     		str	r2, [r3, #44]
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5250              		.loc 1 2054 9 is_stmt 1 view .LVU1595
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5251              		.loc 1 2054 13 is_stmt 0 view .LVU1596
 5252 004e 236D     		ldr	r3, [r4, #80]
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5253              		.loc 1 2054 48 view .LVU1597
 5254 0050 194A     		ldr	r2, .L340+4
 5255 0052 1A63     		str	r2, [r3, #48]
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5256              		.loc 1 2057 9 is_stmt 1 view .LVU1598
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5257              		.loc 1 2057 13 is_stmt 0 view .LVU1599
 5258 0054 236D     		ldr	r3, [r4, #80]
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5259              		.loc 1 2057 45 view .LVU1600
 5260 0056 194A     		ldr	r2, .L340+8
 5261 0058 5A63     		str	r2, [r3, #52]
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5262              		.loc 1 2066 9 is_stmt 1 view .LVU1601
 5263 005a 2368     		ldr	r3, [r4]
 5264 005c 1C22     		movs	r2, #28
 5265 005e 1A60     		str	r2, [r3]
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5266              		.loc 1 2071 9 view .LVU1602
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5267              		.loc 1 2071 9 view .LVU1603
 5268 0060 0023     		movs	r3, #0
 5269 0062 84F85430 		strb	r3, [r4, #84]
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5270              		.loc 1 2071 9 view .LVU1604
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5271              		.loc 1 2076 9 view .LVU1605
 5272 0066 2268     		ldr	r2, [r4]
 5273 0068 5368     		ldr	r3, [r2, #4]
 5274 006a 43F01003 		orr	r3, r3, #16
 5275 006e 5360     		str	r3, [r2, #4]
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5276              		.loc 1 2079 9 view .LVU1606
 5277 0070 2268     		ldr	r2, [r4]
 5278 0072 D368     		ldr	r3, [r2, #12]
 5279 0074 43F00103 		orr	r3, r3, #1
 5280 0078 D360     		str	r3, [r2, #12]
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5281              		.loc 1 2082 9 view .LVU1607
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5282              		.loc 1 2082 76 is_stmt 0 view .LVU1608
 5283 007a 2168     		ldr	r1, [r4]
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5284              		.loc 1 2082 26 view .LVU1609
 5285 007c 2B46     		mov	r3, r5
 5286 007e 3246     		mov	r2, r6
 5287 0080 4031     		adds	r1, r1, #64
ARM GAS  /tmp/ccNlWecU.s 			page 328


 5288 0082 206D     		ldr	r0, [r4, #80]
 5289              	.LVL432:
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5290              		.loc 1 2082 26 view .LVU1610
 5291 0084 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5292              	.LVL433:
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5293              		.loc 1 2089 9 is_stmt 1 view .LVU1611
 5294 0088 2268     		ldr	r2, [r4]
 5295              	.LVL434:
 5296              	.LBB586:
 5297              	.LBI586:
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 5298              		.loc 2 6132 22 view .LVU1612
 5299              	.LBB587:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5300              		.loc 2 6137 3 view .LVU1613
 5301 008a 9368     		ldr	r3, [r2, #8]
 5302 008c 23F00043 		bic	r3, r3, #-2147483648
 5303 0090 23F03F03 		bic	r3, r3, #63
 5304 0094 43F00403 		orr	r3, r3, #4
 5305 0098 9360     		str	r3, [r2, #8]
 5306              	.LVL435:
 5307              	.L330:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5308              		.loc 2 6137 3 is_stmt 0 view .LVU1614
 5309              	.LBE587:
 5310              	.LBE586:
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5311              		.loc 1 2114 1 view .LVU1615
 5312 009a 70BD     		pop	{r4, r5, r6, pc}
 5313              	.LVL436:
 5314              	.L332:
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 5315              		.loc 1 2047 11 is_stmt 1 view .LVU1616
 5316 009c 0023     		movs	r3, #0
 5317 009e E365     		str	r3, [r4, #92]
 5318 00a0 D2E7     		b	.L333
 5319              	.L331:
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5320              		.loc 1 2094 9 view .LVU1617
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5321              		.loc 1 2094 9 view .LVU1618
 5322 00a2 0023     		movs	r3, #0
 5323 00a4 84F85430 		strb	r3, [r4, #84]
 5324 00a8 F7E7     		b	.L330
 5325              	.LVL437:
 5326              	.L334:
 5327              	.LCFI26:
 5328              		.cfi_def_cfa_offset 0
 5329              		.cfi_restore 4
 5330              		.cfi_restore 5
 5331              		.cfi_restore 6
 5332              		.cfi_restore 14
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5333              		.loc 1 2109 20 is_stmt 0 view .LVU1619
 5334 00aa 0220     		movs	r0, #2
ARM GAS  /tmp/ccNlWecU.s 			page 329


 5335              	.LVL438:
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5336              		.loc 1 2114 1 view .LVU1620
 5337 00ac 7047     		bx	lr
 5338              	.LVL439:
 5339              	.L335:
 5340              	.LCFI27:
 5341              		.cfi_def_cfa_offset 16
 5342              		.cfi_offset 4, -16
 5343              		.cfi_offset 5, -12
 5344              		.cfi_offset 6, -8
 5345              		.cfi_offset 14, -4
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5346              		.loc 1 2002 5 view .LVU1621
 5347 00ae 0220     		movs	r0, #2
 5348              	.LVL440:
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5349              		.loc 1 2002 5 view .LVU1622
 5350 00b0 F3E7     		b	.L330
 5351              	.L341:
 5352 00b2 00BF     		.align	2
 5353              	.L340:
 5354 00b4 00000000 		.word	ADC_DMAConvCplt
 5355 00b8 00000000 		.word	ADC_DMAHalfConvCplt
 5356 00bc 00000000 		.word	ADC_DMAError
 5357              		.cfi_endproc
 5358              	.LFE302:
 5360              		.section	.text.ADC_Disable,"ax",%progbits
 5361              		.align	1
 5362              		.global	ADC_Disable
 5363              		.syntax unified
 5364              		.thumb
 5365              		.thumb_func
 5366              		.fpu fpv4-sp-d16
 5368              	ADC_Disable:
 5369              	.LVL441:
 5370              	.LFB316:
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 5371              		.loc 1 3451 1 is_stmt 1 view -0
 5372              		.cfi_startproc
 5373              		@ args = 0, pretend = 0, frame = 0
 5374              		@ frame_needed = 0, uses_anonymous_args = 0
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 5375              		.loc 1 3451 1 is_stmt 0 view .LVU1624
 5376 0000 38B5     		push	{r3, r4, r5, lr}
 5377              	.LCFI28:
 5378              		.cfi_def_cfa_offset 16
 5379              		.cfi_offset 3, -16
 5380              		.cfi_offset 4, -12
 5381              		.cfi_offset 5, -8
 5382              		.cfi_offset 14, -4
 5383 0002 0446     		mov	r4, r0
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 5384              		.loc 1 3452 3 is_stmt 1 view .LVU1625
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5385              		.loc 1 3453 3 view .LVU1626
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 330


 5386              		.loc 1 3453 48 is_stmt 0 view .LVU1627
 5387 0004 0268     		ldr	r2, [r0]
 5388              	.LVL442:
 5389              	.LBB588:
 5390              	.LBI588:
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 5391              		.loc 2 6057 26 is_stmt 1 view .LVU1628
 5392              	.LBB589:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5393              		.loc 2 6059 3 view .LVU1629
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5394              		.loc 2 6059 12 is_stmt 0 view .LVU1630
 5395 0006 9368     		ldr	r3, [r2, #8]
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5396              		.loc 2 6059 70 view .LVU1631
 5397 0008 13F00203 		ands	r3, r3, #2
 5398 000c 00D0     		beq	.L343
 5399 000e 0123     		movs	r3, #1
 5400              	.L343:
 5401              	.LVL443:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5402              		.loc 2 6059 70 view .LVU1632
 5403              	.LBE589:
 5404              	.LBE588:
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5405              		.loc 1 3458 3 is_stmt 1 view .LVU1633
 5406              	.LBB590:
 5407              	.LBI590:
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 5408              		.loc 2 6046 26 view .LVU1634
 5409              	.LBB591:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5410              		.loc 2 6048 3 view .LVU1635
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5411              		.loc 2 6048 12 is_stmt 0 view .LVU1636
 5412 0010 9168     		ldr	r1, [r2, #8]
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5413              		.loc 2 6048 68 view .LVU1637
 5414 0012 11F0010F 		tst	r1, #1
 5415 0016 34D0     		beq	.L348
 5416              	.LVL444:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5417              		.loc 2 6048 68 view .LVU1638
 5418              	.LBE591:
 5419              	.LBE590:
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 5420              		.loc 1 3459 7 view .LVU1639
 5421 0018 002B     		cmp	r3, #0
 5422 001a 34D1     		bne	.L349
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5423              		.loc 1 3463 5 is_stmt 1 view .LVU1640
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5424              		.loc 1 3463 24 is_stmt 0 view .LVU1641
 5425 001c 9368     		ldr	r3, [r2, #8]
 5426              	.LVL445:
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5427              		.loc 1 3463 29 view .LVU1642
ARM GAS  /tmp/ccNlWecU.s 			page 331


 5428 001e 03F00D03 		and	r3, r3, #13
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5429              		.loc 1 3463 8 view .LVU1643
 5430 0022 012B     		cmp	r3, #1
 5431 0024 09D0     		beq	.L351
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5432              		.loc 1 3472 7 is_stmt 1 view .LVU1644
 5433 0026 A36D     		ldr	r3, [r4, #88]
 5434 0028 43F01003 		orr	r3, r3, #16
 5435 002c A365     		str	r3, [r4, #88]
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5436              		.loc 1 3475 7 view .LVU1645
 5437 002e E36D     		ldr	r3, [r4, #92]
 5438 0030 43F00103 		orr	r3, r3, #1
 5439 0034 E365     		str	r3, [r4, #92]
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5440              		.loc 1 3477 7 view .LVU1646
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5441              		.loc 1 3477 14 is_stmt 0 view .LVU1647
 5442 0036 0120     		movs	r0, #1
 5443              	.LVL446:
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5444              		.loc 1 3477 14 view .LVU1648
 5445 0038 24E0     		b	.L344
 5446              	.LVL447:
 5447              	.L351:
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 5448              		.loc 1 3466 7 is_stmt 1 view .LVU1649
 5449              	.LBB592:
 5450              	.LBI592:
6027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 5451              		.loc 2 6027 22 view .LVU1650
 5452              	.LBB593:
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5453              		.loc 2 6032 3 view .LVU1651
 5454 003a 9368     		ldr	r3, [r2, #8]
 5455 003c 23F00043 		bic	r3, r3, #-2147483648
 5456 0040 23F03F03 		bic	r3, r3, #63
 5457 0044 43F00203 		orr	r3, r3, #2
 5458 0048 9360     		str	r3, [r2, #8]
 5459              	.LVL448:
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5460              		.loc 2 6032 3 is_stmt 0 view .LVU1652
 5461              	.LBE593:
 5462              	.LBE592:
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5463              		.loc 1 3467 7 is_stmt 1 view .LVU1653
 5464 004a 2368     		ldr	r3, [r4]
 5465 004c 0322     		movs	r2, #3
 5466 004e 1A60     		str	r2, [r3]
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5467              		.loc 1 3482 5 view .LVU1654
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5468              		.loc 1 3482 17 is_stmt 0 view .LVU1655
 5469 0050 FFF7FEFF 		bl	HAL_GetTick
 5470              	.LVL449:
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 332


 5471              		.loc 1 3482 17 view .LVU1656
 5472 0054 0546     		mov	r5, r0
 5473              	.LVL450:
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5474              		.loc 1 3484 5 is_stmt 1 view .LVU1657
 5475              	.L346:
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5476              		.loc 1 3484 11 view .LVU1658
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5477              		.loc 1 3484 17 is_stmt 0 view .LVU1659
 5478 0056 2368     		ldr	r3, [r4]
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5479              		.loc 1 3484 27 view .LVU1660
 5480 0058 9B68     		ldr	r3, [r3, #8]
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5481              		.loc 1 3484 11 view .LVU1661
 5482 005a 13F0010F 		tst	r3, #1
 5483 005e 0ED0     		beq	.L352
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5484              		.loc 1 3486 7 is_stmt 1 view .LVU1662
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5485              		.loc 1 3486 12 is_stmt 0 view .LVU1663
 5486 0060 FFF7FEFF 		bl	HAL_GetTick
 5487              	.LVL451:
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5488              		.loc 1 3486 26 view .LVU1664
 5489 0064 401B     		subs	r0, r0, r5
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5490              		.loc 1 3486 10 view .LVU1665
 5491 0066 0228     		cmp	r0, #2
 5492 0068 F5D9     		bls	.L346
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5493              		.loc 1 3489 9 is_stmt 1 view .LVU1666
 5494 006a A36D     		ldr	r3, [r4, #88]
 5495 006c 43F01003 		orr	r3, r3, #16
 5496 0070 A365     		str	r3, [r4, #88]
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5497              		.loc 1 3492 9 view .LVU1667
 5498 0072 E36D     		ldr	r3, [r4, #92]
 5499 0074 43F00103 		orr	r3, r3, #1
 5500 0078 E365     		str	r3, [r4, #92]
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5501              		.loc 1 3494 9 view .LVU1668
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5502              		.loc 1 3494 16 is_stmt 0 view .LVU1669
 5503 007a 0120     		movs	r0, #1
 5504 007c 02E0     		b	.L344
 5505              	.L352:
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5506              		.loc 1 3500 10 view .LVU1670
 5507 007e 0020     		movs	r0, #0
 5508 0080 00E0     		b	.L344
 5509              	.LVL452:
 5510              	.L348:
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5511              		.loc 1 3500 10 view .LVU1671
 5512 0082 0020     		movs	r0, #0
ARM GAS  /tmp/ccNlWecU.s 			page 333


 5513              	.LVL453:
 5514              	.L344:
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5515              		.loc 1 3501 1 view .LVU1672
 5516 0084 38BD     		pop	{r3, r4, r5, pc}
 5517              	.LVL454:
 5518              	.L349:
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5519              		.loc 1 3500 10 view .LVU1673
 5520 0086 0020     		movs	r0, #0
 5521              	.LVL455:
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5522              		.loc 1 3500 10 view .LVU1674
 5523 0088 FCE7     		b	.L344
 5524              		.cfi_endproc
 5525              	.LFE316:
 5527              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5528              		.align	1
 5529              		.global	HAL_ADC_DeInit
 5530              		.syntax unified
 5531              		.thumb
 5532              		.thumb_func
 5533              		.fpu fpv4-sp-d16
 5535              	HAL_ADC_DeInit:
 5536              	.LVL456:
 5537              	.LFB293:
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5538              		.loc 1 707 1 is_stmt 1 view -0
 5539              		.cfi_startproc
 5540              		@ args = 0, pretend = 0, frame = 0
 5541              		@ frame_needed = 0, uses_anonymous_args = 0
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5542              		.loc 1 707 1 is_stmt 0 view .LVU1676
 5543 0000 38B5     		push	{r3, r4, r5, lr}
 5544              	.LCFI29:
 5545              		.cfi_def_cfa_offset 16
 5546              		.cfi_offset 3, -16
 5547              		.cfi_offset 4, -12
 5548              		.cfi_offset 5, -8
 5549              		.cfi_offset 14, -4
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5550              		.loc 1 708 3 is_stmt 1 view .LVU1677
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5551              		.loc 1 711 3 view .LVU1678
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5552              		.loc 1 711 6 is_stmt 0 view .LVU1679
 5553 0002 0028     		cmp	r0, #0
 5554 0004 00F0B480 		beq	.L357
 5555 0008 0446     		mov	r4, r0
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5556              		.loc 1 717 3 is_stmt 1 view .LVU1680
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5557              		.loc 1 720 3 view .LVU1681
 5558 000a 836D     		ldr	r3, [r0, #88]
 5559 000c 43F00203 		orr	r3, r3, #2
 5560 0010 8365     		str	r3, [r0, #88]
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 334


 5561              		.loc 1 723 3 view .LVU1682
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5562              		.loc 1 723 20 is_stmt 0 view .LVU1683
 5563 0012 0321     		movs	r1, #3
 5564 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5565              	.LVL457:
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5566              		.loc 1 731 3 is_stmt 1 view .LVU1684
 5567 0018 2268     		ldr	r2, [r4]
 5568 001a D368     		ldr	r3, [r2, #12]
 5569 001c 43F40013 		orr	r3, r3, #2097152
 5570 0020 D360     		str	r3, [r2, #12]
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5571              		.loc 1 734 3 view .LVU1685
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5572              		.loc 1 734 6 is_stmt 0 view .LVU1686
 5573 0022 0546     		mov	r5, r0
 5574 0024 0028     		cmp	r0, #0
 5575 0026 00F09980 		beq	.L359
 5576              	.L355:
 5577              	.LVL458:
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5578              		.loc 1 755 3 is_stmt 1 view .LVU1687
 5579 002a 2268     		ldr	r2, [r4]
 5580 002c 5368     		ldr	r3, [r2, #4]
 5581 002e 23F4FF63 		bic	r3, r3, #2040
 5582 0032 23F00703 		bic	r3, r3, #7
 5583 0036 5360     		str	r3, [r2, #4]
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5584              		.loc 1 762 3 view .LVU1688
 5585 0038 2368     		ldr	r3, [r4]
 5586 003a 40F2FF72 		movw	r2, #2047
 5587 003e 1A60     		str	r2, [r3]
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5588              		.loc 1 773 3 view .LVU1689
 5589 0040 2268     		ldr	r2, [r4]
 5590 0042 9368     		ldr	r3, [r2, #8]
 5591 0044 23F0A043 		bic	r3, r3, #1342177280
 5592 0048 9360     		str	r3, [r2, #8]
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5593              		.loc 1 774 3 view .LVU1690
 5594 004a 2268     		ldr	r2, [r4]
 5595 004c 9368     		ldr	r3, [r2, #8]
 5596 004e 43F00053 		orr	r3, r3, #536870912
 5597 0052 9360     		str	r3, [r2, #8]
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5598              		.loc 1 777 3 view .LVU1691
 5599 0054 2268     		ldr	r2, [r4]
 5600 0056 D368     		ldr	r3, [r2, #12]
 5601 0058 03F08023 		and	r3, r3, #-2147450880
 5602 005c D360     		str	r3, [r2, #12]
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5603              		.loc 1 778 3 view .LVU1692
 5604 005e 2268     		ldr	r2, [r4]
 5605 0060 D368     		ldr	r3, [r2, #12]
 5606 0062 43F00043 		orr	r3, r3, #-2147483648
 5607 0066 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccNlWecU.s 			page 335


 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5608              		.loc 1 781 3 view .LVU1693
 5609 0068 2268     		ldr	r2, [r4]
 5610 006a 1369     		ldr	r3, [r2, #16]
 5611 006c 23F4FF63 		bic	r3, r3, #2040
 5612 0070 23F00703 		bic	r3, r3, #7
 5613 0074 1361     		str	r3, [r2, #16]
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5614              		.loc 1 785 3 view .LVU1694
 5615 0076 2268     		ldr	r2, [r4]
 5616 0078 5369     		ldr	r3, [r2, #20]
 5617 007a 03F08043 		and	r3, r3, #1073741824
 5618 007e 5361     		str	r3, [r2, #20]
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5619              		.loc 1 788 3 view .LVU1695
 5620 0080 2268     		ldr	r2, [r4]
 5621 0082 9369     		ldr	r3, [r2, #24]
 5622 0084 03F07843 		and	r3, r3, #-134217728
 5623 0088 9361     		str	r3, [r2, #24]
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5624              		.loc 1 793 3 view .LVU1696
 5625 008a 2268     		ldr	r2, [r4]
 5626 008c 136A     		ldr	r3, [r2, #32]
 5627 008e 03F0F023 		and	r3, r3, #-268374016
 5628 0092 1362     		str	r3, [r2, #32]
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5629              		.loc 1 796 3 view .LVU1697
 5630 0094 2268     		ldr	r2, [r4]
 5631 0096 536A     		ldr	r3, [r2, #36]
 5632 0098 03F0FF23 		and	r3, r3, #-16711936
 5633 009c 5362     		str	r3, [r2, #36]
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5634              		.loc 1 799 3 view .LVU1698
 5635 009e 2268     		ldr	r2, [r4]
 5636 00a0 936A     		ldr	r3, [r2, #40]
 5637 00a2 03F0FF23 		and	r3, r3, #-16711936
 5638 00a6 9362     		str	r3, [r2, #40]
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5639              		.loc 1 802 3 view .LVU1699
 5640 00a8 2268     		ldr	r2, [r4]
 5641 00aa 116B     		ldr	r1, [r2, #48]
 5642 00ac 314B     		ldr	r3, .L360
 5643 00ae 0B40     		ands	r3, r3, r1
 5644 00b0 1363     		str	r3, [r2, #48]
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5645              		.loc 1 806 3 view .LVU1700
 5646 00b2 2368     		ldr	r3, [r4]
 5647 00b4 5A6B     		ldr	r2, [r3, #52]
 5648 00b6 3049     		ldr	r1, .L360+4
 5649 00b8 0A40     		ands	r2, r2, r1
 5650 00ba 5A63     		str	r2, [r3, #52]
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5651              		.loc 1 810 3 view .LVU1701
 5652 00bc 2268     		ldr	r2, [r4]
 5653 00be 936B     		ldr	r3, [r2, #56]
 5654 00c0 0B40     		ands	r3, r3, r1
 5655 00c2 9363     		str	r3, [r2, #56]
ARM GAS  /tmp/ccNlWecU.s 			page 336


 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5656              		.loc 1 814 3 view .LVU1702
 5657 00c4 2268     		ldr	r2, [r4]
 5658 00c6 D36B     		ldr	r3, [r2, #60]
 5659 00c8 23F4FB63 		bic	r3, r3, #2008
 5660 00cc 23F00703 		bic	r3, r3, #7
 5661 00d0 D363     		str	r3, [r2, #60]
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 5662              		.loc 1 822 3 view .LVU1703
 5663 00d2 2168     		ldr	r1, [r4]
 5664 00d4 0A6E     		ldr	r2, [r1, #96]
 5665 00d6 294B     		ldr	r3, .L360+8
 5666 00d8 1A40     		ands	r2, r2, r3
 5667 00da 0A66     		str	r2, [r1, #96]
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 5668              		.loc 1 824 3 view .LVU1704
 5669 00dc 2168     		ldr	r1, [r4]
 5670 00de 4A6E     		ldr	r2, [r1, #100]
 5671 00e0 1A40     		ands	r2, r2, r3
 5672 00e2 4A66     		str	r2, [r1, #100]
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 5673              		.loc 1 826 3 view .LVU1705
 5674 00e4 2168     		ldr	r1, [r4]
 5675 00e6 8A6E     		ldr	r2, [r1, #104]
 5676 00e8 1A40     		ands	r2, r2, r3
 5677 00ea 8A66     		str	r2, [r1, #104]
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5678              		.loc 1 828 3 view .LVU1706
 5679 00ec 2168     		ldr	r1, [r4]
 5680 00ee CA6E     		ldr	r2, [r1, #108]
 5681 00f0 1340     		ands	r3, r3, r2
 5682 00f2 CB66     		str	r3, [r1, #108]
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5683              		.loc 1 834 3 view .LVU1707
 5684 00f4 2268     		ldr	r2, [r4]
 5685 00f6 D2F8A030 		ldr	r3, [r2, #160]
 5686 00fa DB0C     		lsrs	r3, r3, #19
 5687 00fc DB04     		lsls	r3, r3, #19
 5688 00fe C2F8A030 		str	r3, [r2, #160]
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5689              		.loc 1 837 3 view .LVU1708
 5690 0102 2268     		ldr	r2, [r4]
 5691 0104 D2F8A430 		ldr	r3, [r2, #164]
 5692 0108 DB0C     		lsrs	r3, r3, #19
 5693 010a DB04     		lsls	r3, r3, #19
 5694 010c C2F8A430 		str	r3, [r2, #164]
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5695              		.loc 1 840 3 view .LVU1709
 5696 0110 2268     		ldr	r2, [r4]
 5697 0112 D2F8B030 		ldr	r3, [r2, #176]
 5698 0116 DB0C     		lsrs	r3, r3, #19
 5699 0118 DB04     		lsls	r3, r3, #19
 5700 011a C2F8B030 		str	r3, [r2, #176]
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5701              		.loc 1 843 3 view .LVU1710
 5702 011e 2268     		ldr	r2, [r4]
 5703 0120 D2F8B430 		ldr	r3, [r2, #180]
ARM GAS  /tmp/ccNlWecU.s 			page 337


 5704 0124 23F07F13 		bic	r3, r3, #8323199
 5705 0128 C2F8B430 		str	r3, [r2, #180]
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5706              		.loc 1 850 3 view .LVU1711
 5707              	.LVL459:
 5708              	.LBB594:
 5709              	.LBI594:
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 5710              		.loc 2 6046 26 view .LVU1712
 5711              	.LBB595:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5712              		.loc 2 6048 3 view .LVU1713
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5713              		.loc 2 6048 12 is_stmt 0 view .LVU1714
 5714 012c 144B     		ldr	r3, .L360+12
 5715 012e 9B68     		ldr	r3, [r3, #8]
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5716              		.loc 2 6048 68 view .LVU1715
 5717 0130 13F0010F 		tst	r3, #1
 5718 0134 06D1     		bne	.L356
 5719              	.LVL460:
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5720              		.loc 2 6048 68 view .LVU1716
 5721              	.LBE595:
 5722              	.LBE594:
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5723              		.loc 1 859 5 is_stmt 1 view .LVU1717
 5724 0136 134A     		ldr	r2, .L360+16
 5725 0138 9368     		ldr	r3, [r2, #8]
 5726 013a 23F0FF73 		bic	r3, r3, #33423360
 5727 013e 23F48033 		bic	r3, r3, #65536
 5728 0142 9360     		str	r3, [r2, #8]
 5729              	.L356:
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 5730              		.loc 1 883 3 view .LVU1718
 5731 0144 2046     		mov	r0, r4
 5732 0146 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5733              	.LVL461:
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5734              		.loc 1 887 3 view .LVU1719
 5735 014a 0023     		movs	r3, #0
 5736 014c E365     		str	r3, [r4, #92]
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5737              		.loc 1 890 3 view .LVU1720
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5738              		.loc 1 890 38 is_stmt 0 view .LVU1721
 5739 014e 2366     		str	r3, [r4, #96]
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5740              		.loc 1 891 3 is_stmt 1 view .LVU1722
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5741              		.loc 1 891 38 is_stmt 0 view .LVU1723
 5742 0150 6366     		str	r3, [r4, #100]
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5743              		.loc 1 894 3 is_stmt 1 view .LVU1724
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5744              		.loc 1 894 15 is_stmt 0 view .LVU1725
 5745 0152 A365     		str	r3, [r4, #88]
ARM GAS  /tmp/ccNlWecU.s 			page 338


 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5746              		.loc 1 897 3 is_stmt 1 view .LVU1726
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5747              		.loc 1 897 3 view .LVU1727
 5748 0154 84F85430 		strb	r3, [r4, #84]
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5749              		.loc 1 897 3 view .LVU1728
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5750              		.loc 1 900 3 view .LVU1729
 5751              	.LVL462:
 5752              	.L354:
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5753              		.loc 1 901 1 is_stmt 0 view .LVU1730
 5754 0158 2846     		mov	r0, r5
 5755 015a 38BD     		pop	{r3, r4, r5, pc}
 5756              	.LVL463:
 5757              	.L359:
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5758              		.loc 1 737 5 is_stmt 1 view .LVU1731
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5759              		.loc 1 737 22 is_stmt 0 view .LVU1732
 5760 015c 2046     		mov	r0, r4
 5761              	.LVL464:
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5762              		.loc 1 737 22 view .LVU1733
 5763 015e FFF7FEFF 		bl	ADC_Disable
 5764              	.LVL465:
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5765              		.loc 1 740 5 is_stmt 1 view .LVU1734
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5766              		.loc 1 740 8 is_stmt 0 view .LVU1735
 5767 0162 0546     		mov	r5, r0
 5768 0164 0028     		cmp	r0, #0
 5769 0166 7FF460AF 		bne	.L355
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5770              		.loc 1 743 7 is_stmt 1 view .LVU1736
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5771              		.loc 1 743 19 is_stmt 0 view .LVU1737
 5772 016a 0123     		movs	r3, #1
 5773 016c A365     		str	r3, [r4, #88]
 5774 016e 5CE7     		b	.L355
 5775              	.LVL466:
 5776              	.L357:
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5777              		.loc 1 713 12 view .LVU1738
 5778 0170 0125     		movs	r5, #1
 5779 0172 F1E7     		b	.L354
 5780              	.L361:
 5781              		.align	2
 5782              	.L360:
 5783 0174 300882E0 		.word	-528349136
 5784 0178 200882E0 		.word	-528349152
 5785 017c 00F0FF03 		.word	67104768
 5786 0180 00000450 		.word	1342439424
 5787 0184 00030450 		.word	1342440192
 5788              		.cfi_endproc
 5789              	.LFE293:
ARM GAS  /tmp/ccNlWecU.s 			page 339


 5791              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5792              		.align	1
 5793              		.global	HAL_ADC_Stop
 5794              		.syntax unified
 5795              		.thumb
 5796              		.thumb_func
 5797              		.fpu fpv4-sp-d16
 5799              	HAL_ADC_Stop:
 5800              	.LVL467:
 5801              	.LFB297:
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5802              		.loc 1 1351 1 is_stmt 1 view -0
 5803              		.cfi_startproc
 5804              		@ args = 0, pretend = 0, frame = 0
 5805              		@ frame_needed = 0, uses_anonymous_args = 0
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5806              		.loc 1 1352 3 view .LVU1740
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5807              		.loc 1 1355 3 view .LVU1741
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5808              		.loc 1 1358 3 view .LVU1742
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5809              		.loc 1 1358 3 view .LVU1743
 5810 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 5811 0004 012B     		cmp	r3, #1
 5812 0006 1AD0     		beq	.L365
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5813              		.loc 1 1351 1 is_stmt 0 discriminator 2 view .LVU1744
 5814 0008 10B5     		push	{r4, lr}
 5815              	.LCFI30:
 5816              		.cfi_def_cfa_offset 8
 5817              		.cfi_offset 4, -8
 5818              		.cfi_offset 14, -4
 5819 000a 0446     		mov	r4, r0
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5820              		.loc 1 1358 3 is_stmt 1 discriminator 2 view .LVU1745
 5821 000c 0123     		movs	r3, #1
 5822 000e 80F85430 		strb	r3, [r0, #84]
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5823              		.loc 1 1358 3 discriminator 2 view .LVU1746
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5824              		.loc 1 1361 3 discriminator 2 view .LVU1747
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5825              		.loc 1 1361 20 is_stmt 0 discriminator 2 view .LVU1748
 5826 0012 0321     		movs	r1, #3
 5827 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5828              	.LVL468:
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5829              		.loc 1 1364 3 is_stmt 1 discriminator 2 view .LVU1749
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5830              		.loc 1 1364 6 is_stmt 0 discriminator 2 view .LVU1750
 5831 0018 18B1     		cbz	r0, .L370
 5832              	.L364:
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5833              		.loc 1 1380 3 is_stmt 1 view .LVU1751
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5834              		.loc 1 1380 3 view .LVU1752
ARM GAS  /tmp/ccNlWecU.s 			page 340


 5835 001a 0023     		movs	r3, #0
 5836 001c 84F85430 		strb	r3, [r4, #84]
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5837              		.loc 1 1380 3 view .LVU1753
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5838              		.loc 1 1383 3 view .LVU1754
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5839              		.loc 1 1384 1 is_stmt 0 view .LVU1755
 5840 0020 10BD     		pop	{r4, pc}
 5841              	.LVL469:
 5842              	.L370:
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5843              		.loc 1 1367 5 is_stmt 1 view .LVU1756
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5844              		.loc 1 1367 22 is_stmt 0 view .LVU1757
 5845 0022 2046     		mov	r0, r4
 5846              	.LVL470:
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5847              		.loc 1 1367 22 view .LVU1758
 5848 0024 FFF7FEFF 		bl	ADC_Disable
 5849              	.LVL471:
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5850              		.loc 1 1370 5 is_stmt 1 view .LVU1759
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5851              		.loc 1 1370 8 is_stmt 0 view .LVU1760
 5852 0028 0028     		cmp	r0, #0
 5853 002a F6D1     		bne	.L364
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5854              		.loc 1 1373 7 is_stmt 1 view .LVU1761
 5855 002c A36D     		ldr	r3, [r4, #88]
 5856 002e 23F48853 		bic	r3, r3, #4352
 5857 0032 23F00103 		bic	r3, r3, #1
 5858 0036 43F00103 		orr	r3, r3, #1
 5859 003a A365     		str	r3, [r4, #88]
 5860 003c EDE7     		b	.L364
 5861              	.LVL472:
 5862              	.L365:
 5863              	.LCFI31:
 5864              		.cfi_def_cfa_offset 0
 5865              		.cfi_restore 4
 5866              		.cfi_restore 14
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5867              		.loc 1 1358 3 is_stmt 0 view .LVU1762
 5868 003e 0220     		movs	r0, #2
 5869              	.LVL473:
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5870              		.loc 1 1384 1 view .LVU1763
 5871 0040 7047     		bx	lr
 5872              		.cfi_endproc
 5873              	.LFE297:
 5875              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 5876              		.align	1
 5877              		.global	HAL_ADC_Stop_IT
 5878              		.syntax unified
 5879              		.thumb
 5880              		.thumb_func
 5881              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccNlWecU.s 			page 341


 5883              	HAL_ADC_Stop_IT:
 5884              	.LVL474:
 5885              	.LFB301:
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5886              		.loc 1 1936 1 is_stmt 1 view -0
 5887              		.cfi_startproc
 5888              		@ args = 0, pretend = 0, frame = 0
 5889              		@ frame_needed = 0, uses_anonymous_args = 0
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5890              		.loc 1 1937 3 view .LVU1765
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5891              		.loc 1 1940 3 view .LVU1766
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5892              		.loc 1 1943 3 view .LVU1767
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5893              		.loc 1 1943 3 view .LVU1768
 5894 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 5895 0004 012B     		cmp	r3, #1
 5896 0006 1FD0     		beq	.L374
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5897              		.loc 1 1936 1 is_stmt 0 discriminator 2 view .LVU1769
 5898 0008 10B5     		push	{r4, lr}
 5899              	.LCFI32:
 5900              		.cfi_def_cfa_offset 8
 5901              		.cfi_offset 4, -8
 5902              		.cfi_offset 14, -4
 5903 000a 0446     		mov	r4, r0
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5904              		.loc 1 1943 3 is_stmt 1 discriminator 2 view .LVU1770
 5905 000c 0123     		movs	r3, #1
 5906 000e 80F85430 		strb	r3, [r0, #84]
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5907              		.loc 1 1943 3 discriminator 2 view .LVU1771
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5908              		.loc 1 1946 3 discriminator 2 view .LVU1772
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5909              		.loc 1 1946 20 is_stmt 0 discriminator 2 view .LVU1773
 5910 0012 0321     		movs	r1, #3
 5911 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5912              	.LVL475:
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5913              		.loc 1 1949 3 is_stmt 1 discriminator 2 view .LVU1774
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5914              		.loc 1 1949 6 is_stmt 0 discriminator 2 view .LVU1775
 5915 0018 18B1     		cbz	r0, .L379
 5916              	.L373:
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5917              		.loc 1 1969 3 is_stmt 1 view .LVU1776
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5918              		.loc 1 1969 3 view .LVU1777
 5919 001a 0023     		movs	r3, #0
 5920 001c 84F85430 		strb	r3, [r4, #84]
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5921              		.loc 1 1969 3 view .LVU1778
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5922              		.loc 1 1972 3 view .LVU1779
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccNlWecU.s 			page 342


 5923              		.loc 1 1973 1 is_stmt 0 view .LVU1780
 5924 0020 10BD     		pop	{r4, pc}
 5925              	.LVL476:
 5926              	.L379:
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5927              		.loc 1 1953 5 is_stmt 1 view .LVU1781
 5928 0022 2268     		ldr	r2, [r4]
 5929 0024 5368     		ldr	r3, [r2, #4]
 5930 0026 23F01C03 		bic	r3, r3, #28
 5931 002a 5360     		str	r3, [r2, #4]
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5932              		.loc 1 1956 5 view .LVU1782
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5933              		.loc 1 1956 22 is_stmt 0 view .LVU1783
 5934 002c 2046     		mov	r0, r4
 5935              	.LVL477:
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5936              		.loc 1 1956 22 view .LVU1784
 5937 002e FFF7FEFF 		bl	ADC_Disable
 5938              	.LVL478:
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5939              		.loc 1 1959 5 is_stmt 1 view .LVU1785
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5940              		.loc 1 1959 8 is_stmt 0 view .LVU1786
 5941 0032 0028     		cmp	r0, #0
 5942 0034 F1D1     		bne	.L373
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5943              		.loc 1 1962 7 is_stmt 1 view .LVU1787
 5944 0036 A36D     		ldr	r3, [r4, #88]
 5945 0038 23F48853 		bic	r3, r3, #4352
 5946 003c 23F00103 		bic	r3, r3, #1
 5947 0040 43F00103 		orr	r3, r3, #1
 5948 0044 A365     		str	r3, [r4, #88]
 5949 0046 E8E7     		b	.L373
 5950              	.LVL479:
 5951              	.L374:
 5952              	.LCFI33:
 5953              		.cfi_def_cfa_offset 0
 5954              		.cfi_restore 4
 5955              		.cfi_restore 14
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5956              		.loc 1 1943 3 is_stmt 0 view .LVU1788
 5957 0048 0220     		movs	r0, #2
 5958              	.LVL480:
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5959              		.loc 1 1973 1 view .LVU1789
 5960 004a 7047     		bx	lr
 5961              		.cfi_endproc
 5962              	.LFE301:
 5964              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 5965              		.align	1
 5966              		.global	HAL_ADC_Stop_DMA
 5967              		.syntax unified
 5968              		.thumb
 5969              		.thumb_func
 5970              		.fpu fpv4-sp-d16
 5972              	HAL_ADC_Stop_DMA:
ARM GAS  /tmp/ccNlWecU.s 			page 343


 5973              	.LVL481:
 5974              	.LFB303:
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5975              		.loc 1 2130 1 is_stmt 1 view -0
 5976              		.cfi_startproc
 5977              		@ args = 0, pretend = 0, frame = 0
 5978              		@ frame_needed = 0, uses_anonymous_args = 0
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5979              		.loc 1 2130 1 is_stmt 0 view .LVU1791
 5980 0000 38B5     		push	{r3, r4, r5, lr}
 5981              	.LCFI34:
 5982              		.cfi_def_cfa_offset 16
 5983              		.cfi_offset 3, -16
 5984              		.cfi_offset 4, -12
 5985              		.cfi_offset 5, -8
 5986              		.cfi_offset 14, -4
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5987              		.loc 1 2131 3 is_stmt 1 view .LVU1792
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5988              		.loc 1 2134 3 view .LVU1793
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5989              		.loc 1 2137 3 view .LVU1794
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5990              		.loc 1 2137 3 view .LVU1795
 5991 0002 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 5992 0006 012B     		cmp	r3, #1
 5993 0008 39D0     		beq	.L386
 5994 000a 0446     		mov	r4, r0
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5995              		.loc 1 2137 3 discriminator 2 view .LVU1796
 5996 000c 0123     		movs	r3, #1
 5997 000e 80F85430 		strb	r3, [r0, #84]
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5998              		.loc 1 2137 3 discriminator 2 view .LVU1797
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5999              		.loc 1 2140 3 discriminator 2 view .LVU1798
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6000              		.loc 1 2140 20 is_stmt 0 discriminator 2 view .LVU1799
 6001 0012 0321     		movs	r1, #3
 6002 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6003              	.LVL482:
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 6004              		.loc 1 2143 3 is_stmt 1 discriminator 2 view .LVU1800
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 6005              		.loc 1 2143 6 is_stmt 0 discriminator 2 view .LVU1801
 6006 0018 0546     		mov	r5, r0
 6007 001a E8B9     		cbnz	r0, .L382
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6008              		.loc 1 2146 5 is_stmt 1 view .LVU1802
 6009 001c 2268     		ldr	r2, [r4]
 6010 001e D368     		ldr	r3, [r2, #12]
 6011 0020 23F00103 		bic	r3, r3, #1
 6012 0024 D360     		str	r3, [r2, #12]
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6013              		.loc 1 2150 5 view .LVU1803
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6014              		.loc 1 2150 13 is_stmt 0 view .LVU1804
ARM GAS  /tmp/ccNlWecU.s 			page 344


 6015 0026 206D     		ldr	r0, [r4, #80]
 6016              	.LVL483:
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6017              		.loc 1 2150 25 view .LVU1805
 6018 0028 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 6019 002c DBB2     		uxtb	r3, r3
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6020              		.loc 1 2150 8 view .LVU1806
 6021 002e 022B     		cmp	r3, #2
 6022 0030 17D0     		beq	.L388
 6023              	.L383:
 6024              	.LVL484:
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6025              		.loc 1 2163 5 is_stmt 1 view .LVU1807
 6026 0032 2268     		ldr	r2, [r4]
 6027 0034 5368     		ldr	r3, [r2, #4]
 6028 0036 23F01003 		bic	r3, r3, #16
 6029 003a 5360     		str	r3, [r2, #4]
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6030              		.loc 1 2168 5 view .LVU1808
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6031              		.loc 1 2168 8 is_stmt 0 view .LVU1809
 6032 003c DDB9     		cbnz	r5, .L384
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 6033              		.loc 1 2170 7 is_stmt 1 view .LVU1810
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 6034              		.loc 1 2170 24 is_stmt 0 view .LVU1811
 6035 003e 2046     		mov	r0, r4
 6036 0040 FFF7FEFF 		bl	ADC_Disable
 6037              	.LVL485:
 6038 0044 0546     		mov	r5, r0
 6039              	.LVL486:
 6040              	.L385:
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6041              		.loc 1 2178 5 is_stmt 1 view .LVU1812
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6042              		.loc 1 2178 8 is_stmt 0 view .LVU1813
 6043 0046 3DB9     		cbnz	r5, .L382
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6044              		.loc 1 2181 7 is_stmt 1 view .LVU1814
 6045 0048 A36D     		ldr	r3, [r4, #88]
 6046 004a 23F48853 		bic	r3, r3, #4352
 6047 004e 23F00103 		bic	r3, r3, #1
 6048 0052 43F00103 		orr	r3, r3, #1
 6049 0056 A365     		str	r3, [r4, #88]
 6050              	.LVL487:
 6051              	.L382:
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6052              		.loc 1 2189 3 view .LVU1815
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6053              		.loc 1 2189 3 view .LVU1816
 6054 0058 0023     		movs	r3, #0
 6055 005a 84F85430 		strb	r3, [r4, #84]
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6056              		.loc 1 2189 3 view .LVU1817
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 6057              		.loc 1 2192 3 view .LVU1818
ARM GAS  /tmp/ccNlWecU.s 			page 345


 6058              	.LVL488:
 6059              	.L381:
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6060              		.loc 1 2193 1 is_stmt 0 view .LVU1819
 6061 005e 2846     		mov	r0, r5
 6062 0060 38BD     		pop	{r3, r4, r5, pc}
 6063              	.LVL489:
 6064              	.L388:
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6065              		.loc 1 2152 7 is_stmt 1 view .LVU1820
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6066              		.loc 1 2152 24 is_stmt 0 view .LVU1821
 6067 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 6068              	.LVL490:
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 6069              		.loc 1 2155 7 is_stmt 1 view .LVU1822
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 6070              		.loc 1 2155 10 is_stmt 0 view .LVU1823
 6071 0066 0546     		mov	r5, r0
 6072 0068 0028     		cmp	r0, #0
 6073 006a E2D0     		beq	.L383
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 6074              		.loc 1 2158 9 is_stmt 1 view .LVU1824
 6075 006c A36D     		ldr	r3, [r4, #88]
 6076 006e 43F04003 		orr	r3, r3, #64
 6077 0072 A365     		str	r3, [r4, #88]
 6078 0074 DDE7     		b	.L383
 6079              	.LVL491:
 6080              	.L384:
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 6081              		.loc 1 2174 7 view .LVU1825
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 6082              		.loc 1 2174 13 is_stmt 0 view .LVU1826
 6083 0076 2046     		mov	r0, r4
 6084 0078 FFF7FEFF 		bl	ADC_Disable
 6085              	.LVL492:
 6086 007c E3E7     		b	.L385
 6087              	.LVL493:
 6088              	.L386:
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6089              		.loc 1 2137 3 view .LVU1827
 6090 007e 0225     		movs	r5, #2
 6091 0080 EDE7     		b	.L381
 6092              		.cfi_endproc
 6093              	.LFE303:
 6095              		.text
 6096              	.Letext0:
 6097              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/machine/_default_types.h"
 6098              		.file 5 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/_stdint.h"
 6099              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 6100              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 6101              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
 6102              		.file 9 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 6103              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 6104              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 6105              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 6106              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
ARM GAS  /tmp/ccNlWecU.s 			page 346


 6107              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 6108              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
ARM GAS  /tmp/ccNlWecU.s 			page 347


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_adc.c
     /tmp/ccNlWecU.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccNlWecU.s:26     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccNlWecU.s:42     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccNlWecU.s:49     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccNlWecU.s:555    .text.HAL_ADC_Init:00000000000001c8 $d
     /tmp/ccNlWecU.s:564    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccNlWecU.s:571    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccNlWecU.s:586    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccNlWecU.s:593    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccNlWecU.s:779    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccNlWecU.s:786    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccNlWecU.s:967    .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccNlWecU.s:974    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccNlWecU.s:995    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccNlWecU.s:1002   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccNlWecU.s:1017   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccNlWecU.s:1024   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccNlWecU.s:1039   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccNlWecU.s:1046   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccNlWecU.s:1073   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccNlWecU.s:1080   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccNlWecU.s:1095   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccNlWecU.s:1102   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccNlWecU.s:1117   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccNlWecU.s:1124   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccNlWecU.s:1609   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccNlWecU.s:1616   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccNlWecU.s:1751   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccNlWecU.s:1758   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccNlWecU.s:1792   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccNlWecU.s:1799   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccNlWecU.s:1915   .text.HAL_ADC_ConfigChannel:000000000000004c $d
     /tmp/ccNlWecU.s:1919   .text.HAL_ADC_ConfigChannel:0000000000000050 $t
     /tmp/ccNlWecU.s:3059   .text.HAL_ADC_ConfigChannel:00000000000003ac $d
     /tmp/ccNlWecU.s:3080   .text.HAL_ADC_ConfigChannel:00000000000003cc $t
     /tmp/ccNlWecU.s:3344   .text.HAL_ADC_ConfigChannel:00000000000004b0 $d
     /tmp/ccNlWecU.s:3352   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccNlWecU.s:3359   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccNlWecU.s:4196   .text.HAL_ADC_AnalogWDGConfig:0000000000000324 $d
     /tmp/ccNlWecU.s:4204   .text.HAL_ADC_AnalogWDGConfig:000000000000032c $t
     /tmp/ccNlWecU.s:4240   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccNlWecU.s:4247   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccNlWecU.s:4266   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccNlWecU.s:4273   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccNlWecU.s:4292   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccNlWecU.s:4299   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccNlWecU.s:4612   .text.ADC_ConversionStop:00000000000000f4 $d
     /tmp/ccNlWecU.s:4617   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccNlWecU.s:4624   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccNlWecU.s:4787   .text.ADC_Enable:000000000000008c $d
     /tmp/ccNlWecU.s:4792   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccNlWecU.s:4799   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccNlWecU.s:4945   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccNlWecU.s:4952   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccNlWecU.s:5165   .text.HAL_ADC_Start_DMA:0000000000000000 $t
ARM GAS  /tmp/ccNlWecU.s 			page 348


     /tmp/ccNlWecU.s:5172   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccNlWecU.s:5354   .text.HAL_ADC_Start_DMA:00000000000000b4 $d
     /tmp/ccNlWecU.s:5361   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccNlWecU.s:5368   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccNlWecU.s:5528   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccNlWecU.s:5535   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccNlWecU.s:5783   .text.HAL_ADC_DeInit:0000000000000174 $d
     /tmp/ccNlWecU.s:5792   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccNlWecU.s:5799   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccNlWecU.s:5876   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccNlWecU.s:5883   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccNlWecU.s:5965   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccNlWecU.s:5972   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
