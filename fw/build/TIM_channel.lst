ARM GAS  /tmp/ccyJ5HWF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"TIM_channel.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN11TIM_channelC2EP5Timerm,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN11TIM_channelC2EP5Timerm
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN11TIM_channelC2EP5Timerm:
  27              	.LVL0:
  28              	.LFB2028:
  29              		.file 1 "alohal/timer/TIM_channel.cpp"
   1:alohal/timer/TIM_channel.cpp **** #include "TIM_channel.hpp"
   2:alohal/timer/TIM_channel.cpp **** 
   3:alohal/timer/TIM_channel.cpp **** #include "timer/timer.hpp"
   4:alohal/timer/TIM_channel.cpp **** 
   5:alohal/timer/TIM_channel.cpp **** TIM_channel::TIM_channel(Timer *parent, uint32_t address)
  30              		.loc 1 5 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB30:
   6:alohal/timer/TIM_channel.cpp ****     : _address(address), parent_timer(parent){ }
  36              		.loc 1 6 45 is_stmt 0 view .LVU1
  37 0000 0260     		str	r2, [r0]
  38 0002 0022     		movs	r2, #0
  39              	.LVL1:
  40              		.loc 1 6 45 view .LVU2
  41 0004 4260     		str	r2, [r0, #4]
  42 0006 8160     		str	r1, [r0, #8]
  43              	.LBE30:
  44              		.loc 1 6 48 view .LVU3
  45 0008 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE2028:
  49              		.global	_ZN11TIM_channelC1EP5Timerm
  50              		.thumb_set _ZN11TIM_channelC1EP5Timerm,_ZN11TIM_channelC2EP5Timerm
  51              		.section	.text._ZN11TIM_channel12PWM_GenerateEf,"ax",%progbits
  52              		.align	1
  53              		.global	_ZN11TIM_channel12PWM_GenerateEf
ARM GAS  /tmp/ccyJ5HWF.s 			page 2


  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	_ZN11TIM_channel12PWM_GenerateEf:
  60              	.LVL2:
  61              	.LFB2030:
   7:alohal/timer/TIM_channel.cpp **** 
   8:alohal/timer/TIM_channel.cpp **** 
   9:alohal/timer/TIM_channel.cpp **** int TIM_channel::PWM_Generate(float duty_cycle){
  62              		.loc 1 9 48 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              		.loc 1 9 48 is_stmt 0 view .LVU5
  68 0000 0346     		mov	r3, r0
  10:alohal/timer/TIM_channel.cpp ****     if(mode != Modes::PWM){
  69              		.loc 1 10 5 is_stmt 1 view .LVU6
  70              		.loc 1 10 8 is_stmt 0 view .LVU7
  71 0002 4068     		ldr	r0, [r0, #4]
  72              	.LVL3:
  73              		.loc 1 10 5 view .LVU8
  74 0004 0028     		cmp	r0, #0
  75 0006 48D1     		bne	.L10
  11:alohal/timer/TIM_channel.cpp ****         return -2;
  12:alohal/timer/TIM_channel.cpp ****     }
  13:alohal/timer/TIM_channel.cpp **** 
  14:alohal/timer/TIM_channel.cpp ****     if (duty_cycle > 100 or duty_cycle < 0) {
  76              		.loc 1 14 5 is_stmt 1 view .LVU9
  77 0008 DFED287A 		vldr.32	s15, .L17
  78 000c B4EEE70A 		vcmpe.f32	s0, s15
  79 0010 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  80 0014 44DC     		bgt	.L11
  81              		.loc 1 14 26 is_stmt 0 discriminator 1 view .LVU10
  82 0016 B5EEC00A 		vcmpe.f32	s0, #0
  83 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  84 001e 42D4     		bmi	.L12
  15:alohal/timer/TIM_channel.cpp ****         return -1;
  16:alohal/timer/TIM_channel.cpp ****     }
  17:alohal/timer/TIM_channel.cpp **** 
  18:alohal/timer/TIM_channel.cpp ****     uint32_t pulse_length = parent_timer->Autoreload() * (duty_cycle / 100);
  85              		.loc 1 18 5 is_stmt 1 view .LVU11
  86              		.loc 1 18 29 is_stmt 0 view .LVU12
  87 0020 9A68     		ldr	r2, [r3, #8]
  88              	.LVL4:
  89              	.LBB47:
  90              	.LBI47:
  91              		.file 2 "alohal/timer/timer.hpp"
   1:alohal/timer/timer.hpp **** /**
   2:alohal/timer/timer.hpp ****  * @file timer.hpp
   3:alohal/timer/timer.hpp ****  * @author Petr Malan√≠k (TheColonelYoung(at)gmail(dot)com)
   4:alohal/timer/timer.hpp ****  * @version 0.2
   5:alohal/timer/timer.hpp ****  * @date 01.04.2020
   6:alohal/timer/timer.hpp ****  */
   7:alohal/timer/timer.hpp **** #pragma once
   8:alohal/timer/timer.hpp **** 
ARM GAS  /tmp/ccyJ5HWF.s 			page 3


   9:alohal/timer/timer.hpp **** #include "global_includes.hpp"
  10:alohal/timer/timer.hpp **** #include "globals.hpp"
  11:alohal/timer/timer.hpp **** #include "timer/TIM_channel.hpp"
  12:alohal/timer/timer.hpp **** #include "irq/irq_handler.hpp"
  13:alohal/timer/timer.hpp **** 
  14:alohal/timer/timer.hpp **** /**
  15:alohal/timer/timer.hpp ****  * @brief   Timer have specified modes in which can be used. This modes are defined more by an usag
  16:alohal/timer/timer.hpp ****  *              structure of inner hardware.
  17:alohal/timer/timer.hpp ****  *
  18:alohal/timer/timer.hpp ****  *          Counter for IRQ count from zero (or any other value in CNT-Counter register to value of
  19:alohal/timer/timer.hpp ****  *               ARR-Auto reload register)
  20:alohal/timer/timer.hpp ****  *          When ARRpreload is enabled, new value to ARR is written after IRQ happens
  21:alohal/timer/timer.hpp ****  *          Frequency of timer input is initialized only once at mcu start-up
  22:alohal/timer/timer.hpp ****  *
  23:alohal/timer/timer.hpp ****  *                CHANNELS
  24:alohal/timer/timer.hpp ****  * TIM_CHANNEL_1                      0x00000000U
  25:alohal/timer/timer.hpp ****  * TIM_CHANNEL_2                      0x00000004U
  26:alohal/timer/timer.hpp ****  * TIM_CHANNEL_3                      0x00000008U
  27:alohal/timer/timer.hpp ****  * TIM_CHANNEL_4                      0x0000000CU
  28:alohal/timer/timer.hpp ****  * TIM_CHANNEL_ALL                    0x00000018U
  29:alohal/timer/timer.hpp ****  */
  30:alohal/timer/timer.hpp **** 
  31:alohal/timer/timer.hpp **** class Timer {
  32:alohal/timer/timer.hpp **** public:
  33:alohal/timer/timer.hpp ****     friend TIM_channel;
  34:alohal/timer/timer.hpp **** 
  35:alohal/timer/timer.hpp ****     /**
  36:alohal/timer/timer.hpp ****      * @brief   IRQ handler for timer
  37:alohal/timer/timer.hpp ****      */
  38:alohal/timer/timer.hpp ****     IRQ_handler *IRQ = new IRQ_handler();
  39:alohal/timer/timer.hpp **** 
  40:alohal/timer/timer.hpp ****     /**
  41:alohal/timer/timer.hpp ****      * @brief   Channel of timer
  42:alohal/timer/timer.hpp ****      */
  43:alohal/timer/timer.hpp ****     vector<TIM_channel> channel;
  44:alohal/timer/timer.hpp **** 
  45:alohal/timer/timer.hpp ****     /**
  46:alohal/timer/timer.hpp ****      * @brief Modes in which timer can work
  47:alohal/timer/timer.hpp ****      *
  48:alohal/timer/timer.hpp ****      *  Timer       - measuring of time
  49:alohal/timer/timer.hpp ****      *  Timer_IRQ   - set time to next IRQ event
  50:alohal/timer/timer.hpp ****      *  Counter     - counting of external inputs
  51:alohal/timer/timer.hpp ****      */
  52:alohal/timer/timer.hpp ****     enum class Modes {
  53:alohal/timer/timer.hpp ****         Timer,
  54:alohal/timer/timer.hpp ****         Timer_IRQ,
  55:alohal/timer/timer.hpp ****         Counter
  56:alohal/timer/timer.hpp ****     };
  57:alohal/timer/timer.hpp **** 
  58:alohal/timer/timer.hpp **** private:
  59:alohal/timer/timer.hpp **** 
  60:alohal/timer/timer.hpp ****     /**
  61:alohal/timer/timer.hpp ****      * @brief   Index of timer, for TIM_1 is 1
  62:alohal/timer/timer.hpp ****      */
  63:alohal/timer/timer.hpp ****     unsigned short index;
  64:alohal/timer/timer.hpp **** 
  65:alohal/timer/timer.hpp ****     /**
ARM GAS  /tmp/ccyJ5HWF.s 			page 4


  66:alohal/timer/timer.hpp ****      * @brief   Actual mode of timer
  67:alohal/timer/timer.hpp ****      */
  68:alohal/timer/timer.hpp ****     Modes mode = Modes::Timer;
  69:alohal/timer/timer.hpp **** 
  70:alohal/timer/timer.hpp ****     /**
  71:alohal/timer/timer.hpp ****      * @brief Size of timer counter in bits
  72:alohal/timer/timer.hpp ****      */
  73:alohal/timer/timer.hpp ****     uint8_t size;
  74:alohal/timer/timer.hpp **** 
  75:alohal/timer/timer.hpp ****     /**
  76:alohal/timer/timer.hpp ****      * @brief Flag if timer should optimize prescaler during every change of time period
  77:alohal/timer/timer.hpp ****      *
  78:alohal/timer/timer.hpp ****      */
  79:alohal/timer/timer.hpp ****     bool optimize = false;
  80:alohal/timer/timer.hpp **** 
  81:alohal/timer/timer.hpp ****     /**
  82:alohal/timer/timer.hpp ****      * @brief Frequency of timer clock input
  83:alohal/timer/timer.hpp ****      */
  84:alohal/timer/timer.hpp ****     uint frequency;
  85:alohal/timer/timer.hpp **** 
  86:alohal/timer/timer.hpp ****     /**
  87:alohal/timer/timer.hpp ****      * @brief   Timer of ticks (timer input) per usecond
  88:alohal/timer/timer.hpp ****      *          Initialized only at startup as frequency
  89:alohal/timer/timer.hpp ****      */
  90:alohal/timer/timer.hpp ****     double uticks;
  91:alohal/timer/timer.hpp **** 
  92:alohal/timer/timer.hpp ****     /**
  93:alohal/timer/timer.hpp ****      * @brief Handle to HAl timer structure of timer
  94:alohal/timer/timer.hpp ****      */
  95:alohal/timer/timer.hpp ****     TIM_HandleTypeDef *handler;
  96:alohal/timer/timer.hpp **** 
  97:alohal/timer/timer.hpp **** public:
  98:alohal/timer/timer.hpp **** 
  99:alohal/timer/timer.hpp ****     /**
 100:alohal/timer/timer.hpp ****      * @brief   Construct a new Timer object
 101:alohal/timer/timer.hpp ****      *          Initialize timer with channels then call rest of initialization
 102:alohal/timer/timer.hpp ****      *
 103:alohal/timer/timer.hpp ****      * @param handler       Handle to HAl timer structure of timer
 104:alohal/timer/timer.hpp ****      * @param size          Size if counter register
 105:alohal/timer/timer.hpp ****      * @param channels      Number of timer channels
 106:alohal/timer/timer.hpp ****      */
 107:alohal/timer/timer.hpp ****     Timer(unsigned short index, TIM_HandleTypeDef *handler, int size, int channels);
 108:alohal/timer/timer.hpp **** 
 109:alohal/timer/timer.hpp ****     /*  Function below are separated into section based on usability in different modes
 110:alohal/timer/timer.hpp ****         Function have effect only if are used in their mode, otherwise do nothing
 111:alohal/timer/timer.hpp ****     */
 112:alohal/timer/timer.hpp **** 
 113:alohal/timer/timer.hpp ****     const TIM_channel &operator[](int i) const{
 114:alohal/timer/timer.hpp ****         return channel[i-1];
 115:alohal/timer/timer.hpp ****     }
 116:alohal/timer/timer.hpp **** 
 117:alohal/timer/timer.hpp ****     /*  ALL MODES */
 118:alohal/timer/timer.hpp **** 
 119:alohal/timer/timer.hpp ****     /**
 120:alohal/timer/timer.hpp ****      * @brief           Set mode of timer
 121:alohal/timer/timer.hpp ****      *
 122:alohal/timer/timer.hpp ****      * @param mode      New mode of timer
ARM GAS  /tmp/ccyJ5HWF.s 			page 5


 123:alohal/timer/timer.hpp ****      */
 124:alohal/timer/timer.hpp ****     inline void Mode(Modes mode) {this->mode = mode;};
 125:alohal/timer/timer.hpp **** 
 126:alohal/timer/timer.hpp ****     /**
 127:alohal/timer/timer.hpp ****      * @brief           Return actual mode of timer
 128:alohal/timer/timer.hpp ****      *
 129:alohal/timer/timer.hpp ****      * @return Modes    Actual mode of timer
 130:alohal/timer/timer.hpp ****      */
 131:alohal/timer/timer.hpp ****     inline Modes Mode(){ return mode; };
 132:alohal/timer/timer.hpp **** 
 133:alohal/timer/timer.hpp ****     /* Function below manipulates with register of timer, probably should be private, will be? */
 134:alohal/timer/timer.hpp **** 
 135:alohal/timer/timer.hpp ****     /**
 136:alohal/timer/timer.hpp ****      * @brief           Set counter of timer to given value
 137:alohal/timer/timer.hpp ****      *
 138:alohal/timer/timer.hpp ****      * @param counter   New value for counter
 139:alohal/timer/timer.hpp ****      */
 140:alohal/timer/timer.hpp ****     inline void Counter(uint32_t counter){ handler->Instance->CNT = counter; };
 141:alohal/timer/timer.hpp **** 
 142:alohal/timer/timer.hpp ****     /**
 143:alohal/timer/timer.hpp ****      * @brief           Return actual value of counter
 144:alohal/timer/timer.hpp ****      *
 145:alohal/timer/timer.hpp ****      * @return uint32_t Counter register value
 146:alohal/timer/timer.hpp ****      */
 147:alohal/timer/timer.hpp ****     inline uint32_t Counter(){ return handler->Instance->CNT; };
 148:alohal/timer/timer.hpp **** 
 149:alohal/timer/timer.hpp ****     /**
 150:alohal/timer/timer.hpp ****      * @brief           Set prescaler of timer to given value
 151:alohal/timer/timer.hpp ****      *
 152:alohal/timer/timer.hpp ****      * @param prescaler New value for prescaler
 153:alohal/timer/timer.hpp ****      */
 154:alohal/timer/timer.hpp ****     inline void Prescaler(std::uint16_t prescaler){ handler->Instance->PSC = prescaler; };
 155:alohal/timer/timer.hpp **** 
 156:alohal/timer/timer.hpp ****     /**
 157:alohal/timer/timer.hpp ****      * @brief           Return actual value of prescaler
 158:alohal/timer/timer.hpp ****      *
 159:alohal/timer/timer.hpp ****      * @return uint16_t Prescaler register value
 160:alohal/timer/timer.hpp ****      */
 161:alohal/timer/timer.hpp ****     inline std::uint16_t Prescaler() const { return handler->Instance->PSC; };
 162:alohal/timer/timer.hpp **** 
 163:alohal/timer/timer.hpp ****     /**
 164:alohal/timer/timer.hpp ****      * @brief               Set autoreload of timer to given value
 165:alohal/timer/timer.hpp ****      *
 166:alohal/timer/timer.hpp ****      * @param autoreload    New value for autoreload
 167:alohal/timer/timer.hpp ****      */
 168:alohal/timer/timer.hpp ****     inline void Autoreload(uint32_t autoreload){ handler->Instance->ARR = autoreload; };
 169:alohal/timer/timer.hpp **** 
 170:alohal/timer/timer.hpp ****     /**
 171:alohal/timer/timer.hpp ****      * @brief           Return actual value of autoreload
 172:alohal/timer/timer.hpp ****      *
 173:alohal/timer/timer.hpp ****      * @return uint32_t Autoreload register value
 174:alohal/timer/timer.hpp ****      */
 175:alohal/timer/timer.hpp ****     inline uint32_t Autoreload() const { return handler->Instance->ARR; };
  92              		.loc 2 175 21 is_stmt 1 view .LVU13
  93              	.LBB48:
  94              		.loc 2 175 42 view .LVU14
  95              		.loc 2 175 49 is_stmt 0 view .LVU15
ARM GAS  /tmp/ccyJ5HWF.s 			page 6


  96 0022 926A     		ldr	r2, [r2, #40]
  97              	.LVL5:
  98              		.loc 2 175 58 view .LVU16
  99 0024 1268     		ldr	r2, [r2]
 100              		.loc 2 175 68 view .LVU17
 101 0026 D2ED0B7A 		vldr.32	s15, [r2, #44]	@ int
 102              	.LVL6:
 103              		.loc 2 175 68 view .LVU18
 104              	.LBE48:
 105              	.LBE47:
 106              		.loc 1 18 70 view .LVU19
 107 002a DFED206A 		vldr.32	s13, .L17
 108 002e 80EE267A 		vdiv.f32	s14, s0, s13
 109              		.loc 1 18 56 view .LVU20
 110 0032 F8EE677A 		vcvt.f32.u32	s15, s15
 111 0036 67EE877A 		vmul.f32	s15, s15, s14
 112              		.loc 1 18 75 view .LVU21
 113 003a FCEEE77A 		vcvt.u32.f32	s15, s15
 114              	.LVL7:
  19:alohal/timer/TIM_channel.cpp ****     Capture_compare(pulse_length);
 115              		.loc 1 19 5 is_stmt 1 view .LVU22
 116              	.LBB49:
 117              	.LBI49:
  20:alohal/timer/TIM_channel.cpp ****     return 0;
  21:alohal/timer/TIM_channel.cpp **** }
  22:alohal/timer/TIM_channel.cpp **** 
  23:alohal/timer/TIM_channel.cpp **** void TIM_channel::Mode(Modes mode){
  24:alohal/timer/TIM_channel.cpp ****     this->mode = mode;
  25:alohal/timer/TIM_channel.cpp **** 
  26:alohal/timer/TIM_channel.cpp ****     uint32_t new_mode = TIM_OCMODE_PWM1;
  27:alohal/timer/TIM_channel.cpp ****     switch (mode) {
  28:alohal/timer/TIM_channel.cpp ****         case Modes::PWM:
  29:alohal/timer/TIM_channel.cpp ****             new_mode = TIM_OCMODE_PWM1;
  30:alohal/timer/TIM_channel.cpp ****             break;
  31:alohal/timer/TIM_channel.cpp ****         case Modes::Toggle:
  32:alohal/timer/TIM_channel.cpp ****             new_mode = TIM_OCMODE_TOGGLE;
  33:alohal/timer/TIM_channel.cpp ****             break;
  34:alohal/timer/TIM_channel.cpp ****     }
  35:alohal/timer/TIM_channel.cpp **** 
  36:alohal/timer/TIM_channel.cpp ****     TIM_OC_InitTypeDef sConfigOC;
  37:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCMode     = new_mode;
  38:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  39:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  40:alohal/timer/TIM_channel.cpp **** 
  41:alohal/timer/TIM_channel.cpp ****     if (mode == Modes::PWM) {
  42:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_ConfigChannel(parent_timer->Handler(), &sConfigOC, _address);
  43:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
  44:alohal/timer/TIM_channel.cpp ****         HAL_TIM_OC_ConfigChannel(parent_timer->Handler(), &sConfigOC, _address);
  45:alohal/timer/TIM_channel.cpp ****     }
  46:alohal/timer/TIM_channel.cpp **** }
  47:alohal/timer/TIM_channel.cpp **** 
  48:alohal/timer/TIM_channel.cpp **** void TIM_channel::Start(){
  49:alohal/timer/TIM_channel.cpp ****     if (mode == Modes::PWM) {
  50:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Start(parent_timer->Handler(), _address);
  51:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
  52:alohal/timer/TIM_channel.cpp ****         HAL_TIM_OC_Start(parent_timer->Handler(), _address);
  53:alohal/timer/TIM_channel.cpp ****     }
ARM GAS  /tmp/ccyJ5HWF.s 			page 7


  54:alohal/timer/TIM_channel.cpp **** }
  55:alohal/timer/TIM_channel.cpp **** 
  56:alohal/timer/TIM_channel.cpp **** void TIM_channel::Stop(){
  57:alohal/timer/TIM_channel.cpp ****     if (mode == Modes::PWM) {
  58:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Stop(parent_timer->Handler(), _address);
  59:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
  60:alohal/timer/TIM_channel.cpp ****         HAL_TIM_OC_Stop(parent_timer->Handler(), _address);
  61:alohal/timer/TIM_channel.cpp ****     }
  62:alohal/timer/TIM_channel.cpp **** }
  63:alohal/timer/TIM_channel.cpp **** 
  64:alohal/timer/TIM_channel.cpp **** void TIM_channel::Start_DMA(uint32_t *address_from, uint32_t data_size){
  65:alohal/timer/TIM_channel.cpp ****     HAL_TIM_OC_Start_DMA(parent_timer->Handler(), _address, address_from, data_size);
  66:alohal/timer/TIM_channel.cpp **** }
  67:alohal/timer/TIM_channel.cpp **** 
  68:alohal/timer/TIM_channel.cpp **** uint32_t TIM_channel::Capture_compare(){
  69:alohal/timer/TIM_channel.cpp ****     return __HAL_TIM_GET_COMPARE(parent_timer->Handler(), _address);
  70:alohal/timer/TIM_channel.cpp **** }
  71:alohal/timer/TIM_channel.cpp **** 
  72:alohal/timer/TIM_channel.cpp **** void TIM_channel::Capture_compare(uint32_t capture_compare){
 118              		.loc 1 72 6 view .LVU23
 119              	.LBB50:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 120              		.loc 1 73 5 view .LVU24
 121 003e 1A68     		ldr	r2, [r3]
 122 0040 2AB9     		cbnz	r2, .L4
 123 0042 9B68     		ldr	r3, [r3, #8]
 124              	.LVL8:
 125              	.LBB51:
 126              	.LBI51:
 176:alohal/timer/timer.hpp **** 
 177:alohal/timer/timer.hpp ****     /**
 178:alohal/timer/timer.hpp ****      * @brief       Set global optimize flag for timer
 179:alohal/timer/timer.hpp ****      *              When true, during every change of timer period prescaler will be optimized to b
 180:alohal/timer/timer.hpp ****      *              Can be override by local flag when setting time
 181:alohal/timer/timer.hpp ****      *
 182:alohal/timer/timer.hpp ****      * @param flag  New state of optimize flag
 183:alohal/timer/timer.hpp ****      */
 184:alohal/timer/timer.hpp ****     inline void Optimize(bool flag){ optimize = flag; };
 185:alohal/timer/timer.hpp **** 
 186:alohal/timer/timer.hpp ****     /**
 187:alohal/timer/timer.hpp ****      * @brief           Return optimizer flag
 188:alohal/timer/timer.hpp ****      *
 189:alohal/timer/timer.hpp ****      * @return true     Timer is globally optimizing prescaller for every new period
 190:alohal/timer/timer.hpp ****      * @return false    Timer is not globally optimizing prescaller for every new period
 191:alohal/timer/timer.hpp ****      */
 192:alohal/timer/timer.hpp ****     inline bool Optimize() const { return optimize; };
 193:alohal/timer/timer.hpp **** 
 194:alohal/timer/timer.hpp ****     /**
 195:alohal/timer/timer.hpp ****      * @brief   Set time after which IRQ will activated
 196:alohal/timer/timer.hpp ****      *          Repeated periodically until stopped
 197:alohal/timer/timer.hpp ****      *
 198:alohal/timer/timer.hpp ****      * @param useconds  Time to next IRQ
 199:alohal/timer/timer.hpp ****      * @param optimize  Local flag for prescaler optimization
 200:alohal/timer/timer.hpp ****      */
 201:alohal/timer/timer.hpp ****     void Time_set(double useconds, bool optimize = false);
 202:alohal/timer/timer.hpp **** 
 203:alohal/timer/timer.hpp ****     /**
ARM GAS  /tmp/ccyJ5HWF.s 			page 8


 204:alohal/timer/timer.hpp ****      * @brief   Set frequency in which timer will execute IRQ
 205:alohal/timer/timer.hpp ****      *
 206:alohal/timer/timer.hpp ****      * @param frequency Frequency in Hz
 207:alohal/timer/timer.hpp ****      * @param optimize  Local flag for prescaler optimization
 208:alohal/timer/timer.hpp ****      */
 209:alohal/timer/timer.hpp ****     void Frequency_set(double frequency, bool optimize = false);
 210:alohal/timer/timer.hpp **** 
 211:alohal/timer/timer.hpp ****     /**
 212:alohal/timer/timer.hpp ****      * @brief   Enable input for counter, clock input or external input
 213:alohal/timer/timer.hpp ****      */
 214:alohal/timer/timer.hpp ****     void Start();
 215:alohal/timer/timer.hpp **** 
 216:alohal/timer/timer.hpp ****     /**
 217:alohal/timer/timer.hpp ****      * @brief   Disable input for counter, clock input or external input
 218:alohal/timer/timer.hpp ****      */
 219:alohal/timer/timer.hpp ****     void Stop();
 220:alohal/timer/timer.hpp **** 
 221:alohal/timer/timer.hpp ****     /**
 222:alohal/timer/timer.hpp ****      * @brief       Size of timer counter
 223:alohal/timer/timer.hpp ****      *
 224:alohal/timer/timer.hpp ****      * @return uint8_t Number of bits of timer counter register, return only values: 16 or 32
 225:alohal/timer/timer.hpp ****      */
 226:alohal/timer/timer.hpp ****     inline uint8_t Size() const { return size; };
 227:alohal/timer/timer.hpp **** 
 228:alohal/timer/timer.hpp ****     /**
 229:alohal/timer/timer.hpp ****      * @brief   Number of channel of counter
 230:alohal/timer/timer.hpp ****      *
 231:alohal/timer/timer.hpp ****      * @return int  Number of channel of counter
 232:alohal/timer/timer.hpp ****      */
 233:alohal/timer/timer.hpp ****     inline int Channel_count() const { return channel.size(); }
 234:alohal/timer/timer.hpp **** 
 235:alohal/timer/timer.hpp ****     /**
 236:alohal/timer/timer.hpp ****      * @brief       Return frequency of clock source
 237:alohal/timer/timer.hpp ****      *
 238:alohal/timer/timer.hpp ****      * @return uint Frequency in Hz
 239:alohal/timer/timer.hpp ****      */
 240:alohal/timer/timer.hpp ****     inline uint Input_frequency() const { return frequency; };
 241:alohal/timer/timer.hpp **** 
 242:alohal/timer/timer.hpp ****     /**
 243:alohal/timer/timer.hpp ****      * @brief Returns index of timer
 244:alohal/timer/timer.hpp ****      *
 245:alohal/timer/timer.hpp ****      * @return unsigned short Index of timer
 246:alohal/timer/timer.hpp ****      */
 247:alohal/timer/timer.hpp ****     unsigned short Index() {return index;};
 248:alohal/timer/timer.hpp **** 
 249:alohal/timer/timer.hpp **** private:
 250:alohal/timer/timer.hpp **** 
 251:alohal/timer/timer.hpp ****     /**
 252:alohal/timer/timer.hpp ****      * @brief   Return handler, used by friend TIM_channel for access to configuration structure of
 253:alohal/timer/timer.hpp ****      *
 254:alohal/timer/timer.hpp ****      * @return TIM_HandleTypeDef*   Pointer to configuration structure of HAL
 255:alohal/timer/timer.hpp ****      */
 256:alohal/timer/timer.hpp ****     inline TIM_HandleTypeDef *Handler() const {return handler;};
 127              		.loc 2 256 31 view .LVU25
 128              	.LBB52:
 129              		.loc 2 256 48 view .LVU26
 130              		.loc 2 256 55 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccyJ5HWF.s 			page 9


 131 0044 9B6A     		ldr	r3, [r3, #40]
 132              	.LVL9:
 133              		.loc 2 256 55 view .LVU28
 134              	.LBE52:
 135              	.LBE51:
 136              		.loc 1 73 5 view .LVU29
 137 0046 1B68     		ldr	r3, [r3]
 138 0048 C3ED0D7A 		vstr.32	s15, [r3, #52]	@ int
 139 004c 7047     		bx	lr
 140              	.LVL10:
 141              	.L4:
 142              		.loc 1 73 5 view .LVU30
 143 004e 042A     		cmp	r2, #4
 144 0050 0BD0     		beq	.L13
 145 0052 082A     		cmp	r2, #8
 146 0054 0FD0     		beq	.L14
 147 0056 0C2A     		cmp	r2, #12
 148 0058 13D0     		beq	.L15
 149 005a 102A     		cmp	r2, #16
 150 005c 17D0     		beq	.L16
 151 005e 9B68     		ldr	r3, [r3, #8]
 152              	.LVL11:
 153              	.LBB53:
 154              	.LBI53:
 155              		.loc 2 256 31 is_stmt 1 view .LVU31
 156              	.LBB54:
 157              		.loc 2 256 48 view .LVU32
 158              		.loc 2 256 55 is_stmt 0 view .LVU33
 159 0060 9B6A     		ldr	r3, [r3, #40]
 160              	.LVL12:
 161              		.loc 2 256 55 view .LVU34
 162              	.LBE54:
 163              	.LBE53:
 164              		.loc 1 73 5 view .LVU35
 165 0062 1B68     		ldr	r3, [r3]
 166 0064 C3ED177A 		vstr.32	s15, [r3, #92]	@ int
  74:alohal/timer/TIM_channel.cpp **** }
 167              		.loc 1 74 1 view .LVU36
 168 0068 7047     		bx	lr
 169              	.LVL13:
 170              	.L13:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 171              		.loc 1 73 5 view .LVU37
 172 006a 9B68     		ldr	r3, [r3, #8]
 173              	.LVL14:
 174              	.LBB55:
 175              	.LBI55:
 176              		.loc 2 256 31 is_stmt 1 view .LVU38
 177              	.LBB56:
 178              		.loc 2 256 48 view .LVU39
 179              		.loc 2 256 55 is_stmt 0 view .LVU40
 180 006c 9B6A     		ldr	r3, [r3, #40]
 181              	.LVL15:
 182              		.loc 2 256 55 view .LVU41
 183              	.LBE56:
 184              	.LBE55:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
ARM GAS  /tmp/ccyJ5HWF.s 			page 10


 185              		.loc 1 73 5 view .LVU42
 186 006e 1B68     		ldr	r3, [r3]
 187 0070 C3ED0E7A 		vstr.32	s15, [r3, #56]	@ int
 188 0074 7047     		bx	lr
 189              	.LVL16:
 190              	.L14:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 191              		.loc 1 73 5 view .LVU43
 192 0076 9B68     		ldr	r3, [r3, #8]
 193              	.LVL17:
 194              	.LBB57:
 195              	.LBI57:
 196              		.loc 2 256 31 is_stmt 1 view .LVU44
 197              	.LBB58:
 198              		.loc 2 256 48 view .LVU45
 199              		.loc 2 256 55 is_stmt 0 view .LVU46
 200 0078 9B6A     		ldr	r3, [r3, #40]
 201              	.LVL18:
 202              		.loc 2 256 55 view .LVU47
 203              	.LBE58:
 204              	.LBE57:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 205              		.loc 1 73 5 view .LVU48
 206 007a 1B68     		ldr	r3, [r3]
 207 007c C3ED0F7A 		vstr.32	s15, [r3, #60]	@ int
 208 0080 7047     		bx	lr
 209              	.LVL19:
 210              	.L15:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 211              		.loc 1 73 5 view .LVU49
 212 0082 9B68     		ldr	r3, [r3, #8]
 213              	.LVL20:
 214              	.LBB59:
 215              	.LBI59:
 216              		.loc 2 256 31 is_stmt 1 view .LVU50
 217              	.LBB60:
 218              		.loc 2 256 48 view .LVU51
 219              		.loc 2 256 55 is_stmt 0 view .LVU52
 220 0084 9B6A     		ldr	r3, [r3, #40]
 221              	.LVL21:
 222              		.loc 2 256 55 view .LVU53
 223              	.LBE60:
 224              	.LBE59:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 225              		.loc 1 73 5 view .LVU54
 226 0086 1B68     		ldr	r3, [r3]
 227 0088 C3ED107A 		vstr.32	s15, [r3, #64]	@ int
 228 008c 7047     		bx	lr
 229              	.LVL22:
 230              	.L16:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 231              		.loc 1 73 5 view .LVU55
 232 008e 9B68     		ldr	r3, [r3, #8]
 233              	.LVL23:
 234              	.LBB61:
 235              	.LBI61:
 236              		.loc 2 256 31 is_stmt 1 view .LVU56
ARM GAS  /tmp/ccyJ5HWF.s 			page 11


 237              	.LBB62:
 238              		.loc 2 256 48 view .LVU57
 239              		.loc 2 256 55 is_stmt 0 view .LVU58
 240 0090 9B6A     		ldr	r3, [r3, #40]
 241              	.LVL24:
 242              		.loc 2 256 55 view .LVU59
 243              	.LBE62:
 244              	.LBE61:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 245              		.loc 1 73 5 view .LVU60
 246 0092 1B68     		ldr	r3, [r3]
 247 0094 C3ED167A 		vstr.32	s15, [r3, #88]	@ int
 248 0098 7047     		bx	lr
 249              	.LVL25:
 250              	.L10:
  73:alohal/timer/TIM_channel.cpp ****     __HAL_TIM_SET_COMPARE(parent_timer->Handler(), _address, capture_compare);
 251              		.loc 1 73 5 view .LVU61
 252              	.LBE50:
 253              	.LBE49:
  11:alohal/timer/TIM_channel.cpp ****     }
 254              		.loc 1 11 17 view .LVU62
 255 009a 6FF00100 		mvn	r0, #1
 256 009e 7047     		bx	lr
 257              	.L11:
  15:alohal/timer/TIM_channel.cpp ****     }
 258              		.loc 1 15 17 view .LVU63
 259 00a0 4FF0FF30 		mov	r0, #-1
 260 00a4 7047     		bx	lr
 261              	.L12:
 262 00a6 4FF0FF30 		mov	r0, #-1
  21:alohal/timer/TIM_channel.cpp **** 
 263              		.loc 1 21 1 view .LVU64
 264 00aa 7047     		bx	lr
 265              	.L18:
 266              		.align	2
 267              	.L17:
 268 00ac 0000C842 		.word	1120403456
 269              		.cfi_endproc
 270              	.LFE2030:
 272              		.section	.text._ZN11TIM_channel4ModeENS_5ModesE,"ax",%progbits
 273              		.align	1
 274              		.global	_ZN11TIM_channel4ModeENS_5ModesE
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	_ZN11TIM_channel4ModeENS_5ModesE:
 281              	.LVL26:
 282              	.LFB2031:
  23:alohal/timer/TIM_channel.cpp ****     this->mode = mode;
 283              		.loc 1 23 35 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 32
 286              		@ frame_needed = 0, uses_anonymous_args = 0
  23:alohal/timer/TIM_channel.cpp ****     this->mode = mode;
 287              		.loc 1 23 35 is_stmt 0 view .LVU66
 288 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccyJ5HWF.s 			page 12


 289              	.LCFI0:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 14, -4
 292 0002 89B0     		sub	sp, sp, #36
 293              	.LCFI1:
 294              		.cfi_def_cfa_offset 40
  24:alohal/timer/TIM_channel.cpp **** 
 295              		.loc 1 24 5 is_stmt 1 view .LVU67
  24:alohal/timer/TIM_channel.cpp **** 
 296              		.loc 1 24 16 is_stmt 0 view .LVU68
 297 0004 4160     		str	r1, [r0, #4]
  26:alohal/timer/TIM_channel.cpp ****     switch (mode) {
 298              		.loc 1 26 5 is_stmt 1 view .LVU69
 299              	.LVL27:
  27:alohal/timer/TIM_channel.cpp ****         case Modes::PWM:
 300              		.loc 1 27 5 view .LVU70
 301 0006 0129     		cmp	r1, #1
 302 0008 0AD0     		beq	.L23
  26:alohal/timer/TIM_channel.cpp ****     switch (mode) {
 303              		.loc 1 26 14 is_stmt 0 view .LVU71
 304 000a 6023     		movs	r3, #96
 305              	.L20:
 306              	.LVL28:
  36:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCMode     = new_mode;
 307              		.loc 1 36 5 is_stmt 1 view .LVU72
  37:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 308              		.loc 1 37 5 view .LVU73
  37:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 309              		.loc 1 37 26 is_stmt 0 view .LVU74
 310 000c 0193     		str	r3, [sp, #4]
  38:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 311              		.loc 1 38 5 is_stmt 1 view .LVU75
  38:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 312              		.loc 1 38 26 is_stmt 0 view .LVU76
 313 000e 0023     		movs	r3, #0
 314              	.LVL29:
  38:alohal/timer/TIM_channel.cpp ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 315              		.loc 1 38 26 view .LVU77
 316 0010 0393     		str	r3, [sp, #12]
  39:alohal/timer/TIM_channel.cpp **** 
 317              		.loc 1 39 5 is_stmt 1 view .LVU78
  39:alohal/timer/TIM_channel.cpp **** 
 318              		.loc 1 39 26 is_stmt 0 view .LVU79
 319 0012 0593     		str	r3, [sp, #20]
  41:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_ConfigChannel(parent_timer->Handler(), &sConfigOC, _address);
 320              		.loc 1 41 5 is_stmt 1 view .LVU80
 321 0014 31B1     		cbz	r1, .L25
  43:alohal/timer/TIM_channel.cpp ****         HAL_TIM_OC_ConfigChannel(parent_timer->Handler(), &sConfigOC, _address);
 322              		.loc 1 43 12 view .LVU81
 323 0016 0129     		cmp	r1, #1
 324 0018 0BD0     		beq	.L26
 325              	.LVL30:
 326              	.L19:
  46:alohal/timer/TIM_channel.cpp **** 
 327              		.loc 1 46 1 is_stmt 0 view .LVU82
 328 001a 09B0     		add	sp, sp, #36
 329              	.LCFI2:
ARM GAS  /tmp/ccyJ5HWF.s 			page 13


 330              		.cfi_remember_state
 331              		.cfi_def_cfa_offset 4
 332              		@ sp needed
 333 001c 5DF804FB 		ldr	pc, [sp], #4
 334              	.LVL31:
 335              	.L23:
 336              	.LCFI3:
 337              		.cfi_restore_state
  32:alohal/timer/TIM_channel.cpp ****             break;
 338              		.loc 1 32 22 view .LVU83
 339 0020 3023     		movs	r3, #48
 340 0022 F3E7     		b	.L20
 341              	.LVL32:
 342              	.L25:
  42:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 343              		.loc 1 42 9 is_stmt 1 view .LVU84
  42:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 344              		.loc 1 42 35 is_stmt 0 view .LVU85
 345 0024 8368     		ldr	r3, [r0, #8]
 346              	.LVL33:
 347              	.LBB63:
 348              	.LBI63:
 349              		.loc 2 256 31 is_stmt 1 view .LVU86
 350              	.LBB64:
 351              		.loc 2 256 48 view .LVU87
 352              		.loc 2 256 48 is_stmt 0 view .LVU88
 353              	.LBE64:
 354              	.LBE63:
  42:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 355              		.loc 1 42 34 view .LVU89
 356 0026 0268     		ldr	r2, [r0]
 357 0028 01A9     		add	r1, sp, #4
 358              	.LVL34:
  42:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 359              		.loc 1 42 34 view .LVU90
 360 002a 986A     		ldr	r0, [r3, #40]
 361              	.LVL35:
  42:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 362              		.loc 1 42 34 view .LVU91
 363 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 364              	.LVL36:
  42:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 365              		.loc 1 42 34 view .LVU92
 366 0030 F3E7     		b	.L19
 367              	.LVL37:
 368              	.L26:
  44:alohal/timer/TIM_channel.cpp ****     }
 369              		.loc 1 44 9 is_stmt 1 view .LVU93
  44:alohal/timer/TIM_channel.cpp ****     }
 370              		.loc 1 44 34 is_stmt 0 view .LVU94
 371 0032 8368     		ldr	r3, [r0, #8]
 372              	.LVL38:
 373              	.LBB65:
 374              	.LBI65:
 375              		.loc 2 256 31 is_stmt 1 view .LVU95
 376              	.LBB66:
 377              		.loc 2 256 48 view .LVU96
ARM GAS  /tmp/ccyJ5HWF.s 			page 14


 378              		.loc 2 256 48 is_stmt 0 view .LVU97
 379              	.LBE66:
 380              	.LBE65:
  44:alohal/timer/TIM_channel.cpp ****     }
 381              		.loc 1 44 33 view .LVU98
 382 0034 0268     		ldr	r2, [r0]
 383 0036 01A9     		add	r1, sp, #4
 384              	.LVL39:
  44:alohal/timer/TIM_channel.cpp ****     }
 385              		.loc 1 44 33 view .LVU99
 386 0038 986A     		ldr	r0, [r3, #40]
 387              	.LVL40:
  44:alohal/timer/TIM_channel.cpp ****     }
 388              		.loc 1 44 33 view .LVU100
 389 003a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 390              	.LVL41:
  46:alohal/timer/TIM_channel.cpp **** 
 391              		.loc 1 46 1 view .LVU101
 392 003e ECE7     		b	.L19
 393              		.cfi_endproc
 394              	.LFE2031:
 396              		.section	.text._ZN11TIM_channel5StartEv,"ax",%progbits
 397              		.align	1
 398              		.global	_ZN11TIM_channel5StartEv
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	_ZN11TIM_channel5StartEv:
 405              	.LVL42:
 406              	.LFB2032:
  48:alohal/timer/TIM_channel.cpp ****     if (mode == Modes::PWM) {
 407              		.loc 1 48 26 is_stmt 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
  48:alohal/timer/TIM_channel.cpp ****     if (mode == Modes::PWM) {
 411              		.loc 1 48 26 is_stmt 0 view .LVU103
 412 0000 08B5     		push	{r3, lr}
 413              	.LCFI4:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 3, -8
 416              		.cfi_offset 14, -4
  49:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Start(parent_timer->Handler(), _address);
 417              		.loc 1 49 5 is_stmt 1 view .LVU104
  49:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Start(parent_timer->Handler(), _address);
 418              		.loc 1 49 9 is_stmt 0 view .LVU105
 419 0002 4368     		ldr	r3, [r0, #4]
  49:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Start(parent_timer->Handler(), _address);
 420              		.loc 1 49 5 view .LVU106
 421 0004 13B1     		cbz	r3, .L31
  51:alohal/timer/TIM_channel.cpp ****         HAL_TIM_OC_Start(parent_timer->Handler(), _address);
 422              		.loc 1 51 12 is_stmt 1 view .LVU107
 423 0006 012B     		cmp	r3, #1
 424 0008 06D0     		beq	.L32
 425              	.LVL43:
 426              	.L27:
ARM GAS  /tmp/ccyJ5HWF.s 			page 15


  54:alohal/timer/TIM_channel.cpp **** 
 427              		.loc 1 54 1 is_stmt 0 view .LVU108
 428 000a 08BD     		pop	{r3, pc}
 429              	.LVL44:
 430              	.L31:
  50:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 431              		.loc 1 50 9 is_stmt 1 view .LVU109
  50:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 432              		.loc 1 50 27 is_stmt 0 view .LVU110
 433 000c 8368     		ldr	r3, [r0, #8]
 434              	.LVL45:
 435              	.LBB67:
 436              	.LBI67:
 437              		.loc 2 256 31 is_stmt 1 view .LVU111
 438              	.LBB68:
 439              		.loc 2 256 48 view .LVU112
 440              		.loc 2 256 48 is_stmt 0 view .LVU113
 441              	.LBE68:
 442              	.LBE67:
  50:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 443              		.loc 1 50 26 view .LVU114
 444 000e 0168     		ldr	r1, [r0]
 445 0010 986A     		ldr	r0, [r3, #40]
 446              	.LVL46:
  50:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 447              		.loc 1 50 26 view .LVU115
 448 0012 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 449              	.LVL47:
 450 0016 F8E7     		b	.L27
 451              	.LVL48:
 452              	.L32:
  52:alohal/timer/TIM_channel.cpp ****     }
 453              		.loc 1 52 9 is_stmt 1 view .LVU116
  52:alohal/timer/TIM_channel.cpp ****     }
 454              		.loc 1 52 26 is_stmt 0 view .LVU117
 455 0018 8368     		ldr	r3, [r0, #8]
 456              	.LVL49:
 457              	.LBB69:
 458              	.LBI69:
 459              		.loc 2 256 31 is_stmt 1 view .LVU118
 460              	.LBB70:
 461              		.loc 2 256 48 view .LVU119
 462              		.loc 2 256 48 is_stmt 0 view .LVU120
 463              	.LBE70:
 464              	.LBE69:
  52:alohal/timer/TIM_channel.cpp ****     }
 465              		.loc 1 52 25 view .LVU121
 466 001a 0168     		ldr	r1, [r0]
 467 001c 986A     		ldr	r0, [r3, #40]
 468              	.LVL50:
  52:alohal/timer/TIM_channel.cpp ****     }
 469              		.loc 1 52 25 view .LVU122
 470 001e FFF7FEFF 		bl	HAL_TIM_OC_Start
 471              	.LVL51:
  54:alohal/timer/TIM_channel.cpp **** 
 472              		.loc 1 54 1 view .LVU123
 473 0022 F2E7     		b	.L27
ARM GAS  /tmp/ccyJ5HWF.s 			page 16


 474              		.cfi_endproc
 475              	.LFE2032:
 477              		.section	.text._ZN11TIM_channel4StopEv,"ax",%progbits
 478              		.align	1
 479              		.global	_ZN11TIM_channel4StopEv
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	_ZN11TIM_channel4StopEv:
 486              	.LVL52:
 487              	.LFB2033:
  56:alohal/timer/TIM_channel.cpp ****     if (mode == Modes::PWM) {
 488              		.loc 1 56 25 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
  56:alohal/timer/TIM_channel.cpp ****     if (mode == Modes::PWM) {
 492              		.loc 1 56 25 is_stmt 0 view .LVU125
 493 0000 08B5     		push	{r3, lr}
 494              	.LCFI5:
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 3, -8
 497              		.cfi_offset 14, -4
  57:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Stop(parent_timer->Handler(), _address);
 498              		.loc 1 57 5 is_stmt 1 view .LVU126
  57:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Stop(parent_timer->Handler(), _address);
 499              		.loc 1 57 9 is_stmt 0 view .LVU127
 500 0002 4368     		ldr	r3, [r0, #4]
  57:alohal/timer/TIM_channel.cpp ****         HAL_TIM_PWM_Stop(parent_timer->Handler(), _address);
 501              		.loc 1 57 5 view .LVU128
 502 0004 13B1     		cbz	r3, .L37
  59:alohal/timer/TIM_channel.cpp ****         HAL_TIM_OC_Stop(parent_timer->Handler(), _address);
 503              		.loc 1 59 12 is_stmt 1 view .LVU129
 504 0006 012B     		cmp	r3, #1
 505 0008 06D0     		beq	.L38
 506              	.LVL53:
 507              	.L33:
  62:alohal/timer/TIM_channel.cpp **** 
 508              		.loc 1 62 1 is_stmt 0 view .LVU130
 509 000a 08BD     		pop	{r3, pc}
 510              	.LVL54:
 511              	.L37:
  58:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 512              		.loc 1 58 9 is_stmt 1 view .LVU131
  58:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 513              		.loc 1 58 26 is_stmt 0 view .LVU132
 514 000c 8368     		ldr	r3, [r0, #8]
 515              	.LVL55:
 516              	.LBB71:
 517              	.LBI71:
 518              		.loc 2 256 31 is_stmt 1 view .LVU133
 519              	.LBB72:
 520              		.loc 2 256 48 view .LVU134
 521              		.loc 2 256 48 is_stmt 0 view .LVU135
 522              	.LBE72:
 523              	.LBE71:
ARM GAS  /tmp/ccyJ5HWF.s 			page 17


  58:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 524              		.loc 1 58 25 view .LVU136
 525 000e 0168     		ldr	r1, [r0]
 526 0010 986A     		ldr	r0, [r3, #40]
 527              	.LVL56:
  58:alohal/timer/TIM_channel.cpp ****     } else if (mode == Modes::Toggle) {
 528              		.loc 1 58 25 view .LVU137
 529 0012 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 530              	.LVL57:
 531 0016 F8E7     		b	.L33
 532              	.LVL58:
 533              	.L38:
  60:alohal/timer/TIM_channel.cpp ****     }
 534              		.loc 1 60 9 is_stmt 1 view .LVU138
  60:alohal/timer/TIM_channel.cpp ****     }
 535              		.loc 1 60 25 is_stmt 0 view .LVU139
 536 0018 8368     		ldr	r3, [r0, #8]
 537              	.LVL59:
 538              	.LBB73:
 539              	.LBI73:
 540              		.loc 2 256 31 is_stmt 1 view .LVU140
 541              	.LBB74:
 542              		.loc 2 256 48 view .LVU141
 543              		.loc 2 256 48 is_stmt 0 view .LVU142
 544              	.LBE74:
 545              	.LBE73:
  60:alohal/timer/TIM_channel.cpp ****     }
 546              		.loc 1 60 24 view .LVU143
 547 001a 0168     		ldr	r1, [r0]
 548 001c 986A     		ldr	r0, [r3, #40]
 549              	.LVL60:
  60:alohal/timer/TIM_channel.cpp ****     }
 550              		.loc 1 60 24 view .LVU144
 551 001e FFF7FEFF 		bl	HAL_TIM_OC_Stop
 552              	.LVL61:
  62:alohal/timer/TIM_channel.cpp **** 
 553              		.loc 1 62 1 view .LVU145
 554 0022 F2E7     		b	.L33
 555              		.cfi_endproc
 556              	.LFE2033:
 558              		.section	.text._ZN11TIM_channel9Start_DMAEPmm,"ax",%progbits
 559              		.align	1
 560              		.global	_ZN11TIM_channel9Start_DMAEPmm
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv4-sp-d16
 566              	_ZN11TIM_channel9Start_DMAEPmm:
 567              	.LVL62:
 568              	.LFB2034:
  64:alohal/timer/TIM_channel.cpp ****     HAL_TIM_OC_Start_DMA(parent_timer->Handler(), _address, address_from, data_size);
 569              		.loc 1 64 72 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
  64:alohal/timer/TIM_channel.cpp ****     HAL_TIM_OC_Start_DMA(parent_timer->Handler(), _address, address_from, data_size);
 573              		.loc 1 64 72 is_stmt 0 view .LVU147
ARM GAS  /tmp/ccyJ5HWF.s 			page 18


 574 0000 10B5     		push	{r4, lr}
 575              	.LCFI6:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
  65:alohal/timer/TIM_channel.cpp **** }
 579              		.loc 1 65 5 is_stmt 1 view .LVU148
  65:alohal/timer/TIM_channel.cpp **** }
 580              		.loc 1 65 26 is_stmt 0 view .LVU149
 581 0002 8468     		ldr	r4, [r0, #8]
 582              	.LVL63:
 583              	.LBB75:
 584              	.LBI75:
 585              		.loc 2 256 31 is_stmt 1 view .LVU150
 586              	.LBB76:
 587              		.loc 2 256 48 view .LVU151
 588              		.loc 2 256 48 is_stmt 0 view .LVU152
 589              	.LBE76:
 590              	.LBE75:
  65:alohal/timer/TIM_channel.cpp **** }
 591              		.loc 1 65 25 view .LVU153
 592 0004 93B2     		uxth	r3, r2
 593 0006 0A46     		mov	r2, r1
 594              	.LVL64:
  65:alohal/timer/TIM_channel.cpp **** }
 595              		.loc 1 65 25 view .LVU154
 596 0008 0168     		ldr	r1, [r0]
 597              	.LVL65:
  65:alohal/timer/TIM_channel.cpp **** }
 598              		.loc 1 65 25 view .LVU155
 599 000a A06A     		ldr	r0, [r4, #40]
 600              	.LVL66:
  65:alohal/timer/TIM_channel.cpp **** }
 601              		.loc 1 65 25 view .LVU156
 602 000c FFF7FEFF 		bl	HAL_TIM_OC_Start_DMA
 603              	.LVL67:
  66:alohal/timer/TIM_channel.cpp **** 
 604              		.loc 1 66 1 view .LVU157
 605 0010 10BD     		pop	{r4, pc}
 606              		.cfi_endproc
 607              	.LFE2034:
 609              		.text
 610              	.Letext0:
 611              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/machine/_default_types.h"
 612              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/_stdint.h"
 613              		.file 5 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdint.h"
 614              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 615              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 616              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
 617              		.file 9 "/opt/gcc-arm-none-eabi-9-2020-q2/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 618              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 619              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 620              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 621              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 622              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 623              		.file 15 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/type_traits"
 624              		.file 16 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7e
ARM GAS  /tmp/ccyJ5HWF.s 			page 19


 625              		.file 17 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_pair.h"
 626              		.file 18 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/debug/debug.h"
 627              		.file 19 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/exception_ptr.h"
 628              		.file 20 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new"
 629              		.file 21 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/utility"
 630              		.file 22 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cwchar"
 631              		.file 23 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h"
 632              		.file 24 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdint"
 633              		.file 25 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/clocale"
 634              		.file 26 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/limits"
 635              		.file 27 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/string_view"
 636              		.file 28 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h"
 637              		.file 29 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdlib"
 638              		.file 30 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdio"
 639              		.file 31 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h"
 640              		.file 32 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h"
 641              		.file 33 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h"
 642              		.file 34 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc"
 643              		.file 35 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_
 644              		.file 36 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/predefined_ops.h"
 645              		.file 37 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h"
 646              		.file 38 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/numeric_traits.h"
 647              		.file 39 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h"
 648              		.file 40 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h"
 649              		.file 41 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/_types.h"
 650              		.file 42 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/reent.h"
 651              		.file 43 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/lock.h"
 652              		.file 44 "/opt/gcc-arm-none-eabi-9-2020-q2/lib/gcc/arm-none-eabi/9.3.1/include/stdarg.h"
 653              		.file 45 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/wchar.h"
 654              		.file 46 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/locale.h"
 655              		.file 47 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/ctype.h"
 656              		.file 48 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdlib.h"
 657              		.file 49 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdio.h"
 658              		.file 50 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/errno.h"
 659              		.file 51 "alohal/timer/TIM_channel.hpp"
 660              		.file 52 "alohal/globals.hpp"
 661              		.file 53 "alohal/irq/irq_handler.hpp"
 662              		.file 54 "alohal/irq/irq_observer.hpp"
 663              		.file 55 "<built-in>"
ARM GAS  /tmp/ccyJ5HWF.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TIM_channel.cpp
     /tmp/ccyJ5HWF.s:18     .text._ZN11TIM_channelC2EP5Timerm:0000000000000000 $t
     /tmp/ccyJ5HWF.s:26     .text._ZN11TIM_channelC2EP5Timerm:0000000000000000 _ZN11TIM_channelC2EP5Timerm
     /tmp/ccyJ5HWF.s:26     .text._ZN11TIM_channelC2EP5Timerm:0000000000000000 _ZN11TIM_channelC1EP5Timerm
     /tmp/ccyJ5HWF.s:52     .text._ZN11TIM_channel12PWM_GenerateEf:0000000000000000 $t
     /tmp/ccyJ5HWF.s:59     .text._ZN11TIM_channel12PWM_GenerateEf:0000000000000000 _ZN11TIM_channel12PWM_GenerateEf
     /tmp/ccyJ5HWF.s:268    .text._ZN11TIM_channel12PWM_GenerateEf:00000000000000ac $d
     /tmp/ccyJ5HWF.s:273    .text._ZN11TIM_channel4ModeENS_5ModesE:0000000000000000 $t
     /tmp/ccyJ5HWF.s:280    .text._ZN11TIM_channel4ModeENS_5ModesE:0000000000000000 _ZN11TIM_channel4ModeENS_5ModesE
     /tmp/ccyJ5HWF.s:397    .text._ZN11TIM_channel5StartEv:0000000000000000 $t
     /tmp/ccyJ5HWF.s:404    .text._ZN11TIM_channel5StartEv:0000000000000000 _ZN11TIM_channel5StartEv
     /tmp/ccyJ5HWF.s:478    .text._ZN11TIM_channel4StopEv:0000000000000000 $t
     /tmp/ccyJ5HWF.s:485    .text._ZN11TIM_channel4StopEv:0000000000000000 _ZN11TIM_channel4StopEv
     /tmp/ccyJ5HWF.s:559    .text._ZN11TIM_channel9Start_DMAEPmm:0000000000000000 $t
     /tmp/ccyJ5HWF.s:566    .text._ZN11TIM_channel9Start_DMAEPmm:0000000000000000 _ZN11TIM_channel9Start_DMAEPmm

UNDEFINED SYMBOLS
HAL_TIM_PWM_ConfigChannel
HAL_TIM_OC_ConfigChannel
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
HAL_TIM_PWM_Stop
HAL_TIM_OC_Stop
HAL_TIM_OC_Start_DMA
