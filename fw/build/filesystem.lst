ARM GAS  /tmp/ccL95Edz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"filesystem.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESa
  18              		.align	1
  19              		.weak	_ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:
  27              	.LVL0:
  28              	.LFB1728:
  29              		.file 1 "alohal/filesystem/entry.hpp"
   1:alohal/filesystem/entry.hpp **** /**
   2:alohal/filesystem/entry.hpp ****  * @file entry.hpp
   3:alohal/filesystem/entry.hpp ****  * @author Petr Malan√≠k (TheColonelYoung(at)gmail(dot)com)
   4:alohal/filesystem/entry.hpp ****  * @version 0.1
   5:alohal/filesystem/entry.hpp ****  * @date 05.09.2019
   6:alohal/filesystem/entry.hpp ****  */
   7:alohal/filesystem/entry.hpp **** #pragma once
   8:alohal/filesystem/entry.hpp **** 
   9:alohal/filesystem/entry.hpp **** #include <string>
  10:alohal/filesystem/entry.hpp **** #include <vector>
  11:alohal/filesystem/entry.hpp **** 
  12:alohal/filesystem/entry.hpp **** using namespace std;
  13:alohal/filesystem/entry.hpp **** 
  14:alohal/filesystem/entry.hpp **** class FS_entry {
  15:alohal/filesystem/entry.hpp **** public:
  16:alohal/filesystem/entry.hpp **** 
  17:alohal/filesystem/entry.hpp ****     enum class Type {
  18:alohal/filesystem/entry.hpp ****         Undefined,
  19:alohal/filesystem/entry.hpp ****         Directory,
  20:alohal/filesystem/entry.hpp ****         File,
  21:alohal/filesystem/entry.hpp ****         Executable
  22:alohal/filesystem/entry.hpp ****     };
  23:alohal/filesystem/entry.hpp **** 
  24:alohal/filesystem/entry.hpp **** protected:
  25:alohal/filesystem/entry.hpp ****     Type type = Type::Undefined;
  26:alohal/filesystem/entry.hpp **** 
  27:alohal/filesystem/entry.hpp ****     string name = "None";
  28:alohal/filesystem/entry.hpp **** 
  29:alohal/filesystem/entry.hpp ****     /**
ARM GAS  /tmp/ccL95Edz.s 			page 2


  30:alohal/filesystem/entry.hpp ****      * @brief Pointer to directory in which ius this entry located
  31:alohal/filesystem/entry.hpp ****      */
  32:alohal/filesystem/entry.hpp ****     FS_entry *parent = nullptr;
  33:alohal/filesystem/entry.hpp **** 
  34:alohal/filesystem/entry.hpp **** public:
  35:alohal/filesystem/entry.hpp ****     FS_entry() = default;
  36:alohal/filesystem/entry.hpp **** 
  37:alohal/filesystem/entry.hpp ****     FS_entry(string name);
  38:alohal/filesystem/entry.hpp **** 
  39:alohal/filesystem/entry.hpp ****     virtual ~FS_entry() = default;
  40:alohal/filesystem/entry.hpp **** 
  41:alohal/filesystem/entry.hpp ****     /**
  42:alohal/filesystem/entry.hpp ****      * @brief Call destructor of object
  43:alohal/filesystem/entry.hpp ****      */
  44:alohal/filesystem/entry.hpp ****     void Delete();
  45:alohal/filesystem/entry.hpp **** 
  46:alohal/filesystem/entry.hpp ****     /**
  47:alohal/filesystem/entry.hpp ****      * @brief Name of actual entry, this is not a path to entry
  48:alohal/filesystem/entry.hpp ****      *
  49:alohal/filesystem/entry.hpp ****      * @return string Name of entry
  50:alohal/filesystem/entry.hpp ****      */
  51:alohal/filesystem/entry.hpp ****     const inline string Name(){ return name; };
  52:alohal/filesystem/entry.hpp **** 
  53:alohal/filesystem/entry.hpp ****     /**
  54:alohal/filesystem/entry.hpp ****      * @brief   Returns path from root to actual entry in form of string
  55:alohal/filesystem/entry.hpp ****      *          Path is constructed via recursion, so beware many recursion directories
  56:alohal/filesystem/entry.hpp ****      *
  57:alohal/filesystem/entry.hpp ****      * @return string Path from root
  58:alohal/filesystem/entry.hpp ****      */
  59:alohal/filesystem/entry.hpp ****     string Path() const;
  60:alohal/filesystem/entry.hpp **** 
  61:alohal/filesystem/entry.hpp ****     /**
  62:alohal/filesystem/entry.hpp ****      * @brief Return type of entry
  63:alohal/filesystem/entry.hpp ****      *
  64:alohal/filesystem/entry.hpp ****      * @return Type Entry type
  65:alohal/filesystem/entry.hpp ****      */
  66:alohal/filesystem/entry.hpp ****     const inline Type Type_of(){ return type; };
  67:alohal/filesystem/entry.hpp **** 
  68:alohal/filesystem/entry.hpp ****     /**
  69:alohal/filesystem/entry.hpp ****      * @brief New parent can be set only when, is uninitialized (nullptr)
  70:alohal/filesystem/entry.hpp ****      *
  71:alohal/filesystem/entry.hpp ****      * @return true     New parent is set
  72:alohal/filesystem/entry.hpp ****      * @return false    Parent cannot be set, allready exists
  73:alohal/filesystem/entry.hpp ****      */
  74:alohal/filesystem/entry.hpp ****     bool Set_parent(FS_entry *entry);
  75:alohal/filesystem/entry.hpp **** 
  76:alohal/filesystem/entry.hpp ****     /**
  77:alohal/filesystem/entry.hpp ****      * @brief New parent can be set only when, is uninitialized (nullptr)
  78:alohal/filesystem/entry.hpp ****      *
  79:alohal/filesystem/entry.hpp ****      * @return true     New parent is set
  80:alohal/filesystem/entry.hpp ****      * @return false    Parent cannot be set, allready exists
  81:alohal/filesystem/entry.hpp ****      */
  82:alohal/filesystem/entry.hpp ****     inline FS_entry * Parent(){ return parent; };
  83:alohal/filesystem/entry.hpp **** 
  84:alohal/filesystem/entry.hpp ****     /**
  85:alohal/filesystem/entry.hpp ****      * @brief   Virtual function which is overriden only by executable
  86:alohal/filesystem/entry.hpp ****      *          That because executable template argument cannot be deduced
ARM GAS  /tmp/ccL95Edz.s 			page 3


  87:alohal/filesystem/entry.hpp ****      *
  88:alohal/filesystem/entry.hpp ****      * @param args  Ignored
  89:alohal/filesystem/entry.hpp ****      * @return int  Always -1
  90:alohal/filesystem/entry.hpp ****      */
  91:alohal/filesystem/entry.hpp ****     virtual int Run(vector<string> &args) const { return -1; };
  30              		.loc 1 91 17 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 91 51 view .LVU1
  36              		.loc 1 91 62 is_stmt 0 view .LVU2
  37 0000 4FF0FF30 		mov	r0, #-1
  38              	.LVL1:
  39              		.loc 1 91 62 view .LVU3
  40 0004 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE1728:
  44              		.section	.text._ZN8FS_entryD2Ev,"axG",%progbits,_ZN8FS_entryD5Ev,comdat
  45              		.align	1
  46              		.weak	_ZN8FS_entryD2Ev
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	_ZN8FS_entryD2Ev:
  53              	.LVL2:
  54              	.LFB2966:
  39:alohal/filesystem/entry.hpp **** 
  55              		.loc 1 39 13 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  39:alohal/filesystem/entry.hpp **** 
  59              		.loc 1 39 13 is_stmt 0 view .LVU5
  60 0000 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65 0002 0446     		mov	r4, r0
  66              	.LBB4755:
  39:alohal/filesystem/entry.hpp **** 
  67              		.loc 1 39 13 view .LVU6
  68 0004 054B     		ldr	r3, .L5
  69 0006 0360     		str	r3, [r0]
  70              	.LVL3:
  71              	.LBB4756:
  72              	.LBI4756:
  73              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // terms of the GNU General Public License as published by the
ARM GAS  /tmp/ccL95Edz.s 			page 4


   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** //
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** //
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #pragma GCC system_header
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <debug/debug.h>
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <initializer_list>
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** # include <string_view>
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** {
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup strings
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup sequences
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
ARM GAS  /tmp/ccL95Edz.s 			page 5


  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     class basic_string
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Types:
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 							const_iterator;
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     protected:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _Res>;
ARM GAS  /tmp/ccL95Edz.s 			page 6


 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static __sv_type
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __svt; }
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // is provided.
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct __sv_wrapper
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          wrapper.
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type		_M_string_length;
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       union
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data(pointer __p)
ARM GAS  /tmp/ccL95Edz.s 			page 7


 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_length(size_type __length)
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pointer
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data() const
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pointer
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_local_data()
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_pointer
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_local_data() const
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_length(__n);
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_is_local() const
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Create & Destroy
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pointer
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_dispose()
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!_M_is_local())
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
ARM GAS  /tmp/ccL95Edz.s 			page 8


 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InIterator>
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Integer>
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InIterator>
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InIterator>
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       allocator_type&
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_get_allocator()
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const allocator_type&
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_get_allocator() const
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 9


 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__pos > this->size())
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __pos;
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
ARM GAS  /tmp/ccL95Edz.s 			page 10


 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Iterator>
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static void
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static int
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
ARM GAS  /tmp/ccL95Edz.s 			page 11


 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return int(__d);
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __len2);
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string()
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
ARM GAS  /tmp/ccL95Edz.s 			page 12


 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const _CharT* __start
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  has no special meaning.
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
ARM GAS  /tmp/ccL95Edz.s 			page 13


 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to use.
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_length(__str.length());
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
ARM GAS  /tmp/ccL95Edz.s 			page 14


 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InputIterator,
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InputIterator>
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
ARM GAS  /tmp/ccL95Edz.s 			page 15


 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ~basic_string()
  74              		.loc 2 657 7 is_stmt 1 view .LVU7
  75              	.LBB4757:
  76              	.LBI4757:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
  77              		.loc 2 229 7 view .LVU8
  78              	.LBB4758:
  79              	.LBB4759:
  80              	.LBI4759:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
  81              		.loc 2 221 7 view .LVU9
  82              	.LBB4760:
  83              	.LBI4760:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
  84              		.loc 2 186 7 view .LVU10
  85              	.LBB4761:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  86              		.loc 2 187 28 is_stmt 0 view .LVU11
  87 0008 0346     		mov	r3, r0
  88 000a 53F8080F 		ldr	r0, [r3, #8]!
  89              	.LVL4:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  90              		.loc 2 187 28 view .LVU12
  91              	.LBE4761:
  92              	.LBE4760:
  93              	.LBB4762:
  94              	.LBI4762:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
  95              		.loc 2 200 7 is_stmt 1 view .LVU13
  96              	.LBB4763:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
  97              		.loc 2 203 57 is_stmt 0 view .LVU14
  98 000e 0833     		adds	r3, r3, #8
  99              	.LVL5:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccL95Edz.s 			page 16


 100              		.loc 2 203 57 view .LVU15
 101              	.LBE4763:
 102              	.LBE4762:
 103              	.LBE4759:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 104              		.loc 2 231 2 view .LVU16
 105 0010 9842     		cmp	r0, r3
 106 0012 01D0     		beq	.L3
 107              	.LVL6:
 108              	.LBB4764:
 109              	.LBI4764:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 110              		.loc 2 236 7 is_stmt 1 view .LVU17
 111              	.LBB4765:
 112              	.LBB4766:
 113              	.LBI4766:
 114              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 17


  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** {
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   {
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   protected:
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   };
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     using __alloc_rebind
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   /**
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****    * @ingroup allocators
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   */
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     {
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator type
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocated type
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     private:
ARM GAS  /tmp/ccL95Edz.s 			page 18


  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Ptr
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	};
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	};
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Diff
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     public:
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's difference type
ARM GAS  /tmp/ccL95Edz.s 			page 19


 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using is_always_equal
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     private:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
ARM GAS  /tmp/ccL95Edz.s 			page 20


 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static pointer
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct __construct_helper
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  template<typename>
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	};
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using __has_construct
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(::new((void*)__p)
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 			  _Tp(std::forward<_Args>(__args)...)))
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__p->~_Tp()))
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
ARM GAS  /tmp/ccL95Edz.s 			page 21


 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static size_type
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    / sizeof(value_type);
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	}
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static _Alloc2
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a; }
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     public:
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *          of type @c value_type
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
ARM GAS  /tmp/ccL95Edz.s 			page 22


 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static void
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  arguments @a __args...
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
ARM GAS  /tmp/ccL95Edz.s 			page 23


 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static _Alloc
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     };
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   template<typename _Tp>
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     {
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator type
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocated type
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using value_type = _Tp;
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's pointer type.
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using pointer = _Tp*;
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using void_pointer = void*;
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's difference type
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's size type
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using size_type = std::size_t;
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using is_always_equal = true_type;
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up>
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up>
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
ARM GAS  /tmp/ccL95Edz.s 			page 24


 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *          of type @c value_type
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static void
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 115              		.loc 3 469 7 view .LVU18
 116              	.LBB4767:
 117              	.LBI4767:
 118              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  /tmp/ccL95Edz.s 			page 25


  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****  */
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <new>
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <bits/move.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <type_traits>
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** {
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   using std::size_t;
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   /**
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  @ingroup allocators
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    */
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   template<typename _Tp>
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****     class new_allocator
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****     {
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****     public:
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	struct rebind
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
ARM GAS  /tmp/ccL95Edz.s 			page 26


  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       pointer
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       const_pointer
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       _GLIBCXX_NODISCARD pointer
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	if (__n > this->max_size())
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cpp_aligned_new
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  {
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  }
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       void
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 119              		.loc 4 119 7 view .LVU19
 120              	.LBB4768:
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cpp_aligned_new
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  {
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    return;
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  }
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	::operator delete(__p);
 121              		.loc 4 128 19 is_stmt 0 view .LVU20
 122 0014 FFF7FEFF 		bl	_ZdlPv
 123              	.LVL7:
 124              	.L3:
 125              		.loc 4 128 19 view .LVU21
 126              	.LBE4768:
 127              	.LBE4767:
ARM GAS  /tmp/ccL95Edz.s 			page 27


 128              	.LBE4766:
 129              	.LBE4765:
 130              	.LBE4764:
 131              	.LBE4758:
 132              	.LBE4757:
 133              	.LBB4769:
 134              	.LBI4769:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 135              		.loc 2 150 14 is_stmt 1 view .LVU22
 136              	.LBB4770:
 137              	.LBI4770:
 138              		.file 5 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  *
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  */
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** /** @file bits/allocator.h
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  */
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 28


  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #include <type_traits>
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** {
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   /**
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  @addtogroup allocators
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  @{
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    */
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   /// allocator<void> specialization.
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   template<>
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     class allocator<void>
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     {
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     public:
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef size_t      size_type;
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef void*       pointer;
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef const void* const_pointer;
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef void        value_type;
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Tp1>
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	struct rebind
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	void
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	noexcept(noexcept(::new((void *)__p)
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Up>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	void
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	destroy(_Up* __p)
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	noexcept(noexcept(__p->~_Up()))
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ __p->~_Up(); }
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     };
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 29


 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   /**
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  for further details.
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    */
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   template<typename _Tp>
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     {
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    public:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef size_t     size_type;
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef _Tp*       pointer;
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef const _Tp* const_pointer;
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef _Tp&       reference;
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef const _Tp& const_reference;
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef _Tp        value_type;
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Tp1>
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	struct rebind
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // Avoid implicit deprecation.
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Tp1>
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 139              		.loc 5 153 7 view .LVU23
 140              	.LBB4771:
 141              	.LBI4771:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 142              		.loc 4 89 7 view .LVU24
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 30


 143              		.loc 4 89 7 is_stmt 0 view .LVU25
 144              	.LBE4771:
 145              	.LBE4770:
 146              	.LBE4769:
 147              	.LBE4756:
 148              	.LBE4755:
  39:alohal/filesystem/entry.hpp **** 
 149              		.loc 1 39 13 view .LVU26
 150 0018 2046     		mov	r0, r4
 151 001a 10BD     		pop	{r4, pc}
 152              	.LVL8:
 153              	.L6:
  39:alohal/filesystem/entry.hpp **** 
 154              		.loc 1 39 13 view .LVU27
 155              		.align	2
 156              	.L5:
 157 001c 08000000 		.word	_ZTV8FS_entry+8
 158              		.cfi_endproc
 159              	.LFE2966:
 161              		.weak	_ZN8FS_entryD1Ev
 162              		.thumb_set _ZN8FS_entryD1Ev,_ZN8FS_entryD2Ev
 163              		.section	.text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",%progbits,
 164              		.align	1
 165              		.weak	_ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	_ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 172              	.LVL9:
 173              	.LFB4239:
 174              		.file 6 "alohal/filesystem/file.hpp"
   1:alohal/filesystem/file.hpp **** /**
   2:alohal/filesystem/file.hpp ****  * @file file.hpp
   3:alohal/filesystem/file.hpp ****  * @author Petr Malan√≠k (TheColonelYoung(at)gmail(dot)com)
   4:alohal/filesystem/file.hpp ****  * @version 0.1
   5:alohal/filesystem/file.hpp ****  * @date 05.09.2019
   6:alohal/filesystem/file.hpp ****  */
   7:alohal/filesystem/file.hpp **** #pragma once
   8:alohal/filesystem/file.hpp **** 
   9:alohal/filesystem/file.hpp **** #include "entry.hpp"
  10:alohal/filesystem/file.hpp **** #include "misc/invocation_wrapper.hpp"
  11:alohal/filesystem/file.hpp **** 
  12:alohal/filesystem/file.hpp **** #include <string>
  13:alohal/filesystem/file.hpp **** 
  14:alohal/filesystem/file.hpp **** using namespace std;
  15:alohal/filesystem/file.hpp **** 
  16:alohal/filesystem/file.hpp **** /**
  17:alohal/filesystem/file.hpp ****  * @brief   File is another type of filesystem entry, which can contain text
  18:alohal/filesystem/file.hpp ****  *          Location of this test can be RAM, Flash or virtual
  19:alohal/filesystem/file.hpp ****  *          Virtual means that data are obtained at time of reading of file
  20:alohal/filesystem/file.hpp ****  *              - This can be used for reading data which are generated or need to be actual
  21:alohal/filesystem/file.hpp ****  *
  22:alohal/filesystem/file.hpp ****  * @tparam class_T Default template parametr for class, this template serve only when file is virtu
  23:alohal/filesystem/file.hpp ****  */
  24:alohal/filesystem/file.hpp **** template <typename class_T = string>
  25:alohal/filesystem/file.hpp **** class File : public FS_entry
ARM GAS  /tmp/ccL95Edz.s 			page 31


  26:alohal/filesystem/file.hpp **** {
  27:alohal/filesystem/file.hpp **** public:
  28:alohal/filesystem/file.hpp ****     enum class Location {
  29:alohal/filesystem/file.hpp ****         RAM,    // Common variable
  30:alohal/filesystem/file.hpp ****         Flash,  // Saved in MCu Flash memory, at the end after program
  31:alohal/filesystem/file.hpp ****         Virtual // This is method which generates text message which can be printed
  32:alohal/filesystem/file.hpp ****                 //    - Can be used for actual data as temperature, which will be obtained during "
  33:alohal/filesystem/file.hpp ****     };
  34:alohal/filesystem/file.hpp **** private:
  35:alohal/filesystem/file.hpp **** 
  36:alohal/filesystem/file.hpp ****     /**
  37:alohal/filesystem/file.hpp ****      * @brief   Holds pointer to Incovation wrapper which serves as obtainer for data of virtual fi
  38:alohal/filesystem/file.hpp ****      *          This obtainer can returns text or numerical value
  39:alohal/filesystem/file.hpp ****      */
  40:alohal/filesystem/file.hpp ****     Invocation_wrapper<class_T, string, void> *virtual_obtainer_text      = nullptr;
  41:alohal/filesystem/file.hpp ****     Invocation_wrapper<class_T, double, void> *virtual_obtainer_numerical = nullptr;
  42:alohal/filesystem/file.hpp **** 
  43:alohal/filesystem/file.hpp ****     Location location = Location::RAM;
  44:alohal/filesystem/file.hpp **** 
  45:alohal/filesystem/file.hpp ****     /**
  46:alohal/filesystem/file.hpp ****      * @brief Only for file located in RAM
  47:alohal/filesystem/file.hpp ****      */
  48:alohal/filesystem/file.hpp ****     string content;
  49:alohal/filesystem/file.hpp **** 
  50:alohal/filesystem/file.hpp **** public:
  51:alohal/filesystem/file.hpp ****     File() = default;
  52:alohal/filesystem/file.hpp **** 
  53:alohal/filesystem/file.hpp ****     /**
  54:alohal/filesystem/file.hpp ****      * @brief Destroy the File object and removed internal Invocation_wrapper
  55:alohal/filesystem/file.hpp ****      *
  56:alohal/filesystem/file.hpp ****      */
  57:alohal/filesystem/file.hpp ****     ~File(){
 175              		.loc 6 57 5 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		.loc 6 57 5 is_stmt 0 view .LVU29
 180 0000 10B5     		push	{r4, lr}
 181              	.LCFI1:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185 0002 0446     		mov	r4, r0
 186              	.LBB4808:
  58:alohal/filesystem/file.hpp ****         if (location == Location::Virtual && (virtual_obtainer_text != nullptr)) {
  59:alohal/filesystem/file.hpp ****             delete virtual_obtainer_text;
  60:alohal/filesystem/file.hpp ****         } else if (location == Location::Virtual && (virtual_obtainer_numerical != nullptr)) {
  61:alohal/filesystem/file.hpp ****             delete virtual_obtainer_numerical;
  62:alohal/filesystem/file.hpp ****         }
  63:alohal/filesystem/file.hpp ****     }
 187              		.loc 6 63 5 view .LVU30
 188 0004 134B     		ldr	r3, .L15
 189 0006 0360     		str	r3, [r0]
  58:alohal/filesystem/file.hpp ****         if (location == Location::Virtual && (virtual_obtainer_text != nullptr)) {
 190              		.loc 6 58 13 view .LVU31
 191 0008 C36A     		ldr	r3, [r0, #44]
  58:alohal/filesystem/file.hpp ****         if (location == Location::Virtual && (virtual_obtainer_text != nullptr)) {
ARM GAS  /tmp/ccL95Edz.s 			page 32


 192              		.loc 6 58 9 view .LVU32
 193 000a 022B     		cmp	r3, #2
 194 000c 14D0     		beq	.L13
 195              	.LVL10:
 196              	.L8:
  60:alohal/filesystem/file.hpp ****             delete virtual_obtainer_numerical;
 197              		.loc 6 60 16 view .LVU33
 198 000e 022B     		cmp	r3, #2
 199 0010 19D0     		beq	.L14
 200              	.L9:
 201              	.LVL11:
 202              	.LBB4809:
 203              	.LBI4809:
 204              		.loc 2 657 7 is_stmt 1 view .LVU34
 205              	.LBB4810:
 206              	.LBI4810:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 207              		.loc 2 229 7 view .LVU35
 208              	.LBB4811:
 209              	.LBB4812:
 210              	.LBI4812:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 211              		.loc 2 221 7 view .LVU36
 212              	.LBB4813:
 213              	.LBI4813:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 214              		.loc 2 186 7 view .LVU37
 215              	.LBB4814:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 216              		.loc 2 187 28 is_stmt 0 view .LVU38
 217 0012 206B     		ldr	r0, [r4, #48]
 218              	.LVL12:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 219              		.loc 2 187 28 view .LVU39
 220              	.LBE4814:
 221              	.LBE4813:
 222              	.LBB4815:
 223              	.LBI4815:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 224              		.loc 2 200 7 is_stmt 1 view .LVU40
 225              	.LBB4816:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 226              		.loc 2 203 57 is_stmt 0 view .LVU41
 227 0014 04F13803 		add	r3, r4, #56
 228              	.LVL13:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 229              		.loc 2 203 57 view .LVU42
 230              	.LBE4816:
 231              	.LBE4815:
 232              	.LBE4812:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233              		.loc 2 231 2 view .LVU43
 234 0018 9842     		cmp	r0, r3
 235 001a 01D0     		beq	.L10
 236              	.LVL14:
 237              	.LBB4817:
 238              	.LBI4817:
ARM GAS  /tmp/ccL95Edz.s 			page 33


 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 239              		.loc 2 236 7 is_stmt 1 view .LVU44
 240              	.LBB4818:
 241              	.LBB4819:
 242              	.LBI4819:
 243              		.loc 3 469 7 view .LVU45
 244              	.LBB4820:
 245              	.LBI4820:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 246              		.loc 4 119 7 view .LVU46
 247              	.LBB4821:
 248              		.loc 4 128 19 is_stmt 0 view .LVU47
 249 001c FFF7FEFF 		bl	_ZdlPv
 250              	.LVL15:
 251              	.L10:
 252              		.loc 4 128 19 view .LVU48
 253              	.LBE4821:
 254              	.LBE4820:
 255              	.LBE4819:
 256              	.LBE4818:
 257              	.LBE4817:
 258              	.LBE4811:
 259              	.LBE4810:
 260              	.LBB4822:
 261              	.LBI4822:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 262              		.loc 2 150 14 is_stmt 1 view .LVU49
 263              	.LBB4823:
 264              	.LBI4823:
 265              		.loc 5 153 7 view .LVU50
 266              	.LBB4824:
 267              	.LBI4824:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 268              		.loc 4 89 7 view .LVU51
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 269              		.loc 4 89 7 is_stmt 0 view .LVU52
 270              	.LBE4824:
 271              	.LBE4823:
 272              	.LBE4822:
 273              	.LBE4809:
 274              	.LBB4825:
 275              	.LBI4825:
  39:alohal/filesystem/entry.hpp **** 
 276              		.loc 1 39 13 is_stmt 1 view .LVU53
 277              	.LBB4826:
 278 0020 0D4B     		ldr	r3, .L15+4
 279 0022 2360     		str	r3, [r4]
 280              	.LVL16:
 281              	.LBB4827:
 282              	.LBI4827:
 283              		.loc 2 657 7 view .LVU54
 284              	.LBB4828:
 285              	.LBI4828:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 286              		.loc 2 229 7 view .LVU55
 287              	.LBB4829:
 288              	.LBB4830:
ARM GAS  /tmp/ccL95Edz.s 			page 34


 289              	.LBI4830:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 290              		.loc 2 221 7 view .LVU56
 291              	.LBB4831:
 292              	.LBI4831:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 293              		.loc 2 186 7 view .LVU57
 294              	.LBB4832:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 295              		.loc 2 187 28 is_stmt 0 view .LVU58
 296 0024 2346     		mov	r3, r4
 297 0026 53F8080F 		ldr	r0, [r3, #8]!
 298              	.LVL17:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 299              		.loc 2 187 28 view .LVU59
 300              	.LBE4832:
 301              	.LBE4831:
 302              	.LBB4833:
 303              	.LBI4833:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 304              		.loc 2 200 7 is_stmt 1 view .LVU60
 305              	.LBB4834:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 306              		.loc 2 203 57 is_stmt 0 view .LVU61
 307 002a 0833     		adds	r3, r3, #8
 308              	.LVL18:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 309              		.loc 2 203 57 view .LVU62
 310              	.LBE4834:
 311              	.LBE4833:
 312              	.LBE4830:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 313              		.loc 2 231 2 view .LVU63
 314 002c 9842     		cmp	r0, r3
 315 002e 01D0     		beq	.L11
 316              	.LVL19:
 317              	.LBB4835:
 318              	.LBI4835:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 319              		.loc 2 236 7 is_stmt 1 view .LVU64
 320              	.LBB4836:
 321              	.LBB4837:
 322              	.LBI4837:
 323              		.loc 3 469 7 view .LVU65
 324              	.LBB4838:
 325              	.LBI4838:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 326              		.loc 4 119 7 view .LVU66
 327              	.LBB4839:
 328              		.loc 4 128 19 is_stmt 0 view .LVU67
 329 0030 FFF7FEFF 		bl	_ZdlPv
 330              	.LVL20:
 331              	.L11:
 332              		.loc 4 128 19 view .LVU68
 333              	.LBE4839:
 334              	.LBE4838:
 335              	.LBE4837:
ARM GAS  /tmp/ccL95Edz.s 			page 35


 336              	.LBE4836:
 337              	.LBE4835:
 338              	.LBE4829:
 339              	.LBE4828:
 340              	.LBB4840:
 341              	.LBI4840:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 342              		.loc 2 150 14 is_stmt 1 view .LVU69
 343              	.LBB4841:
 344              	.LBI4841:
 345              		.loc 5 153 7 view .LVU70
 346              	.LBB4842:
 347              	.LBI4842:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 348              		.loc 4 89 7 view .LVU71
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 349              		.loc 4 89 7 is_stmt 0 view .LVU72
 350              	.LBE4842:
 351              	.LBE4841:
 352              	.LBE4840:
 353              	.LBE4827:
 354              	.LBE4826:
 355              	.LBE4825:
 356              	.LBE4808:
 357              		.loc 6 63 5 view .LVU73
 358 0034 2046     		mov	r0, r4
 359 0036 10BD     		pop	{r4, pc}
 360              	.LVL21:
 361              	.L13:
 362              	.LBB4843:
  58:alohal/filesystem/file.hpp ****             delete virtual_obtainer_text;
 363              		.loc 6 58 47 discriminator 1 view .LVU74
 364 0038 406A     		ldr	r0, [r0, #36]
 365              	.LVL22:
  58:alohal/filesystem/file.hpp ****             delete virtual_obtainer_text;
 366              		.loc 6 58 43 discriminator 1 view .LVU75
 367 003a 0028     		cmp	r0, #0
 368 003c E7D0     		beq	.L8
  59:alohal/filesystem/file.hpp ****         } else if (location == Location::Virtual && (virtual_obtainer_numerical != nullptr)) {
 369              		.loc 6 59 13 discriminator 1 view .LVU76
 370 003e 0368     		ldr	r3, [r0]
 371 0040 5B68     		ldr	r3, [r3, #4]
 372 0042 9847     		blx	r3
 373              	.LVL23:
 374 0044 E5E7     		b	.L9
 375              	.L14:
  60:alohal/filesystem/file.hpp ****             delete virtual_obtainer_numerical;
 376              		.loc 6 60 54 discriminator 1 view .LVU77
 377 0046 A06A     		ldr	r0, [r4, #40]
  60:alohal/filesystem/file.hpp ****             delete virtual_obtainer_numerical;
 378              		.loc 6 60 50 discriminator 1 view .LVU78
 379 0048 0028     		cmp	r0, #0
 380 004a E2D0     		beq	.L9
  61:alohal/filesystem/file.hpp ****         }
 381              		.loc 6 61 13 discriminator 1 view .LVU79
 382 004c 0368     		ldr	r3, [r0]
 383 004e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccL95Edz.s 			page 36


 384 0050 9847     		blx	r3
 385              	.LVL24:
 386 0052 DEE7     		b	.L9
 387              	.L16:
 388              		.align	2
 389              	.L15:
 390 0054 08000000 		.word	_ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE+8
 391 0058 08000000 		.word	_ZTV8FS_entry+8
 392              	.LBE4843:
 393              		.cfi_endproc
 394              	.LFE4239:
 396              		.weak	_ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 397              		.thumb_set _ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZN4FileINSt7__cxx11
 398              		.section	.text._ZN8FS_entryD0Ev,"axG",%progbits,_ZN8FS_entryD5Ev,comdat
 399              		.align	1
 400              		.weak	_ZN8FS_entryD0Ev
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv4-sp-d16
 406              	_ZN8FS_entryD0Ev:
 407              	.LVL25:
 408              	.LFB2968:
  39:alohal/filesystem/entry.hpp **** 
 409              		.loc 1 39 13 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
  39:alohal/filesystem/entry.hpp **** 
 413              		.loc 1 39 13 is_stmt 0 view .LVU81
 414 0000 10B5     		push	{r4, lr}
 415              	.LCFI2:
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 419 0002 0446     		mov	r4, r0
 420              	.LVL26:
 421              	.LBB4844:
 422              	.LBI4844:
  39:alohal/filesystem/entry.hpp **** 
 423              		.loc 1 39 13 is_stmt 1 view .LVU82
 424              	.LBB4845:
 425 0004 074B     		ldr	r3, .L20
 426 0006 0360     		str	r3, [r0]
 427              	.LVL27:
 428              	.LBB4846:
 429              	.LBI4846:
 430              		.loc 2 657 7 view .LVU83
 431              	.LBB4847:
 432              	.LBI4847:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 433              		.loc 2 229 7 view .LVU84
 434              	.LBB4848:
 435              	.LBB4849:
 436              	.LBI4849:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 437              		.loc 2 221 7 view .LVU85
ARM GAS  /tmp/ccL95Edz.s 			page 37


 438              	.LBB4850:
 439              	.LBI4850:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 440              		.loc 2 186 7 view .LVU86
 441              	.LBB4851:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 442              		.loc 2 187 28 is_stmt 0 view .LVU87
 443 0008 0346     		mov	r3, r0
 444 000a 53F8080F 		ldr	r0, [r3, #8]!
 445              	.LVL28:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 446              		.loc 2 187 28 view .LVU88
 447              	.LBE4851:
 448              	.LBE4850:
 449              	.LBB4852:
 450              	.LBI4852:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 451              		.loc 2 200 7 is_stmt 1 view .LVU89
 452              	.LBB4853:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 453              		.loc 2 203 57 is_stmt 0 view .LVU90
 454 000e 0833     		adds	r3, r3, #8
 455              	.LVL29:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 456              		.loc 2 203 57 view .LVU91
 457              	.LBE4853:
 458              	.LBE4852:
 459              	.LBE4849:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 460              		.loc 2 231 2 view .LVU92
 461 0010 9842     		cmp	r0, r3
 462 0012 01D0     		beq	.L18
 463              	.LVL30:
 464              	.LBB4854:
 465              	.LBI4854:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 466              		.loc 2 236 7 is_stmt 1 view .LVU93
 467              	.LBB4855:
 468              	.LBB4856:
 469              	.LBI4856:
 470              		.loc 3 469 7 view .LVU94
 471              	.LBB4857:
 472              	.LBI4857:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 473              		.loc 4 119 7 view .LVU95
 474              	.LBB4858:
 475              		.loc 4 128 19 is_stmt 0 view .LVU96
 476 0014 FFF7FEFF 		bl	_ZdlPv
 477              	.LVL31:
 478              	.L18:
 479              		.loc 4 128 19 view .LVU97
 480              	.LBE4858:
 481              	.LBE4857:
 482              	.LBE4856:
 483              	.LBE4855:
 484              	.LBE4854:
 485              	.LBE4848:
ARM GAS  /tmp/ccL95Edz.s 			page 38


 486              	.LBE4847:
 487              	.LBB4859:
 488              	.LBI4859:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 489              		.loc 2 150 14 is_stmt 1 view .LVU98
 490              	.LBB4860:
 491              	.LBI4860:
 492              		.loc 5 153 7 view .LVU99
 493              	.LBB4861:
 494              	.LBI4861:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 495              		.loc 4 89 7 view .LVU100
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 496              		.loc 4 89 7 is_stmt 0 view .LVU101
 497              	.LBE4861:
 498              	.LBE4860:
 499              	.LBE4859:
 500              	.LBE4846:
 501              	.LBE4845:
 502              	.LBE4844:
  39:alohal/filesystem/entry.hpp **** 
 503              		.loc 1 39 13 view .LVU102
 504 0018 2421     		movs	r1, #36
 505 001a 2046     		mov	r0, r4
 506 001c FFF7FEFF 		bl	_ZdlPvj
 507              	.LVL32:
 508 0020 2046     		mov	r0, r4
 509 0022 10BD     		pop	{r4, pc}
 510              	.LVL33:
 511              	.L21:
  39:alohal/filesystem/entry.hpp **** 
 512              		.loc 1 39 13 view .LVU103
 513              		.align	2
 514              	.L20:
 515 0024 08000000 		.word	_ZTV8FS_entry+8
 516              		.cfi_endproc
 517              	.LFE2968:
 519              		.section	.text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev,"axG",%progbits,
 520              		.align	1
 521              		.weak	_ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv4-sp-d16
 527              	_ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev:
 528              	.LVL34:
 529              	.LFB4241:
  57:alohal/filesystem/file.hpp ****         if (location == Location::Virtual && (virtual_obtainer_text != nullptr)) {
 530              		.loc 6 57 5 is_stmt 1 view -0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
  57:alohal/filesystem/file.hpp ****         if (location == Location::Virtual && (virtual_obtainer_text != nullptr)) {
 534              		.loc 6 57 5 is_stmt 0 view .LVU105
 535 0000 10B5     		push	{r4, lr}
 536              	.LCFI3:
 537              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccL95Edz.s 			page 39


 538              		.cfi_offset 4, -8
 539              		.cfi_offset 14, -4
 540 0002 0446     		mov	r4, r0
 541              	.LVL35:
 542              	.LBB4900:
 543              	.LBI4900:
  57:alohal/filesystem/file.hpp ****         if (location == Location::Virtual && (virtual_obtainer_text != nullptr)) {
 544              		.loc 6 57 5 is_stmt 1 view .LVU106
 545              	.LBB4901:
 546              		.loc 6 63 5 is_stmt 0 view .LVU107
 547 0004 154B     		ldr	r3, .L30
 548 0006 0360     		str	r3, [r0]
  58:alohal/filesystem/file.hpp ****             delete virtual_obtainer_text;
 549              		.loc 6 58 13 view .LVU108
 550 0008 C36A     		ldr	r3, [r0, #44]
  58:alohal/filesystem/file.hpp ****             delete virtual_obtainer_text;
 551              		.loc 6 58 9 view .LVU109
 552 000a 022B     		cmp	r3, #2
 553 000c 18D0     		beq	.L28
 554              	.LVL36:
 555              	.L23:
  60:alohal/filesystem/file.hpp ****             delete virtual_obtainer_numerical;
 556              		.loc 6 60 16 view .LVU110
 557 000e 022B     		cmp	r3, #2
 558 0010 1DD0     		beq	.L29
 559              	.L24:
 560              	.LVL37:
 561              	.LBB4902:
 562              	.LBI4902:
 563              		.loc 2 657 7 is_stmt 1 view .LVU111
 564              	.LBB4903:
 565              	.LBI4903:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 566              		.loc 2 229 7 view .LVU112
 567              	.LBB4904:
 568              	.LBB4905:
 569              	.LBI4905:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 570              		.loc 2 221 7 view .LVU113
 571              	.LBB4906:
 572              	.LBI4906:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 573              		.loc 2 186 7 view .LVU114
 574              	.LBB4907:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 575              		.loc 2 187 28 is_stmt 0 view .LVU115
 576 0012 206B     		ldr	r0, [r4, #48]
 577              	.LVL38:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 578              		.loc 2 187 28 view .LVU116
 579              	.LBE4907:
 580              	.LBE4906:
 581              	.LBB4908:
 582              	.LBI4908:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 583              		.loc 2 200 7 is_stmt 1 view .LVU117
 584              	.LBB4909:
ARM GAS  /tmp/ccL95Edz.s 			page 40


 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 585              		.loc 2 203 57 is_stmt 0 view .LVU118
 586 0014 04F13803 		add	r3, r4, #56
 587              	.LVL39:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 588              		.loc 2 203 57 view .LVU119
 589              	.LBE4909:
 590              	.LBE4908:
 591              	.LBE4905:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 592              		.loc 2 231 2 view .LVU120
 593 0018 9842     		cmp	r0, r3
 594 001a 01D0     		beq	.L25
 595              	.LVL40:
 596              	.LBB4910:
 597              	.LBI4910:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 598              		.loc 2 236 7 is_stmt 1 view .LVU121
 599              	.LBB4911:
 600              	.LBB4912:
 601              	.LBI4912:
 602              		.loc 3 469 7 view .LVU122
 603              	.LBB4913:
 604              	.LBI4913:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 605              		.loc 4 119 7 view .LVU123
 606              	.LBB4914:
 607              		.loc 4 128 19 is_stmt 0 view .LVU124
 608 001c FFF7FEFF 		bl	_ZdlPv
 609              	.LVL41:
 610              	.L25:
 611              		.loc 4 128 19 view .LVU125
 612              	.LBE4914:
 613              	.LBE4913:
 614              	.LBE4912:
 615              	.LBE4911:
 616              	.LBE4910:
 617              	.LBE4904:
 618              	.LBE4903:
 619              	.LBB4915:
 620              	.LBI4915:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 621              		.loc 2 150 14 is_stmt 1 view .LVU126
 622              	.LBB4916:
 623              	.LBI4916:
 624              		.loc 5 153 7 view .LVU127
 625              	.LBB4917:
 626              	.LBI4917:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 627              		.loc 4 89 7 view .LVU128
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 628              		.loc 4 89 7 is_stmt 0 view .LVU129
 629              	.LBE4917:
 630              	.LBE4916:
 631              	.LBE4915:
 632              	.LBE4902:
 633              	.LBB4918:
ARM GAS  /tmp/ccL95Edz.s 			page 41


 634              	.LBI4918:
  39:alohal/filesystem/entry.hpp **** 
 635              		.loc 1 39 13 is_stmt 1 view .LVU130
 636              	.LBB4919:
 637 0020 0F4B     		ldr	r3, .L30+4
 638 0022 2360     		str	r3, [r4]
 639              	.LVL42:
 640              	.LBB4920:
 641              	.LBI4920:
 642              		.loc 2 657 7 view .LVU131
 643              	.LBB4921:
 644              	.LBI4921:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 645              		.loc 2 229 7 view .LVU132
 646              	.LBB4922:
 647              	.LBB4923:
 648              	.LBI4923:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 649              		.loc 2 221 7 view .LVU133
 650              	.LBB4924:
 651              	.LBI4924:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 652              		.loc 2 186 7 view .LVU134
 653              	.LBB4925:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 654              		.loc 2 187 28 is_stmt 0 view .LVU135
 655 0024 2346     		mov	r3, r4
 656 0026 53F8080F 		ldr	r0, [r3, #8]!
 657              	.LVL43:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 658              		.loc 2 187 28 view .LVU136
 659              	.LBE4925:
 660              	.LBE4924:
 661              	.LBB4926:
 662              	.LBI4926:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 663              		.loc 2 200 7 is_stmt 1 view .LVU137
 664              	.LBB4927:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 665              		.loc 2 203 57 is_stmt 0 view .LVU138
 666 002a 0833     		adds	r3, r3, #8
 667              	.LVL44:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 668              		.loc 2 203 57 view .LVU139
 669              	.LBE4927:
 670              	.LBE4926:
 671              	.LBE4923:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 672              		.loc 2 231 2 view .LVU140
 673 002c 9842     		cmp	r0, r3
 674 002e 01D0     		beq	.L26
 675              	.LVL45:
 676              	.LBB4928:
 677              	.LBI4928:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 678              		.loc 2 236 7 is_stmt 1 view .LVU141
 679              	.LBB4929:
ARM GAS  /tmp/ccL95Edz.s 			page 42


 680              	.LBB4930:
 681              	.LBI4930:
 682              		.loc 3 469 7 view .LVU142
 683              	.LBB4931:
 684              	.LBI4931:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 685              		.loc 4 119 7 view .LVU143
 686              	.LBB4932:
 687              		.loc 4 128 19 is_stmt 0 view .LVU144
 688 0030 FFF7FEFF 		bl	_ZdlPv
 689              	.LVL46:
 690              	.L26:
 691              		.loc 4 128 19 view .LVU145
 692              	.LBE4932:
 693              	.LBE4931:
 694              	.LBE4930:
 695              	.LBE4929:
 696              	.LBE4928:
 697              	.LBE4922:
 698              	.LBE4921:
 699              	.LBB4933:
 700              	.LBI4933:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 701              		.loc 2 150 14 is_stmt 1 view .LVU146
 702              	.LBB4934:
 703              	.LBI4934:
 704              		.loc 5 153 7 view .LVU147
 705              	.LBB4935:
 706              	.LBI4935:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 707              		.loc 4 89 7 view .LVU148
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 708              		.loc 4 89 7 is_stmt 0 view .LVU149
 709              	.LBE4935:
 710              	.LBE4934:
 711              	.LBE4933:
 712              	.LBE4920:
 713              	.LBE4919:
 714              	.LBE4918:
 715              	.LBE4901:
 716              	.LBE4900:
 717              		.loc 6 63 5 view .LVU150
 718 0034 4821     		movs	r1, #72
 719 0036 2046     		mov	r0, r4
 720 0038 FFF7FEFF 		bl	_ZdlPvj
 721              	.LVL47:
 722 003c 2046     		mov	r0, r4
 723 003e 10BD     		pop	{r4, pc}
 724              	.LVL48:
 725              	.L28:
 726              	.LBB4937:
 727              	.LBB4936:
  58:alohal/filesystem/file.hpp ****             delete virtual_obtainer_text;
 728              		.loc 6 58 47 view .LVU151
 729 0040 406A     		ldr	r0, [r0, #36]
 730              	.LVL49:
  58:alohal/filesystem/file.hpp ****             delete virtual_obtainer_text;
ARM GAS  /tmp/ccL95Edz.s 			page 43


 731              		.loc 6 58 43 view .LVU152
 732 0042 0028     		cmp	r0, #0
 733 0044 E3D0     		beq	.L23
  59:alohal/filesystem/file.hpp ****         } else if (location == Location::Virtual && (virtual_obtainer_numerical != nullptr)) {
 734              		.loc 6 59 13 view .LVU153
 735 0046 0368     		ldr	r3, [r0]
 736 0048 5B68     		ldr	r3, [r3, #4]
 737 004a 9847     		blx	r3
 738              	.LVL50:
 739 004c E1E7     		b	.L24
 740              	.L29:
  60:alohal/filesystem/file.hpp ****             delete virtual_obtainer_numerical;
 741              		.loc 6 60 54 view .LVU154
 742 004e A06A     		ldr	r0, [r4, #40]
  60:alohal/filesystem/file.hpp ****             delete virtual_obtainer_numerical;
 743              		.loc 6 60 50 view .LVU155
 744 0050 0028     		cmp	r0, #0
 745 0052 DED0     		beq	.L24
  61:alohal/filesystem/file.hpp ****         }
 746              		.loc 6 61 13 view .LVU156
 747 0054 0368     		ldr	r3, [r0]
 748 0056 5B68     		ldr	r3, [r3, #4]
 749 0058 9847     		blx	r3
 750              	.LVL51:
 751 005a DAE7     		b	.L24
 752              	.L31:
 753              		.align	2
 754              	.L30:
 755 005c 08000000 		.word	_ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE+8
 756 0060 08000000 		.word	_ZTV8FS_entry+8
 757              	.LBE4936:
 758              	.LBE4937:
 759              		.cfi_endproc
 760              	.LFE4241:
 762              		.section	.rodata._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_.st
 763              		.align	2
 764              	.LC0:
 765 0000 62617369 		.ascii	"basic_string::append\000"
 765      635F7374 
 765      72696E67 
 765      3A3A6170 
 765      70656E64 
 766              		.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG
 767              		.align	1
 768              		.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:
 775              	.LVL52:
 776              	.LFB3741:
 777              		.file 7 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** //
ARM GAS  /tmp/ccL95Edz.s 			page 44


   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** //
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** //
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #pragma GCC system_header
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** {
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this == &__s)
ARM GAS  /tmp/ccL95Edz.s 			page 45


  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return;
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_is_local())
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		return;
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    else if (length())
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		return;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	else
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
ARM GAS  /tmp/ccL95Edz.s 			page 46


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // null char_type() element.
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       void
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    ++__beg;
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccL95Edz.s 			page 47


 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  {
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_dispose();
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  }
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		++__beg;
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       void
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_set_length(__dnew);
ARM GAS  /tmp/ccL95Edz.s 			page 48


 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_construct(size_type __n, _CharT __c)
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n > size_type(_S_local_capacity))
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(_M_create(__n, size_type(0)));
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_capacity(__n);
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_assign(_M_data(), __n, __c);
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_set_length(__n);
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_assign(const basic_string& __str)
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this != &__str)
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __rsize = __str.length();
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __capacity = capacity();
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__rsize > __capacity)
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      size_type __new_capacity = __rsize;
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      pointer __tmp = _M_create(__new_capacity, __capacity);
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_dispose();
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(__tmp);
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_capacity(__new_capacity);
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__rsize)
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->_S_copy(_M_data(), __str._M_data(), __rsize);
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_set_length(__rsize);
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     reserve(size_type __res)
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Make sure we don't shrink below the current size.
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__res < length())
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__res = length();
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __capacity = capacity();
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__res != __capacity)
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
ARM GAS  /tmp/ccL95Edz.s 			page 49


 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__res > __capacity
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      || __res > size_type(_S_local_capacity))
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      pointer __tmp = _M_create(__res, __capacity);
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      this->_S_copy(__tmp, _M_data(), length() + 1);
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_dispose();
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(__tmp);
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_capacity(__res);
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else if (!_M_is_local())
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      this->_S_copy(_M_local_data(), _M_data(), length() + 1);
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_destroy(__capacity);
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(_M_local_data());
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      size_type __len2)
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __how_much = length() - __pos - __len1;
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       size_type __new_capacity = length() + __len2 - __len1;
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       pointer __r = _M_create(__new_capacity, capacity());
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__pos)
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_copy(__r, _M_data(), __pos);
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__s && __len2)
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_copy(__r + __pos, __s, __len2);
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__how_much)
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_copy(__r + __pos + __len2,
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      _M_data() + __pos + __len1, __how_much);
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_dispose();
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_data(__r);
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_capacity(__new_capacity);
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_erase(size_type __pos, size_type __n)
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __how_much = length() - __pos - __n;
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__how_much && __n)
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_move(_M_data() + __pos, _M_data() + __pos + __n, __how_much);
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_set_length(length() - __n);
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
ARM GAS  /tmp/ccL95Edz.s 			page 50


 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     resize(size_type __n, _CharT __c)
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = this->size();
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__size < __n)
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->append(__n - __size, __c);
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else if (__n < __size)
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_set_length(__n);
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_append(const _CharT* __s, size_type __n)
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __len = __n + this->size();
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__len <= this->capacity())
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__n)
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_mutate(this->size(), size_type(0), __s, __n);
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       this->_M_set_length(__len);
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InputIterator>
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>&
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_replace_dispatch(const_iterator __i1, const_iterator __i2,
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  _InputIterator __k1, _InputIterator __k2,
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  std::__false_type)
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const basic_string __s(__k1, __k2);
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const size_type __n1 = __i2 - __i1;
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _M_replace(__i1 - begin(), __n1, __s._M_data(),
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  __s.size());
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   _CharT __c)
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __old_size = this->size();
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __new_size = __old_size + __n2 - __n1;
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__new_size <= this->capacity())
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  pointer __p = this->_M_data() + __pos1;
ARM GAS  /tmp/ccL95Edz.s 			page 51


 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __how_much = __old_size - __pos1 - __n1;
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__how_much && __n1 != __n2)
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->_S_move(__p + __n2, __p + __n1, __how_much);
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_mutate(__pos1, __n1, 0, __n2);
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n2)
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_assign(this->_M_data() + __pos1, __n2, __c);
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       this->_M_set_length(__new_size);
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	       const size_type __len2)
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__len1, __len2, "basic_string::_M_replace");
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __old_size = this->size();
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __new_size = __old_size + __len2 - __len1;
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__new_size <= this->capacity())
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  pointer __p = this->_M_data() + __pos;
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __how_much = __old_size - __pos - __len1;
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (_M_disjunct(__s))
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__how_much && __len1 != __len2)
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_move(__p + __len2, __p + __len1, __how_much);
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__len2)
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_copy(__p, __s, __len2);
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      // Work in-place.
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__len2 && __len2 <= __len1)
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_move(__p, __s, __len2);
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__how_much && __len1 != __len2)
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_move(__p + __len2, __p + __len1, __how_much);
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__len2 > __len1)
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		{
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  if (__s + __len2 <= __p + __len1)
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    this->_S_move(__p, __s, __len2);
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  else if (__s >= __p + __len1)
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    this->_S_copy(__p, __s + __len2 - __len1, __len2);
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  else
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    {
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      const size_type __nleft = (__p + __len1) - __s;
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      this->_S_move(__p, __s, __nleft);
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      this->_S_copy(__p + __nleft, __p + __len2,
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				    __len2 - __nleft);
ARM GAS  /tmp/ccL95Edz.s 			page 52


 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    }
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		}
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_mutate(__pos, __len1, __s, __len2);
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       this->_M_set_length(__new_size);
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::size_type
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     copy(_CharT* __s, size_type __n, size_type __pos) const
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check(__pos, "basic_string::copy");
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __n = _M_limit(__pos, __n);
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_S_copy(__s, _M_data() + __pos, __n);
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 21.3.5.7 par 3: do not append null.  (good.)
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __n;
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #else  // !_GLIBCXX_USE_CXX11_ABI
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _Rep::_S_max_size = (((npos - sizeof(_Rep_base))/sizeof(_CharT)) - 1) / 4;
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const _CharT
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _Rep::_S_terminal = _CharT();
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // Linker sets _S_empty_rep_storage to all 0s (one reference, empty string)
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // at static init time (before static ctors are run).
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::size_type
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep_storage[
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     (sizeof(_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) /
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       sizeof(size_type)];
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _CharT*
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
ARM GAS  /tmp/ccL95Edz.s 			page 53


 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   input_iterator_tag)
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__beg == __end && __a == _Alloc())
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  return _S_empty_rep()._M_refdata();
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// Avoid reallocation for common case.
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_CharT __buf[128];
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __len = 0;
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	while (__beg != __end && __len < sizeof(__buf) / sizeof(_CharT))
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __buf[__len++] = *__beg;
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    ++__beg;
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_Rep* __r = _Rep::_S_create(__len, size_type(0), __a);
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(__r->_M_refdata(), __buf, __len);
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    while (__beg != __end)
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		if (__len == __r->_M_capacity)
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  {
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    // Allocate more space.
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _Rep* __another = _Rep::_S_create(__len + 1, __len, __a);
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_copy(__another->_M_refdata(), __r->_M_refdata(), __len);
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    __r->_M_destroy(__a);
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    __r = __another;
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  }
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		__r->_M_refdata()[__len++] = *__beg;
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		++__beg;
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __r->_M_destroy(__a);
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__r->_M_set_length_and_sharable(__len);
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return __r->_M_refdata();
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template <typename _InIterator>
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _CharT*
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   forward_iterator_tag)
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__beg == __end && __a == _Alloc())
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  return _S_empty_rep()._M_refdata();
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __throw_logic_error(__N("basic_string::_S_construct null not valid"));
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccL95Edz.s 			page 54


 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const size_type __dnew = static_cast<size_type>(std::distance(__beg,
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 								      __end));
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_Rep* __r = _Rep::_S_create(__dnew, size_type(0), __a);
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  { _S_copy_chars(__r->_M_refdata(), __beg, __end); }
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __r->_M_destroy(__a);
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__r->_M_set_length_and_sharable(__dnew);
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return __r->_M_refdata();
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _CharT*
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _S_construct(size_type __n, _CharT __c, const _Alloc& __a)
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n == 0 && __a == _Alloc())
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _S_empty_rep()._M_refdata();
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Check for out_of_range and length_error exceptions.
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Rep* __r = _Rep::_S_create(__n, size_type(0), __a);
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_assign(__r->_M_refdata(), __n, __c);
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __r->_M_set_length_and_sharable(__n);
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __r->_M_refdata();
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str)
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(__str._M_rep()->_M_grab(_Alloc(__str.get_allocator()),
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 					  __str.get_allocator()),
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  __str.get_allocator())
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const _Alloc& __a)
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(size_type(), _CharT(), __a), __a)
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str, size_type __pos, const _Alloc& __a)
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__str._M_data()
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __str._M_check(__pos,
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 						"basic_string::basic_string"),
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __str._M_data() + __str._M_limit(__pos, npos)
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __pos, __a), __a)
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccL95Edz.s 			page 55


 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str, size_type __pos, size_type __n)
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__str._M_data()
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __str._M_check(__pos,
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 						"basic_string::basic_string"),
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __str._M_data() + __str._M_limit(__pos, __n)
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __pos, _Alloc()), _Alloc())
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str, size_type __pos,
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		 size_type __n, const _Alloc& __a)
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__str._M_data()
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __str._M_check(__pos,
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 						"basic_string::basic_string"),
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __str._M_data() + __str._M_limit(__pos, __n)
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __pos, __a), __a)
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // TBD: DPG annotate
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const _CharT* __s, size_type __n, const _Alloc& __a)
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__s, __s + __n, __a), __a)
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // TBD: DPG annotate
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const _CharT* __s, const _Alloc& __a)
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __s + npos, __a), __a)
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(size_type __n, _CharT __c, const _Alloc& __a)
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__n, __c, __a), __a)
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // TBD: DPG annotate
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InputIterator>
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc& __a)
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__beg, __end, __a), __a)
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if __cplusplus >= 201103L
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(initializer_list<_CharT> __l, const _Alloc& __a)
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__l.begin(), __l.end(), __a), __a)
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
ARM GAS  /tmp/ccL95Edz.s 			page 56


 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     assign(const basic_string& __str)
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep() != __str._M_rep())
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // XXX MT
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const allocator_type __a = this->get_allocator();
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _CharT* __tmp = __str._M_rep()->_M_grab(__a, __str.get_allocator());
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_dispose(__a);
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__tmp);
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     assign(const _CharT* __s, size_type __n)
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(this->size(), __n, "basic_string::assign");
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _M_replace_safe(size_type(0), this->size(), __s, __n);
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Work in-place.
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __pos = __s - _M_data();
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__pos >= __n)
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_copy(_M_data(), __s, __n);
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else if (__pos)
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_move(_M_data(), __s, __n);
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__n);
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  return *this;
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(size_type __n, _CharT __c)
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_check_length(size_type(0), __n, "basic_string::append");	  
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __n + this->size();
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->reserve(__len);
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_assign(_M_data() + this->size(), __n, __c);
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
ARM GAS  /tmp/ccL95Edz.s 			page 57


 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(const _CharT* __s, size_type __n)
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_check_length(size_type(0), __n, "basic_string::append");
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __n + this->size();
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (_M_disjunct(__s))
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->reserve(__len);
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      else
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		{
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  const size_type __off = __s - _M_data();
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  this->reserve(__len);
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  __s = _M_data() + __off;
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		}
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_copy(_M_data() + this->size(), __s, __n);
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(const basic_string& __str)
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = __str.size();
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__size)
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __size + this->size();
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->reserve(__len);
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_copy(_M_data() + this->size(), __str._M_data(), __size);
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }    
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(const basic_string& __str, size_type __pos, size_type __n)
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str._M_check(__pos, "basic_string::append");
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __n = __str._M_limit(__pos, __n);
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __n + this->size();
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->reserve(__len);
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_copy(_M_data() + this->size(), __str._M_data() + __pos, __n);
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);	  
ARM GAS  /tmp/ccL95Edz.s 			page 58


 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    template<typename _CharT, typename _Traits, typename _Alloc>
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>&
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>::
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      insert(size_type __pos, const _CharT* __s, size_type __n)
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      {
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        __glibcxx_requires_string_len(__s, __n);
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check(__pos, "basic_string::insert");
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check_length(size_type(0), __n, "basic_string::insert");
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          return _M_replace_safe(__pos, size_type(0), __s, __n);
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          {
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            // Work in-place.
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            const size_type __off = __s - _M_data();
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            _M_mutate(__pos, 0, __n);
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            __s = _M_data() + __off;
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            _CharT* __p = _M_data() + __pos;
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            if (__s  + __n <= __p)
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              _M_copy(__p, __s, __n);
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            else if (__s >= __p)
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              _M_copy(__p, __s + __n, __n);
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            else
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              {
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	       const size_type __nleft = __p - __s;
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****                _M_copy(__p, __s, __nleft);
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****                _M_copy(__p + __nleft, __p + __n, __n - __nleft);
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              }
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            return *this;
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          }
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    template<typename _CharT, typename _Traits, typename _Alloc>
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      typename basic_string<_CharT, _Traits, _Alloc>::iterator
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>::
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      erase(iterator __first, iterator __last)
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      {
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _GLIBCXX_DEBUG_PEDASSERT(__first >= _M_ibegin() && __first <= __last
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				&& __last <= _M_iend());
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        // NB: This isn't just an optimization (bail out early when
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        // there is nothing to do, really), it's also a correctness
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        // issue vs MT, see libstdc++/40518.
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        const size_type __size = __last - __first;
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        if (__size)
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 {
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   const size_type __pos = __first - _M_ibegin();
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_mutate(__pos, __size, size_type(0));
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_rep()->_M_set_leaked();
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   return iterator(_M_data() + __pos);
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 }
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 return __first;
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
ARM GAS  /tmp/ccL95Edz.s 			page 59


 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    template<typename _CharT, typename _Traits, typename _Alloc>
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>&
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>::
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      replace(size_type __pos, size_type __n1, const _CharT* __s,
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	     size_type __n2)
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      {
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        __glibcxx_requires_string_len(__s, __n2);
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check(__pos, "basic_string::replace");
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        __n1 = _M_limit(__pos, __n1);
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check_length(__n1, __n2, "basic_string::replace");
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        bool __left;
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          return _M_replace_safe(__pos, __n1, __s, __n2);
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else if ((__left = __s + __n2 <= _M_data() + __pos)
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		|| _M_data() + __pos + __n1 <= __s)
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 {
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   // Work in-place: non-overlapping case.
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   size_type __off = __s - _M_data();
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   __left ? __off : (__off += __n2 - __n1);
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_mutate(__pos, __n1, __n2);
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_copy(_M_data() + __pos, _M_data() + __off, __n2);
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   return *this;
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 }
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 {
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   // Todo: overlapping case.
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   const basic_string __tmp(__s, __n2);
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   return _M_replace_safe(__pos, __n1, __tmp._M_data(), __n2);
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 }
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_destroy(const _Alloc& __a) throw ()
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = sizeof(_Rep_base) +
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	                       (this->_M_capacity + 1) * sizeof(_CharT);
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Raw_bytes_alloc(__a).deallocate(reinterpret_cast<char*>(this), __size);
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_leak_hard()
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep() == &_S_empty_rep())
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return;
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep()->_M_is_shared())
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_mutate(0, 0, 0);
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_rep()->_M_set_leaked();
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
ARM GAS  /tmp/ccL95Edz.s 			page 60


 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_mutate(size_type __pos, size_type __len1, size_type __len2)
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __old_size = this->size();
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __new_size = __old_size + __len2 - __len1;
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __how_much = __old_size - __pos - __len1;
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__new_size > this->capacity() || _M_rep()->_M_is_shared())
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Must reallocate.
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const allocator_type __a = get_allocator();
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _Rep* __r = _Rep::_S_create(__new_size, this->capacity(), __a);
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__pos)
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_copy(__r->_M_refdata(), _M_data(), __pos);
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__how_much)
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_copy(__r->_M_refdata() + __pos + __len2,
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_data() + __pos + __len1, __how_much);
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_dispose(__a);
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__r->_M_refdata());
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else if (__how_much && __len1 != __len2)
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Work in-place.
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_move(_M_data() + __pos + __len2,
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  _M_data() + __pos + __len1, __how_much);
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_rep()->_M_set_length_and_sharable(__new_size);
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     reserve(size_type __res)
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__res != this->capacity() || _M_rep()->_M_is_shared())
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****         {
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Make sure we don't shrink below the current size
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__res < this->size())
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __res = this->size();
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const allocator_type __a = get_allocator();
 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _CharT* __tmp = _M_rep()->_M_clone(__a, __res - this->size());
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_dispose(__a);
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__tmp);
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****         }
 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     swap(basic_string& __s)
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep()->_M_is_leaked())
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_rep()->_M_set_sharable();
ARM GAS  /tmp/ccL95Edz.s 			page 61


 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__s._M_rep()->_M_is_leaked())
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__s._M_rep()->_M_set_sharable();
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this->get_allocator() == __s.get_allocator())
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _CharT* __tmp = _M_data();
 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__s._M_data());
 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __s._M_data(__tmp);
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The code below can usually be optimized away.
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const basic_string __tmp1(_M_ibegin(), _M_iend(),
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				    __s.get_allocator());
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const basic_string __tmp2(__s._M_ibegin(), __s._M_iend(),
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				    this->get_allocator());
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  *this = __tmp2;
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __s = __tmp1;
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::_Rep*
 996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::
 997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _S_create(size_type __capacity, size_type __old_capacity,
 998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      const _Alloc& __alloc)
 999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
1002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > _S_max_size)
1003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__throw_length_error(__N("basic_string::_S_create"));
1004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The standard places no restriction on allocating more memory
1006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // than is strictly needed within this layer at the moment or as
1007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // requested by an explicit application call to reserve().
1008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Many malloc implementations perform quite poorly when an
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // application attempts to allocate memory in a stepwise fashion
1011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // growing each allocation size by only 1 char.  Additionally,
1012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // it makes little sense to allocate less linear memory than the
1013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // natural blocking size of the malloc implementation.
1014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Unfortunately, we would need a somewhat low-level calculation
1015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // with tuned parameters to get this perfect for any particular
1016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // malloc implementation.  Fortunately, generalizations about
1017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // common features seen among implementations seems to suffice.
1018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // __pagesize need not match the actual VM page size for good
1020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // results in practice, thus we pick a common value on the low
1021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // side.  __malloc_header_size is an estimate of the amount of
1022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // overhead per memory allocation (in practice seen N * sizeof
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // (void*) where N is 0, 2 or 4).  According to folklore,
1024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // picking this value on the high side is better than
1025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // low-balling it (especially when this algorithm is used with
1026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // malloc implementations that allocate memory blocks rounded up
1027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // to a size which is a power of 2).
1028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __pagesize = 4096;
1029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __malloc_header_size = 4 * sizeof(void*);
1030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccL95Edz.s 			page 62


1031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
1032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
1033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
1034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // It's active for allocations requiring an amount of memory above
1035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // system pagesize. This is consistent with the requirements of the
1036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // standard: http://gcc.gnu.org/ml/libstdc++/2001-07/msg00130.html
1037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
1038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__capacity = 2 * __old_capacity;
1039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
1041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // null char_type() element, plus enough for the _Rep data structure.
1042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Whew. Seemingly so needy, yet so elemental.
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       size_type __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);
1044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __adj_size = __size + __malloc_header_size;
1046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__adj_size > __pagesize && __capacity > __old_capacity)
1047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
1048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __extra = __pagesize - __adj_size % __pagesize;
1049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __capacity += __extra / sizeof(_CharT);
1050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Never allocate a string bigger than _S_max_size.
1051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__capacity > _S_max_size)
1052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __capacity = _S_max_size;
1053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);
1054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
1055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // NB: Might throw, but no worries about a leak, mate: _Rep()
1057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // does not throw.
1058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       void* __place = _Raw_bytes_alloc(__alloc).allocate(__size);
1059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Rep *__p = new (__place) _Rep;
1060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __p->_M_capacity = __capacity;
1061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // ABI compatibility - 3.4.x set in _S_create both
1062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // _M_refcount and _M_length.  All callers of _S_create
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // in basic_string.tcc then set just _M_length.
1064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // In 4.0.x and later both _M_refcount and _M_length
1065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // are initialized in the callers, unfortunately we can
1066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // have 3.4.x compiled code with _S_create callers inlined
1067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // calling 4.0.x+ _S_create.
1068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __p->_M_set_sharable();
1069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __p;
1070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _CharT*
1074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::
1075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_clone(const _Alloc& __alloc, size_type __res)
1076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Requested capacity of the clone.
1078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __requested_cap = this->_M_length + __res;
1079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Rep* __r = _Rep::_S_create(__requested_cap, this->_M_capacity,
1080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  __alloc);
1081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this->_M_length)
1082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(__r->_M_refdata(), _M_refdata(), this->_M_length);
1083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __r->_M_set_length_and_sharable(this->_M_length);
1085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __r->_M_refdata();
1086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccL95Edz.s 			page 63


1088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
1090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     resize(size_type __n, _CharT __c)
1092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = this->size();
1094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__size, __n, "basic_string::resize");
1095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__size < __n)
1096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->append(__n - __size, __c);
1097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else if (__n < __size)
1098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->erase(__n);
1099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // else nothing (in particular, avoid calling _M_mutate() unnecessarily.)
1100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InputIterator>
1104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>&
1105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
1106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
1107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  _InputIterator __k2, __false_type)
1108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
1109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const basic_string __s(__k1, __k2);
1110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const size_type __n1 = __i2 - __i1;
1111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_check_length(__n1, __s.size(), "basic_string::_M_replace_dispatch");
1112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _M_replace_safe(__i1 - _M_ibegin(), __n1, __s._M_data(),
1113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __s.size());
1114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
1115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   _CharT __c)
1121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
1123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_mutate(__pos1, __n1, __n2);
1124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n2)
1125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_assign(_M_data() + __pos1, __n2, __c);
1126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
1127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
1131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
1133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    size_type __n2)
1134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_mutate(__pos1, __n1, __n2);
1136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n2)
1137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(_M_data() + __pos1, __s, __n2);
1138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
1139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _CharT, typename _Traits, typename _Alloc>
1142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::size_type
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     copy(_CharT* __s, size_type __n, size_type __pos) const
ARM GAS  /tmp/ccL95Edz.s 			page 64


1145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check(__pos, "basic_string::copy");
1147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __n = _M_limit(__pos, __n);
1148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
1149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
1150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(__s, _M_data() + __pos, __n);
1151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 21.3.5.7 par 3: do not append null.  (good.)
1152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __n;
1153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif  // !_GLIBCXX_USE_CXX11_ABI
1155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    
1156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>
1158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     operator+(const _CharT* __lhs,
 778              		.loc 7 1158 5 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		.loc 7 1158 5 is_stmt 0 view .LVU158
 783 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 784              	.LCFI4:
 785              		.cfi_def_cfa_offset 24
 786              		.cfi_offset 3, -24
 787              		.cfi_offset 4, -20
 788              		.cfi_offset 5, -16
 789              		.cfi_offset 6, -12
 790              		.cfi_offset 7, -8
 791              		.cfi_offset 14, -4
 792 0002 0446     		mov	r4, r0
 793 0004 0F46     		mov	r7, r1
 794 0006 1646     		mov	r6, r2
 795              	.LVL53:
 796              	.LBB4971:
 797              	.LBI4971:
 798              		.file 8 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  /tmp/ccL95Edz.s 			page 65


  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** //
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** //
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #pragma GCC system_header
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** {
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct _Char_types
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     };
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
ARM GAS  /tmp/ccL95Edz.s 			page 66


  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    */
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct char_traits
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       length(const char_type* __s);
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 67


 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eof()
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     };
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return -1;
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 1;
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return 0;
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     length(const char_type* __p)
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       std::size_t __i = 0;
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****         ++__i;
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __i;
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****           return __s + __i;
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return 0;
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       if (__n == 0)
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return __s1;
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
ARM GAS  /tmp/ccL95Edz.s 			page 68


 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __s1;
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __s;
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** } // namespace
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** {
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  string are known at compile time.
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @param  __s  The string.
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    */
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       (void) __s;
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #else
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	__s++;
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  known at compile time.
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
ARM GAS  /tmp/ccL95Edz.s 			page 69


 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    */
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       (void) __a;
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       (void) __n;
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #else
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       size_t __i = 0;
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	__i++;
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __i == __n;
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   // 21.1
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   */
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<class _CharT>
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     { };
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<>
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct char_traits<char>
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef char              char_type;
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef int               int_type;
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccL95Edz.s 			page 70


 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	// LWG 467.
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       length(const char_type* __s)
 799              		.loc 8 329 7 is_stmt 1 view .LVU159
 800              	.LBB4972:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__constant_string_p(__s))
 801              		.loc 8 332 2 view .LVU160
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return __builtin_strlen(__s);
 802              		.loc 8 335 2 view .LVU161
 803              		.loc 8 335 25 is_stmt 0 view .LVU162
 804 0008 0846     		mov	r0, r1
 805              	.LVL54:
 806              		.loc 8 335 25 view .LVU163
 807 000a FFF7FEFF 		bl	strlen
 808              	.LVL55:
 809              		.loc 8 335 25 view .LVU164
 810 000e 0546     		mov	r5, r0
 811              	.LVL56:
 812              		.loc 8 335 25 view .LVU165
 813              	.LBE4972:
 814              	.LBE4971:
 815              	.LBB4973:
 816              	.LBI4973:
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 817              		.loc 2 431 7 is_stmt 1 view .LVU166
 818              	.LBB4974:
 819              	.LBI4974:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 820              		.loc 2 190 7 view .LVU167
 821              	.LBB4975:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 822              		.loc 2 193 51 is_stmt 0 view .LVU168
 823 0010 04F10803 		add	r3, r4, #8
 824              	.LVL57:
ARM GAS  /tmp/ccL95Edz.s 			page 71


 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 825              		.loc 2 193 51 view .LVU169
 826              	.LBE4975:
 827              	.LBE4974:
 828              	.LBB4976:
 829              	.LBI4976:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 830              		.loc 5 138 7 is_stmt 1 view .LVU170
 831              	.LBB4977:
 832              	.LBI4977:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 833              		.loc 4 80 7 view .LVU171
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 834              		.loc 4 80 7 is_stmt 0 view .LVU172
 835              	.LBE4977:
 836              	.LBE4976:
 837              	.LBB4978:
 838              	.LBI4978:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 839              		.loc 2 159 2 is_stmt 1 view .LVU173
 840              	.LBB4979:
 841              	.LBB4980:
 842              	.LBI4980:
 843              		.file 9 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Copyright (C) 2007-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** /** @file bits/move.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #ifndef _MOVE_H
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #define _MOVE_H 1
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #include <bits/c++config.h>
ARM GAS  /tmp/ccL95Edz.s 			page 72


  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #include <bits/concept_check.h>
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** {
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @ingroup utilities
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     { return __builtin_addressof(__r); }
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #if __cplusplus >= 201103L
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** } // namespace
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** {
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @addtogroup utilities
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @{
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief  Forward an lvalue.
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     constexpr _Tp&&
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief  Forward an rvalue.
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     constexpr _Tp&&
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     {
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****       return static_cast<_Tp&&>(__t);
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     }
ARM GAS  /tmp/ccL95Edz.s 			page 73


  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   */
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     move(_Tp&& __t) noexcept
 844              		.loc 9 99 5 view .LVU174
 845              		.loc 9 99 5 is_stmt 0 view .LVU175
 846              	.LBE4980:
 847              	.LBB4981:
 848              	.LBI4981:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 849              		.loc 5 141 7 is_stmt 1 view .LVU176
 850              	.LBB4982:
 851              	.LBI4982:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 852              		.loc 4 83 7 view .LVU177
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 853              		.loc 4 83 7 is_stmt 0 view .LVU178
 854              	.LBE4982:
 855              	.LBE4981:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 856              		.loc 2 160 46 view .LVU179
 857 0014 2360     		str	r3, [r4]
 858              	.LVL58:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 859              		.loc 2 160 46 view .LVU180
 860              	.LBE4979:
 861              	.LBE4978:
 862              	.LBB4983:
 863              	.LBI4983:
 864              		.loc 5 153 7 is_stmt 1 view .LVU181
 865              	.LBB4984:
 866              	.LBI4984:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 867              		.loc 4 89 7 view .LVU182
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 868              		.loc 4 89 7 is_stmt 0 view .LVU183
 869              	.LBE4984:
 870              	.LBE4983:
 871              	.LBB4985:
 872              	.LBI4985:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 873              		.loc 2 214 7 is_stmt 1 view .LVU184
 874              	.LBB4986:
 875              	.LBI4986:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 876              		.loc 2 182 7 view .LVU185
 877              	.LBB4987:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 878              		.loc 2 183 9 is_stmt 0 view .LVU186
 879 0016 0023     		movs	r3, #0
 880 0018 6360     		str	r3, [r4, #4]
 881              	.LVL59:
ARM GAS  /tmp/ccL95Edz.s 			page 74


 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 882              		.loc 2 183 9 view .LVU187
 883              	.LBE4987:
 884              	.LBE4986:
 885              	.LBB4988:
 886              	.LBI4988:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 887              		.loc 8 299 7 is_stmt 1 view .LVU188
 888              	.LBB4989:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 889              		.loc 8 300 9 view .LVU189
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 890              		.loc 8 300 14 is_stmt 0 view .LVU190
 891 001a 2372     		strb	r3, [r4, #8]
 892              	.LVL60:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 893              		.loc 8 300 14 view .LVU191
 894              	.LBE4989:
 895              	.LBE4988:
 896              	.LBE4985:
 897              	.LBE4973:
 898              	.LBB4990:
 899              	.LBI4990:
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  {
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_data(_M_local_data());
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_set_length(0);
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		else
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  {
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    const auto __len = __str.size();
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_data(__ptr);
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_capacity(__len);
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_set_length(__len);
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
ARM GAS  /tmp/ccL95Edz.s 			page 75


 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      }
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->assign(__str);
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const _CharT* __s)
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__s); }
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Source character.
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(_CharT __c)
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(1, __c);
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(basic_string&& __str)
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(_M_local_data());
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_set_length(0);
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
ARM GAS  /tmp/ccL95Edz.s 			page 76


 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__str.size())
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_set_length(__str.size());
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    pointer __data = nullptr;
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (!_M_is_local())
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  {
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    __data = _M_data();
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		else // __str can't use it, so free it.
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      }
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		__str._M_data(__data);
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      }
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    else
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else // Need to do a deep copy
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  assign(__str);
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str.clear();
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
ARM GAS  /tmp/ccL95Edz.s 			page 77


 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****      template<typename _Tp>
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        operator=(const _Tp& __svt)
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        { return this->assign(__svt); }
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return A string_view.
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator __sv_type() const noexcept
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Iterators:
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string.
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data()); }
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  order.
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccL95Edz.s 			page 78


 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element order.
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cbegin() const noexcept
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cend() const noexcept
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crbegin() const noexcept
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccL95Edz.s 			page 79


 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crend() const noexcept
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Capacity:
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 900              		.loc 2 930 7 is_stmt 1 view .LVU192
 901              	.LBB4991:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 902              		.loc 2 931 16 is_stmt 0 view .LVU193
 903 001c 7168     		ldr	r1, [r6, #4]
 904              	.LVL61:
 905              		.loc 2 931 16 view .LVU194
 906              	.LBE4991:
 907              	.LBE4990:
1159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
1160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string(__lhs);
1162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
1163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       typedef typename __string_type::size_type	  __size_type;
1164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const __size_type __len = _Traits::length(__lhs);
1165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __string_type __str;
1166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str.reserve(__len + __rhs.size());
 908              		.loc 7 1166 7 view .LVU195
 909 001e 0144     		add	r1, r1, r0
 910 0020 2046     		mov	r0, r4
 911              	.LVL62:
 912              		.loc 7 1166 7 view .LVU196
 913 0022 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj
 914              	.LVL63:
 915              	.LBB4992:
 916              	.LBI4992:
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
ARM GAS  /tmp/ccL95Edz.s 			page 80


 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  setting them to 0.
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n)
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       shrink_to_fit() noexcept
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_exceptions
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (capacity() > size())
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    try
 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { reserve(0); }
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    catch(...)
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { }
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  before needing to allocate more memory.
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          characters.
1002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
ARM GAS  /tmp/ccL95Edz.s 			page 81


1009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  data.
1015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Erases the string, making it empty.
1021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
1025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
1029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->size() == 0; }
1033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Element access:
1035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)
1044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
1050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)
1061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[](size_type __pos)
1064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
ARM GAS  /tmp/ccL95Edz.s 			page 82


1066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// and in C++11 mode.
1067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
1071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n) const
1085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= this->size())
1087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
1091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n)
1106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= size())
1108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
1112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
1119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front() noexcept
1122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 83


1123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
1125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
1130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front() const noexcept
1133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
1136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
1141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back() noexcept
1144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last element of the %string.
1152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back() const noexcept
1155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Modifiers:
1162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
1169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
1170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
1178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__s); }
1179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 84


1180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a character.
1182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to append.
1183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(_CharT __c)
1187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->push_back(__c);
1189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
1190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return this->append(__svt); }
1213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str)
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a substring.
1226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
1236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccL95Edz.s 			page 85


1237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data()
1240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C substring.
1245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
 917              		.loc 2 1250 7 is_stmt 1 view .LVU197
 918              	.LBB4993:
 919              	.LBB4994:
 920              	.LBI4994:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 921              		.loc 2 320 7 view .LVU198
 922              	.LBB4995:
 923              	.LBB4996:
 924              	.LBI4996:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 925              		.loc 2 930 7 view .LVU199
 926              	.LBB4997:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 927              		.loc 2 931 16 is_stmt 0 view .LVU200
 928 0026 6368     		ldr	r3, [r4, #4]
 929              	.LVL64:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 930              		.loc 2 931 16 view .LVU201
 931              	.LBE4997:
 932              	.LBE4996:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 933              		.loc 2 322 2 view .LVU202
 934 0028 C3F17F53 		rsb	r3, r3, #1069547520
 935 002c 03F57F13 		add	r3, r3, #4177920
 936 0030 03F57F53 		add	r3, r3, #16320
 937 0034 3F33     		adds	r3, r3, #63
 938 0036 9D42     		cmp	r5, r3
 939 0038 0BD8     		bhi	.L35
 940              	.LVL65:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 941              		.loc 2 322 2 view .LVU203
 942              	.LBE4995:
 943              	.LBE4994:
1251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
 944              		.loc 2 1254 27 view .LVU204
 945 003a 2A46     		mov	r2, r5
 946 003c 3946     		mov	r1, r7
 947 003e 2046     		mov	r0, r4
 948 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 949              	.LVL66:
ARM GAS  /tmp/ccL95Edz.s 			page 86


 950              		.loc 2 1254 27 view .LVU205
 951              	.LBE4993:
 952              	.LBE4992:
 953              	.LBB5001:
 954              	.LBI5001:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 955              		.loc 2 1221 7 is_stmt 1 view .LVU206
 956              	.LBB5002:
 957              	.LBB5003:
 958              	.LBI5003:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 959              		.loc 2 186 7 view .LVU207
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 960              		.loc 2 186 7 is_stmt 0 view .LVU208
 961              	.LBE5003:
 962              	.LBB5004:
 963              	.LBI5004:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 964              		.loc 2 930 7 is_stmt 1 view .LVU209
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 965              		.loc 2 930 7 is_stmt 0 view .LVU210
 966              	.LBE5004:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 967              		.loc 2 1222 55 view .LVU211
 968 0044 7268     		ldr	r2, [r6, #4]
 969 0046 3168     		ldr	r1, [r6]
 970 0048 2046     		mov	r0, r4
 971 004a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 972              	.LVL67:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 973              		.loc 2 1222 55 view .LVU212
 974              	.LBE5002:
 975              	.LBE5001:
1167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str.append(__lhs, __len);
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str.append(__rhs);
1169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __str;
1170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 976              		.loc 7 1170 5 view .LVU213
 977 004e 2046     		mov	r0, r4
 978 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 979              	.LVL68:
 980              	.L35:
 981              	.LBB5005:
 982              	.LBB5000:
 983              	.LBB4999:
 984              	.LBB4998:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 985              		.loc 2 323 24 view .LVU214
 986 0052 0148     		ldr	r0, .L36
 987 0054 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 988              	.LVL69:
 989              	.L37:
 990              		.align	2
 991              	.L36:
 992 0058 00000000 		.word	.LC0
 993              	.LBE4998:
 994              	.LBE4999:
ARM GAS  /tmp/ccL95Edz.s 			page 87


 995              	.LBE5000:
 996              	.LBE5005:
 997              		.cfi_endproc
 998              	.LFE3741:
 1000              		.section	.rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_rea
 1001              		.align	2
 1002              	.LC1:
 1003 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 1003      6F723A3A 
 1003      5F4D5F72 
 1003      65616C6C 
 1003      6F635F69 
 1004              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reall
 1005              		.align	1
 1006              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insert
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1010              		.fpu fpv4-sp-d16
 1012              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EE
 1013              	.LVL70:
 1014              	.LFB3909:
 1015              		.file 10 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
ARM GAS  /tmp/ccL95Edz.s 			page 88


  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Copyright (c) 1996
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * representations about the suitability of this  software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** /** @file bits/vector.tcc
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #ifndef _VECTOR_TCC
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #define _VECTOR_TCC 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** {
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     reserve(size_type __n)
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__n > this->max_size())
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (this->capacity() < __n)
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  const size_type __old_size = size();
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  pointer __tmp;
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    _M_get_Tp_allocator());
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
ARM GAS  /tmp/ccL95Edz.s 			page 89


  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			- this->_M_impl._M_start);
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename... _Args>
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	return back();
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __n = __position - begin();
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__position == end())
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				     __x);
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
ARM GAS  /tmp/ccL95Edz.s 			page 90


 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_erase(iterator __position)
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__position + 1 != end())
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       --this->_M_impl._M_finish;
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return __position;
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__first != __last)
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (__last != end())
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return __first;
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>&
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (&__x != this)
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
ARM GAS  /tmp/ccL95Edz.s 			page 91


 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	        {
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->clear();
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				- this->_M_impl._M_start);
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		}
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  const size_type __xlen = __x.size();
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (__xlen > capacity())
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 						   __x.end());
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    _M_get_Tp_allocator());
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    - this->_M_impl._M_start);
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else if (size() >= __xlen)
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			this->_M_impl._M_start);
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  __x._M_impl._M_finish,
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  this->_M_impl._M_finish,
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  _M_get_Tp_allocator());
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return *this;
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__n > capacity())
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
ARM GAS  /tmp/ccL95Edz.s 			page 92


 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else if (__n > size())
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  const size_type __add = __n - size();
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_finish =
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename _InputIterator>
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		    std::input_iterator_tag)
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	     ++__cur, (void)++__first)
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  *__cur = *__first;
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__first == __last)
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_erase_at_end(__cur);
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  std::__iterator_category(__first));
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename _ForwardIterator>
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		    std::forward_iterator_tag)
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__len > capacity())
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  _M_get_Tp_allocator());
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  - this->_M_impl._M_start);
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
ARM GAS  /tmp/ccL95Edz.s 			page 93


 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else if (size() >= __len)
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::advance(__mid, size());
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_finish =
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  this->_M_impl._M_finish,
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  _M_get_Tp_allocator());
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     auto
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const auto __n = __position - cbegin();
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__position == cend())
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				     std::move(__v));
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename... _Args>
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       auto
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       -> iterator
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	const auto __n = __position - cbegin();
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (__position == cend())
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
ARM GAS  /tmp/ccL95Edz.s 			page 94


 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename _Arg>
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       ++this->_M_impl._M_finish;
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus < 201103L
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Tp __x_copy = __x;
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus < 201103L
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       *__position = __x_copy;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename... _Args>
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 1016              		.loc 10 426 7 is_stmt 1 view -0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 8
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		.loc 10 426 7 is_stmt 0 view .LVU216
 1021 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1022              	.LCFI5:
ARM GAS  /tmp/ccL95Edz.s 			page 95


 1023              		.cfi_def_cfa_offset 36
 1024              		.cfi_offset 4, -36
 1025              		.cfi_offset 5, -32
 1026              		.cfi_offset 6, -28
 1027              		.cfi_offset 7, -24
 1028              		.cfi_offset 8, -20
 1029              		.cfi_offset 9, -16
 1030              		.cfi_offset 10, -12
 1031              		.cfi_offset 11, -8
 1032              		.cfi_offset 14, -4
 1033 0004 83B0     		sub	sp, sp, #12
 1034              	.LCFI6:
 1035              		.cfi_def_cfa_offset 48
 1036 0006 1446     		mov	r4, r2
 1037              	.LVL71:
 1038              		.loc 10 426 7 view .LVU217
 1039 0008 0123     		movs	r3, #1
 1040 000a 0093     		str	r3, [sp]
 1041              	.LVL72:
 1042              	.LBB5207:
 1043              	.LBI5207:
 1044              		.file 11 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * representations about the suitability of this software for any
ARM GAS  /tmp/ccL95Edz.s 			page 96


  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <initializer_list>
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <debug/assertions.h>
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** extern "C" void
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  const void*, const void*);
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** {
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     struct _Vector_base
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     {
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        	pointer;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       struct _Vector_impl_data
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer _M_start;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer _M_finish;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer _M_end_of_storage;
ARM GAS  /tmp/ccL95Edz.s 			page 97


  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_start = __x._M_start;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_finish = __x._M_finish;
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // information used by TBAA.
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Vector_impl_data __tmp;
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __tmp._M_copy_data(*this);
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_copy_data(__x);
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __x._M_copy_data(__tmp);
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       };
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       struct _Vector_impl
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type()
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
ARM GAS  /tmp/ccL95Edz.s 			page 98


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	template<typename = _Tp_alloc_type>
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  struct _Asan
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ::size_type size_type;
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    struct _Grow
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      void _M_grew(size_type) { }
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    };
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  };
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	template<typename _Up>
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ::size_type size_type;
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      if (__impl._M_start)
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    struct _Reinit
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
ARM GAS  /tmp/ccL95Edz.s 			page 99


 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      {
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		_S_on_dealloc(_M_impl);
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      }
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ~_Reinit()
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      {
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		if (_M_impl._M_start)
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    _M_impl._M_finish);
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      }
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    };
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    struct _Grow
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    private:
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      size_type _M_n;
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    };
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  };
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
ARM GAS  /tmp/ccL95Edz.s 			page 100


 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       };
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Tp_alloc_type&
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const _Tp_alloc_type&
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       allocator_type
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base() = default;
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base() { }
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(size_t __n)
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl()
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _M_create_storage(__n);
ARM GAS  /tmp/ccL95Edz.s 			page 101


 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # endif
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { }
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_impl _M_impl;
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       pointer
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_allocate(size_t __n)
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__p)
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     };
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   /**
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  individual elements in any order.
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @ingroup sequences
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
ARM GAS  /tmp/ccL95Edz.s 			page 102


 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   */
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     {
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Concept requirements.
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # if __cplusplus < 201103L
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # endif
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # ifdef __STRICT_ANSI__
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # endif
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Tp					value_type;
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator;
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef size_t					size_type;
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     private:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static constexpr bool
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_nothrow_relocate(true_type)
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 103


 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static constexpr bool
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_nothrow_relocate(false_type)
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return false; }
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static constexpr bool
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_use_relocate()
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static pointer
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static pointer
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return __result; }
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static pointer
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif // C++11
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_allocate;
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_deallocate;
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_impl;
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector() = default;
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector() { }
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator object.
ARM GAS  /tmp/ccL95Edz.s 			page 104


 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       explicit
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__a) { }
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  constructed elements.
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       explicit
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       explicit
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @a __x  will not be copied
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
ARM GAS  /tmp/ccL95Edz.s 			page 105


 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(const vector& __x)
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  moved instance.
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector.
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&&) noexcept = default;
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     private:
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__m, std::move(__rv))
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { }
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__m)
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__rv.get_allocator() == __m)
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (!__rv.empty())
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    __rv.clear();
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       noexcept( noexcept(
ARM GAS  /tmp/ccL95Edz.s 			page 106


 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { }
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer_list @a __l.
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__a)
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [first,last).
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator,
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Base(__a)
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			      std::__iterator_category(__first));
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Base(__a)
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
ARM GAS  /tmp/ccL95Edz.s 			page 107


 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  responsibility.
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @a __x will not be copied.
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector&
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator=(const vector& __x);
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  if the allocators permit it).
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector&
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	constexpr bool __move_storage =
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *this;
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
ARM GAS  /tmp/ccL95Edz.s 			page 108


 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer list @a __l.
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  of elements assigned.
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector&
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *this;
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the number of elements assigned.
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  range [__first,__last).
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  of elements assigned.
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator,
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
ARM GAS  /tmp/ccL95Edz.s 			page 109


 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer list @a __l.
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  of elements assigned.
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::get_allocator;
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // iterators
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  ordinary element order.
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
ARM GAS  /tmp/ccL95Edz.s 			page 110


 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reverse_iterator
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  reverse element order.
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  in reverse element order.
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reverse_iterator
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is done in reverse element order.
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       cbegin() const noexcept
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  ordinary element order.
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       cend() const noexcept
ARM GAS  /tmp/ccL95Edz.s 			page 111


 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  reverse element order.
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       crbegin() const noexcept
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is done in reverse element order.
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       crend() const noexcept
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // [23.2.4.2] capacity
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  default constructed elements are appended.
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       resize(size_type __new_size)
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__new_size > size())
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (__new_size < size())
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
ARM GAS  /tmp/ccL95Edz.s 			page 112


 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  given data.
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__new_size > size())
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (__new_size < size())
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  given data.
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__new_size > size())
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (__new_size < size())
 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       shrink_to_fit()
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  equal end().)
1002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _GLIBCXX_NODISCARD bool
1004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccL95Edz.s 			page 113


1005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return begin() == end(); }
1006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *          elements.
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
1011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
1014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
1016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  thrown.
1017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
1020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
1021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  and copying of %vector data.
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reserve(size_type __n);
1026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // element access
1028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  see at().)
1038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  see at().)
1056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
ARM GAS  /tmp/ccL95Edz.s 			page 114


1062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
1065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Safety check used only from at().
1066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_range_check(size_type __n) const
1068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__n >= this->size())
1070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
1072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				       "(which is %zu)"),
1073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				   __n, this->size());
1074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
1077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       at(size_type __n)
1090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_check(__n);
1092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (*this)[__n];
1093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       at(size_type __n) const
1108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_check(__n);
1110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (*this)[__n];
1111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
1115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element of the %vector.
1116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccL95Edz.s 			page 115


1119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *begin();
1122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element of the %vector.
1127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *begin();
1133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
1137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element of the %vector.
1138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(end() - 1);
1144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  last element of the %vector.
1149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(end() - 1);
1155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // data access
1160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Tp*
1165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const _Tp*
1169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // [23.2.4.3] modifiers
1173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be added.
ARM GAS  /tmp/ccL95Edz.s 			page 116


1176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  available.
1182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       push_back(const value_type& __x)
1185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
1188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				     __x);
1191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
1192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
1194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else
1195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       push_back(value_type&& __x)
1201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
1202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus > 201402L
1205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	reference
1206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	emplace_back(_Args&&... __args);
1210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Removes last element.
1214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
1218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  called.
1220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
1226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
ARM GAS  /tmp/ccL95Edz.s 			page 117


1233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __args  Arguments.
1235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
1238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
1241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  std::list.
1242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	iterator
1245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
1275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
ARM GAS  /tmp/ccL95Edz.s 			page 118


1290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the
1299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  specified by @a position.
1301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	auto __offset = __position - cbegin();
1310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			std::random_access_iterator_tag());
1312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return begin() + __offset;
1313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return begin() + __offset;
1337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
ARM GAS  /tmp/ccL95Edz.s 			page 119


1347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  by @a pos.
1368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator,
1374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	iterator
1376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       _InputIterator __last)
1378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			     __first, __last, __false_type());
1382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  return begin() + __offset;
1383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  by @a pos.
1394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       _InputIterator __last)
1403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
ARM GAS  /tmp/ccL95Edz.s 			page 120


1404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  shorten the %vector by one.
1417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(const_iterator __position)
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(iterator __position)
1431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(__position); }
1432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *                  erased.
1439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *           prior to erasing (or end()).
1441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will erase the elements in the range
1443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	const auto __beg = begin();
1457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
ARM GAS  /tmp/ccL95Edz.s 			page 121


1461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				  __x._M_get_Tp_allocator());
1486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the user's responsibility.
1493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
1499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer
1505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __try
1510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
1511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      return __result;
1514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
1515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __catch(...)
1516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
1517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
ARM GAS  /tmp/ccL95Edz.s 			page 122


1518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      __throw_exception_again;
1519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
1520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Internal constructor functions follow.
1524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus < 201103L
1528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Integer>
1531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			       __false_type)
1546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
1548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			      std::__iterator_category(__first));
1549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    std::input_iterator_tag)
1557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __try {
1559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    for (; __first != __last; ++__first)
1560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      emplace_back(*__first);
1562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      push_back(*__first);
1564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  } __catch(...) {
1566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    clear();
1567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    __throw_exception_again;
1568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
1569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
ARM GAS  /tmp/ccL95Edz.s 			page 123


1575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    std::forward_iterator_tag)
1576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_start
1579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					this->_M_impl._M_start,
1584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the vector(n) constructor.
1599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_default_initialize(size_type __n)
1601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					   _M_get_Tp_allocator());
1605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // assignment work for the range versions.
1610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Integer>
1616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			   __false_type)
1625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      std::input_iterator_tag);
ARM GAS  /tmp/ccL95Edz.s 			page 124


1632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      std::forward_iterator_tag);
1638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // to be the same thing.
1641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Internal insert functions follow.
1645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Integer>
1651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			   __true_type)
1654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			   _InputIterator __last, __false_type)
1661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			  std::__iterator_category(__first));
1664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // the same thing.
1680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by resize(n).
1685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_default_append(size_type __n);
1687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       bool
ARM GAS  /tmp/ccL95Edz.s 			page 125


1689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_shrink_to_fit();
1690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus < 201103L
1693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by insert(p,x)
1694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       struct _Temporary_value
1703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	template<typename... _Args>
1705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  explicit
1706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
1708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				     std::forward<_Args>(__args)...);
1710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
1711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	~_Temporary_value()
1713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	value_type&
1716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       private:
1719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Tp*
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector* _M_this;
1723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       };
1725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Arg>
1729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	iterator
1743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
ARM GAS  /tmp/ccL95Edz.s 			page 126


1746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 1045              		.loc 11 1753 7 is_stmt 1 view .LVU218
 1046              	.LBB5208:
 1047              	.LBB5209:
 1048              	.LBI5209:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1049              		.loc 11 915 7 view .LVU219
 1050              	.LBB5210:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1051              		.loc 11 916 40 is_stmt 0 view .LVU220
 1052 000c 4368     		ldr	r3, [r0, #4]
 1053              	.LVL73:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1054              		.loc 11 916 66 view .LVU221
 1055 000e 0568     		ldr	r5, [r0]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1056              		.loc 11 916 50 view .LVU222
 1057 0010 5D1B     		subs	r5, r3, r5
 1058 0012 EA10     		asrs	r2, r5, #3
 1059              	.LVL74:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1060              		.loc 11 916 50 view .LVU223
 1061 0014 654D     		ldr	r5, .L70
 1062 0016 05FB02F5 		mul	r5, r5, r2
 1063              	.LVL75:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1064              		.loc 11 916 50 view .LVU224
 1065              	.LBE5210:
 1066              	.LBE5209:
1754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (max_size() - size() < __n)
 1067              		.loc 11 1755 17 view .LVU225
 1068 001a 654A     		ldr	r2, .L70+4
 1069 001c 521B     		subs	r2, r2, r5
 1070              		.loc 11 1755 2 view .LVU226
 1071 001e 002A     		cmp	r2, #0
 1072 0020 3AD0     		beq	.L62
 1073 0022 0746     		mov	r7, r0
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
1757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
 1074              		.loc 11 1758 45 view .LVU227
 1075 0024 0195     		str	r5, [sp, #4]
 1076              	.LVL76:
 1077              	.LBB5211:
 1078              	.LBI5211:
 1079              		.file 12 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
ARM GAS  /tmp/ccL95Edz.s 			page 127


   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
ARM GAS  /tmp/ccL95Edz.s 			page 128


  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** {
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __iter_swap
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static void
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    _ValueType1;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static void
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
ARM GAS  /tmp/ccL95Edz.s 			page 129


 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline void
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ValueType1;
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ValueType2;
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #else
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
ARM GAS  /tmp/ccL95Edz.s 			page 130


 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __first2;
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__b < __a)
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 1080              		.loc 12 222 5 is_stmt 1 view .LVU228
 1081              	.LBB5212:
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__a < __b)
 1082              		.loc 12 227 7 is_stmt 0 view .LVU229
 1083 0026 002D     		cmp	r5, #0
ARM GAS  /tmp/ccL95Edz.s 			page 131


 1084 0028 39D0     		beq	.L57
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 1085              		.loc 12 229 14 view .LVU230
 1086 002a 01AA     		add	r2, sp, #4
 1087              	.LVL77:
 1088              	.L40:
 1089              		.loc 12 229 14 view .LVU231
 1090              	.LBE5212:
 1091              	.LBE5211:
 1092              		.loc 11 1758 33 view .LVU232
 1093 002c 1268     		ldr	r2, [r2]
 1094              		.loc 11 1758 18 view .LVU233
 1095 002e 1544     		add	r5, r5, r2
 1096              	.LVL78:
 1097              	.LBB5214:
 1098              	.LBI5214:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1099              		.loc 11 915 7 is_stmt 1 view .LVU234
 1100              	.LBB5215:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1101              		.loc 11 916 66 is_stmt 0 view .LVU235
 1102 0030 3A68     		ldr	r2, [r7]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1103              		.loc 11 916 50 view .LVU236
 1104 0032 9B1A     		subs	r3, r3, r2
 1105 0034 DB10     		asrs	r3, r3, #3
 1106 0036 5D4A     		ldr	r2, .L70
 1107 0038 02FB03F3 		mul	r3, r2, r3
 1108              	.LVL79:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1109              		.loc 11 916 50 view .LVU237
 1110              	.LBE5215:
 1111              	.LBE5214:
1759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 1112              		.loc 11 1759 48 view .LVU238
 1113 003c 9D42     		cmp	r5, r3
 1114 003e 30D3     		bcc	.L58
 1115              		.loc 11 1759 25 view .LVU239
 1116 0040 5B4B     		ldr	r3, .L70+4
 1117 0042 9D42     		cmp	r5, r3
 1118 0044 2FD8     		bhi	.L63
 1119              	.LVL80:
 1120              	.L41:
 1121              		.loc 11 1759 25 view .LVU240
 1122              	.LBE5208:
 1123              	.LBE5207:
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __len =
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
ARM GAS  /tmp/ccL95Edz.s 			page 132


 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 1124              		.loc 10 437 15 view .LVU241
 1125 0046 D7F80090 		ldr	r9, [r7]
 1126              	.LVL81:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 1127              		.loc 10 438 15 view .LVU242
 1128 004a D7F804A0 		ldr	r10, [r7, #4]
 1129              	.LVL82:
 1130              	.LBB5218:
 1131              	.LBI5218:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1132              		.loc 11 808 7 is_stmt 1 view .LVU243
 1133              	.LBB5219:
 1134              	.LBI5219:
 1135              		.file 13 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  /tmp/ccL95Edz.s 			page 133


  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  */
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <ext/type_traits.h>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <bits/move.h>
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # include <type_traits>
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus > 201402L
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # define __cpp_lib_array_constexpr 201603
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** {
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    * @addtogroup iterators
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    * @{
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    */
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @code
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @endcode
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
ARM GAS  /tmp/ccL95Edz.s 			page 134


 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class reverse_iterator
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Iterator current;
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The copy constructor is normal.
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : current(__x.current) { }
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Iter>
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
ARM GAS  /tmp/ccL95Edz.s 			page 135


 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	: current(__x.base()) { }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       base() const
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return current; }
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*() const
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *--__tmp;
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator->() const
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--__tmp;
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return _S_to_pointer(__tmp);
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  @c *this
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--current;
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
ARM GAS  /tmp/ccL95Edz.s 			page 136


 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--current;
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return __tmp;
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  @c *this
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--()
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++current;
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--(int)
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++current;
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return __tmp;
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+(difference_type __n) const
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  *this
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+=(difference_type __n)
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	current -= __n;
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
ARM GAS  /tmp/ccL95Edz.s 			page 137


 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-(difference_type __n) const
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  *this
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-=(difference_type __n)
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	current += __n;
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator[](difference_type __n) const
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *(*this + __n); }
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     private:
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Tp>
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         { return __p; }
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Tp>
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         { return __t.operator->(); }
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   //@{
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  A simple bool.
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
ARM GAS  /tmp/ccL95Edz.s 			page 138


 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x == __y); }
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y < __x; }
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__y < __x); }
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x < __y); }
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x == __y); }
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y < __x; }
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 139


 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__y < __x); }
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x < __y); }
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   //@}
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # if __cplusplus > 201103L
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // DR 2285. make_reverse_iterator
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /// Generator function for reverse_iterator.
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
ARM GAS  /tmp/ccL95Edz.s 			page 140


 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # endif
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     auto
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : __is_move_iterator<_Iterator>
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { };
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     auto
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  push_back.
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  save typing.
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class back_insert_iterator
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Container* container;
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x)
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
ARM GAS  /tmp/ccL95Edz.s 			page 141


 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_back(__value);
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_back(__value);
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*()
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  types for you.
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
ARM GAS  /tmp/ccL95Edz.s 			page 142


 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  push_front.
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  save typing.
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class front_insert_iterator
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Container* container;
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x)
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_front(__value);
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_front(__value);
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 143


 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*()
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  types for you.
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  position.
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  %iterator's position.)
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  save typing.
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class insert_iterator
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Container* container;
ARM GAS  /tmp/ccL95Edz.s 			page 144


 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typename _Container::iterator iter;
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @code
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     // vector v contains A and Z
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     i = 1;
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     i = 2;
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     i = 3;
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @endcode
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++iter;
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++iter;
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
ARM GAS  /tmp/ccL95Edz.s 			page 145


 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++iter;
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*()
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param __i  An iterator into the container.
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  types for you.
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     }
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // @} group iterators
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** } // namespace
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** {
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _Iterator parameter is the same.
ARM GAS  /tmp/ccL95Edz.s 			page 146


 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   using std::iterator_traits;
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   using std::iterator;
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class __normal_iterator
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Iterator _M_current;
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 1136              		.loc 13 806 7 view .LVU244
 1137              		.loc 13 806 7 is_stmt 0 view .LVU245
 1138              	.LBE5219:
 1139              	.LBE5218:
 1140              	.LBB5220:
 1141              	.LBI5220:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Iter>
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Forward iterator requirements
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reference
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *_M_current; }
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       pointer
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++_M_current;
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccL95Edz.s 			page 147


 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--_M_current;
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Random access iterator requirements
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reference
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current[__n]; }
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       const _Iterator&
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Forward iterator requirements
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
ARM GAS  /tmp/ccL95Edz.s 			page 148


 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Random access iterator requirements
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
ARM GAS  /tmp/ccL95Edz.s 			page 149


 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // parameters.
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     // DR 685.
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline auto
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 1142              		.loc 13 989 5 is_stmt 1 view .LVU246
 1143              	.LBB5221:
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 1144              		.loc 13 992 27 is_stmt 0 view .LVU247
 1145 004e 0E46     		mov	r6, r1
 1146 0050 A1EB090B 		sub	fp, r1, r9
 1147              	.LVL83:
 1148              		.loc 13 992 27 view .LVU248
 1149              	.LBE5221:
 1150              	.LBE5220:
 1151              	.LBB5222:
 1152              	.LBI5222:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 1153              		.loc 11 340 7 is_stmt 1 view .LVU249
ARM GAS  /tmp/ccL95Edz.s 			page 150


 1154              	.LBB5223:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 1155              		.loc 11 343 18 is_stmt 0 view .LVU250
 1156 0054 5DB3     		cbz	r5, .L60
 1157              	.LVL84:
 1158              	.LBB5224:
 1159              	.LBI5224:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 1160              		.loc 3 443 7 is_stmt 1 view .LVU251
 1161              	.LBB5225:
 1162              	.LBI5225:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 1163              		.loc 4 102 7 view .LVU252
 1164              	.LBB5226:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 1165              		.loc 4 104 2 is_stmt 0 view .LVU253
 1166 0056 564B     		ldr	r3, .L70+4
 1167 0058 9D42     		cmp	r5, r3
 1168 005a 26D8     		bhi	.L64
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1169              		.loc 4 114 41 view .LVU254
 1170 005c 05EB4500 		add	r0, r5, r5, lsl #1
 1171              	.LVL85:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1172              		.loc 4 114 41 view .LVU255
 1173 0060 C000     		lsls	r0, r0, #3
 1174 0062 FFF7FEFF 		bl	_Znwj
 1175              	.LVL86:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1176              		.loc 4 114 41 view .LVU256
 1177 0066 8046     		mov	r8, r0
 1178              	.LVL87:
 1179              	.L42:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1180              		.loc 4 114 41 view .LVU257
 1181              	.LBE5226:
 1182              	.LBE5225:
 1183              	.LBE5224:
 1184              	.LBE5223:
 1185              	.LBE5222:
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __new_finish(__new_start);
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       __try
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // [res.on.arguments]).
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 1186              		.loc 10 449 28 view .LVU258
 1187 0068 08EB0B02 		add	r2, r8, fp
 1188              	.LVL88:
 1189              	.LBB5231:
 1190              	.LBI5231:
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  /tmp/ccL95Edz.s 			page 151


 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Up
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 1191              		.loc 3 482 2 is_stmt 1 view .LVU259
 1192              	.LBB5232:
 1193              	.LBI5232:
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       size_type
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __PTRDIFF_MAX__ < __SIZE_MAX__
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #else
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	return size_t(-1) / sizeof(_Tp);
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Up, typename... _Args>
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	void
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 1194              		.loc 4 144 2 view .LVU260
 1195              		.loc 4 144 2 is_stmt 0 view .LVU261
 1196              	.LBE5232:
 1197              	.LBE5231:
 1198              		.file 14 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // The -*- C++ -*- dynamic memory management header.
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // Copyright (C) 1994-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // This file is part of GCC.
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** //
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // GCC is free software; you can redistribute it and/or modify
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // it under the terms of the GNU General Public License as published by
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // the Free Software Foundation; either version 3, or (at your option)
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // any later version.
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // 
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // GCC is distributed in the hope that it will be useful,
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // GNU General Public License for more details.
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // 
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // Under Section 7 of GPL version 3, you are granted additional
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // permissions described in the GCC Runtime Library Exception, version
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // 3.1, as published by the Free Software Foundation.
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // You should have received a copy of the GNU General Public License and
ARM GAS  /tmp/ccL95Edz.s 			page 152


  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // <http://www.gnu.org/licenses/>.
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** /** @file new
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  This is a Standard C++ Library header.
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  handling memory allocation errors; see
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  */
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #ifndef _NEW
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #define _NEW
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #pragma GCC system_header
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #include <bits/c++config.h>
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #include <exception>
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #pragma GCC visibility push(default)
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** extern "C++" {
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** namespace std 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** {
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /**
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  @brief  Exception possibly thrown by @c new.
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  @ingroup exceptions
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  errors from the throwing forms of @c new.  */
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   class bad_alloc : public exception 
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   {
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   public:
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_alloc() throw() { }
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_alloc(const bad_alloc&) = default;
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_alloc& operator=(const bad_alloc&) = default;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // This declaration is not useless:
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual ~bad_alloc() throw();
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // See comment in eh_exception.cc.
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual const char* what() const throw();
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   };
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   class bad_array_new_length : public bad_alloc
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   {
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   public:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_array_new_length() throw() { }
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // This declaration is not useless:
ARM GAS  /tmp/ccL95Edz.s 			page 153


  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual ~bad_array_new_length() throw();
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // See comment in eh_exception.cc.
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual const char* what() const throw();
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   };
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_aligned_new
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   enum class align_val_t: size_t {};
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   struct nothrow_t
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   {
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     explicit nothrow_t() = default;
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   };
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   extern const nothrow_t nothrow;
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /** If you write your own error handler to be called by @c new, it must
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  be of this type.  */
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   typedef void (*new_handler)();
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /// Takes a replacement handler as the argument, returns the
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /// previous handler.
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   new_handler set_new_handler(new_handler) throw();
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /// Return the current new handler.
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   new_handler get_new_handler() noexcept;
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** } // namespace std
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** //@{
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** /** These are replaceable signatures:
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - normal array new and delete (same)
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *    @c NULL on error)
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - @c nothrow array new and delete (same)
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  Placement new and delete signatures (take a memory address argument,
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  does nothing) may not be replaced by a user's program.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** */
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_sized_deallocation
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
ARM GAS  /tmp/ccL95Edz.s 			page 154


 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__, __malloc__));
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__, __malloc__));
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_aligned_new
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::align_val_t)
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::align_val_t)
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_sized_deallocation
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::size_t, std::align_val_t)
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::size_t, std::align_val_t)
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif // __cpp_sized_deallocation
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif // __cpp_aligned_new
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // Default placement versions of operator new.
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** { return __p; }
 1199              		.loc 14 174 3 is_stmt 1 view .LVU262
 1200              	.LBB5277:
 1201              	.LBB5274:
 1202              	.LBB5233:
 1203              	.LBI5233:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 1204              		.loc 2 552 7 view .LVU263
 1205              	.LBB5234:
 1206              	.LBB5235:
 1207              	.LBI5235:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1208              		.loc 2 190 7 view .LVU264
 1209              	.LBB5236:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1210              		.loc 2 193 51 is_stmt 0 view .LVU265
 1211 006c 02F10800 		add	r0, r2, #8
 1212              	.LVL89:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccL95Edz.s 			page 155


 1213              		.loc 2 193 51 view .LVU266
 1214              	.LBE5236:
 1215              	.LBE5235:
 1216              	.LBB5237:
 1217              	.LBI5237:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 1218              		.loc 2 286 7 is_stmt 1 view .LVU267
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 1219              		.loc 2 286 7 is_stmt 0 view .LVU268
 1220              	.LBE5237:
 1221              	.LBB5238:
 1222              	.LBI5238:
 1223              		.loc 9 99 5 is_stmt 1 view .LVU269
 1224              		.loc 9 99 5 is_stmt 0 view .LVU270
 1225              	.LBE5238:
 1226              	.LBB5239:
 1227              	.LBI5239:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 1228              		.loc 2 159 2 is_stmt 1 view .LVU271
 1229              	.LBB5240:
 1230              	.LBB5241:
 1231              	.LBI5241:
 1232              		.loc 9 99 5 view .LVU272
 1233              		.loc 9 99 5 is_stmt 0 view .LVU273
 1234              	.LBE5241:
 1235              	.LBB5242:
 1236              	.LBI5242:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1237              		.loc 5 141 7 is_stmt 1 view .LVU274
 1238              	.LBB5243:
 1239              	.LBI5243:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1240              		.loc 4 83 7 view .LVU275
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1241              		.loc 4 83 7 is_stmt 0 view .LVU276
 1242              	.LBE5243:
 1243              	.LBE5242:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 1244              		.loc 2 160 46 view .LVU277
 1245 0070 48F80B00 		str	r0, [r8, fp]
 1246              	.LVL90:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 1247              		.loc 2 160 46 view .LVU278
 1248              	.LBE5240:
 1249              	.LBE5239:
 1250              	.LBB5244:
 1251              	.LBI5244:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1252              		.loc 2 221 7 is_stmt 1 view .LVU279
 1253              	.LBB5245:
 1254              	.LBI5245:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1255              		.loc 2 186 7 view .LVU280
 1256              	.LBB5246:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1257              		.loc 2 187 28 is_stmt 0 view .LVU281
 1258 0074 2346     		mov	r3, r4
ARM GAS  /tmp/ccL95Edz.s 			page 156


 1259 0076 53F8081B 		ldr	r1, [r3], #8
 1260              	.LVL91:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1261              		.loc 2 187 28 view .LVU282
 1262              	.LBE5246:
 1263              	.LBE5245:
 1264              	.LBB5247:
 1265              	.LBI5247:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1266              		.loc 2 200 7 is_stmt 1 view .LVU283
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1267              		.loc 2 200 7 is_stmt 0 view .LVU284
 1268              	.LBE5247:
 1269              	.LBE5244:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 1270              		.loc 2 555 2 view .LVU285
 1271 007a 9942     		cmp	r1, r3
 1272 007c 1AD0     		beq	.L65
 1273              	.LVL92:
 1274              	.LBB5248:
 1275              	.LBI5248:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1276              		.loc 2 186 7 is_stmt 1 view .LVU286
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1277              		.loc 2 186 7 is_stmt 0 view .LVU287
 1278              	.LBE5248:
 1279              	.LBB5249:
 1280              	.LBI5249:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1281              		.loc 2 178 7 is_stmt 1 view .LVU288
 1282              	.LBB5250:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1283              		.loc 2 179 9 is_stmt 0 view .LVU289
 1284 007e 48F80B10 		str	r1, [r8, fp]
 1285              	.LVL93:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1286              		.loc 2 179 9 view .LVU290
 1287              	.LBE5250:
 1288              	.LBE5249:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 1289              		.loc 2 563 6 view .LVU291
 1290 0082 A168     		ldr	r1, [r4, #8]
 1291              	.LVL94:
 1292              	.LBB5251:
 1293              	.LBI5251:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1294              		.loc 2 210 7 is_stmt 1 view .LVU292
 1295              	.LBB5252:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1296              		.loc 2 211 9 is_stmt 0 view .LVU293
 1297 0084 9160     		str	r1, [r2, #8]
 1298              	.LVL95:
 1299              	.L45:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1300              		.loc 2 211 9 view .LVU294
 1301              	.LBE5252:
 1302              	.LBE5251:
ARM GAS  /tmp/ccL95Edz.s 			page 157


 1303              	.LBB5253:
 1304              	.LBI5253:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1305              		.loc 2 936 7 is_stmt 1 view .LVU295
 1306              	.LBB5254:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1307              		.loc 2 937 16 is_stmt 0 view .LVU296
 1308 0086 6168     		ldr	r1, [r4, #4]
 1309              	.LVL96:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1310              		.loc 2 937 16 view .LVU297
 1311              	.LBE5254:
 1312              	.LBE5253:
 1313              	.LBB5255:
 1314              	.LBI5255:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1315              		.loc 2 182 7 is_stmt 1 view .LVU298
 1316              	.LBB5256:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1317              		.loc 2 183 9 is_stmt 0 view .LVU299
 1318 0088 5160     		str	r1, [r2, #4]
 1319              	.LVL97:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1320              		.loc 2 183 9 view .LVU300
 1321              	.LBE5256:
 1322              	.LBE5255:
 1323              	.LBB5257:
 1324              	.LBI5257:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1325              		.loc 2 190 7 is_stmt 1 view .LVU301
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1326              		.loc 2 190 7 is_stmt 0 view .LVU302
 1327              	.LBE5257:
 1328              	.LBB5258:
 1329              	.LBI5258:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1330              		.loc 2 178 7 is_stmt 1 view .LVU303
 1331              	.LBB5259:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1332              		.loc 2 179 9 is_stmt 0 view .LVU304
 1333 008a 2360     		str	r3, [r4]
 1334              	.LVL98:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1335              		.loc 2 179 9 view .LVU305
 1336              	.LBE5259:
 1337              	.LBE5258:
 1338              	.LBB5260:
 1339              	.LBI5260:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1340              		.loc 2 214 7 is_stmt 1 view .LVU306
 1341              	.LBB5261:
 1342              	.LBI5261:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1343              		.loc 2 182 7 view .LVU307
 1344              	.LBB5262:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1345              		.loc 2 183 9 is_stmt 0 view .LVU308
ARM GAS  /tmp/ccL95Edz.s 			page 158


 1346 008c 0023     		movs	r3, #0
 1347 008e 6360     		str	r3, [r4, #4]
 1348              	.LVL99:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1349              		.loc 2 183 9 view .LVU309
 1350              	.LBE5262:
 1351              	.LBE5261:
 1352              	.LBB5263:
 1353              	.LBI5263:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 1354              		.loc 8 299 7 is_stmt 1 view .LVU310
 1355              	.LBB5264:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1356              		.loc 8 300 9 view .LVU311
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1357              		.loc 8 300 14 is_stmt 0 view .LVU312
 1358 0090 2372     		strb	r3, [r4, #8]
 1359              	.LVL100:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1360              		.loc 8 300 14 view .LVU313
 1361              	.LBE5264:
 1362              	.LBE5263:
 1363              	.LBE5260:
 1364              	.LBE5234:
 1365              	.LBE5233:
 1366              	.LBE5274:
 1367              	.LBE5277:
 1368              	.LBB5278:
 1369              	.LBI5278:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1370              		.loc 11 462 7 is_stmt 1 view .LVU314
 1371              	.LBB5279:
 1372              	.LBB5280:
 1373              	.LBI5280:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1374              		.loc 11 450 7 view .LVU315
 1375              	.LBB5281:
 1376              	.LBI5281:
 1377              		.file 15 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
ARM GAS  /tmp/ccL95Edz.s 			page 159


  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus > 201402L
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #include <utility>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #include <type_traits>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
ARM GAS  /tmp/ccL95Edz.s 			page 160


  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType1;
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType2;
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #else
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
ARM GAS  /tmp/ccL95Edz.s 			page 161


 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       && __assignable>::
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return   Nothing.
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
ARM GAS  /tmp/ccL95Edz.s 			page 162


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #else
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from input type");
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			const _Tp& __x)
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			const _Tp& __x)
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
ARM GAS  /tmp/ccL95Edz.s 			page 163


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return   Nothing.
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #else
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from input type");
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
ARM GAS  /tmp/ccL95Edz.s 			page 164


 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 __result, __alloc);
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     void
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
ARM GAS  /tmp/ccL95Edz.s 			page 165


 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Tp2>
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // for construction and destruction.
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_copy_move
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  move [first2, last2) into
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __result,
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __alloc);
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 166


 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_move_copy
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  copies [first2, last2) into
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __result,
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __alloc);
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_fill_move
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_move_fill
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
ARM GAS  /tmp/ccL95Edz.s 			page 167


 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __first2,
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							    __first2,
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							    __alloc);
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_1
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    _ValueType;
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 168


 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_n_1
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    _ValueType;
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // constructed value_types(s).
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator>
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			    _ForwardIterator __last)
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				     && __assignable>::
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default(__first, __last);
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_n
ARM GAS  /tmp/ccL95Edz.s 			page 169


 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       && __assignable>::
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_a
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     void
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __last,
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __last,
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      allocator<_Tp>&)
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_n_a
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // constructed with the allocator alloc.
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				_Allocator& __alloc)
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
ARM GAS  /tmp/ccL95Edz.s 			page 170


 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				allocator<_Tp>&)
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	static void
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				 _ForwardIterator __last)
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	static _ForwardIterator
ARM GAS  /tmp/ccL95Edz.s 			page 171


 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	static _ForwardIterator
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_novalue
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // value_types(s).
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator>
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				    _ForwardIterator __last)
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_n
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
ARM GAS  /tmp/ccL95Edz.s 			page 172


 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result,
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   random_access_iterator_tag)
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return {__first, __cur};
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result,
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   random_access_iterator_tag)
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return {__first_res, __second_res};
ARM GAS  /tmp/ccL95Edz.s 			page 173


 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return  __result + __n
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			 _ForwardIterator __result)
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __result)
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 std::__iterator_category(__first));
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201703L
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator>
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				    _ForwardIterator __last)
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator>
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				  _ForwardIterator __last)
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
ARM GAS  /tmp/ccL95Edz.s 			page 174


 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::uninitialized_copy
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			 _ForwardIterator __result)
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	 __count, __result);
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif // C++17
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_object_a(_Tp* __dest, _Up* __orig, _Allocator& __alloc)
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // This class may be specialized for specific types.
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _Tp, typename = void>
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __is_bitwise_relocatable
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     : is_trivial<_Tp> { };
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       if (__count > 0)
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
ARM GAS  /tmp/ccL95Edz.s 			page 175


 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    typename _Allocator>
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					       std::addressof(*__first),
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					       __alloc)))
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType2;
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __cur;
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    typename _Allocator>
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 1378              		.loc 15 958 5 view .LVU316
 1379              	.LBB5282:
 1380              	.LBI5282:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 1381              		.loc 15 936 5 view .LVU317
 1382              	.LBB5283:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 1383              		.loc 15 948 24 is_stmt 0 view .LVU318
 1384 0092 4446     		mov	r4, r8
 1385              	.LVL101:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 1386              		.loc 15 948 24 view .LVU319
 1387              	.LBE5283:
 1388              	.LBE5282:
 1389              	.LBE5281:
 1390              	.LBE5280:
 1391              	.LBE5279:
 1392              	.LBE5278:
 1393              	.LBB5364:
 1394              	.LBB5275:
 1395              	.LBB5272:
 1396              	.LBB5270:
 1397              	.LBB5267:
 1398              	.LBB5266:
 1399              	.LBB5265:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1400              		.loc 8 300 14 view .LVU320
 1401 0094 CB46     		mov	fp, r9
 1402 0096 2EE0     		b	.L50
ARM GAS  /tmp/ccL95Edz.s 			page 176


 1403              	.LVL102:
 1404              	.L62:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1405              		.loc 8 300 14 view .LVU321
 1406              	.LBE5265:
 1407              	.LBE5266:
 1408              	.LBE5267:
 1409              	.LBE5270:
 1410              	.LBE5272:
 1411              	.LBE5275:
 1412              	.LBE5364:
 1413              	.LBB5365:
 1414              	.LBB5217:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1415              		.loc 11 1756 24 view .LVU322
 1416 0098 4648     		ldr	r0, .L70+8
 1417              	.LVL103:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1418              		.loc 11 1756 24 view .LVU323
 1419 009a FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 1420              	.LVL104:
 1421              	.L57:
 1422              	.LBB5216:
 1423              	.LBB5213:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 1424              		.loc 12 228 9 view .LVU324
 1425 009e 6A46     		mov	r2, sp
 1426 00a0 C4E7     		b	.L40
 1427              	.LVL105:
 1428              	.L58:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 1429              		.loc 12 228 9 view .LVU325
 1430              	.LBE5213:
 1431              	.LBE5216:
 1432              		.loc 11 1759 48 view .LVU326
 1433 00a2 434D     		ldr	r5, .L70+4
 1434              	.LVL106:
 1435              		.loc 11 1759 48 view .LVU327
 1436 00a4 CFE7     		b	.L41
 1437              	.LVL107:
 1438              	.L63:
 1439              		.loc 11 1759 48 view .LVU328
 1440 00a6 424D     		ldr	r5, .L70+4
 1441              	.LVL108:
 1442              		.loc 11 1759 48 view .LVU329
 1443 00a8 CDE7     		b	.L41
 1444              	.LVL109:
 1445              	.L64:
 1446              		.loc 11 1759 48 view .LVU330
 1447              	.LBE5217:
 1448              	.LBE5365:
 1449              	.LBB5366:
 1450              	.LBB5230:
 1451              	.LBB5229:
 1452              	.LBB5228:
 1453              	.LBB5227:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 177


 1454              		.loc 4 105 26 view .LVU331
 1455 00aa FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 1456              	.LVL110:
 1457              	.L60:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1458              		.loc 4 105 26 view .LVU332
 1459              	.LBE5227:
 1460              	.LBE5228:
 1461              	.LBE5229:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 1462              		.loc 11 343 18 view .LVU333
 1463 00ae 4FF00008 		mov	r8, #0
 1464 00b2 D9E7     		b	.L42
 1465              	.LVL111:
 1466              	.L65:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 1467              		.loc 11 343 18 view .LVU334
 1468              	.LBE5230:
 1469              	.LBE5366:
 1470              	.LBB5367:
 1471              	.LBB5276:
 1472              	.LBB5273:
 1473              	.LBB5271:
 1474              	.LBB5268:
 1475              	.LBI5268:
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 1476              		.loc 8 361 7 is_stmt 1 view .LVU335
 1477              	.LBB5269:
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 1478              		.loc 8 363 2 view .LVU336
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
ARM GAS  /tmp/ccL95Edz.s 			page 178


 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 1479              		.loc 8 365 2 view .LVU337
 1480              		.loc 8 365 49 is_stmt 0 view .LVU338
 1481 00b4 D3F800B0 		ldr	fp, [r3]	@ unaligned
 1482              	.LVL112:
 1483              		.loc 8 365 49 view .LVU339
 1484 00b8 D3F804E0 		ldr	lr, [r3, #4]	@ unaligned
 1485 00bc D3F808C0 		ldr	ip, [r3, #8]	@ unaligned
 1486 00c0 D968     		ldr	r1, [r3, #12]	@ unaligned
 1487 00c2 C2F808B0 		str	fp, [r2, #8]	@ unaligned
 1488 00c6 C2F80CE0 		str	lr, [r2, #12]	@ unaligned
 1489 00ca C2F810C0 		str	ip, [r2, #16]	@ unaligned
 1490 00ce 5161     		str	r1, [r2, #20]	@ unaligned
 1491 00d0 D9E7     		b	.L45
 1492              	.LVL113:
 1493              	.L66:
 1494              		.loc 8 365 49 view .LVU340
 1495              	.LBE5269:
 1496              	.LBE5268:
 1497              	.LBE5271:
 1498              	.LBE5273:
 1499              	.LBE5276:
 1500              	.LBE5367:
 1501              	.LBB5368:
 1502              	.LBB5362:
 1503              	.LBB5360:
 1504              	.LBB5358:
 1505              	.LBB5356:
 1506              	.LBB5354:
 1507              	.LBB5284:
 1508              	.LBB5285:
 1509              	.LBB5286:
 1510              	.LBB5287:
 1511              	.LBB5288:
 1512              	.LBB5289:
 1513              	.LBB5290:
 1514              	.LBI5290:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 1515              		.loc 8 361 7 is_stmt 1 view .LVU341
 1516              	.LBB5291:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 1517              		.loc 8 363 2 view .LVU342
 1518              		.loc 8 365 2 view .LVU343
 1519              		.loc 8 365 49 is_stmt 0 view .LVU344
 1520 00d2 D3F800E0 		ldr	lr, [r3]	@ unaligned
 1521 00d6 D3F804C0 		ldr	ip, [r3, #4]	@ unaligned
 1522 00da 9868     		ldr	r0, [r3, #8]	@ unaligned
 1523 00dc D968     		ldr	r1, [r3, #12]	@ unaligned
 1524 00de C4F808E0 		str	lr, [r4, #8]	@ unaligned
 1525 00e2 C4F80CC0 		str	ip, [r4, #12]	@ unaligned
 1526 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 1527 00e8 6161     		str	r1, [r4, #20]	@ unaligned
 1528 00ea 12E0     		b	.L48
 1529              	.LVL114:
 1530              	.L67:
 1531              		.loc 8 365 49 view .LVU345
 1532              	.LBE5291:
ARM GAS  /tmp/ccL95Edz.s 			page 179


 1533              	.LBE5290:
 1534              	.LBE5289:
 1535              	.LBE5288:
 1536              	.LBE5287:
 1537              	.LBE5286:
 1538              	.LBB5326:
 1539              	.LBB5327:
 1540              	.LBB5328:
 1541              	.LBB5329:
 1542              	.LBB5330:
 1543              	.LBB5331:
 1544              	.LBI5331:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1545              		.loc 2 236 7 is_stmt 1 view .LVU346
 1546              	.LBB5332:
 1547              	.LBB5333:
 1548              	.LBI5333:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1549              		.loc 3 469 7 view .LVU347
 1550              	.LBB5334:
 1551              	.LBI5334:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 1552              		.loc 4 119 7 view .LVU348
 1553              	.LBB5335:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1554              		.loc 4 128 19 is_stmt 0 view .LVU349
 1555 00ec FFF7FEFF 		bl	_ZdlPv
 1556              	.LVL115:
 1557              	.L49:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1558              		.loc 4 128 19 view .LVU350
 1559              	.LBE5335:
 1560              	.LBE5334:
 1561              	.LBE5333:
 1562              	.LBE5332:
 1563              	.LBE5331:
 1564              	.LBE5330:
 1565              	.LBE5329:
 1566              	.LBB5341:
 1567              	.LBI5341:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1568              		.loc 2 150 14 is_stmt 1 view .LVU351
 1569              	.LBB5342:
 1570              	.LBI5342:
 1571              		.loc 5 153 7 view .LVU352
 1572              	.LBB5343:
 1573              	.LBI5343:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1574              		.loc 4 89 7 view .LVU353
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1575              		.loc 4 89 7 is_stmt 0 view .LVU354
 1576              	.LBE5343:
 1577              	.LBE5342:
 1578              	.LBE5341:
 1579              	.LBE5328:
 1580              	.LBE5327:
 1581              	.LBE5326:
ARM GAS  /tmp/ccL95Edz.s 			page 180


 1582              	.LBE5285:
 1583              	.LBE5284:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 1584              		.loc 15 949 7 is_stmt 1 view .LVU355
 1585 00f0 0BF1180B 		add	fp, fp, #24
 1586              	.LVL116:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 1587              		.loc 15 949 7 is_stmt 0 view .LVU356
 1588 00f4 1834     		adds	r4, r4, #24
 1589              	.LVL117:
 1590              	.L50:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 1591              		.loc 15 949 22 is_stmt 1 view .LVU357
 1592 00f6 5E45     		cmp	r6, fp
 1593 00f8 1AD0     		beq	.L46
 1594              	.LVL118:
 1595              	.LBB5352:
 1596              	.LBI5284:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 1597              		.loc 15 905 5 view .LVU358
 1598              	.LBB5350:
 1599              	.LBB5347:
 1600              	.LBI5286:
 1601              		.loc 3 482 2 view .LVU359
 1602              	.LBB5324:
 1603              	.LBI5287:
 1604              		.loc 4 144 2 view .LVU360
 1605              		.loc 4 144 2 is_stmt 0 view .LVU361
 1606              	.LBE5324:
 1607              	.LBE5347:
 1608              	.LBE5350:
 1609              	.LBE5352:
 1610              	.LBE5354:
 1611              	.LBE5356:
 1612              	.LBE5358:
 1613              	.LBE5360:
 1614              	.LBE5362:
 1615              	.LBE5368:
 1616              		.loc 14 174 3 is_stmt 1 view .LVU362
 1617              	.LBB5369:
 1618              	.LBB5363:
 1619              	.LBB5361:
 1620              	.LBB5359:
 1621              	.LBB5357:
 1622              	.LBB5355:
 1623              	.LBB5353:
 1624              	.LBB5351:
 1625              	.LBB5348:
 1626              	.LBB5325:
 1627              	.LBB5323:
 1628              	.LBI5288:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 1629              		.loc 2 552 7 view .LVU363
 1630              	.LBB5322:
 1631              	.LBB5292:
 1632              	.LBI5292:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 181


 1633              		.loc 2 190 7 view .LVU364
 1634              	.LBB5293:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1635              		.loc 2 193 51 is_stmt 0 view .LVU365
 1636 00fa 04F10802 		add	r2, r4, #8
 1637              	.LVL119:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1638              		.loc 2 193 51 view .LVU366
 1639              	.LBE5293:
 1640              	.LBE5292:
 1641              	.LBB5294:
 1642              	.LBI5294:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 1643              		.loc 2 286 7 is_stmt 1 view .LVU367
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 1644              		.loc 2 286 7 is_stmt 0 view .LVU368
 1645              	.LBE5294:
 1646              	.LBB5295:
 1647              	.LBI5295:
 1648              		.loc 9 99 5 is_stmt 1 view .LVU369
 1649              		.loc 9 99 5 is_stmt 0 view .LVU370
 1650              	.LBE5295:
 1651              	.LBB5296:
 1652              	.LBI5296:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 1653              		.loc 2 159 2 is_stmt 1 view .LVU371
 1654              	.LBB5297:
 1655              	.LBB5298:
 1656              	.LBI5298:
 1657              		.loc 9 99 5 view .LVU372
 1658              		.loc 9 99 5 is_stmt 0 view .LVU373
 1659              	.LBE5298:
 1660              	.LBB5299:
 1661              	.LBI5299:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1662              		.loc 5 141 7 is_stmt 1 view .LVU374
 1663              	.LBB5300:
 1664              	.LBI5300:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1665              		.loc 4 83 7 view .LVU375
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1666              		.loc 4 83 7 is_stmt 0 view .LVU376
 1667              	.LBE5300:
 1668              	.LBE5299:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 1669              		.loc 2 160 46 view .LVU377
 1670 00fe 2260     		str	r2, [r4]
 1671              	.LVL120:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 1672              		.loc 2 160 46 view .LVU378
 1673              	.LBE5297:
 1674              	.LBE5296:
 1675              	.LBB5301:
 1676              	.LBI5301:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1677              		.loc 2 221 7 is_stmt 1 view .LVU379
 1678              	.LBB5302:
ARM GAS  /tmp/ccL95Edz.s 			page 182


 1679              	.LBI5302:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1680              		.loc 2 186 7 view .LVU380
 1681              	.LBB5303:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1682              		.loc 2 187 28 is_stmt 0 view .LVU381
 1683 0100 5B46     		mov	r3, fp
 1684 0102 53F8081B 		ldr	r1, [r3], #8
 1685              	.LVL121:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1686              		.loc 2 187 28 view .LVU382
 1687              	.LBE5303:
 1688              	.LBE5302:
 1689              	.LBB5304:
 1690              	.LBI5304:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1691              		.loc 2 200 7 is_stmt 1 view .LVU383
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1692              		.loc 2 200 7 is_stmt 0 view .LVU384
 1693              	.LBE5304:
 1694              	.LBE5301:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 1695              		.loc 2 555 2 view .LVU385
 1696 0106 9942     		cmp	r1, r3
 1697 0108 E3D0     		beq	.L66
 1698              	.LVL122:
 1699              	.LBB5305:
 1700              	.LBI5305:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1701              		.loc 2 186 7 is_stmt 1 view .LVU386
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1702              		.loc 2 186 7 is_stmt 0 view .LVU387
 1703              	.LBE5305:
 1704              	.LBB5306:
 1705              	.LBI5306:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1706              		.loc 2 178 7 is_stmt 1 view .LVU388
 1707              	.LBB5307:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1708              		.loc 2 179 9 is_stmt 0 view .LVU389
 1709 010a 2160     		str	r1, [r4]
 1710              	.LVL123:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1711              		.loc 2 179 9 view .LVU390
 1712              	.LBE5307:
 1713              	.LBE5306:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 1714              		.loc 2 563 6 view .LVU391
 1715 010c DBF80820 		ldr	r2, [fp, #8]
 1716              	.LVL124:
 1717              	.LBB5308:
 1718              	.LBI5308:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1719              		.loc 2 210 7 is_stmt 1 view .LVU392
 1720              	.LBB5309:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1721              		.loc 2 211 9 is_stmt 0 view .LVU393
ARM GAS  /tmp/ccL95Edz.s 			page 183


 1722 0110 A260     		str	r2, [r4, #8]
 1723              	.LVL125:
 1724              	.L48:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1725              		.loc 2 211 9 view .LVU394
 1726              	.LBE5309:
 1727              	.LBE5308:
 1728              	.LBB5310:
 1729              	.LBI5310:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1730              		.loc 2 936 7 is_stmt 1 view .LVU395
 1731              	.LBB5311:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1732              		.loc 2 937 16 is_stmt 0 view .LVU396
 1733 0112 DBF80420 		ldr	r2, [fp, #4]
 1734              	.LVL126:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1735              		.loc 2 937 16 view .LVU397
 1736              	.LBE5311:
 1737              	.LBE5310:
 1738              	.LBB5312:
 1739              	.LBI5312:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1740              		.loc 2 182 7 is_stmt 1 view .LVU398
 1741              	.LBB5313:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1742              		.loc 2 183 9 is_stmt 0 view .LVU399
 1743 0116 6260     		str	r2, [r4, #4]
 1744              	.LVL127:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1745              		.loc 2 183 9 view .LVU400
 1746              	.LBE5313:
 1747              	.LBE5312:
 1748              	.LBB5314:
 1749              	.LBI5314:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1750              		.loc 2 190 7 is_stmt 1 view .LVU401
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1751              		.loc 2 190 7 is_stmt 0 view .LVU402
 1752              	.LBE5314:
 1753              	.LBB5315:
 1754              	.LBI5315:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1755              		.loc 2 178 7 is_stmt 1 view .LVU403
 1756              	.LBB5316:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1757              		.loc 2 179 9 is_stmt 0 view .LVU404
 1758 0118 CBF80030 		str	r3, [fp]
 1759              	.LVL128:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1760              		.loc 2 179 9 view .LVU405
 1761              	.LBE5316:
 1762              	.LBE5315:
 1763              	.LBB5317:
 1764              	.LBI5317:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1765              		.loc 2 214 7 is_stmt 1 view .LVU406
ARM GAS  /tmp/ccL95Edz.s 			page 184


 1766              	.LBB5318:
 1767              	.LBI5318:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1768              		.loc 2 182 7 view .LVU407
 1769              	.LBB5319:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1770              		.loc 2 183 9 is_stmt 0 view .LVU408
 1771 011c 0022     		movs	r2, #0
 1772 011e CBF80420 		str	r2, [fp, #4]
 1773              	.LVL129:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1774              		.loc 2 183 9 view .LVU409
 1775              	.LBE5319:
 1776              	.LBE5318:
 1777              	.LBB5320:
 1778              	.LBI5320:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 1779              		.loc 8 299 7 is_stmt 1 view .LVU410
 1780              	.LBB5321:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1781              		.loc 8 300 9 view .LVU411
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1782              		.loc 8 300 14 is_stmt 0 view .LVU412
 1783 0122 1A70     		strb	r2, [r3]
 1784              	.LVL130:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1785              		.loc 8 300 14 view .LVU413
 1786              	.LBE5321:
 1787              	.LBE5320:
 1788              	.LBE5317:
 1789              	.LBE5322:
 1790              	.LBE5323:
 1791              	.LBE5325:
 1792              	.LBE5348:
 1793              	.LBB5349:
 1794              	.LBI5326:
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up>
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	destroy(allocator_type& __a, _Up* __p)
 1795              		.loc 3 495 2 is_stmt 1 view .LVU414
 1796              	.LBB5346:
 1797              	.LBI5327:
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Up>
ARM GAS  /tmp/ccL95Edz.s 			page 185


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	void
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	destroy(_Up* __p)
 1798              		.loc 4 151 2 view .LVU415
 1799              	.LBB5345:
 1800              	.LBI5328:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1801              		.loc 2 657 7 view .LVU416
 1802              	.LBB5344:
 1803              	.LBI5329:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1804              		.loc 2 229 7 view .LVU417
 1805              	.LBB5340:
 1806              	.LBB5336:
 1807              	.LBI5336:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1808              		.loc 2 221 7 view .LVU418
 1809              	.LBB5337:
 1810              	.LBI5337:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1811              		.loc 2 186 7 view .LVU419
 1812              	.LBB5338:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1813              		.loc 2 187 28 is_stmt 0 view .LVU420
 1814 0124 5B46     		mov	r3, fp
 1815 0126 53F8080B 		ldr	r0, [r3], #8
 1816              	.LVL131:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1817              		.loc 2 187 28 view .LVU421
 1818              	.LBE5338:
 1819              	.LBE5337:
 1820              	.LBB5339:
 1821              	.LBI5339:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1822              		.loc 2 200 7 is_stmt 1 view .LVU422
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1823              		.loc 2 200 7 is_stmt 0 view .LVU423
 1824              	.LBE5339:
 1825              	.LBE5336:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1826              		.loc 2 231 2 view .LVU424
 1827 012a 9842     		cmp	r0, r3
 1828 012c DED1     		bne	.L67
 1829 012e DFE7     		b	.L49
 1830              	.LVL132:
 1831              	.L46:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1832              		.loc 2 231 2 view .LVU425
 1833              	.LBE5340:
 1834              	.LBE5344:
 1835              	.LBE5345:
 1836              	.LBE5346:
 1837              	.LBE5349:
 1838              	.LBE5351:
 1839              	.LBE5353:
 1840              	.LBE5355:
 1841              	.LBE5357:
 1842              	.LBE5359:
ARM GAS  /tmp/ccL95Edz.s 			page 186


 1843              	.LBE5361:
 1844              	.LBE5363:
 1845              	.LBE5369:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before,
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __x);
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  __new_finish = pointer();
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      ++__new_finish;
 1846              		.loc 10 464 8 view .LVU426
 1847 0130 1834     		adds	r4, r4, #24
 1848              	.LVL133:
 1849              	.LBB5370:
 1850              	.LBI5370:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1851              		.loc 11 462 7 is_stmt 1 view .LVU427
 1852              	.LBB5371:
 1853              	.LBB5372:
 1854              	.LBI5372:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1855              		.loc 11 450 7 view .LVU428
 1856              	.LBB5373:
 1857              	.LBI5373:
 1858              		.loc 15 958 5 view .LVU429
 1859              	.LBB5374:
 1860              	.LBI5374:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 1861              		.loc 15 936 5 view .LVU430
 1862 0132 10E0     		b	.L55
 1863              	.LVL134:
 1864              	.L68:
 1865              	.LBB5375:
 1866              	.LBB5376:
 1867              	.LBB5377:
 1868              	.LBB5378:
 1869              	.LBB5379:
 1870              	.LBB5380:
 1871              	.LBB5381:
 1872              	.LBB5382:
 1873              	.LBI5382:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 1874              		.loc 8 361 7 view .LVU431
 1875              	.LBB5383:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 1876              		.loc 8 363 2 view .LVU432
 1877              		.loc 8 365 2 view .LVU433
 1878              		.loc 8 365 49 is_stmt 0 view .LVU434
 1879 0134 D3F800E0 		ldr	lr, [r3]	@ unaligned
ARM GAS  /tmp/ccL95Edz.s 			page 187


 1880 0138 D3F804C0 		ldr	ip, [r3, #4]	@ unaligned
 1881 013c 9868     		ldr	r0, [r3, #8]	@ unaligned
 1882 013e D968     		ldr	r1, [r3, #12]	@ unaligned
 1883 0140 C4F808E0 		str	lr, [r4, #8]	@ unaligned
 1884 0144 C4F80CC0 		str	ip, [r4, #12]	@ unaligned
 1885 0148 2061     		str	r0, [r4, #16]	@ unaligned
 1886 014a 6161     		str	r1, [r4, #20]	@ unaligned
 1887 014c 10E0     		b	.L53
 1888              	.LVL135:
 1889              	.L69:
 1890              		.loc 8 365 49 view .LVU435
 1891              	.LBE5383:
 1892              	.LBE5382:
 1893              	.LBE5381:
 1894              	.LBE5380:
 1895              	.LBE5379:
 1896              	.LBE5378:
 1897              	.LBB5418:
 1898              	.LBB5419:
 1899              	.LBB5420:
 1900              	.LBB5421:
 1901              	.LBB5422:
 1902              	.LBB5423:
 1903              	.LBI5423:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1904              		.loc 2 236 7 is_stmt 1 view .LVU436
 1905              	.LBB5424:
 1906              	.LBB5425:
 1907              	.LBI5425:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1908              		.loc 3 469 7 view .LVU437
 1909              	.LBB5426:
 1910              	.LBI5426:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 1911              		.loc 4 119 7 view .LVU438
 1912              	.LBB5427:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1913              		.loc 4 128 19 is_stmt 0 view .LVU439
 1914 014e FFF7FEFF 		bl	_ZdlPv
 1915              	.LVL136:
 1916              	.L54:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1917              		.loc 4 128 19 view .LVU440
 1918              	.LBE5427:
 1919              	.LBE5426:
 1920              	.LBE5425:
 1921              	.LBE5424:
 1922              	.LBE5423:
 1923              	.LBE5422:
 1924              	.LBE5421:
 1925              	.LBB5433:
 1926              	.LBI5433:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1927              		.loc 2 150 14 is_stmt 1 view .LVU441
 1928              	.LBB5434:
 1929              	.LBI5434:
 1930              		.loc 5 153 7 view .LVU442
ARM GAS  /tmp/ccL95Edz.s 			page 188


 1931              	.LBB5435:
 1932              	.LBI5435:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1933              		.loc 4 89 7 view .LVU443
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1934              		.loc 4 89 7 is_stmt 0 view .LVU444
 1935              	.LBE5435:
 1936              	.LBE5434:
 1937              	.LBE5433:
 1938              	.LBE5420:
 1939              	.LBE5419:
 1940              	.LBE5418:
 1941              	.LBE5377:
 1942              	.LBE5376:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 1943              		.loc 15 949 7 is_stmt 1 view .LVU445
 1944 0152 1836     		adds	r6, r6, #24
 1945              	.LVL137:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 1946              		.loc 15 949 7 is_stmt 0 view .LVU446
 1947 0154 1834     		adds	r4, r4, #24
 1948              	.LVL138:
 1949              	.L55:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 1950              		.loc 15 949 22 is_stmt 1 view .LVU447
 1951 0156 B245     		cmp	r10, r6
 1952 0158 16D0     		beq	.L51
 1953              	.LVL139:
 1954              	.LBB5444:
 1955              	.LBI5376:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 1956              		.loc 15 905 5 view .LVU448
 1957              	.LBB5442:
 1958              	.LBB5439:
 1959              	.LBI5378:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 1960              		.loc 3 482 2 view .LVU449
 1961              	.LBB5416:
 1962              	.LBI5379:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 1963              		.loc 4 144 2 view .LVU450
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 1964              		.loc 4 144 2 is_stmt 0 view .LVU451
 1965              	.LBE5416:
 1966              	.LBE5439:
 1967              	.LBE5442:
 1968              	.LBE5444:
 1969              	.LBE5375:
 1970              	.LBE5374:
 1971              	.LBE5373:
 1972              	.LBE5372:
 1973              	.LBE5371:
 1974              	.LBE5370:
 1975              		.loc 14 174 3 is_stmt 1 view .LVU452
 1976              	.LBB5451:
 1977              	.LBB5450:
 1978              	.LBB5449:
ARM GAS  /tmp/ccL95Edz.s 			page 189


 1979              	.LBB5448:
 1980              	.LBB5447:
 1981              	.LBB5446:
 1982              	.LBB5445:
 1983              	.LBB5443:
 1984              	.LBB5440:
 1985              	.LBB5417:
 1986              	.LBB5415:
 1987              	.LBI5380:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 1988              		.loc 2 552 7 view .LVU453
 1989              	.LBB5414:
 1990              	.LBB5384:
 1991              	.LBI5384:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1992              		.loc 2 190 7 view .LVU454
 1993              	.LBB5385:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1994              		.loc 2 193 51 is_stmt 0 view .LVU455
 1995 015a 04F10802 		add	r2, r4, #8
 1996              	.LVL140:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1997              		.loc 2 193 51 view .LVU456
 1998              	.LBE5385:
 1999              	.LBE5384:
 2000              	.LBB5386:
 2001              	.LBI5386:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 2002              		.loc 2 286 7 is_stmt 1 view .LVU457
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 2003              		.loc 2 286 7 is_stmt 0 view .LVU458
 2004              	.LBE5386:
 2005              	.LBB5387:
 2006              	.LBI5387:
 2007              		.loc 9 99 5 is_stmt 1 view .LVU459
 2008              		.loc 9 99 5 is_stmt 0 view .LVU460
 2009              	.LBE5387:
 2010              	.LBB5388:
 2011              	.LBI5388:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 2012              		.loc 2 159 2 is_stmt 1 view .LVU461
 2013              	.LBB5389:
 2014              	.LBB5390:
 2015              	.LBI5390:
 2016              		.loc 9 99 5 view .LVU462
 2017              		.loc 9 99 5 is_stmt 0 view .LVU463
 2018              	.LBE5390:
 2019              	.LBB5391:
 2020              	.LBI5391:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2021              		.loc 5 141 7 is_stmt 1 view .LVU464
 2022              	.LBB5392:
 2023              	.LBI5392:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2024              		.loc 4 83 7 view .LVU465
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2025              		.loc 4 83 7 is_stmt 0 view .LVU466
ARM GAS  /tmp/ccL95Edz.s 			page 190


 2026              	.LBE5392:
 2027              	.LBE5391:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 2028              		.loc 2 160 46 view .LVU467
 2029 015e 2260     		str	r2, [r4]
 2030              	.LVL141:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 2031              		.loc 2 160 46 view .LVU468
 2032              	.LBE5389:
 2033              	.LBE5388:
 2034              	.LBB5393:
 2035              	.LBI5393:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2036              		.loc 2 221 7 is_stmt 1 view .LVU469
 2037              	.LBB5394:
 2038              	.LBI5394:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2039              		.loc 2 186 7 view .LVU470
 2040              	.LBB5395:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2041              		.loc 2 187 28 is_stmt 0 view .LVU471
 2042 0160 3346     		mov	r3, r6
 2043 0162 53F8081B 		ldr	r1, [r3], #8
 2044              	.LVL142:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2045              		.loc 2 187 28 view .LVU472
 2046              	.LBE5395:
 2047              	.LBE5394:
 2048              	.LBB5396:
 2049              	.LBI5396:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2050              		.loc 2 200 7 is_stmt 1 view .LVU473
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2051              		.loc 2 200 7 is_stmt 0 view .LVU474
 2052              	.LBE5396:
 2053              	.LBE5393:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 2054              		.loc 2 555 2 view .LVU475
 2055 0166 9942     		cmp	r1, r3
 2056 0168 E4D0     		beq	.L68
 2057              	.LVL143:
 2058              	.LBB5397:
 2059              	.LBI5397:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2060              		.loc 2 186 7 is_stmt 1 view .LVU476
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2061              		.loc 2 186 7 is_stmt 0 view .LVU477
 2062              	.LBE5397:
 2063              	.LBB5398:
 2064              	.LBI5398:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2065              		.loc 2 178 7 is_stmt 1 view .LVU478
 2066              	.LBB5399:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2067              		.loc 2 179 9 is_stmt 0 view .LVU479
 2068 016a 2160     		str	r1, [r4]
 2069              	.LVL144:
ARM GAS  /tmp/ccL95Edz.s 			page 191


 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2070              		.loc 2 179 9 view .LVU480
 2071              	.LBE5399:
 2072              	.LBE5398:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 2073              		.loc 2 563 6 view .LVU481
 2074 016c B268     		ldr	r2, [r6, #8]
 2075              	.LVL145:
 2076              	.LBB5400:
 2077              	.LBI5400:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2078              		.loc 2 210 7 is_stmt 1 view .LVU482
 2079              	.LBB5401:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2080              		.loc 2 211 9 is_stmt 0 view .LVU483
 2081 016e A260     		str	r2, [r4, #8]
 2082              	.LVL146:
 2083              	.L53:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2084              		.loc 2 211 9 view .LVU484
 2085              	.LBE5401:
 2086              	.LBE5400:
 2087              	.LBB5402:
 2088              	.LBI5402:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 2089              		.loc 2 936 7 is_stmt 1 view .LVU485
 2090              	.LBB5403:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2091              		.loc 2 937 16 is_stmt 0 view .LVU486
 2092 0170 7268     		ldr	r2, [r6, #4]
 2093              	.LVL147:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2094              		.loc 2 937 16 view .LVU487
 2095              	.LBE5403:
 2096              	.LBE5402:
 2097              	.LBB5404:
 2098              	.LBI5404:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2099              		.loc 2 182 7 is_stmt 1 view .LVU488
 2100              	.LBB5405:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2101              		.loc 2 183 9 is_stmt 0 view .LVU489
 2102 0172 6260     		str	r2, [r4, #4]
 2103              	.LVL148:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2104              		.loc 2 183 9 view .LVU490
 2105              	.LBE5405:
 2106              	.LBE5404:
 2107              	.LBB5406:
 2108              	.LBI5406:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2109              		.loc 2 190 7 is_stmt 1 view .LVU491
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2110              		.loc 2 190 7 is_stmt 0 view .LVU492
 2111              	.LBE5406:
 2112              	.LBB5407:
 2113              	.LBI5407:
ARM GAS  /tmp/ccL95Edz.s 			page 192


 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2114              		.loc 2 178 7 is_stmt 1 view .LVU493
 2115              	.LBB5408:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2116              		.loc 2 179 9 is_stmt 0 view .LVU494
 2117 0174 3360     		str	r3, [r6]
 2118              	.LVL149:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2119              		.loc 2 179 9 view .LVU495
 2120              	.LBE5408:
 2121              	.LBE5407:
 2122              	.LBB5409:
 2123              	.LBI5409:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2124              		.loc 2 214 7 is_stmt 1 view .LVU496
 2125              	.LBB5410:
 2126              	.LBI5410:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2127              		.loc 2 182 7 view .LVU497
 2128              	.LBB5411:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2129              		.loc 2 183 9 is_stmt 0 view .LVU498
 2130 0176 0022     		movs	r2, #0
 2131 0178 7260     		str	r2, [r6, #4]
 2132              	.LVL150:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2133              		.loc 2 183 9 view .LVU499
 2134              	.LBE5411:
 2135              	.LBE5410:
 2136              	.LBB5412:
 2137              	.LBI5412:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 2138              		.loc 8 299 7 is_stmt 1 view .LVU500
 2139              	.LBB5413:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2140              		.loc 8 300 9 view .LVU501
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2141              		.loc 8 300 14 is_stmt 0 view .LVU502
 2142 017a 1A70     		strb	r2, [r3]
 2143              	.LVL151:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2144              		.loc 8 300 14 view .LVU503
 2145              	.LBE5413:
 2146              	.LBE5412:
 2147              	.LBE5409:
 2148              	.LBE5414:
 2149              	.LBE5415:
 2150              	.LBE5417:
 2151              	.LBE5440:
 2152              	.LBB5441:
 2153              	.LBI5418:
 2154              		.loc 3 495 2 is_stmt 1 view .LVU504
 2155              	.LBB5438:
 2156              	.LBI5419:
 2157              		.loc 4 151 2 view .LVU505
 2158              	.LBB5437:
 2159              	.LBI5420:
ARM GAS  /tmp/ccL95Edz.s 			page 193


 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 2160              		.loc 2 657 7 view .LVU506
 2161              	.LBB5436:
 2162              	.LBI5421:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2163              		.loc 2 229 7 view .LVU507
 2164              	.LBB5432:
 2165              	.LBB5428:
 2166              	.LBI5428:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2167              		.loc 2 221 7 view .LVU508
 2168              	.LBB5429:
 2169              	.LBI5429:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2170              		.loc 2 186 7 view .LVU509
 2171              	.LBB5430:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2172              		.loc 2 187 28 is_stmt 0 view .LVU510
 2173 017c 3346     		mov	r3, r6
 2174 017e 53F8080B 		ldr	r0, [r3], #8
 2175              	.LVL152:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2176              		.loc 2 187 28 view .LVU511
 2177              	.LBE5430:
 2178              	.LBE5429:
 2179              	.LBB5431:
 2180              	.LBI5431:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2181              		.loc 2 200 7 is_stmt 1 view .LVU512
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2182              		.loc 2 200 7 is_stmt 0 view .LVU513
 2183              	.LBE5431:
 2184              	.LBE5428:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2185              		.loc 2 231 2 view .LVU514
 2186 0182 9842     		cmp	r0, r3
 2187 0184 E3D1     		bne	.L69
 2188 0186 E4E7     		b	.L54
 2189              	.LVL153:
 2190              	.L51:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2191              		.loc 2 231 2 view .LVU515
 2192              	.LBE5432:
 2193              	.LBE5436:
 2194              	.LBE5437:
 2195              	.LBE5438:
 2196              	.LBE5441:
 2197              	.LBE5443:
 2198              	.LBE5445:
 2199              	.LBE5446:
 2200              	.LBE5447:
 2201              	.LBE5448:
 2202              	.LBE5449:
 2203              	.LBE5450:
 2204              	.LBE5451:
 2205              	.LBB5452:
 2206              	.LBI5452:
ARM GAS  /tmp/ccL95Edz.s 			page 194


 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2207              		.loc 11 347 7 is_stmt 1 view .LVU516
 2208              	.LBB5453:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2209              		.loc 11 350 2 is_stmt 0 view .LVU517
 2210 0188 B9F1000F 		cmp	r9, #0
 2211 018c 02D0     		beq	.L56
 2212              	.LVL154:
 2213              	.LBB5454:
 2214              	.LBI5454:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2215              		.loc 3 469 7 is_stmt 1 view .LVU518
 2216              	.LBB5455:
 2217              	.LBB5456:
 2218              	.LBI5456:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 2219              		.loc 4 119 7 view .LVU519
 2220              	.LBB5457:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2221              		.loc 4 128 19 is_stmt 0 view .LVU520
 2222 018e 4846     		mov	r0, r9
 2223 0190 FFF7FEFF 		bl	_ZdlPv
 2224              	.LVL155:
 2225              	.L56:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2226              		.loc 4 128 19 view .LVU521
 2227              	.LBE5457:
 2228              	.LBE5456:
 2229              	.LBE5455:
 2230              	.LBE5454:
 2231              	.LBE5453:
 2232              	.LBE5452:
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		(__old_start, __position.base(),
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      ++__new_finish;
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		(__position.base(), __old_finish,
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       __catch(...)
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (!__new_finish)
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before);
ARM GAS  /tmp/ccL95Edz.s 			page 195


 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  __throw_exception_again;
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_deallocate(__old_start,
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_start = __new_start;
 2233              		.loc 10 502 7 view .LVU522
 2234 0194 C7F80080 		str	r8, [r7]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 2235              		.loc 10 503 7 view .LVU523
 2236 0198 7C60     		str	r4, [r7, #4]
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 2237              		.loc 10 504 53 view .LVU524
 2238 019a 05EB4505 		add	r5, r5, r5, lsl #1
 2239              	.LVL156:
 2240              		.loc 10 504 53 view .LVU525
 2241 019e 08EBC505 		add	r5, r8, r5, lsl #3
 2242              		.loc 10 504 7 view .LVU526
 2243 01a2 BD60     		str	r5, [r7, #8]
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 2244              		.loc 10 505 5 view .LVU527
 2245 01a4 03B0     		add	sp, sp, #12
 2246              	.LCFI7:
 2247              		.cfi_def_cfa_offset 36
 2248              		@ sp needed
 2249 01a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2250              	.LVL157:
 2251              	.L71:
 2252              		.loc 10 505 5 view .LVU528
 2253 01aa 00BF     		.align	2
 2254              	.L70:
 2255 01ac ABAAAAAA 		.word	-1431655765
 2256 01b0 55555505 		.word	89478485
 2257 01b4 00000000 		.word	.LC1
 2258              		.cfi_endproc
 2259              	.LFE3909:
 2261              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_
 2262              		.align	1
 2263              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_
 2264              		.syntax unified
 2265              		.thumb
 2266              		.thumb_func
 2267              		.fpu fpv4-sp-d16
 2269              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEERS5_
 2270              	.LVL158:
 2271              	.LFB3719:
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2272              		.loc 10 109 7 is_stmt 1 view -0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccL95Edz.s 			page 196


 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2276              		.loc 10 109 7 is_stmt 0 view .LVU530
 2277 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2278              	.LCFI8:
 2279              		.cfi_def_cfa_offset 24
 2280              		.cfi_offset 3, -24
 2281              		.cfi_offset 4, -20
 2282              		.cfi_offset 5, -16
 2283              		.cfi_offset 6, -12
 2284              		.cfi_offset 7, -8
 2285              		.cfi_offset 14, -4
 2286 0002 0446     		mov	r4, r0
 2287 0004 0A46     		mov	r2, r1
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2288              		.loc 10 112 20 view .LVU531
 2289 0006 4168     		ldr	r1, [r0, #4]
 2290              	.LVL159:
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2291              		.loc 10 112 47 view .LVU532
 2292 0008 8368     		ldr	r3, [r0, #8]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2293              		.loc 10 112 2 view .LVU533
 2294 000a 9942     		cmp	r1, r3
 2295 000c 21D0     		beq	.L73
 2296              	.LVL160:
 2297              	.LBB5510:
 2298              	.LBI5510:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 2299              		.loc 3 482 2 is_stmt 1 view .LVU534
 2300              	.LBB5511:
 2301              	.LBI5511:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 2302              		.loc 4 144 2 view .LVU535
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 2303              		.loc 4 144 2 is_stmt 0 view .LVU536
 2304              	.LBE5511:
 2305              	.LBE5510:
 2306              		.loc 14 174 3 is_stmt 1 view .LVU537
 2307              	.LBB5550:
 2308              	.LBB5548:
 2309              	.LBB5512:
 2310              	.LBI5512:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 2311              		.loc 2 552 7 view .LVU538
 2312              	.LBB5513:
 2313              	.LBB5514:
 2314              	.LBI5514:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2315              		.loc 2 190 7 view .LVU539
 2316              	.LBB5515:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 2317              		.loc 2 193 51 is_stmt 0 view .LVU540
 2318 000e 01F10805 		add	r5, r1, #8
 2319              	.LVL161:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 2320              		.loc 2 193 51 view .LVU541
ARM GAS  /tmp/ccL95Edz.s 			page 197


 2321              	.LBE5515:
 2322              	.LBE5514:
 2323              	.LBB5516:
 2324              	.LBI5516:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 2325              		.loc 2 286 7 is_stmt 1 view .LVU542
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 2326              		.loc 2 286 7 is_stmt 0 view .LVU543
 2327              	.LBE5516:
 2328              	.LBB5517:
 2329              	.LBI5517:
 2330              		.loc 9 99 5 is_stmt 1 view .LVU544
 2331              		.loc 9 99 5 is_stmt 0 view .LVU545
 2332              	.LBE5517:
 2333              	.LBB5518:
 2334              	.LBI5518:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 2335              		.loc 2 159 2 is_stmt 1 view .LVU546
 2336              	.LBB5519:
 2337              	.LBB5520:
 2338              	.LBI5520:
 2339              		.loc 9 99 5 view .LVU547
 2340              		.loc 9 99 5 is_stmt 0 view .LVU548
 2341              	.LBE5520:
 2342              	.LBB5521:
 2343              	.LBI5521:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2344              		.loc 5 141 7 is_stmt 1 view .LVU549
 2345              	.LBB5522:
 2346              	.LBI5522:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2347              		.loc 4 83 7 view .LVU550
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2348              		.loc 4 83 7 is_stmt 0 view .LVU551
 2349              	.LBE5522:
 2350              	.LBE5521:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 2351              		.loc 2 160 46 view .LVU552
 2352 0012 0D60     		str	r5, [r1]
 2353              	.LVL162:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 2354              		.loc 2 160 46 view .LVU553
 2355              	.LBE5519:
 2356              	.LBE5518:
 2357              	.LBB5523:
 2358              	.LBI5523:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2359              		.loc 2 221 7 is_stmt 1 view .LVU554
 2360              	.LBB5524:
 2361              	.LBI5524:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2362              		.loc 2 186 7 view .LVU555
 2363              	.LBB5525:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2364              		.loc 2 187 28 is_stmt 0 view .LVU556
 2365 0014 1346     		mov	r3, r2
 2366 0016 53F8080B 		ldr	r0, [r3], #8
ARM GAS  /tmp/ccL95Edz.s 			page 198


 2367              	.LVL163:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2368              		.loc 2 187 28 view .LVU557
 2369              	.LBE5525:
 2370              	.LBE5524:
 2371              	.LBB5526:
 2372              	.LBI5526:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2373              		.loc 2 200 7 is_stmt 1 view .LVU558
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2374              		.loc 2 200 7 is_stmt 0 view .LVU559
 2375              	.LBE5526:
 2376              	.LBE5523:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 2377              		.loc 2 555 2 view .LVU560
 2378 001a 9842     		cmp	r0, r3
 2379 001c 0ED0     		beq	.L78
 2380              	.LVL164:
 2381              	.LBB5527:
 2382              	.LBI5527:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2383              		.loc 2 186 7 is_stmt 1 view .LVU561
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2384              		.loc 2 186 7 is_stmt 0 view .LVU562
 2385              	.LBE5527:
 2386              	.LBB5528:
 2387              	.LBI5528:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2388              		.loc 2 178 7 is_stmt 1 view .LVU563
 2389              	.LBB5529:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2390              		.loc 2 179 9 is_stmt 0 view .LVU564
 2391 001e 0860     		str	r0, [r1]
 2392              	.LVL165:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2393              		.loc 2 179 9 view .LVU565
 2394              	.LBE5529:
 2395              	.LBE5528:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 2396              		.loc 2 563 6 view .LVU566
 2397 0020 9068     		ldr	r0, [r2, #8]
 2398              	.LVL166:
 2399              	.LBB5530:
 2400              	.LBI5530:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2401              		.loc 2 210 7 is_stmt 1 view .LVU567
 2402              	.LBB5531:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2403              		.loc 2 211 9 is_stmt 0 view .LVU568
 2404 0022 8860     		str	r0, [r1, #8]
 2405              	.LVL167:
 2406              	.L75:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2407              		.loc 2 211 9 view .LVU569
 2408              	.LBE5531:
 2409              	.LBE5530:
 2410              	.LBB5532:
ARM GAS  /tmp/ccL95Edz.s 			page 199


 2411              	.LBI5532:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 2412              		.loc 2 936 7 is_stmt 1 view .LVU570
 2413              	.LBB5533:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2414              		.loc 2 937 16 is_stmt 0 view .LVU571
 2415 0024 5068     		ldr	r0, [r2, #4]
 2416              	.LVL168:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2417              		.loc 2 937 16 view .LVU572
 2418              	.LBE5533:
 2419              	.LBE5532:
 2420              	.LBB5534:
 2421              	.LBI5534:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2422              		.loc 2 182 7 is_stmt 1 view .LVU573
 2423              	.LBB5535:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2424              		.loc 2 183 9 is_stmt 0 view .LVU574
 2425 0026 4860     		str	r0, [r1, #4]
 2426              	.LVL169:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2427              		.loc 2 183 9 view .LVU575
 2428              	.LBE5535:
 2429              	.LBE5534:
 2430              	.LBB5536:
 2431              	.LBI5536:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2432              		.loc 2 190 7 is_stmt 1 view .LVU576
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2433              		.loc 2 190 7 is_stmt 0 view .LVU577
 2434              	.LBE5536:
 2435              	.LBB5537:
 2436              	.LBI5537:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2437              		.loc 2 178 7 is_stmt 1 view .LVU578
 2438              	.LBB5538:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2439              		.loc 2 179 9 is_stmt 0 view .LVU579
 2440 0028 1360     		str	r3, [r2]
 2441              	.LVL170:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2442              		.loc 2 179 9 view .LVU580
 2443              	.LBE5538:
 2444              	.LBE5537:
 2445              	.LBB5539:
 2446              	.LBI5539:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2447              		.loc 2 214 7 is_stmt 1 view .LVU581
 2448              	.LBB5540:
 2449              	.LBI5540:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2450              		.loc 2 182 7 view .LVU582
 2451              	.LBB5541:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2452              		.loc 2 183 9 is_stmt 0 view .LVU583
 2453 002a 0023     		movs	r3, #0
ARM GAS  /tmp/ccL95Edz.s 			page 200


 2454 002c 5360     		str	r3, [r2, #4]
 2455              	.LVL171:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2456              		.loc 2 183 9 view .LVU584
 2457              	.LBE5541:
 2458              	.LBE5540:
 2459              	.LBB5542:
 2460              	.LBI5542:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 2461              		.loc 8 299 7 is_stmt 1 view .LVU585
 2462              	.LBB5543:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2463              		.loc 8 300 9 view .LVU586
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2464              		.loc 8 300 14 is_stmt 0 view .LVU587
 2465 002e 1372     		strb	r3, [r2, #8]
 2466              	.LVL172:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2467              		.loc 8 300 14 view .LVU588
 2468              	.LBE5543:
 2469              	.LBE5542:
 2470              	.LBE5539:
 2471              	.LBE5513:
 2472              	.LBE5512:
 2473              	.LBE5548:
 2474              	.LBE5550:
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 2475              		.loc 10 117 22 view .LVU589
 2476 0030 6368     		ldr	r3, [r4, #4]
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 2477              		.loc 10 117 6 view .LVU590
 2478 0032 1833     		adds	r3, r3, #24
 2479 0034 6360     		str	r3, [r4, #4]
 2480              	.LVL173:
 2481              	.L76:
 2482              	.LBB5551:
 2483              	.LBI5551:
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2484              		.loc 11 1140 7 is_stmt 1 view .LVU591
 2485              	.LBB5552:
 2486              	.LBI5552:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2487              		.loc 11 826 7 view .LVU592
 2488              	.LBB5553:
 2489              	.LBI5553:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2490              		.loc 13 806 7 view .LVU593
 2491              	.LBB5554:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2492              		.loc 13 807 23 is_stmt 0 view .LVU594
 2493 0036 6068     		ldr	r0, [r4, #4]
 2494              	.LVL174:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2495              		.loc 13 807 23 view .LVU595
 2496              	.LBE5554:
 2497              	.LBE5553:
 2498              	.LBE5552:
ARM GAS  /tmp/ccL95Edz.s 			page 201


 2499              	.LBB5555:
 2500              	.LBI5555:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 2501              		.loc 13 867 7 is_stmt 1 view .LVU596
 2502              	.LBB5556:
 2503              	.LBB5557:
 2504              	.LBI5557:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2505              		.loc 13 806 7 view .LVU597
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2506              		.loc 13 806 7 is_stmt 0 view .LVU598
 2507              	.LBE5557:
 2508              	.LBE5556:
 2509              	.LBE5555:
 2510              	.LBE5551:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 2511              		.loc 10 125 7 view .LVU599
 2512 0038 1838     		subs	r0, r0, #24
 2513 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2514              	.LVL175:
 2515              	.L78:
 2516              	.LBB5558:
 2517              	.LBB5549:
 2518              	.LBB5547:
 2519              	.LBB5546:
 2520              	.LBB5544:
 2521              	.LBI5544:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 2522              		.loc 8 361 7 is_stmt 1 view .LVU600
 2523              	.LBB5545:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 2524              		.loc 8 363 2 view .LVU601
 2525              		.loc 8 365 2 view .LVU602
 2526              		.loc 8 365 49 is_stmt 0 view .LVU603
 2527 003c D3F800C0 		ldr	ip, [r3]	@ unaligned
 2528 0040 5F68     		ldr	r7, [r3, #4]	@ unaligned
 2529 0042 9E68     		ldr	r6, [r3, #8]	@ unaligned
 2530 0044 D868     		ldr	r0, [r3, #12]	@ unaligned
 2531 0046 C1F808C0 		str	ip, [r1, #8]	@ unaligned
 2532 004a CF60     		str	r7, [r1, #12]	@ unaligned
 2533 004c 0E61     		str	r6, [r1, #16]	@ unaligned
 2534 004e 4861     		str	r0, [r1, #20]	@ unaligned
 2535 0050 E8E7     		b	.L75
 2536              	.LVL176:
 2537              	.L73:
 2538              		.loc 8 365 49 view .LVU604
 2539              	.LBE5545:
 2540              	.LBE5544:
 2541              	.LBE5546:
 2542              	.LBE5547:
 2543              	.LBE5549:
 2544              	.LBE5558:
 2545              	.LBB5559:
 2546              	.LBI5559:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2547              		.loc 11 826 7 is_stmt 1 view .LVU605
 2548              	.LBB5560:
ARM GAS  /tmp/ccL95Edz.s 			page 202


 2549              	.LBB5561:
 2550              	.LBI5561:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2551              		.loc 13 806 7 view .LVU606
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2552              		.loc 13 806 7 is_stmt 0 view .LVU607
 2553              	.LBE5561:
 2554              	.LBE5560:
 2555              	.LBE5559:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2556              		.loc 10 121 4 view .LVU608
 2557 0052 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS
 2558              	.LVL177:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2559              		.loc 10 121 4 view .LVU609
 2560 0056 EEE7     		b	.L76
 2561              		.cfi_endproc
 2562              	.LFE3719:
 2564              		.section	.text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEE
 2565              		.align	1
 2566              		.weak	_ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEEvN9__gnu_
 2567              		.syntax unified
 2568              		.thumb
 2569              		.thumb_func
 2570              		.fpu fpv4-sp-d16
 2572              	_ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEEvN9__gnu_cxx17__
 2573              	.LVL178:
 2574              	.LFB3988:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 2575              		.loc 10 426 7 is_stmt 1 view -0
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 8
 2578              		@ frame_needed = 0, uses_anonymous_args = 0
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 2579              		.loc 10 426 7 is_stmt 0 view .LVU611
 2580 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2581              	.LCFI9:
 2582              		.cfi_def_cfa_offset 36
 2583              		.cfi_offset 4, -36
 2584              		.cfi_offset 5, -32
 2585              		.cfi_offset 6, -28
 2586              		.cfi_offset 7, -24
 2587              		.cfi_offset 8, -20
 2588              		.cfi_offset 9, -16
 2589              		.cfi_offset 10, -12
 2590              		.cfi_offset 11, -8
 2591              		.cfi_offset 14, -4
 2592 0004 83B0     		sub	sp, sp, #12
 2593              	.LCFI10:
 2594              		.cfi_def_cfa_offset 48
 2595 0006 8846     		mov	r8, r1
 2596              	.LVL179:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 2597              		.loc 10 426 7 view .LVU612
 2598 0008 9346     		mov	fp, r2
 2599              	.LVL180:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
ARM GAS  /tmp/ccL95Edz.s 			page 203


 2600              		.loc 10 426 7 view .LVU613
 2601 000a 0123     		movs	r3, #1
 2602 000c 0093     		str	r3, [sp]
 2603              	.LVL181:
 2604              	.LBB5600:
 2605              	.LBI5600:
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2606              		.loc 11 1753 7 is_stmt 1 view .LVU614
 2607              	.LBB5601:
 2608              	.LBB5602:
 2609              	.LBI5602:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 2610              		.loc 11 915 7 view .LVU615
 2611              	.LBB5603:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2612              		.loc 11 916 40 is_stmt 0 view .LVU616
 2613 000e 4268     		ldr	r2, [r0, #4]
 2614              	.LVL182:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2615              		.loc 11 916 66 view .LVU617
 2616 0010 0368     		ldr	r3, [r0]
 2617              	.LVL183:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2618              		.loc 11 916 50 view .LVU618
 2619 0012 D31A     		subs	r3, r2, r3
 2620              	.LVL184:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2621              		.loc 11 916 50 view .LVU619
 2622              	.LBE5603:
 2623              	.LBE5602:
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 2624              		.loc 11 1755 2 view .LVU620
 2625 0014 6FF06041 		mvn	r1, #-536870912
 2626 0018 B1EBA30F 		cmp	r1, r3, asr #2
 2627 001c 38D0     		beq	.L93
 2628 001e 0446     		mov	r4, r0
 2629 0020 9E10     		asrs	r6, r3, #2
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2630              		.loc 11 1758 45 view .LVU621
 2631 0022 0196     		str	r6, [sp, #4]
 2632              	.LVL185:
 2633              	.LBB5604:
 2634              	.LBI5604:
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 2635              		.loc 12 222 5 is_stmt 1 view .LVU622
 2636              	.LBB5605:
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 2637              		.loc 12 227 7 is_stmt 0 view .LVU623
 2638 0024 002E     		cmp	r6, #0
 2639 0026 36D0     		beq	.L88
 2640              		.loc 12 229 14 view .LVU624
 2641 0028 01AB     		add	r3, sp, #4
 2642              	.LVL186:
 2643              	.L81:
 2644              		.loc 12 229 14 view .LVU625
 2645              	.LBE5605:
 2646              	.LBE5604:
ARM GAS  /tmp/ccL95Edz.s 			page 204


1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2647              		.loc 11 1758 33 view .LVU626
 2648 002a 1868     		ldr	r0, [r3]
 2649              	.LVL187:
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2650              		.loc 11 1758 18 view .LVU627
 2651 002c 0644     		add	r6, r6, r0
 2652              	.LVL188:
 2653              	.LBB5607:
 2654              	.LBI5607:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 2655              		.loc 11 915 7 is_stmt 1 view .LVU628
 2656              	.LBB5608:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2657              		.loc 11 916 66 is_stmt 0 view .LVU629
 2658 002e 2368     		ldr	r3, [r4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2659              		.loc 11 916 50 view .LVU630
 2660 0030 D21A     		subs	r2, r2, r3
 2661              	.LVL189:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2662              		.loc 11 916 50 view .LVU631
 2663              	.LBE5608:
 2664              	.LBE5607:
 2665              		.loc 11 1759 48 view .LVU632
 2666 0032 B6EBA20F 		cmp	r6, r2, asr #2
 2667 0036 30D3     		bcc	.L89
 2668              		.loc 11 1759 25 view .LVU633
 2669 0038 B6F1005F 		cmp	r6, #536870912
 2670 003c 30D2     		bcs	.L94
 2671              	.LVL190:
 2672              	.L82:
 2673              		.loc 11 1759 25 view .LVU634
 2674              	.LBE5601:
 2675              	.LBE5600:
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 2676              		.loc 10 437 15 view .LVU635
 2677 003e D4F80090 		ldr	r9, [r4]
 2678              	.LVL191:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 2679              		.loc 10 438 15 view .LVU636
 2680 0042 D4F804A0 		ldr	r10, [r4, #4]
 2681              	.LVL192:
 2682              	.LBB5611:
 2683              	.LBI5611:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 2684              		.loc 11 808 7 is_stmt 1 view .LVU637
 2685              	.LBB5612:
 2686              	.LBI5612:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2687              		.loc 13 806 7 view .LVU638
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2688              		.loc 13 806 7 is_stmt 0 view .LVU639
 2689              	.LBE5612:
 2690              	.LBE5611:
 2691              	.LBB5613:
 2692              	.LBI5613:
ARM GAS  /tmp/ccL95Edz.s 			page 205


 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 2693              		.loc 13 989 5 is_stmt 1 view .LVU640
 2694              	.LBB5614:
 2695              		.loc 13 992 27 is_stmt 0 view .LVU641
 2696 0046 A8EB0905 		sub	r5, r8, r9
 2697              	.LVL193:
 2698              		.loc 13 992 27 view .LVU642
 2699              	.LBE5614:
 2700              	.LBE5613:
 2701              	.LBB5615:
 2702              	.LBI5615:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2703              		.loc 11 340 7 is_stmt 1 view .LVU643
 2704              	.LBB5616:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 2705              		.loc 11 343 18 is_stmt 0 view .LVU644
 2706 004a 76B3     		cbz	r6, .L91
 2707              	.LVL194:
 2708              	.LBB5617:
 2709              	.LBI5617:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 2710              		.loc 3 443 7 is_stmt 1 view .LVU645
 2711              	.LBB5618:
 2712              	.LBI5618:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 2713              		.loc 4 102 7 view .LVU646
 2714              	.LBB5619:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 2715              		.loc 4 104 2 is_stmt 0 view .LVU647
 2716 004c B6F1005F 		cmp	r6, #536870912
 2717 0050 29D2     		bcs	.L95
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2718              		.loc 4 114 41 view .LVU648
 2719 0052 B000     		lsls	r0, r6, #2
 2720 0054 FFF7FEFF 		bl	_Znwj
 2721              	.LVL195:
 2722 0058 0746     		mov	r7, r0
 2723              	.LVL196:
 2724              	.L83:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2725              		.loc 4 114 41 view .LVU649
 2726              	.LBE5619:
 2727              	.LBE5618:
 2728              	.LBE5617:
 2729              	.LBE5616:
 2730              	.LBE5615:
 2731              	.LBB5624:
 2732              	.LBI5624:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 2733              		.loc 3 482 2 is_stmt 1 view .LVU650
 2734              	.LBB5625:
 2735              	.LBI5625:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 2736              		.loc 4 144 2 view .LVU651
 2737              	.LBB5626:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2738              		.loc 4 147 4 is_stmt 0 view .LVU652
ARM GAS  /tmp/ccL95Edz.s 			page 206


 2739 005a DBF80030 		ldr	r3, [fp]
 2740              	.LVL197:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2741              		.loc 4 147 4 view .LVU653
 2742              	.LBE5626:
 2743              	.LBE5625:
 2744              	.LBE5624:
 2745              		.loc 14 174 3 is_stmt 1 view .LVU654
 2746              	.LBB5629:
 2747              	.LBB5628:
 2748              	.LBB5627:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2749              		.loc 4 147 4 is_stmt 0 view .LVU655
 2750 005e 7B51     		str	r3, [r7, r5]
 2751              	.LVL198:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2752              		.loc 4 147 4 view .LVU656
 2753              	.LBE5627:
 2754              	.LBE5628:
 2755              	.LBE5629:
 2756              	.LBB5630:
 2757              	.LBI5630:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 2758              		.loc 11 462 7 is_stmt 1 view .LVU657
 2759              	.LBB5631:
 2760              	.LBB5632:
 2761              	.LBI5632:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 2762              		.loc 11 450 7 view .LVU658
 2763              	.LBB5633:
 2764              	.LBI5633:
 2765              		.loc 15 958 5 view .LVU659
 2766              	.LBB5634:
 2767              	.LBI5634:
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 2768              		.loc 15 924 5 view .LVU660
 2769              	.LBB5635:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2770              		.loc 15 928 7 is_stmt 0 view .LVU661
 2771 0060 002D     		cmp	r5, #0
 2772 0062 24DC     		bgt	.L96
 2773              	.L85:
 2774              	.LVL199:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2775              		.loc 15 928 7 view .LVU662
 2776              	.LBE5635:
 2777              	.LBE5634:
 2778              	.LBE5633:
 2779              	.LBE5632:
 2780              	.LBE5631:
 2781              	.LBE5630:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 2782              		.loc 10 464 8 view .LVU663
 2783 0064 0435     		adds	r5, r5, #4
 2784              	.LVL200:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 2785              		.loc 10 464 8 view .LVU664
ARM GAS  /tmp/ccL95Edz.s 			page 207


 2786 0066 3D44     		add	r5, r5, r7
 2787              	.LVL201:
 2788              	.LBB5641:
 2789              	.LBI5641:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 2790              		.loc 11 462 7 is_stmt 1 view .LVU665
 2791              	.LBB5642:
 2792              	.LBB5643:
 2793              	.LBI5643:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 2794              		.loc 11 450 7 view .LVU666
 2795              	.LBB5644:
 2796              	.LBI5644:
 2797              		.loc 15 958 5 view .LVU667
 2798              	.LBB5645:
 2799              	.LBI5645:
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 2800              		.loc 15 924 5 view .LVU668
 2801              	.LBB5646:
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       if (__count > 0)
 2802              		.loc 15 927 34 is_stmt 0 view .LVU669
 2803 0068 AAEB080A 		sub	r10, r10, r8
 2804              	.LVL202:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2805              		.loc 15 928 7 view .LVU670
 2806 006c BAF1000F 		cmp	r10, #0
 2807 0070 23DC     		bgt	.L97
 2808              	.L86:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 2809              		.loc 15 930 25 view .LVU671
 2810 0072 5544     		add	r5, r5, r10
 2811              	.LVL203:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 2812              		.loc 15 930 25 view .LVU672
 2813              	.LBE5646:
 2814              	.LBE5645:
 2815              	.LBE5644:
 2816              	.LBE5643:
 2817              	.LBE5642:
 2818              	.LBE5641:
 2819              	.LBB5652:
 2820              	.LBI5652:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2821              		.loc 11 347 7 is_stmt 1 view .LVU673
 2822              	.LBB5653:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2823              		.loc 11 350 2 is_stmt 0 view .LVU674
 2824 0074 B9F1000F 		cmp	r9, #0
 2825 0078 02D0     		beq	.L87
 2826              	.LVL204:
 2827              	.LBB5654:
 2828              	.LBI5654:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2829              		.loc 3 469 7 is_stmt 1 view .LVU675
 2830              	.LBB5655:
 2831              	.LBB5656:
 2832              	.LBI5656:
ARM GAS  /tmp/ccL95Edz.s 			page 208


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 2833              		.loc 4 119 7 view .LVU676
 2834              	.LBB5657:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2835              		.loc 4 128 19 is_stmt 0 view .LVU677
 2836 007a 4846     		mov	r0, r9
 2837 007c FFF7FEFF 		bl	_ZdlPv
 2838              	.LVL205:
 2839              	.L87:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2840              		.loc 4 128 19 view .LVU678
 2841              	.LBE5657:
 2842              	.LBE5656:
 2843              	.LBE5655:
 2844              	.LBE5654:
 2845              	.LBE5653:
 2846              	.LBE5652:
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 2847              		.loc 10 502 7 view .LVU679
 2848 0080 2760     		str	r7, [r4]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 2849              		.loc 10 503 7 view .LVU680
 2850 0082 6560     		str	r5, [r4, #4]
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 2851              		.loc 10 504 53 view .LVU681
 2852 0084 07EB8606 		add	r6, r7, r6, lsl #2
 2853              	.LVL206:
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 2854              		.loc 10 504 7 view .LVU682
 2855 0088 A660     		str	r6, [r4, #8]
 2856              		.loc 10 505 5 view .LVU683
 2857 008a 03B0     		add	sp, sp, #12
 2858              	.LCFI11:
 2859              		.cfi_remember_state
 2860              		.cfi_def_cfa_offset 36
 2861              		@ sp needed
 2862 008c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2863              	.LVL207:
 2864              	.L93:
 2865              	.LCFI12:
 2866              		.cfi_restore_state
 2867              	.LBB5658:
 2868              	.LBB5610:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2869              		.loc 11 1756 24 view .LVU684
 2870 0090 0D48     		ldr	r0, .L98
 2871              	.LVL208:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2872              		.loc 11 1756 24 view .LVU685
 2873 0092 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 2874              	.LVL209:
 2875              	.L88:
 2876              	.LBB5609:
 2877              	.LBB5606:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 2878              		.loc 12 228 9 view .LVU686
 2879 0096 6B46     		mov	r3, sp
ARM GAS  /tmp/ccL95Edz.s 			page 209


 2880 0098 C7E7     		b	.L81
 2881              	.LVL210:
 2882              	.L89:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 2883              		.loc 12 228 9 view .LVU687
 2884              	.LBE5606:
 2885              	.LBE5609:
 2886              		.loc 11 1759 48 view .LVU688
 2887 009a 6FF06046 		mvn	r6, #-536870912
 2888              	.LVL211:
 2889              		.loc 11 1759 48 view .LVU689
 2890 009e CEE7     		b	.L82
 2891              	.LVL212:
 2892              	.L94:
 2893              		.loc 11 1759 48 view .LVU690
 2894 00a0 6FF06046 		mvn	r6, #-536870912
 2895              	.LVL213:
 2896              		.loc 11 1759 48 view .LVU691
 2897 00a4 CBE7     		b	.L82
 2898              	.LVL214:
 2899              	.L95:
 2900              		.loc 11 1759 48 view .LVU692
 2901              	.LBE5610:
 2902              	.LBE5658:
 2903              	.LBB5659:
 2904              	.LBB5623:
 2905              	.LBB5622:
 2906              	.LBB5621:
 2907              	.LBB5620:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2908              		.loc 4 105 26 view .LVU693
 2909 00a6 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 2910              	.LVL215:
 2911              	.L91:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2912              		.loc 4 105 26 view .LVU694
 2913              	.LBE5620:
 2914              	.LBE5621:
 2915              	.LBE5622:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 2916              		.loc 11 343 18 view .LVU695
 2917 00aa 0027     		movs	r7, #0
 2918 00ac D5E7     		b	.L83
 2919              	.LVL216:
 2920              	.L96:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 2921              		.loc 11 343 18 view .LVU696
 2922              	.LBE5623:
 2923              	.LBE5659:
 2924              	.LBB5660:
 2925              	.LBB5640:
 2926              	.LBB5639:
 2927              	.LBB5638:
 2928              	.LBB5637:
 2929              	.LBB5636:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 2930              		.loc 15 929 19 view .LVU697
ARM GAS  /tmp/ccL95Edz.s 			page 210


 2931 00ae 2A46     		mov	r2, r5
 2932 00b0 4946     		mov	r1, r9
 2933 00b2 3846     		mov	r0, r7
 2934 00b4 FFF7FEFF 		bl	memmove
 2935              	.LVL217:
 2936 00b8 D4E7     		b	.L85
 2937              	.LVL218:
 2938              	.L97:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 2939              		.loc 15 929 19 view .LVU698
 2940              	.LBE5636:
 2941              	.LBE5637:
 2942              	.LBE5638:
 2943              	.LBE5639:
 2944              	.LBE5640:
 2945              	.LBE5660:
 2946              	.LBB5661:
 2947              	.LBB5651:
 2948              	.LBB5650:
 2949              	.LBB5649:
 2950              	.LBB5648:
 2951              	.LBB5647:
 2952 00ba 5246     		mov	r2, r10
 2953 00bc 4146     		mov	r1, r8
 2954 00be 2846     		mov	r0, r5
 2955 00c0 FFF7FEFF 		bl	memmove
 2956              	.LVL219:
 2957 00c4 D5E7     		b	.L86
 2958              	.L99:
 2959 00c6 00BF     		.align	2
 2960              	.L98:
 2961 00c8 00000000 		.word	.LC1
 2962              	.LBE5647:
 2963              	.LBE5648:
 2964              	.LBE5649:
 2965              	.LBE5650:
 2966              	.LBE5651:
 2967              	.LBE5661:
 2968              		.cfi_endproc
 2969              	.LFE3988:
 2971              		.section	.text._ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_D
 2972              		.align	1
 2973              		.weak	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu fpv4-sp-d16
 2979              	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_:
 2980              	.LVL220:
 2981              	.LFB3862:
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2982              		.loc 10 109 7 is_stmt 1 view -0
 2983              		.cfi_startproc
 2984              		@ args = 0, pretend = 0, frame = 0
 2985              		@ frame_needed = 0, uses_anonymous_args = 0
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2986              		.loc 10 109 7 is_stmt 0 view .LVU700
ARM GAS  /tmp/ccL95Edz.s 			page 211


 2987 0000 10B5     		push	{r4, lr}
 2988              	.LCFI13:
 2989              		.cfi_def_cfa_offset 8
 2990              		.cfi_offset 4, -8
 2991              		.cfi_offset 14, -4
 2992 0002 0446     		mov	r4, r0
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2993              		.loc 10 112 20 view .LVU701
 2994 0004 4368     		ldr	r3, [r0, #4]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2995              		.loc 10 112 47 view .LVU702
 2996 0006 8268     		ldr	r2, [r0, #8]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2997              		.loc 10 112 2 view .LVU703
 2998 0008 9342     		cmp	r3, r2
 2999 000a 07D0     		beq	.L101
 3000              	.LVL221:
 3001              	.LBB5662:
 3002              	.LBI5662:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 3003              		.loc 3 482 2 is_stmt 1 view .LVU704
 3004              	.LBB5663:
 3005              	.LBI5663:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 3006              		.loc 4 144 2 view .LVU705
 3007              	.LBB5664:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3008              		.loc 4 147 4 is_stmt 0 view .LVU706
 3009 000c 0A68     		ldr	r2, [r1]
 3010              	.LVL222:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3011              		.loc 4 147 4 view .LVU707
 3012              	.LBE5664:
 3013              	.LBE5663:
 3014              	.LBE5662:
 3015              		.loc 14 174 3 is_stmt 1 view .LVU708
 3016              	.LBB5667:
 3017              	.LBB5666:
 3018              	.LBB5665:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3019              		.loc 4 147 4 is_stmt 0 view .LVU709
 3020 000e 1A60     		str	r2, [r3]
 3021              	.LVL223:
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3022              		.loc 4 147 4 view .LVU710
 3023              	.LBE5665:
 3024              	.LBE5666:
 3025              	.LBE5667:
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 3026              		.loc 10 117 22 view .LVU711
 3027 0010 4368     		ldr	r3, [r0, #4]
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 3028              		.loc 10 117 6 view .LVU712
 3029 0012 0433     		adds	r3, r3, #4
 3030 0014 4360     		str	r3, [r0, #4]
 3031              	.LVL224:
 3032              	.L102:
ARM GAS  /tmp/ccL95Edz.s 			page 212


 3033              	.LBB5668:
 3034              	.LBI5668:
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 3035              		.loc 11 1140 7 is_stmt 1 view .LVU713
 3036              	.LBB5669:
 3037              	.LBI5669:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 3038              		.loc 11 826 7 view .LVU714
 3039              	.LBB5670:
 3040              	.LBI5670:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 3041              		.loc 13 806 7 view .LVU715
 3042              	.LBB5671:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 3043              		.loc 13 807 23 is_stmt 0 view .LVU716
 3044 0016 6068     		ldr	r0, [r4, #4]
 3045              	.LVL225:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 3046              		.loc 13 807 23 view .LVU717
 3047              	.LBE5671:
 3048              	.LBE5670:
 3049              	.LBE5669:
 3050              	.LBB5672:
 3051              	.LBI5672:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 3052              		.loc 13 867 7 is_stmt 1 view .LVU718
 3053              	.LBB5673:
 3054              	.LBB5674:
 3055              	.LBI5674:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 3056              		.loc 13 806 7 view .LVU719
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 3057              		.loc 13 806 7 is_stmt 0 view .LVU720
 3058              	.LBE5674:
 3059              	.LBE5673:
 3060              	.LBE5672:
 3061              	.LBE5668:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 3062              		.loc 10 125 7 view .LVU721
 3063 0018 0438     		subs	r0, r0, #4
 3064 001a 10BD     		pop	{r4, pc}
 3065              	.LVL226:
 3066              	.L101:
 3067              	.LBB5675:
 3068              	.LBI5675:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 3069              		.loc 11 826 7 is_stmt 1 view .LVU722
 3070              	.LBB5676:
 3071              	.LBB5677:
 3072              	.LBI5677:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 3073              		.loc 13 806 7 view .LVU723
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 3074              		.loc 13 806 7 is_stmt 0 view .LVU724
 3075              	.LBE5677:
 3076              	.LBE5676:
 3077              	.LBE5675:
ARM GAS  /tmp/ccL95Edz.s 			page 213


 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 3078              		.loc 10 121 4 view .LVU725
 3079 001c 0A46     		mov	r2, r1
 3080 001e 1946     		mov	r1, r3
 3081              	.LVL227:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 3082              		.loc 10 121 4 view .LVU726
 3083 0020 FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEEvN9__gnu_cxx
 3084              	.LVL228:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 3085              		.loc 10 121 4 view .LVU727
 3086 0024 F7E7     		b	.L102
 3087              		.cfi_endproc
 3088              	.LFE3862:
 3090              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St
 3091              		.align	2
 3092              	.LC2:
 3093 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 3093      635F7374 
 3093      72696E67 
 3093      3A3A5F4D 
 3093      5F636F6E 
 3094              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20
 3095              		.align	1
 3096              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_i
 3097              		.syntax unified
 3098              		.thumb
 3099              		.thumb_func
 3100              		.fpu fpv4-sp-d16
 3102              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator
 3103              	.LVL229:
 3104              	.LFB4025:
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3105              		.loc 7 206 7 is_stmt 1 view -0
 3106              		.cfi_startproc
 3107              		@ args = 0, pretend = 0, frame = 8
 3108              		@ frame_needed = 0, uses_anonymous_args = 0
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3109              		.loc 7 206 7 is_stmt 0 view .LVU729
 3110 0000 70B5     		push	{r4, r5, r6, lr}
 3111              	.LCFI14:
 3112              		.cfi_def_cfa_offset 16
 3113              		.cfi_offset 4, -16
 3114              		.cfi_offset 5, -12
 3115              		.cfi_offset 6, -8
 3116              		.cfi_offset 14, -4
 3117 0002 82B0     		sub	sp, sp, #8
 3118              	.LCFI15:
 3119              		.cfi_def_cfa_offset 24
 3120 0004 0546     		mov	r5, r0
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3121              		.loc 7 211 42 view .LVU730
 3122 0006 0E46     		mov	r6, r1
 3123 0008 61B1     		cbz	r1, .L110
 3124              	.L105:
 3125              	.LVL230:
 3126              	.LBB5678:
ARM GAS  /tmp/ccL95Edz.s 			page 214


 3127              	.LBI5678:
 3128              		.file 16 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
ARM GAS  /tmp/ccL95Edz.s 			page 215


  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  */
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     {
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       // concept requirements
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	{
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	}
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       return __n;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     {
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       // concept requirements
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       return __last - __first;
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
ARM GAS  /tmp/ccL95Edz.s 			page 216


 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #endif
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   /**
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   */
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 3129              		.loc 16 138 5 is_stmt 1 view .LVU731
 3130              	.LBB5679:
 3131              	.LBI5679:
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 3132              		.loc 16 98 5 view .LVU732
 3133              	.LBB5680:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 3134              		.loc 16 104 23 is_stmt 0 view .LVU733
 3135 000a 941B     		subs	r4, r2, r6
 3136              	.LVL231:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 3137              		.loc 16 104 23 view .LVU734
 3138              	.LBE5680:
 3139              	.LBE5679:
 3140              	.LBE5678:
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 3141              		.loc 7 215 12 view .LVU735
 3142 000c 0194     		str	r4, [sp, #4]
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 3143              		.loc 7 217 2 view .LVU736
 3144 000e 0F2C     		cmp	r4, #15
 3145 0010 0DD8     		bhi	.L111
 3146              	.LVL232:
 3147              	.L106:
 3148              	.LBB5681:
 3149              	.LBI5681:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3150              		.loc 2 186 7 is_stmt 1 view .LVU737
 3151              	.LBB5682:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3152              		.loc 2 187 28 is_stmt 0 view .LVU738
ARM GAS  /tmp/ccL95Edz.s 			page 217


 3153 0012 2868     		ldr	r0, [r5]
 3154              	.LVL233:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3155              		.loc 2 187 28 view .LVU739
 3156              	.LBE5682:
 3157              	.LBE5681:
 3158              	.LBB5683:
 3159              	.LBI5683:
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 3160              		.loc 2 396 7 is_stmt 1 view .LVU740
 3161              	.LBB5684:
 3162              	.LBI5684:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3163              		.loc 2 346 7 view .LVU741
 3164              	.LBB5685:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 3165              		.loc 2 348 2 is_stmt 0 view .LVU742
 3166 0014 012C     		cmp	r4, #1
 3167 0016 13D0     		beq	.L112
 3168              	.LVL234:
 3169              	.LBB5686:
 3170              	.LBI5686:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 3171              		.loc 8 361 7 is_stmt 1 view .LVU743
 3172              	.LBB5687:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 3173              		.loc 8 363 2 view .LVU744
 3174 0018 A4B1     		cbz	r4, .L108
 3175              		.loc 8 365 2 view .LVU745
 3176              		.loc 8 365 49 is_stmt 0 view .LVU746
 3177 001a 2246     		mov	r2, r4
 3178 001c 3146     		mov	r1, r6
 3179 001e FFF7FEFF 		bl	memcpy
 3180              	.LVL235:
 3181              		.loc 8 365 66 view .LVU747
 3182 0022 0FE0     		b	.L108
 3183              	.LVL236:
 3184              	.L110:
 3185              		.loc 8 365 66 view .LVU748
 3186              	.LBE5687:
 3187              	.LBE5686:
 3188              	.LBE5685:
 3189              	.LBE5684:
 3190              	.LBE5683:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3191              		.loc 7 211 42 discriminator 1 view .LVU749
 3192 0024 9142     		cmp	r1, r2
 3193 0026 F0D0     		beq	.L105
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3194              		.loc 7 212 28 view .LVU750
 3195 0028 0A48     		ldr	r0, .L113
 3196              	.LVL237:
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3197              		.loc 7 212 28 view .LVU751
 3198 002a FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 3199              	.LVL238:
 3200              	.L111:
ARM GAS  /tmp/ccL95Edz.s 			page 218


 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3201              		.loc 7 219 6 view .LVU752
 3202 002e 0022     		movs	r2, #0
 3203              	.LVL239:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3204              		.loc 7 219 6 view .LVU753
 3205 0030 01A9     		add	r1, sp, #4
 3206              	.LVL240:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3207              		.loc 7 219 6 view .LVU754
 3208 0032 2846     		mov	r0, r5
 3209              	.LVL241:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3210              		.loc 7 219 6 view .LVU755
 3211 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 3212              	.LVL242:
 3213              	.LBB5692:
 3214              	.LBI5692:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3215              		.loc 2 178 7 is_stmt 1 view .LVU756
 3216              	.LBB5693:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3217              		.loc 2 179 9 is_stmt 0 view .LVU757
 3218 0038 2860     		str	r0, [r5]
 3219              	.LVL243:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3220              		.loc 2 179 9 view .LVU758
 3221              	.LBE5693:
 3222              	.LBE5692:
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 3223              		.loc 7 220 6 view .LVU759
 3224 003a 019B     		ldr	r3, [sp, #4]
 3225              	.LVL244:
 3226              	.LBB5694:
 3227              	.LBI5694:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3228              		.loc 2 210 7 is_stmt 1 view .LVU760
 3229              	.LBB5695:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3230              		.loc 2 211 9 is_stmt 0 view .LVU761
 3231 003c AB60     		str	r3, [r5, #8]
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3232              		.loc 2 211 45 view .LVU762
 3233 003e E8E7     		b	.L106
 3234              	.LVL245:
 3235              	.L112:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3236              		.loc 2 211 45 view .LVU763
 3237              	.LBE5695:
 3238              	.LBE5694:
 3239              	.LBB5696:
 3240              	.LBB5691:
 3241              	.LBB5690:
 3242              	.LBB5688:
 3243              	.LBI5688:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 3244              		.loc 8 299 7 is_stmt 1 view .LVU764
ARM GAS  /tmp/ccL95Edz.s 			page 219


 3245              	.LBB5689:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3246              		.loc 8 300 9 view .LVU765
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3247              		.loc 8 300 16 is_stmt 0 view .LVU766
 3248 0040 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3249              		.loc 8 300 14 view .LVU767
 3250 0042 0370     		strb	r3, [r0]
 3251              	.LVL246:
 3252              	.L108:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3253              		.loc 8 300 14 view .LVU768
 3254              	.LBE5689:
 3255              	.LBE5688:
 3256              	.LBE5690:
 3257              	.LBE5691:
 3258              	.LBE5696:
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 3259              		.loc 7 232 2 view .LVU769
 3260 0044 019B     		ldr	r3, [sp, #4]
 3261              	.LVL247:
 3262              	.LBB5697:
 3263              	.LBI5697:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3264              		.loc 2 214 7 is_stmt 1 view .LVU770
 3265              	.LBB5698:
 3266              	.LBB5699:
 3267              	.LBI5699:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 3268              		.loc 2 182 7 view .LVU771
 3269              	.LBB5700:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3270              		.loc 2 183 9 is_stmt 0 view .LVU772
 3271 0046 6B60     		str	r3, [r5, #4]
 3272              	.LVL248:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3273              		.loc 2 183 9 view .LVU773
 3274              	.LBE5700:
 3275              	.LBE5699:
 3276              	.LBB5701:
 3277              	.LBI5701:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3278              		.loc 2 186 7 is_stmt 1 view .LVU774
 3279              	.LBB5702:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3280              		.loc 2 187 28 is_stmt 0 view .LVU775
 3281 0048 2A68     		ldr	r2, [r5]
 3282              	.LVL249:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3283              		.loc 2 187 28 view .LVU776
 3284              	.LBE5702:
 3285              	.LBE5701:
 3286              	.LBB5703:
 3287              	.LBI5703:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 3288              		.loc 8 299 7 is_stmt 1 view .LVU777
ARM GAS  /tmp/ccL95Edz.s 			page 220


 3289              	.LBB5704:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3290              		.loc 8 300 9 view .LVU778
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3291              		.loc 8 300 14 is_stmt 0 view .LVU779
 3292 004a 0021     		movs	r1, #0
 3293 004c D154     		strb	r1, [r2, r3]
 3294              	.LVL250:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3295              		.loc 8 300 14 view .LVU780
 3296              	.LBE5704:
 3297              	.LBE5703:
 3298              	.LBE5698:
 3299              	.LBE5697:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 3300              		.loc 7 233 7 view .LVU781
 3301 004e 02B0     		add	sp, sp, #8
 3302              	.LCFI16:
 3303              		.cfi_def_cfa_offset 16
 3304              		@ sp needed
 3305 0050 70BD     		pop	{r4, r5, r6, pc}
 3306              	.LVL251:
 3307              	.L114:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 3308              		.loc 7 233 7 view .LVU782
 3309 0052 00BF     		.align	2
 3310              	.L113:
 3311 0054 00000000 		.word	.LC2
 3312              		.cfi_endproc
 3313              	.LFE4025:
 3315              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reall
 3316              		.align	1
 3317              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insert
 3318              		.syntax unified
 3319              		.thumb
 3320              		.thumb_func
 3321              		.fpu fpv4-sp-d16
 3323              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRA2_K
 3324              	.LVL252:
 3325              	.LFB3903:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 3326              		.loc 10 426 7 is_stmt 1 view -0
 3327              		.cfi_startproc
 3328              		@ args = 0, pretend = 0, frame = 16
 3329              		@ frame_needed = 0, uses_anonymous_args = 0
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 3330              		.loc 10 426 7 is_stmt 0 view .LVU784
 3331 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3332              	.LCFI17:
 3333              		.cfi_def_cfa_offset 36
 3334              		.cfi_offset 4, -36
 3335              		.cfi_offset 5, -32
 3336              		.cfi_offset 6, -28
 3337              		.cfi_offset 7, -24
 3338              		.cfi_offset 8, -20
 3339              		.cfi_offset 9, -16
 3340              		.cfi_offset 10, -12
ARM GAS  /tmp/ccL95Edz.s 			page 221


 3341              		.cfi_offset 11, -8
 3342              		.cfi_offset 14, -4
 3343 0004 85B0     		sub	sp, sp, #20
 3344              	.LCFI18:
 3345              		.cfi_def_cfa_offset 56
 3346 0006 9146     		mov	r9, r2
 3347              	.LVL253:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 3348              		.loc 10 426 7 view .LVU785
 3349 0008 0123     		movs	r3, #1
 3350 000a 0293     		str	r3, [sp, #8]
 3351              	.LVL254:
 3352              	.LBB5889:
 3353              	.LBI5889:
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 3354              		.loc 11 1753 7 is_stmt 1 view .LVU786
 3355              	.LBB5890:
 3356              	.LBB5891:
 3357              	.LBI5891:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 3358              		.loc 11 915 7 view .LVU787
 3359              	.LBB5892:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3360              		.loc 11 916 40 is_stmt 0 view .LVU788
 3361 000c 4368     		ldr	r3, [r0, #4]
 3362              	.LVL255:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3363              		.loc 11 916 66 view .LVU789
 3364 000e 0468     		ldr	r4, [r0]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3365              		.loc 11 916 50 view .LVU790
 3366 0010 1C1B     		subs	r4, r3, r4
 3367 0012 E210     		asrs	r2, r4, #3
 3368              	.LVL256:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3369              		.loc 11 916 50 view .LVU791
 3370 0014 664C     		ldr	r4, .L146
 3371 0016 04FB02F4 		mul	r4, r4, r2
 3372              	.LVL257:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3373              		.loc 11 916 50 view .LVU792
 3374              	.LBE5892:
 3375              	.LBE5891:
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 3376              		.loc 11 1755 17 view .LVU793
 3377 001a 664A     		ldr	r2, .L146+4
 3378 001c 121B     		subs	r2, r2, r4
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 3379              		.loc 11 1755 2 view .LVU794
 3380 001e 002A     		cmp	r2, #0
 3381 0020 39D0     		beq	.L139
 3382 0022 0646     		mov	r6, r0
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 3383              		.loc 11 1758 45 view .LVU795
 3384 0024 0394     		str	r4, [sp, #12]
 3385              	.LVL258:
 3386              	.LBB5893:
ARM GAS  /tmp/ccL95Edz.s 			page 222


 3387              	.LBI5893:
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 3388              		.loc 12 222 5 is_stmt 1 view .LVU796
 3389              	.LBB5894:
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 3390              		.loc 12 227 7 is_stmt 0 view .LVU797
 3391 0026 002C     		cmp	r4, #0
 3392 0028 38D0     		beq	.L134
 3393              		.loc 12 229 14 view .LVU798
 3394 002a 03AA     		add	r2, sp, #12
 3395              	.LVL259:
 3396              	.L117:
 3397              		.loc 12 229 14 view .LVU799
 3398              	.LBE5894:
 3399              	.LBE5893:
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 3400              		.loc 11 1758 33 view .LVU800
 3401 002c 1268     		ldr	r2, [r2]
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 3402              		.loc 11 1758 18 view .LVU801
 3403 002e 1444     		add	r4, r4, r2
 3404              	.LVL260:
 3405              	.LBB5896:
 3406              	.LBI5896:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 3407              		.loc 11 915 7 is_stmt 1 view .LVU802
 3408              	.LBB5897:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3409              		.loc 11 916 66 is_stmt 0 view .LVU803
 3410 0030 3268     		ldr	r2, [r6]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3411              		.loc 11 916 50 view .LVU804
 3412 0032 9B1A     		subs	r3, r3, r2
 3413 0034 DB10     		asrs	r3, r3, #3
 3414 0036 5E4A     		ldr	r2, .L146
 3415 0038 02FB03F3 		mul	r3, r2, r3
 3416              	.LVL261:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3417              		.loc 11 916 50 view .LVU805
 3418              	.LBE5897:
 3419              	.LBE5896:
 3420              		.loc 11 1759 48 view .LVU806
 3421 003c 9C42     		cmp	r4, r3
 3422 003e 2FD3     		bcc	.L135
 3423              		.loc 11 1759 25 view .LVU807
 3424 0040 5C4B     		ldr	r3, .L146+4
 3425 0042 9C42     		cmp	r4, r3
 3426 0044 2ED8     		bhi	.L140
 3427              	.LVL262:
 3428              	.L118:
 3429              		.loc 11 1759 25 view .LVU808
 3430              	.LBE5890:
 3431              	.LBE5889:
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 3432              		.loc 10 437 15 view .LVU809
 3433 0046 D6F800A0 		ldr	r10, [r6]
 3434              	.LVL263:
ARM GAS  /tmp/ccL95Edz.s 			page 223


 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 3435              		.loc 10 438 15 view .LVU810
 3436 004a 7368     		ldr	r3, [r6, #4]
 3437 004c 0193     		str	r3, [sp, #4]
 3438              	.LVL264:
 3439              	.LBB5900:
 3440              	.LBI5900:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 3441              		.loc 11 808 7 is_stmt 1 view .LVU811
 3442              	.LBB5901:
 3443              	.LBI5901:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 3444              		.loc 13 806 7 view .LVU812
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 3445              		.loc 13 806 7 is_stmt 0 view .LVU813
 3446              	.LBE5901:
 3447              	.LBE5900:
 3448              	.LBB5902:
 3449              	.LBI5902:
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 3450              		.loc 13 989 5 is_stmt 1 view .LVU814
 3451              	.LBB5903:
 3452              		.loc 13 992 27 is_stmt 0 view .LVU815
 3453 004e 0D46     		mov	r5, r1
 3454 0050 A1EB0A08 		sub	r8, r1, r10
 3455              	.LVL265:
 3456              		.loc 13 992 27 view .LVU816
 3457              	.LBE5903:
 3458              	.LBE5902:
 3459              	.LBB5904:
 3460              	.LBI5904:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 3461              		.loc 11 340 7 is_stmt 1 view .LVU817
 3462              	.LBB5905:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 3463              		.loc 11 343 18 is_stmt 0 view .LVU818
 3464 0054 54B3     		cbz	r4, .L137
 3465              	.LVL266:
 3466              	.LBB5906:
 3467              	.LBI5906:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 3468              		.loc 3 443 7 is_stmt 1 view .LVU819
 3469              	.LBB5907:
 3470              	.LBI5907:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 3471              		.loc 4 102 7 view .LVU820
 3472              	.LBB5908:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 3473              		.loc 4 104 2 is_stmt 0 view .LVU821
 3474 0056 574B     		ldr	r3, .L146+4
 3475              	.LVL267:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 3476              		.loc 4 104 2 view .LVU822
 3477 0058 9C42     		cmp	r4, r3
 3478 005a 25D8     		bhi	.L141
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3479              		.loc 4 114 41 view .LVU823
ARM GAS  /tmp/ccL95Edz.s 			page 224


 3480 005c 04EB4400 		add	r0, r4, r4, lsl #1
 3481              	.LVL268:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3482              		.loc 4 114 41 view .LVU824
 3483 0060 C000     		lsls	r0, r0, #3
 3484 0062 FFF7FEFF 		bl	_Znwj
 3485              	.LVL269:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3486              		.loc 4 114 41 view .LVU825
 3487 0066 0746     		mov	r7, r0
 3488              	.LVL270:
 3489              	.L119:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3490              		.loc 4 114 41 view .LVU826
 3491              	.LBE5908:
 3492              	.LBE5907:
 3493              	.LBE5906:
 3494              	.LBE5905:
 3495              	.LBE5904:
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before,
 3496              		.loc 10 449 28 view .LVU827
 3497 0068 07EB080B 		add	fp, r7, r8
 3498              	.LVL271:
 3499              	.LBB5913:
 3500              	.LBI5913:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 3501              		.loc 3 482 2 is_stmt 1 view .LVU828
 3502              	.LBB5914:
 3503              	.LBI5914:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 3504              		.loc 4 144 2 view .LVU829
 3505              	.LBB5915:
 3506              	.LBI5915:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 3507              		.loc 5 138 7 view .LVU830
 3508              	.LBB5916:
 3509              	.LBI5916:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3510              		.loc 4 80 7 view .LVU831
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3511              		.loc 4 80 7 is_stmt 0 view .LVU832
 3512              	.LBE5916:
 3513              	.LBE5915:
 3514              	.LBE5914:
 3515              	.LBE5913:
 3516              		.loc 14 174 3 is_stmt 1 view .LVU833
 3517              	.LBB5944:
 3518              	.LBB5941:
 3519              	.LBB5917:
 3520              	.LBI5917:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3521              		.loc 2 525 7 view .LVU834
 3522              	.LBB5918:
 3523              	.LBB5919:
 3524              	.LBI5919:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3525              		.loc 2 190 7 view .LVU835
ARM GAS  /tmp/ccL95Edz.s 			page 225


 3526              	.LBB5920:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3527              		.loc 2 193 51 is_stmt 0 view .LVU836
 3528 006c 0BF10803 		add	r3, fp, #8
 3529              	.LVL272:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3530              		.loc 2 193 51 view .LVU837
 3531              	.LBE5920:
 3532              	.LBE5919:
 3533              	.LBB5921:
 3534              	.LBI5921:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3535              		.loc 2 156 2 is_stmt 1 view .LVU838
 3536              	.LBB5922:
 3537              	.LBB5923:
 3538              	.LBI5923:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3539              		.loc 5 141 7 view .LVU839
 3540              	.LBB5924:
 3541              	.LBI5924:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3542              		.loc 4 83 7 view .LVU840
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3543              		.loc 4 83 7 is_stmt 0 view .LVU841
 3544              	.LBE5924:
 3545              	.LBE5923:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3546              		.loc 2 157 35 view .LVU842
 3547 0070 47F80830 		str	r3, [r7, r8]
 3548              	.LVL273:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3549              		.loc 2 157 35 view .LVU843
 3550              	.LBE5922:
 3551              	.LBE5921:
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3552              		.loc 2 527 9 view .LVU844
 3553 0074 B9F1000F 		cmp	r9, #0
 3554 0078 1AD0     		beq	.L121
 3555              	.LVL274:
 3556              	.LBB5925:
 3557              	.LBI5925:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 3558              		.loc 8 329 7 is_stmt 1 view .LVU845
 3559              	.LBB5926:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 3560              		.loc 8 332 2 view .LVU846
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 3561              		.loc 8 335 2 view .LVU847
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 3562              		.loc 8 335 25 is_stmt 0 view .LVU848
 3563 007a 4846     		mov	r0, r9
 3564 007c FFF7FEFF 		bl	strlen
 3565              	.LVL275:
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 3566              		.loc 8 335 25 view .LVU849
 3567              	.LBE5926:
 3568              	.LBE5925:
ARM GAS  /tmp/ccL95Edz.s 			page 226


 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3569              		.loc 2 527 9 view .LVU850
 3570 0080 09EB0002 		add	r2, r9, r0
 3571              	.LVL276:
 3572              	.L122:
 3573              	.LBB5927:
 3574              	.LBI5927:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 3575              		.loc 2 263 9 is_stmt 1 view .LVU851
 3576              	.LBB5928:
 3577              	.LBB5929:
 3578              	.LBI5929:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 3579              		.loc 2 243 9 view .LVU852
 3580              	.LBB5930:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3581              		.loc 2 247 11 is_stmt 0 view .LVU853
 3582 0084 4FF00003 		mov	r3, #0
 3583 0088 4946     		mov	r1, r9
 3584              	.LVL277:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3585              		.loc 2 247 11 view .LVU854
 3586 008a 5846     		mov	r0, fp
 3587 008c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 3588              	.LVL278:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3589              		.loc 2 247 11 view .LVU855
 3590              	.LBE5930:
 3591              	.LBE5929:
 3592              	.LBE5928:
 3593              	.LBE5927:
 3594              	.LBE5918:
 3595              	.LBE5917:
 3596              	.LBB5937:
 3597              	.LBI5937:
 3598              		.loc 5 153 7 is_stmt 1 view .LVU856
 3599              	.LBB5938:
 3600              	.LBI5938:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3601              		.loc 4 89 7 view .LVU857
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3602              		.loc 4 89 7 is_stmt 0 view .LVU858
 3603              	.LBE5938:
 3604              	.LBE5937:
 3605              	.LBE5941:
 3606              	.LBE5944:
 3607              	.LBB5945:
 3608              	.LBI5945:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 3609              		.loc 11 462 7 is_stmt 1 view .LVU859
 3610              	.LBB5946:
 3611              	.LBB5947:
 3612              	.LBI5947:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 3613              		.loc 11 450 7 view .LVU860
 3614              	.LBB5948:
 3615              	.LBI5948:
ARM GAS  /tmp/ccL95Edz.s 			page 227


 3616              		.loc 15 958 5 view .LVU861
 3617              	.LBB5949:
 3618              	.LBI5949:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 3619              		.loc 15 936 5 view .LVU862
 3620              	.LBB5950:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 3621              		.loc 15 948 24 is_stmt 0 view .LVU863
 3622 0090 B846     		mov	r8, r7
 3623              	.LVL279:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 3624              		.loc 15 948 24 view .LVU864
 3625              	.LBE5950:
 3626              	.LBE5949:
 3627              	.LBE5948:
 3628              	.LBE5947:
 3629              	.LBE5946:
 3630              	.LBE5945:
 3631              	.LBB6031:
 3632              	.LBB5942:
 3633              	.LBB5939:
 3634              	.LBB5935:
 3635              	.LBB5934:
 3636              	.LBB5933:
 3637              	.LBB5932:
 3638              	.LBB5931:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3639              		.loc 2 247 11 view .LVU865
 3640 0092 D146     		mov	r9, r10
 3641              	.LVL280:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3642              		.loc 2 247 11 view .LVU866
 3643 0094 24E0     		b	.L127
 3644              	.LVL281:
 3645              	.L139:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3646              		.loc 2 247 11 view .LVU867
 3647              	.LBE5931:
 3648              	.LBE5932:
 3649              	.LBE5933:
 3650              	.LBE5934:
 3651              	.LBE5935:
 3652              	.LBE5939:
 3653              	.LBE5942:
 3654              	.LBE6031:
 3655              	.LBB6032:
 3656              	.LBB5899:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3657              		.loc 11 1756 24 view .LVU868
 3658 0096 4848     		ldr	r0, .L146+8
 3659              	.LVL282:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 3660              		.loc 11 1756 24 view .LVU869
 3661 0098 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 3662              	.LVL283:
 3663              	.L134:
 3664              	.LBB5898:
ARM GAS  /tmp/ccL95Edz.s 			page 228


 3665              	.LBB5895:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 3666              		.loc 12 228 9 view .LVU870
 3667 009c 02AA     		add	r2, sp, #8
 3668              	.LVL284:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 3669              		.loc 12 228 9 view .LVU871
 3670 009e C5E7     		b	.L117
 3671              	.LVL285:
 3672              	.L135:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 3673              		.loc 12 228 9 view .LVU872
 3674              	.LBE5895:
 3675              	.LBE5898:
 3676              		.loc 11 1759 48 view .LVU873
 3677 00a0 444C     		ldr	r4, .L146+4
 3678              	.LVL286:
 3679              		.loc 11 1759 48 view .LVU874
 3680 00a2 D0E7     		b	.L118
 3681              	.LVL287:
 3682              	.L140:
 3683              		.loc 11 1759 48 view .LVU875
 3684 00a4 434C     		ldr	r4, .L146+4
 3685              	.LVL288:
 3686              		.loc 11 1759 48 view .LVU876
 3687 00a6 CEE7     		b	.L118
 3688              	.LVL289:
 3689              	.L141:
 3690              		.loc 11 1759 48 view .LVU877
 3691              	.LBE5899:
 3692              	.LBE6032:
 3693              	.LBB6033:
 3694              	.LBB5912:
 3695              	.LBB5911:
 3696              	.LBB5910:
 3697              	.LBB5909:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3698              		.loc 4 105 26 view .LVU878
 3699 00a8 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 3700              	.LVL290:
 3701              	.L137:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3702              		.loc 4 105 26 view .LVU879
 3703              	.LBE5909:
 3704              	.LBE5910:
 3705              	.LBE5911:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 3706              		.loc 11 343 18 view .LVU880
 3707 00ac 0027     		movs	r7, #0
 3708 00ae DBE7     		b	.L119
 3709              	.LVL291:
 3710              	.L121:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 3711              		.loc 11 343 18 view .LVU881
 3712              	.LBE5912:
 3713              	.LBE6033:
 3714              	.LBB6034:
ARM GAS  /tmp/ccL95Edz.s 			page 229


 3715              	.LBB5943:
 3716              	.LBB5940:
 3717              	.LBB5936:
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3718              		.loc 2 527 9 view .LVU882
 3719 00b0 09F1FF32 		add	r2, r9, #-1
 3720 00b4 E6E7     		b	.L122
 3721              	.LVL292:
 3722              	.L142:
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3723              		.loc 2 527 9 view .LVU883
 3724              	.LBE5936:
 3725              	.LBE5940:
 3726              	.LBE5943:
 3727              	.LBE6034:
 3728              	.LBB6035:
 3729              	.LBB6029:
 3730              	.LBB6027:
 3731              	.LBB6025:
 3732              	.LBB6023:
 3733              	.LBB6021:
 3734              	.LBB5951:
 3735              	.LBB5952:
 3736              	.LBB5953:
 3737              	.LBB5954:
 3738              	.LBB5955:
 3739              	.LBB5956:
 3740              	.LBB5957:
 3741              	.LBI5957:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 3742              		.loc 8 361 7 is_stmt 1 view .LVU884
 3743              	.LBB5958:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 3744              		.loc 8 363 2 view .LVU885
 3745              		.loc 8 365 2 view .LVU886
 3746              		.loc 8 365 49 is_stmt 0 view .LVU887
 3747 00b6 D3F800E0 		ldr	lr, [r3]	@ unaligned
 3748 00ba D3F804C0 		ldr	ip, [r3, #4]	@ unaligned
 3749 00be 9868     		ldr	r0, [r3, #8]	@ unaligned
 3750 00c0 D968     		ldr	r1, [r3, #12]	@ unaligned
 3751 00c2 C8F808E0 		str	lr, [r8, #8]	@ unaligned
 3752 00c6 C8F80CC0 		str	ip, [r8, #12]	@ unaligned
 3753 00ca C8F81000 		str	r0, [r8, #16]	@ unaligned
 3754 00ce C8F81410 		str	r1, [r8, #20]	@ unaligned
 3755 00d2 16E0     		b	.L125
 3756              	.LVL293:
 3757              	.L143:
 3758              		.loc 8 365 49 view .LVU888
 3759              	.LBE5958:
 3760              	.LBE5957:
 3761              	.LBE5956:
 3762              	.LBE5955:
 3763              	.LBE5954:
 3764              	.LBE5953:
 3765              	.LBB5993:
 3766              	.LBB5994:
 3767              	.LBB5995:
ARM GAS  /tmp/ccL95Edz.s 			page 230


 3768              	.LBB5996:
 3769              	.LBB5997:
 3770              	.LBB5998:
 3771              	.LBI5998:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3772              		.loc 2 236 7 is_stmt 1 view .LVU889
 3773              	.LBB5999:
 3774              	.LBB6000:
 3775              	.LBI6000:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3776              		.loc 3 469 7 view .LVU890
 3777              	.LBB6001:
 3778              	.LBI6001:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 3779              		.loc 4 119 7 view .LVU891
 3780              	.LBB6002:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3781              		.loc 4 128 19 is_stmt 0 view .LVU892
 3782 00d4 FFF7FEFF 		bl	_ZdlPv
 3783              	.LVL294:
 3784              	.L126:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3785              		.loc 4 128 19 view .LVU893
 3786              	.LBE6002:
 3787              	.LBE6001:
 3788              	.LBE6000:
 3789              	.LBE5999:
 3790              	.LBE5998:
 3791              	.LBE5997:
 3792              	.LBE5996:
 3793              	.LBB6008:
 3794              	.LBI6008:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3795              		.loc 2 150 14 is_stmt 1 view .LVU894
 3796              	.LBB6009:
 3797              	.LBI6009:
 3798              		.loc 5 153 7 view .LVU895
 3799              	.LBB6010:
 3800              	.LBI6010:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3801              		.loc 4 89 7 view .LVU896
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3802              		.loc 4 89 7 is_stmt 0 view .LVU897
 3803              	.LBE6010:
 3804              	.LBE6009:
 3805              	.LBE6008:
 3806              	.LBE5995:
 3807              	.LBE5994:
 3808              	.LBE5993:
 3809              	.LBE5952:
 3810              	.LBE5951:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 3811              		.loc 15 949 7 is_stmt 1 view .LVU898
 3812 00d8 09F11809 		add	r9, r9, #24
 3813              	.LVL295:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 3814              		.loc 15 949 7 is_stmt 0 view .LVU899
ARM GAS  /tmp/ccL95Edz.s 			page 231


 3815 00dc 08F11808 		add	r8, r8, #24
 3816              	.LVL296:
 3817              	.L127:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 3818              		.loc 15 949 22 is_stmt 1 view .LVU900
 3819 00e0 4D45     		cmp	r5, r9
 3820 00e2 1ED0     		beq	.L123
 3821              	.LVL297:
 3822              	.LBB6019:
 3823              	.LBI5951:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 3824              		.loc 15 905 5 view .LVU901
 3825              	.LBB6017:
 3826              	.LBB6014:
 3827              	.LBI5953:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 3828              		.loc 3 482 2 view .LVU902
 3829              	.LBB5991:
 3830              	.LBI5954:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 3831              		.loc 4 144 2 view .LVU903
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 3832              		.loc 4 144 2 is_stmt 0 view .LVU904
 3833              	.LBE5991:
 3834              	.LBE6014:
 3835              	.LBE6017:
 3836              	.LBE6019:
 3837              	.LBE6021:
 3838              	.LBE6023:
 3839              	.LBE6025:
 3840              	.LBE6027:
 3841              	.LBE6029:
 3842              	.LBE6035:
 3843              		.loc 14 174 3 is_stmt 1 view .LVU905
 3844              	.LBB6036:
 3845              	.LBB6030:
 3846              	.LBB6028:
 3847              	.LBB6026:
 3848              	.LBB6024:
 3849              	.LBB6022:
 3850              	.LBB6020:
 3851              	.LBB6018:
 3852              	.LBB6015:
 3853              	.LBB5992:
 3854              	.LBB5990:
 3855              	.LBI5955:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 3856              		.loc 2 552 7 view .LVU906
 3857              	.LBB5989:
 3858              	.LBB5959:
 3859              	.LBI5959:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3860              		.loc 2 190 7 view .LVU907
 3861              	.LBB5960:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3862              		.loc 2 193 51 is_stmt 0 view .LVU908
 3863 00e4 08F10802 		add	r2, r8, #8
ARM GAS  /tmp/ccL95Edz.s 			page 232


 3864              	.LVL298:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3865              		.loc 2 193 51 view .LVU909
 3866              	.LBE5960:
 3867              	.LBE5959:
 3868              	.LBB5961:
 3869              	.LBI5961:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 3870              		.loc 2 286 7 is_stmt 1 view .LVU910
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 3871              		.loc 2 286 7 is_stmt 0 view .LVU911
 3872              	.LBE5961:
 3873              	.LBB5962:
 3874              	.LBI5962:
 3875              		.loc 9 99 5 is_stmt 1 view .LVU912
 3876              		.loc 9 99 5 is_stmt 0 view .LVU913
 3877              	.LBE5962:
 3878              	.LBB5963:
 3879              	.LBI5963:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 3880              		.loc 2 159 2 is_stmt 1 view .LVU914
 3881              	.LBB5964:
 3882              	.LBB5965:
 3883              	.LBI5965:
 3884              		.loc 9 99 5 view .LVU915
 3885              		.loc 9 99 5 is_stmt 0 view .LVU916
 3886              	.LBE5965:
 3887              	.LBB5966:
 3888              	.LBI5966:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3889              		.loc 5 141 7 is_stmt 1 view .LVU917
 3890              	.LBB5967:
 3891              	.LBI5967:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3892              		.loc 4 83 7 view .LVU918
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3893              		.loc 4 83 7 is_stmt 0 view .LVU919
 3894              	.LBE5967:
 3895              	.LBE5966:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 3896              		.loc 2 160 46 view .LVU920
 3897 00e8 C8F80020 		str	r2, [r8]
 3898              	.LVL299:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 3899              		.loc 2 160 46 view .LVU921
 3900              	.LBE5964:
 3901              	.LBE5963:
 3902              	.LBB5968:
 3903              	.LBI5968:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3904              		.loc 2 221 7 is_stmt 1 view .LVU922
 3905              	.LBB5969:
 3906              	.LBI5969:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3907              		.loc 2 186 7 view .LVU923
 3908              	.LBB5970:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 233


 3909              		.loc 2 187 28 is_stmt 0 view .LVU924
 3910 00ec 4B46     		mov	r3, r9
 3911 00ee 53F8081B 		ldr	r1, [r3], #8
 3912              	.LVL300:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3913              		.loc 2 187 28 view .LVU925
 3914              	.LBE5970:
 3915              	.LBE5969:
 3916              	.LBB5971:
 3917              	.LBI5971:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3918              		.loc 2 200 7 is_stmt 1 view .LVU926
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3919              		.loc 2 200 7 is_stmt 0 view .LVU927
 3920              	.LBE5971:
 3921              	.LBE5968:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 3922              		.loc 2 555 2 view .LVU928
 3923 00f2 9942     		cmp	r1, r3
 3924 00f4 DFD0     		beq	.L142
 3925              	.LVL301:
 3926              	.LBB5972:
 3927              	.LBI5972:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3928              		.loc 2 186 7 is_stmt 1 view .LVU929
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3929              		.loc 2 186 7 is_stmt 0 view .LVU930
 3930              	.LBE5972:
 3931              	.LBB5973:
 3932              	.LBI5973:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3933              		.loc 2 178 7 is_stmt 1 view .LVU931
 3934              	.LBB5974:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3935              		.loc 2 179 9 is_stmt 0 view .LVU932
 3936 00f6 C8F80010 		str	r1, [r8]
 3937              	.LVL302:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3938              		.loc 2 179 9 view .LVU933
 3939              	.LBE5974:
 3940              	.LBE5973:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 3941              		.loc 2 563 6 view .LVU934
 3942 00fa D9F80820 		ldr	r2, [r9, #8]
 3943              	.LVL303:
 3944              	.LBB5975:
 3945              	.LBI5975:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3946              		.loc 2 210 7 is_stmt 1 view .LVU935
 3947              	.LBB5976:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3948              		.loc 2 211 9 is_stmt 0 view .LVU936
 3949 00fe C8F80820 		str	r2, [r8, #8]
 3950              	.LVL304:
 3951              	.L125:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3952              		.loc 2 211 9 view .LVU937
ARM GAS  /tmp/ccL95Edz.s 			page 234


 3953              	.LBE5976:
 3954              	.LBE5975:
 3955              	.LBB5977:
 3956              	.LBI5977:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 3957              		.loc 2 936 7 is_stmt 1 view .LVU938
 3958              	.LBB5978:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3959              		.loc 2 937 16 is_stmt 0 view .LVU939
 3960 0102 D9F80420 		ldr	r2, [r9, #4]
 3961              	.LVL305:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3962              		.loc 2 937 16 view .LVU940
 3963              	.LBE5978:
 3964              	.LBE5977:
 3965              	.LBB5979:
 3966              	.LBI5979:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 3967              		.loc 2 182 7 is_stmt 1 view .LVU941
 3968              	.LBB5980:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3969              		.loc 2 183 9 is_stmt 0 view .LVU942
 3970 0106 C8F80420 		str	r2, [r8, #4]
 3971              	.LVL306:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3972              		.loc 2 183 9 view .LVU943
 3973              	.LBE5980:
 3974              	.LBE5979:
 3975              	.LBB5981:
 3976              	.LBI5981:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3977              		.loc 2 190 7 is_stmt 1 view .LVU944
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3978              		.loc 2 190 7 is_stmt 0 view .LVU945
 3979              	.LBE5981:
 3980              	.LBB5982:
 3981              	.LBI5982:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3982              		.loc 2 178 7 is_stmt 1 view .LVU946
 3983              	.LBB5983:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3984              		.loc 2 179 9 is_stmt 0 view .LVU947
 3985 010a C9F80030 		str	r3, [r9]
 3986              	.LVL307:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3987              		.loc 2 179 9 view .LVU948
 3988              	.LBE5983:
 3989              	.LBE5982:
 3990              	.LBB5984:
 3991              	.LBI5984:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3992              		.loc 2 214 7 is_stmt 1 view .LVU949
 3993              	.LBB5985:
 3994              	.LBI5985:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 3995              		.loc 2 182 7 view .LVU950
 3996              	.LBB5986:
ARM GAS  /tmp/ccL95Edz.s 			page 235


 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3997              		.loc 2 183 9 is_stmt 0 view .LVU951
 3998 010e 0022     		movs	r2, #0
 3999 0110 C9F80420 		str	r2, [r9, #4]
 4000              	.LVL308:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4001              		.loc 2 183 9 view .LVU952
 4002              	.LBE5986:
 4003              	.LBE5985:
 4004              	.LBB5987:
 4005              	.LBI5987:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 4006              		.loc 8 299 7 is_stmt 1 view .LVU953
 4007              	.LBB5988:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4008              		.loc 8 300 9 view .LVU954
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4009              		.loc 8 300 14 is_stmt 0 view .LVU955
 4010 0114 1A70     		strb	r2, [r3]
 4011              	.LVL309:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4012              		.loc 8 300 14 view .LVU956
 4013              	.LBE5988:
 4014              	.LBE5987:
 4015              	.LBE5984:
 4016              	.LBE5989:
 4017              	.LBE5990:
 4018              	.LBE5992:
 4019              	.LBE6015:
 4020              	.LBB6016:
 4021              	.LBI5993:
 4022              		.loc 3 495 2 is_stmt 1 view .LVU957
 4023              	.LBB6013:
 4024              	.LBI5994:
 4025              		.loc 4 151 2 view .LVU958
 4026              	.LBB6012:
 4027              	.LBI5995:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 4028              		.loc 2 657 7 view .LVU959
 4029              	.LBB6011:
 4030              	.LBI5996:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4031              		.loc 2 229 7 view .LVU960
 4032              	.LBB6007:
 4033              	.LBB6003:
 4034              	.LBI6003:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4035              		.loc 2 221 7 view .LVU961
 4036              	.LBB6004:
 4037              	.LBI6004:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4038              		.loc 2 186 7 view .LVU962
 4039              	.LBB6005:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4040              		.loc 2 187 28 is_stmt 0 view .LVU963
 4041 0116 4B46     		mov	r3, r9
 4042 0118 53F8080B 		ldr	r0, [r3], #8
ARM GAS  /tmp/ccL95Edz.s 			page 236


 4043              	.LVL310:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4044              		.loc 2 187 28 view .LVU964
 4045              	.LBE6005:
 4046              	.LBE6004:
 4047              	.LBB6006:
 4048              	.LBI6006:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4049              		.loc 2 200 7 is_stmt 1 view .LVU965
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4050              		.loc 2 200 7 is_stmt 0 view .LVU966
 4051              	.LBE6006:
 4052              	.LBE6003:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4053              		.loc 2 231 2 view .LVU967
 4054 011c 9842     		cmp	r0, r3
 4055 011e D9D1     		bne	.L143
 4056 0120 DAE7     		b	.L126
 4057              	.LVL311:
 4058              	.L123:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4059              		.loc 2 231 2 view .LVU968
 4060              	.LBE6007:
 4061              	.LBE6011:
 4062              	.LBE6012:
 4063              	.LBE6013:
 4064              	.LBE6016:
 4065              	.LBE6018:
 4066              	.LBE6020:
 4067              	.LBE6022:
 4068              	.LBE6024:
 4069              	.LBE6026:
 4070              	.LBE6028:
 4071              	.LBE6030:
 4072              	.LBE6036:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 4073              		.loc 10 464 8 view .LVU969
 4074 0122 08F11808 		add	r8, r8, #24
 4075              	.LVL312:
 4076              	.LBB6037:
 4077              	.LBI6037:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 4078              		.loc 11 462 7 is_stmt 1 view .LVU970
 4079              	.LBB6038:
 4080              	.LBB6039:
 4081              	.LBI6039:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 4082              		.loc 11 450 7 view .LVU971
 4083              	.LBB6040:
 4084              	.LBI6040:
 4085              		.loc 15 958 5 view .LVU972
 4086              	.LBB6041:
 4087              	.LBI6041:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 4088              		.loc 15 936 5 view .LVU973
 4089 0126 13E0     		b	.L132
 4090              	.LVL313:
ARM GAS  /tmp/ccL95Edz.s 			page 237


 4091              	.L144:
 4092              	.LBB6042:
 4093              	.LBB6043:
 4094              	.LBB6044:
 4095              	.LBB6045:
 4096              	.LBB6046:
 4097              	.LBB6047:
 4098              	.LBB6048:
 4099              	.LBB6049:
 4100              	.LBI6049:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 4101              		.loc 8 361 7 view .LVU974
 4102              	.LBB6050:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 4103              		.loc 8 363 2 view .LVU975
 4104              		.loc 8 365 2 view .LVU976
 4105              		.loc 8 365 49 is_stmt 0 view .LVU977
 4106 0128 D3F800E0 		ldr	lr, [r3]	@ unaligned
 4107 012c D3F804C0 		ldr	ip, [r3, #4]	@ unaligned
 4108 0130 9868     		ldr	r0, [r3, #8]	@ unaligned
 4109 0132 D968     		ldr	r1, [r3, #12]	@ unaligned
 4110 0134 C8F808E0 		str	lr, [r8, #8]	@ unaligned
 4111 0138 C8F80CC0 		str	ip, [r8, #12]	@ unaligned
 4112 013c C8F81000 		str	r0, [r8, #16]	@ unaligned
 4113 0140 C8F81410 		str	r1, [r8, #20]	@ unaligned
 4114 0144 15E0     		b	.L130
 4115              	.LVL314:
 4116              	.L145:
 4117              		.loc 8 365 49 view .LVU978
 4118              	.LBE6050:
 4119              	.LBE6049:
 4120              	.LBE6048:
 4121              	.LBE6047:
 4122              	.LBE6046:
 4123              	.LBE6045:
 4124              	.LBB6085:
 4125              	.LBB6086:
 4126              	.LBB6087:
 4127              	.LBB6088:
 4128              	.LBB6089:
 4129              	.LBB6090:
 4130              	.LBI6090:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4131              		.loc 2 236 7 is_stmt 1 view .LVU979
 4132              	.LBB6091:
 4133              	.LBB6092:
 4134              	.LBI6092:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4135              		.loc 3 469 7 view .LVU980
 4136              	.LBB6093:
 4137              	.LBI6093:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 4138              		.loc 4 119 7 view .LVU981
 4139              	.LBB6094:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 4140              		.loc 4 128 19 is_stmt 0 view .LVU982
 4141 0146 FFF7FEFF 		bl	_ZdlPv
ARM GAS  /tmp/ccL95Edz.s 			page 238


 4142              	.LVL315:
 4143              	.L131:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 4144              		.loc 4 128 19 view .LVU983
 4145              	.LBE6094:
 4146              	.LBE6093:
 4147              	.LBE6092:
 4148              	.LBE6091:
 4149              	.LBE6090:
 4150              	.LBE6089:
 4151              	.LBE6088:
 4152              	.LBB6100:
 4153              	.LBI6100:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4154              		.loc 2 150 14 is_stmt 1 view .LVU984
 4155              	.LBB6101:
 4156              	.LBI6101:
 4157              		.loc 5 153 7 view .LVU985
 4158              	.LBB6102:
 4159              	.LBI6102:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4160              		.loc 4 89 7 view .LVU986
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4161              		.loc 4 89 7 is_stmt 0 view .LVU987
 4162              	.LBE6102:
 4163              	.LBE6101:
 4164              	.LBE6100:
 4165              	.LBE6087:
 4166              	.LBE6086:
 4167              	.LBE6085:
 4168              	.LBE6044:
 4169              	.LBE6043:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 4170              		.loc 15 949 7 is_stmt 1 view .LVU988
 4171 014a 1835     		adds	r5, r5, #24
 4172              	.LVL316:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 4173              		.loc 15 949 7 is_stmt 0 view .LVU989
 4174 014c 08F11808 		add	r8, r8, #24
 4175              	.LVL317:
 4176              	.L132:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 4177              		.loc 15 949 22 is_stmt 1 view .LVU990
 4178 0150 019B     		ldr	r3, [sp, #4]
 4179 0152 AB42     		cmp	r3, r5
 4180 0154 1AD0     		beq	.L128
 4181              	.LVL318:
 4182              	.LBB6111:
 4183              	.LBI6043:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 4184              		.loc 15 905 5 view .LVU991
 4185              	.LBB6109:
 4186              	.LBB6106:
 4187              	.LBI6045:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 4188              		.loc 3 482 2 view .LVU992
 4189              	.LBB6083:
ARM GAS  /tmp/ccL95Edz.s 			page 239


 4190              	.LBI6046:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 4191              		.loc 4 144 2 view .LVU993
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 4192              		.loc 4 144 2 is_stmt 0 view .LVU994
 4193              	.LBE6083:
 4194              	.LBE6106:
 4195              	.LBE6109:
 4196              	.LBE6111:
 4197              	.LBE6042:
 4198              	.LBE6041:
 4199              	.LBE6040:
 4200              	.LBE6039:
 4201              	.LBE6038:
 4202              	.LBE6037:
 4203              		.loc 14 174 3 is_stmt 1 view .LVU995
 4204              	.LBB6118:
 4205              	.LBB6117:
 4206              	.LBB6116:
 4207              	.LBB6115:
 4208              	.LBB6114:
 4209              	.LBB6113:
 4210              	.LBB6112:
 4211              	.LBB6110:
 4212              	.LBB6107:
 4213              	.LBB6084:
 4214              	.LBB6082:
 4215              	.LBI6047:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 4216              		.loc 2 552 7 view .LVU996
 4217              	.LBB6081:
 4218              	.LBB6051:
 4219              	.LBI6051:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4220              		.loc 2 190 7 view .LVU997
 4221              	.LBB6052:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4222              		.loc 2 193 51 is_stmt 0 view .LVU998
 4223 0156 08F10802 		add	r2, r8, #8
 4224              	.LVL319:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4225              		.loc 2 193 51 view .LVU999
 4226              	.LBE6052:
 4227              	.LBE6051:
 4228              	.LBB6053:
 4229              	.LBI6053:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4230              		.loc 2 286 7 is_stmt 1 view .LVU1000
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4231              		.loc 2 286 7 is_stmt 0 view .LVU1001
 4232              	.LBE6053:
 4233              	.LBB6054:
 4234              	.LBI6054:
 4235              		.loc 9 99 5 is_stmt 1 view .LVU1002
 4236              		.loc 9 99 5 is_stmt 0 view .LVU1003
 4237              	.LBE6054:
 4238              	.LBB6055:
ARM GAS  /tmp/ccL95Edz.s 			page 240


 4239              	.LBI6055:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 4240              		.loc 2 159 2 is_stmt 1 view .LVU1004
 4241              	.LBB6056:
 4242              	.LBB6057:
 4243              	.LBI6057:
 4244              		.loc 9 99 5 view .LVU1005
 4245              		.loc 9 99 5 is_stmt 0 view .LVU1006
 4246              	.LBE6057:
 4247              	.LBB6058:
 4248              	.LBI6058:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4249              		.loc 5 141 7 is_stmt 1 view .LVU1007
 4250              	.LBB6059:
 4251              	.LBI6059:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4252              		.loc 4 83 7 view .LVU1008
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4253              		.loc 4 83 7 is_stmt 0 view .LVU1009
 4254              	.LBE6059:
 4255              	.LBE6058:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4256              		.loc 2 160 46 view .LVU1010
 4257 015a C8F80020 		str	r2, [r8]
 4258              	.LVL320:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4259              		.loc 2 160 46 view .LVU1011
 4260              	.LBE6056:
 4261              	.LBE6055:
 4262              	.LBB6060:
 4263              	.LBI6060:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4264              		.loc 2 221 7 is_stmt 1 view .LVU1012
 4265              	.LBB6061:
 4266              	.LBI6061:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4267              		.loc 2 186 7 view .LVU1013
 4268              	.LBB6062:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4269              		.loc 2 187 28 is_stmt 0 view .LVU1014
 4270 015e 2B46     		mov	r3, r5
 4271 0160 53F8081B 		ldr	r1, [r3], #8
 4272              	.LVL321:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4273              		.loc 2 187 28 view .LVU1015
 4274              	.LBE6062:
 4275              	.LBE6061:
 4276              	.LBB6063:
 4277              	.LBI6063:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4278              		.loc 2 200 7 is_stmt 1 view .LVU1016
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4279              		.loc 2 200 7 is_stmt 0 view .LVU1017
 4280              	.LBE6063:
 4281              	.LBE6060:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 4282              		.loc 2 555 2 view .LVU1018
ARM GAS  /tmp/ccL95Edz.s 			page 241


 4283 0164 9942     		cmp	r1, r3
 4284 0166 DFD0     		beq	.L144
 4285              	.LVL322:
 4286              	.LBB6064:
 4287              	.LBI6064:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4288              		.loc 2 186 7 is_stmt 1 view .LVU1019
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4289              		.loc 2 186 7 is_stmt 0 view .LVU1020
 4290              	.LBE6064:
 4291              	.LBB6065:
 4292              	.LBI6065:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4293              		.loc 2 178 7 is_stmt 1 view .LVU1021
 4294              	.LBB6066:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4295              		.loc 2 179 9 is_stmt 0 view .LVU1022
 4296 0168 C8F80010 		str	r1, [r8]
 4297              	.LVL323:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4298              		.loc 2 179 9 view .LVU1023
 4299              	.LBE6066:
 4300              	.LBE6065:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 4301              		.loc 2 563 6 view .LVU1024
 4302 016c AA68     		ldr	r2, [r5, #8]
 4303              	.LVL324:
 4304              	.LBB6067:
 4305              	.LBI6067:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 4306              		.loc 2 210 7 is_stmt 1 view .LVU1025
 4307              	.LBB6068:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4308              		.loc 2 211 9 is_stmt 0 view .LVU1026
 4309 016e C8F80820 		str	r2, [r8, #8]
 4310              	.LVL325:
 4311              	.L130:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4312              		.loc 2 211 9 view .LVU1027
 4313              	.LBE6068:
 4314              	.LBE6067:
 4315              	.LBB6069:
 4316              	.LBI6069:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4317              		.loc 2 936 7 is_stmt 1 view .LVU1028
 4318              	.LBB6070:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4319              		.loc 2 937 16 is_stmt 0 view .LVU1029
 4320 0172 6A68     		ldr	r2, [r5, #4]
 4321              	.LVL326:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4322              		.loc 2 937 16 view .LVU1030
 4323              	.LBE6070:
 4324              	.LBE6069:
 4325              	.LBB6071:
 4326              	.LBI6071:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
ARM GAS  /tmp/ccL95Edz.s 			page 242


 4327              		.loc 2 182 7 is_stmt 1 view .LVU1031
 4328              	.LBB6072:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4329              		.loc 2 183 9 is_stmt 0 view .LVU1032
 4330 0174 C8F80420 		str	r2, [r8, #4]
 4331              	.LVL327:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4332              		.loc 2 183 9 view .LVU1033
 4333              	.LBE6072:
 4334              	.LBE6071:
 4335              	.LBB6073:
 4336              	.LBI6073:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4337              		.loc 2 190 7 is_stmt 1 view .LVU1034
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4338              		.loc 2 190 7 is_stmt 0 view .LVU1035
 4339              	.LBE6073:
 4340              	.LBB6074:
 4341              	.LBI6074:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4342              		.loc 2 178 7 is_stmt 1 view .LVU1036
 4343              	.LBB6075:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4344              		.loc 2 179 9 is_stmt 0 view .LVU1037
 4345 0178 2B60     		str	r3, [r5]
 4346              	.LVL328:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4347              		.loc 2 179 9 view .LVU1038
 4348              	.LBE6075:
 4349              	.LBE6074:
 4350              	.LBB6076:
 4351              	.LBI6076:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4352              		.loc 2 214 7 is_stmt 1 view .LVU1039
 4353              	.LBB6077:
 4354              	.LBI6077:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4355              		.loc 2 182 7 view .LVU1040
 4356              	.LBB6078:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4357              		.loc 2 183 9 is_stmt 0 view .LVU1041
 4358 017a 0022     		movs	r2, #0
 4359 017c 6A60     		str	r2, [r5, #4]
 4360              	.LVL329:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4361              		.loc 2 183 9 view .LVU1042
 4362              	.LBE6078:
 4363              	.LBE6077:
 4364              	.LBB6079:
 4365              	.LBI6079:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 4366              		.loc 8 299 7 is_stmt 1 view .LVU1043
 4367              	.LBB6080:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4368              		.loc 8 300 9 view .LVU1044
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4369              		.loc 8 300 14 is_stmt 0 view .LVU1045
ARM GAS  /tmp/ccL95Edz.s 			page 243


 4370 017e 1A70     		strb	r2, [r3]
 4371              	.LVL330:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4372              		.loc 8 300 14 view .LVU1046
 4373              	.LBE6080:
 4374              	.LBE6079:
 4375              	.LBE6076:
 4376              	.LBE6081:
 4377              	.LBE6082:
 4378              	.LBE6084:
 4379              	.LBE6107:
 4380              	.LBB6108:
 4381              	.LBI6085:
 4382              		.loc 3 495 2 is_stmt 1 view .LVU1047
 4383              	.LBB6105:
 4384              	.LBI6086:
 4385              		.loc 4 151 2 view .LVU1048
 4386              	.LBB6104:
 4387              	.LBI6087:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 4388              		.loc 2 657 7 view .LVU1049
 4389              	.LBB6103:
 4390              	.LBI6088:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4391              		.loc 2 229 7 view .LVU1050
 4392              	.LBB6099:
 4393              	.LBB6095:
 4394              	.LBI6095:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4395              		.loc 2 221 7 view .LVU1051
 4396              	.LBB6096:
 4397              	.LBI6096:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4398              		.loc 2 186 7 view .LVU1052
 4399              	.LBB6097:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4400              		.loc 2 187 28 is_stmt 0 view .LVU1053
 4401 0180 2B46     		mov	r3, r5
 4402 0182 53F8080B 		ldr	r0, [r3], #8
 4403              	.LVL331:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4404              		.loc 2 187 28 view .LVU1054
 4405              	.LBE6097:
 4406              	.LBE6096:
 4407              	.LBB6098:
 4408              	.LBI6098:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4409              		.loc 2 200 7 is_stmt 1 view .LVU1055
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4410              		.loc 2 200 7 is_stmt 0 view .LVU1056
 4411              	.LBE6098:
 4412              	.LBE6095:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4413              		.loc 2 231 2 view .LVU1057
 4414 0186 9842     		cmp	r0, r3
 4415 0188 DDD1     		bne	.L145
 4416 018a DEE7     		b	.L131
ARM GAS  /tmp/ccL95Edz.s 			page 244


 4417              	.LVL332:
 4418              	.L128:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4419              		.loc 2 231 2 view .LVU1058
 4420              	.LBE6099:
 4421              	.LBE6103:
 4422              	.LBE6104:
 4423              	.LBE6105:
 4424              	.LBE6108:
 4425              	.LBE6110:
 4426              	.LBE6112:
 4427              	.LBE6113:
 4428              	.LBE6114:
 4429              	.LBE6115:
 4430              	.LBE6116:
 4431              	.LBE6117:
 4432              	.LBE6118:
 4433              	.LBB6119:
 4434              	.LBI6119:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 4435              		.loc 11 347 7 is_stmt 1 view .LVU1059
 4436              	.LBB6120:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4437              		.loc 11 350 2 is_stmt 0 view .LVU1060
 4438 018c BAF1000F 		cmp	r10, #0
 4439 0190 02D0     		beq	.L133
 4440              	.LVL333:
 4441              	.LBB6121:
 4442              	.LBI6121:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4443              		.loc 3 469 7 is_stmt 1 view .LVU1061
 4444              	.LBB6122:
 4445              	.LBB6123:
 4446              	.LBI6123:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 4447              		.loc 4 119 7 view .LVU1062
 4448              	.LBB6124:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 4449              		.loc 4 128 19 is_stmt 0 view .LVU1063
 4450 0192 5046     		mov	r0, r10
 4451 0194 FFF7FEFF 		bl	_ZdlPv
 4452              	.LVL334:
 4453              	.L133:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 4454              		.loc 4 128 19 view .LVU1064
 4455              	.LBE6124:
 4456              	.LBE6123:
 4457              	.LBE6122:
 4458              	.LBE6121:
 4459              	.LBE6120:
 4460              	.LBE6119:
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 4461              		.loc 10 502 7 view .LVU1065
 4462 0198 3760     		str	r7, [r6]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 4463              		.loc 10 503 7 view .LVU1066
 4464 019a C6F80480 		str	r8, [r6, #4]
ARM GAS  /tmp/ccL95Edz.s 			page 245


 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 4465              		.loc 10 504 53 view .LVU1067
 4466 019e 04EB4404 		add	r4, r4, r4, lsl #1
 4467              	.LVL335:
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 4468              		.loc 10 504 53 view .LVU1068
 4469 01a2 07EBC404 		add	r4, r7, r4, lsl #3
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 4470              		.loc 10 504 7 view .LVU1069
 4471 01a6 B460     		str	r4, [r6, #8]
 4472              		.loc 10 505 5 view .LVU1070
 4473 01a8 05B0     		add	sp, sp, #20
 4474              	.LCFI19:
 4475              		.cfi_def_cfa_offset 36
 4476              		@ sp needed
 4477 01aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4478              	.LVL336:
 4479              	.L147:
 4480              		.loc 10 505 5 view .LVU1071
 4481 01ae 00BF     		.align	2
 4482              	.L146:
 4483 01b0 ABAAAAAA 		.word	-1431655765
 4484 01b4 55555505 		.word	89478485
 4485 01b8 00000000 		.word	.LC1
 4486              		.cfi_endproc
 4487              	.LFE3903:
 4489              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_
 4490              		.align	1
 4491              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRA2
 4492              		.syntax unified
 4493              		.thumb
 4494              		.thumb_func
 4495              		.fpu fpv4-sp-d16
 4497              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRA2_KcEEER
 4498              	.LVL337:
 4499              	.LFB3716:
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 4500              		.loc 10 109 7 is_stmt 1 view -0
 4501              		.cfi_startproc
 4502              		@ args = 0, pretend = 0, frame = 0
 4503              		@ frame_needed = 0, uses_anonymous_args = 0
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 4504              		.loc 10 109 7 is_stmt 0 view .LVU1073
 4505 0000 70B5     		push	{r4, r5, r6, lr}
 4506              	.LCFI20:
 4507              		.cfi_def_cfa_offset 16
 4508              		.cfi_offset 4, -16
 4509              		.cfi_offset 5, -12
 4510              		.cfi_offset 6, -8
 4511              		.cfi_offset 14, -4
 4512 0002 0446     		mov	r4, r0
 4513 0004 0D46     		mov	r5, r1
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 4514              		.loc 10 112 20 view .LVU1074
 4515 0006 4668     		ldr	r6, [r0, #4]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 4516              		.loc 10 112 47 view .LVU1075
ARM GAS  /tmp/ccL95Edz.s 			page 246


 4517 0008 8368     		ldr	r3, [r0, #8]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 4518              		.loc 10 112 2 view .LVU1076
 4519 000a 9E42     		cmp	r6, r3
 4520 000c 15D0     		beq	.L149
 4521              	.LVL338:
 4522              	.LBB6160:
 4523              	.LBI6160:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 4524              		.loc 3 482 2 is_stmt 1 view .LVU1077
 4525              	.LBB6161:
 4526              	.LBI6161:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 4527              		.loc 4 144 2 view .LVU1078
 4528              	.LBB6162:
 4529              	.LBI6162:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 4530              		.loc 5 138 7 view .LVU1079
 4531              	.LBB6163:
 4532              	.LBI6163:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4533              		.loc 4 80 7 view .LVU1080
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4534              		.loc 4 80 7 is_stmt 0 view .LVU1081
 4535              	.LBE6163:
 4536              	.LBE6162:
 4537              	.LBE6161:
 4538              	.LBE6160:
 4539              		.loc 14 174 3 is_stmt 1 view .LVU1082
 4540              	.LBB6184:
 4541              	.LBB6182:
 4542              	.LBB6164:
 4543              	.LBI6164:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 4544              		.loc 2 525 7 view .LVU1083
 4545              	.LBB6165:
 4546              	.LBB6166:
 4547              	.LBI6166:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4548              		.loc 2 190 7 view .LVU1084
 4549              	.LBB6167:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4550              		.loc 2 193 51 is_stmt 0 view .LVU1085
 4551 000e 06F10803 		add	r3, r6, #8
 4552              	.LVL339:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4553              		.loc 2 193 51 view .LVU1086
 4554              	.LBE6167:
 4555              	.LBE6166:
 4556              	.LBB6168:
 4557              	.LBI6168:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 4558              		.loc 2 156 2 is_stmt 1 view .LVU1087
 4559              	.LBB6169:
 4560              	.LBB6170:
 4561              	.LBI6170:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccL95Edz.s 			page 247


 4562              		.loc 5 141 7 view .LVU1088
 4563              	.LBB6171:
 4564              	.LBI6171:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4565              		.loc 4 83 7 view .LVU1089
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4566              		.loc 4 83 7 is_stmt 0 view .LVU1090
 4567              	.LBE6171:
 4568              	.LBE6170:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4569              		.loc 2 157 35 view .LVU1091
 4570 0012 3360     		str	r3, [r6]
 4571              	.LVL340:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4572              		.loc 2 157 35 view .LVU1092
 4573              	.LBE6169:
 4574              	.LBE6168:
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4575              		.loc 2 527 9 view .LVU1093
 4576 0014 79B1     		cbz	r1, .L150
 4577              	.LVL341:
 4578              	.LBB6172:
 4579              	.LBI6172:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 4580              		.loc 8 329 7 is_stmt 1 view .LVU1094
 4581              	.LBB6173:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 4582              		.loc 8 332 2 view .LVU1095
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 4583              		.loc 8 335 2 view .LVU1096
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 4584              		.loc 8 335 25 is_stmt 0 view .LVU1097
 4585 0016 0846     		mov	r0, r1
 4586              	.LVL342:
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 4587              		.loc 8 335 25 view .LVU1098
 4588 0018 FFF7FEFF 		bl	strlen
 4589              	.LVL343:
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 4590              		.loc 8 335 25 view .LVU1099
 4591              	.LBE6173:
 4592              	.LBE6172:
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4593              		.loc 2 527 9 view .LVU1100
 4594 001c 2A18     		adds	r2, r5, r0
 4595              	.L151:
 4596              	.LVL344:
 4597              	.LBB6174:
 4598              	.LBI6174:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 4599              		.loc 2 263 9 is_stmt 1 view .LVU1101
 4600              	.LBB6175:
 4601              	.LBB6176:
 4602              	.LBI6176:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 4603              		.loc 2 243 9 view .LVU1102
 4604              	.LBB6177:
ARM GAS  /tmp/ccL95Edz.s 			page 248


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4605              		.loc 2 247 11 is_stmt 0 view .LVU1103
 4606 001e 4FF00003 		mov	r3, #0
 4607 0022 2946     		mov	r1, r5
 4608 0024 3046     		mov	r0, r6
 4609 0026 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 4610              	.LVL345:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4611              		.loc 2 247 11 view .LVU1104
 4612              	.LBE6177:
 4613              	.LBE6176:
 4614              	.LBE6175:
 4615              	.LBE6174:
 4616              	.LBE6165:
 4617              	.LBE6164:
 4618              	.LBB6179:
 4619              	.LBI6179:
 4620              		.loc 5 153 7 is_stmt 1 view .LVU1105
 4621              	.LBB6180:
 4622              	.LBI6180:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4623              		.loc 4 89 7 view .LVU1106
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4624              		.loc 4 89 7 is_stmt 0 view .LVU1107
 4625              	.LBE6180:
 4626              	.LBE6179:
 4627              	.LBE6182:
 4628              	.LBE6184:
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 4629              		.loc 10 117 22 view .LVU1108
 4630 002a 6368     		ldr	r3, [r4, #4]
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 4631              		.loc 10 117 6 view .LVU1109
 4632 002c 1833     		adds	r3, r3, #24
 4633 002e 6360     		str	r3, [r4, #4]
 4634              	.L152:
 4635              	.LVL346:
 4636              	.LBB6185:
 4637              	.LBI6185:
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 4638              		.loc 11 1140 7 is_stmt 1 view .LVU1110
 4639              	.LBB6186:
 4640              	.LBI6186:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 4641              		.loc 11 826 7 view .LVU1111
 4642              	.LBB6187:
 4643              	.LBI6187:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 4644              		.loc 13 806 7 view .LVU1112
 4645              	.LBB6188:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 4646              		.loc 13 807 23 is_stmt 0 view .LVU1113
 4647 0030 6068     		ldr	r0, [r4, #4]
 4648              	.LVL347:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 4649              		.loc 13 807 23 view .LVU1114
 4650              	.LBE6188:
ARM GAS  /tmp/ccL95Edz.s 			page 249


 4651              	.LBE6187:
 4652              	.LBE6186:
 4653              	.LBB6189:
 4654              	.LBI6189:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 4655              		.loc 13 867 7 is_stmt 1 view .LVU1115
 4656              	.LBB6190:
 4657              	.LBB6191:
 4658              	.LBI6191:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 4659              		.loc 13 806 7 view .LVU1116
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 4660              		.loc 13 806 7 is_stmt 0 view .LVU1117
 4661              	.LBE6191:
 4662              	.LBE6190:
 4663              	.LBE6189:
 4664              	.LBE6185:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 4665              		.loc 10 125 7 view .LVU1118
 4666 0032 1838     		subs	r0, r0, #24
 4667 0034 70BD     		pop	{r4, r5, r6, pc}
 4668              	.LVL348:
 4669              	.L150:
 4670              	.LBB6192:
 4671              	.LBB6183:
 4672              	.LBB6181:
 4673              	.LBB6178:
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4674              		.loc 2 527 9 view .LVU1119
 4675 0036 4A1E     		subs	r2, r1, #1
 4676 0038 F1E7     		b	.L151
 4677              	.LVL349:
 4678              	.L149:
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4679              		.loc 2 527 9 view .LVU1120
 4680              	.LBE6178:
 4681              	.LBE6181:
 4682              	.LBE6183:
 4683              	.LBE6192:
 4684              	.LBB6193:
 4685              	.LBI6193:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 4686              		.loc 11 826 7 is_stmt 1 view .LVU1121
 4687              	.LBB6194:
 4688              	.LBB6195:
 4689              	.LBI6195:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 4690              		.loc 13 806 7 view .LVU1122
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 4691              		.loc 13 806 7 is_stmt 0 view .LVU1123
 4692              	.LBE6195:
 4693              	.LBE6194:
 4694              	.LBE6193:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 4695              		.loc 10 121 4 view .LVU1124
 4696 003a 0A46     		mov	r2, r1
 4697 003c 3146     		mov	r1, r6
ARM GAS  /tmp/ccL95Edz.s 			page 250


 4698              	.LVL350:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 4699              		.loc 10 121 4 view .LVU1125
 4700 003e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJR
 4701              	.LVL351:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 4702              		.loc 10 121 4 view .LVU1126
 4703 0042 F5E7     		b	.L152
 4704              		.cfi_endproc
 4705              	.LFE3716:
 4707              		.section	.rodata._ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traits
 4708              		.align	2
 4709              	.LC3:
 4710 0000 436F6D6D 		.ascii	"Command \"pwd\" does not accept any arguments \015\012"
 4710      616E6420 
 4710      22707764 
 4710      2220646F 
 4710      6573206E 
 4711 002e 00       		.ascii	"\000"
 4712 002f 00       		.align	2
 4713              	.LC4:
 4714 0030 0D0A00   		.ascii	"\015\012\000"
 4715              		.section	.text._ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIc
 4716              		.align	1
 4717              		.global	_ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 4718              		.syntax unified
 4719              		.thumb
 4720              		.thumb_func
 4721              		.fpu fpv4-sp-d16
 4723              	_ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 4724              	.LVL352:
 4725              	.LFB3373:
 4726              		.file 17 "alohal/filesystem/filesystem.cpp"
   1:alohal/filesystem/filesystem.cpp **** #include "filesystem.hpp"
   2:alohal/filesystem/filesystem.cpp **** 
   3:alohal/filesystem/filesystem.cpp **** Filesystem::Filesystem(CLI *cli) :
   4:alohal/filesystem/filesystem.cpp ****     cli(cli){
   5:alohal/filesystem/filesystem.cpp ****     cli->Register_command("ls", "ls as in Linux", this, &Filesystem::Command_ls);
   6:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cd", "cd as in Linux", this, &Filesystem::Command_cd);
   7:alohal/filesystem/filesystem.cpp ****     cli->Register_command("pwd", "pwd as in Linux", this, &Filesystem::Command_pwd);
   8:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cat", "cat as in Linux", this, &Filesystem::Command_cat);
   9:alohal/filesystem/filesystem.cpp ****     cli->Set_filesystem_prefix(actual_position->Path());
  10:alohal/filesystem/filesystem.cpp ****     root->Set_parent(root);
  11:alohal/filesystem/filesystem.cpp **** }
  12:alohal/filesystem/filesystem.cpp **** 
  13:alohal/filesystem/filesystem.cpp **** int Filesystem::Command_ls(vector<string> args){
  14:alohal/filesystem/filesystem.cpp ****     string directory_name = Command_check(args);
  15:alohal/filesystem/filesystem.cpp ****     if (directory_name == "") {
  16:alohal/filesystem/filesystem.cpp ****         return -1;
  17:alohal/filesystem/filesystem.cpp ****     }
  18:alohal/filesystem/filesystem.cpp **** 
  19:alohal/filesystem/filesystem.cpp ****     Directory *list_directory = static_cast<Directory *>(Get_entry(directory_name));
  20:alohal/filesystem/filesystem.cpp ****     if (list_directory == nullptr) {
  21:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is unreachable - null returned \r\n");
  22:alohal/filesystem/filesystem.cpp ****         return ENOENT;
  23:alohal/filesystem/filesystem.cpp ****     }
  24:alohal/filesystem/filesystem.cpp **** 
ARM GAS  /tmp/ccL95Edz.s 			page 251


  25:alohal/filesystem/filesystem.cpp ****     if (list_directory->Type_of() != FS_entry::Type::Directory) {
  26:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a directory \r\n");
  27:alohal/filesystem/filesystem.cpp ****         return ENOTDIR;
  28:alohal/filesystem/filesystem.cpp ****     }
  29:alohal/filesystem/filesystem.cpp **** 
  30:alohal/filesystem/filesystem.cpp ****     string output = "";
  31:alohal/filesystem/filesystem.cpp ****     for (auto entry:list_directory->Contains()) {
  32:alohal/filesystem/filesystem.cpp ****         output += entry->Name() + "\r\n";
  33:alohal/filesystem/filesystem.cpp ****     }
  34:alohal/filesystem/filesystem.cpp ****     cli->Print(output);
  35:alohal/filesystem/filesystem.cpp ****     return 0;
  36:alohal/filesystem/filesystem.cpp **** }
  37:alohal/filesystem/filesystem.cpp **** 
  38:alohal/filesystem/filesystem.cpp **** int Filesystem::Set_location(string path){
  39:alohal/filesystem/filesystem.cpp ****     Directory *target_directory = static_cast<Directory *>(Get_entry(path));
  40:alohal/filesystem/filesystem.cpp ****     if (target_directory == nullptr) {
  41:alohal/filesystem/filesystem.cpp ****         return ENOENT;
  42:alohal/filesystem/filesystem.cpp ****     }
  43:alohal/filesystem/filesystem.cpp **** 
  44:alohal/filesystem/filesystem.cpp ****     if (target_directory->Type_of() != FS_entry::Type::Directory) {
  45:alohal/filesystem/filesystem.cpp ****         return ENOTDIR;
  46:alohal/filesystem/filesystem.cpp ****     }
  47:alohal/filesystem/filesystem.cpp **** 
  48:alohal/filesystem/filesystem.cpp ****     actual_position = target_directory;
  49:alohal/filesystem/filesystem.cpp ****     cli->Set_filesystem_prefix(actual_position->Path());
  50:alohal/filesystem/filesystem.cpp ****     return 0;
  51:alohal/filesystem/filesystem.cpp **** }
  52:alohal/filesystem/filesystem.cpp **** 
  53:alohal/filesystem/filesystem.cpp **** int Filesystem::Command_cd(vector<string> args){
  54:alohal/filesystem/filesystem.cpp ****     string directory_name = Command_check(args);
  55:alohal/filesystem/filesystem.cpp ****     if (directory_name == "") {
  56:alohal/filesystem/filesystem.cpp ****         return -1;
  57:alohal/filesystem/filesystem.cpp ****     }
  58:alohal/filesystem/filesystem.cpp **** 
  59:alohal/filesystem/filesystem.cpp ****     int return_code = Set_location(directory_name);
  60:alohal/filesystem/filesystem.cpp **** 
  61:alohal/filesystem/filesystem.cpp ****     if (return_code == ENOENT){
  62:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is unreachable - null returned \r\n");
  63:alohal/filesystem/filesystem.cpp ****     } else if (return_code == ENOTDIR){
  64:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a directory \r\n");
  65:alohal/filesystem/filesystem.cpp ****     }
  66:alohal/filesystem/filesystem.cpp **** 
  67:alohal/filesystem/filesystem.cpp ****     return return_code;
  68:alohal/filesystem/filesystem.cpp **** }
  69:alohal/filesystem/filesystem.cpp **** 
  70:alohal/filesystem/filesystem.cpp **** int Filesystem::Command_cat(vector<string> args){
  71:alohal/filesystem/filesystem.cpp ****     string filename = Command_check(args);
  72:alohal/filesystem/filesystem.cpp ****     if (filename == "") {
  73:alohal/filesystem/filesystem.cpp ****         return EINVAL;
  74:alohal/filesystem/filesystem.cpp ****     }
  75:alohal/filesystem/filesystem.cpp **** 
  76:alohal/filesystem/filesystem.cpp ****     File<> *target_file = static_cast<File<> *>(Get_entry(filename));
  77:alohal/filesystem/filesystem.cpp ****     if (target_file == nullptr) {
  78:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is unreachable - null returned \r\n");
  79:alohal/filesystem/filesystem.cpp ****         return ENOENT;
  80:alohal/filesystem/filesystem.cpp ****     }
  81:alohal/filesystem/filesystem.cpp **** 
ARM GAS  /tmp/ccL95Edz.s 			page 252


  82:alohal/filesystem/filesystem.cpp ****     if (target_file->Type_of() != FS_entry::Type::File) {
  83:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a file \r\n");
  84:alohal/filesystem/filesystem.cpp ****         return EISDIR;
  85:alohal/filesystem/filesystem.cpp ****     }
  86:alohal/filesystem/filesystem.cpp **** 
  87:alohal/filesystem/filesystem.cpp ****     string content = target_file->Read();
  88:alohal/filesystem/filesystem.cpp ****     if (content.substr(content.length()-2,content.length()) != "\r\n") {
  89:alohal/filesystem/filesystem.cpp ****         content += "\r\n";
  90:alohal/filesystem/filesystem.cpp ****     }
  91:alohal/filesystem/filesystem.cpp ****     cli->Print(content);
  92:alohal/filesystem/filesystem.cpp ****     return 0;
  93:alohal/filesystem/filesystem.cpp **** }
  94:alohal/filesystem/filesystem.cpp **** 
  95:alohal/filesystem/filesystem.cpp **** int Filesystem::Command_pwd(vector<string> args){
 4727              		.loc 17 95 49 is_stmt 1 view -0
 4728              		.cfi_startproc
 4729              		@ args = 0, pretend = 0, frame = 72
 4730              		@ frame_needed = 0, uses_anonymous_args = 0
 4731              		.loc 17 95 49 is_stmt 0 view .LVU1128
 4732 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4733              	.LCFI21:
 4734              		.cfi_def_cfa_offset 20
 4735              		.cfi_offset 4, -20
 4736              		.cfi_offset 5, -16
 4737              		.cfi_offset 6, -12
 4738              		.cfi_offset 7, -8
 4739              		.cfi_offset 14, -4
 4740 0002 93B0     		sub	sp, sp, #76
 4741              	.LCFI22:
 4742              		.cfi_def_cfa_offset 96
  96:alohal/filesystem/filesystem.cpp ****     if (args.size() != 1) {
 4743              		.loc 17 96 5 is_stmt 1 view .LVU1129
 4744              	.LVL353:
 4745              	.LBB6310:
 4746              	.LBI6310:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4747              		.loc 11 915 7 view .LVU1130
 4748              	.LBB6311:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 4749              		.loc 11 916 40 is_stmt 0 view .LVU1131
 4750 0004 4B68     		ldr	r3, [r1, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 4751              		.loc 11 916 66 view .LVU1132
 4752 0006 0A68     		ldr	r2, [r1]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 4753              		.loc 11 916 50 view .LVU1133
 4754 0008 9B1A     		subs	r3, r3, r2
 4755              	.LVL354:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 4756              		.loc 11 916 50 view .LVU1134
 4757              	.LBE6311:
 4758              	.LBE6310:
 4759              		.loc 17 96 5 view .LVU1135
 4760 000a 182B     		cmp	r3, #24
 4761 000c 37D1     		bne	.L164
  97:alohal/filesystem/filesystem.cpp ****         cli->Print("Command \"pwd\" does not accept any arguments \r\n");
  98:alohal/filesystem/filesystem.cpp ****         return E2BIG;
ARM GAS  /tmp/ccL95Edz.s 			page 253


  99:alohal/filesystem/filesystem.cpp ****     }
 100:alohal/filesystem/filesystem.cpp ****     cli->Print(actual_position->Path() + "\r\n");
 4762              		.loc 17 100 5 is_stmt 1 view .LVU1136
 4763 000e 8668     		ldr	r6, [r0, #8]
 4764              		.loc 17 100 37 is_stmt 0 view .LVU1137
 4765 0010 4168     		ldr	r1, [r0, #4]
 4766              	.LVL355:
 4767              		.loc 17 100 37 view .LVU1138
 4768 0012 0CA8     		add	r0, sp, #48
 4769              	.LVL356:
 4770              		.loc 17 100 37 view .LVU1139
 4771 0014 FFF7FEFF 		bl	_ZNK8FS_entry4PathB5cxx11Ev
 4772              	.LVL357:
 4773              	.LBB6312:
 4774              	.LBI6312:
1255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s)
1264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
1273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
1275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
1296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
ARM GAS  /tmp/ccL95Edz.s 			page 254


1297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
1304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
1307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
1309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         append(const _Tp& __svt)
1321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
1322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           __sv_type __sv = __svt;
1323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
1325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_append(__sv.data()
1339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a single character.
1346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to append.
1347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       push_back(_CharT __c)
1350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
1352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
ARM GAS  /tmp/ccL95Edz.s 			page 255


1354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str)
1365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
1368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(basic_string&& __str)
1381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
ARM GAS  /tmp/ccL95Edz.s 			page 256


1411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function returns.
1433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character @a __c.
1450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
1465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
ARM GAS  /tmp/ccL95Edz.s 			page 257


1468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
1470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
1512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *              insert at.
1522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
ARM GAS  /tmp/ccL95Edz.s 			page 258


1525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *              insert at.
1565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __end  End of range.
1567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
1574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
1576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	iterator
1578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
1580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
ARM GAS  /tmp/ccL95Edz.s 			page 259


1582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __end  End of range.
1591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
1599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
1600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
ARM GAS  /tmp/ccL95Edz.s 			page 260


1639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
1647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
ARM GAS  /tmp/ccL95Edz.s 			page 261


1696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
1702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 262


1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from.
1775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
1786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove characters.
1793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
ARM GAS  /tmp/ccL95Edz.s 			page 263


1810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == npos)
1811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (__n != 0)
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
1815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove one character.
1819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(__const_iterator __position)
1827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __position < end());
1830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __last <= end());
1849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         const size_type __pos = __first - begin();
1850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__last == end())
1851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
1853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove the last character.
1860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The string must be non-empty.
1862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pop_back() noexcept
1865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
ARM GAS  /tmp/ccL95Edz.s 			page 264


1867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
1876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  error is thrown.
1887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
1897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.size().
1902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
1922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
ARM GAS  /tmp/ccL95Edz.s 			page 265


1924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
1934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
1938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
1949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
1973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
ARM GAS  /tmp/ccL95Edz.s 			page 266


1981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
1983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String value to insert.
1994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string& __str)
2005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
2012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
2021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
2036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  /tmp/ccL95Edz.s 			page 267


2038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
2057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _CharT __c)
2068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
2088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
2090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
2091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
2093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
ARM GAS  /tmp/ccL95Edz.s 			page 268


2095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
2096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   && __i2 <= end());
2098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   std::__false_type());
2101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
2103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
2104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
2107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
2108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
2109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
2112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   && __i2 <= end());
2114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
2119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
ARM GAS  /tmp/ccL95Edz.s 			page 269


2152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
2180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
2185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
ARM GAS  /tmp/ccL95Edz.s 			page 270


2209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
2219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           to replace at.
2227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           for the replace.
2229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
2242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Integer>
2243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
2244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
2249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
2250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    __false_type);
2253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     _CharT __c);
2257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 const size_type __len2);
2261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
ARM GAS  /tmp/ccL95Edz.s 			page 271


2266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Number of characters actually copied
2273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.
2278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String to swap with.
2285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  time.
2288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
2290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // String operations:
2293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  happen.
2298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
2300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
2302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
2314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
ARM GAS  /tmp/ccL95Edz.s 			page 272


2323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() noexcept
2324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
2325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
2326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       allocator_type
2331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_get_allocator(); }
2333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string.
2352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
2353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns npos.
2359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 273


2380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C string.
2384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
2401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string.
2414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
2415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
ARM GAS  /tmp/ccL95Edz.s 			page 274


2437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
2479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
ARM GAS  /tmp/ccL95Edz.s 			page 275


2494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
2511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
2535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
ARM GAS  /tmp/ccL95Edz.s 			page 276


2551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
2560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__c, __pos); }
2573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
2595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 277


2608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
2619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
2644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
ARM GAS  /tmp/ccL95Edz.s 			page 278


2665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
2678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
ARM GAS  /tmp/ccL95Edz.s 			page 279


2722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a different character.
2727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
2728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
2760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
ARM GAS  /tmp/ccL95Edz.s 			page 280


2779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
2784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
2810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Get a substring.
2823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  The new string.
2826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
ARM GAS  /tmp/ccL95Edz.s 			page 281


2836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string.
2840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const basic_string& __str) const
2854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
2856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
2857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!__r)
2861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __r;
2863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __size = this->size();
2878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (!__r)
2883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __r;
2885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                against.
ARM GAS  /tmp/ccL95Edz.s 			page 282


2893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                against.
2910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this)
2922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling
2941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the shorter one is ordered first.
2944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
ARM GAS  /tmp/ccL95Edz.s 			page 283


2950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  calling
2967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a C string.
2977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
2978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  ordered first.
2988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 5 String::compare specification questionable
2994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
2999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
ARM GAS  /tmp/ccL95Edz.s 			page 284


3007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two string by calling
3009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
3012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
3013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
3014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two strings by calling
3033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
3036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  no special meaning.
3039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
3040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
3041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2) const;
3043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus > 201703L
3045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
ARM GAS  /tmp/ccL95Edz.s 			page 285


3064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++20
3069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     };
3073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // Reference-counted COW string implentation
3076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
3078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup strings
3082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup sequences
3083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
3087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @doctodo
3096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Documentation?  What's that?
3099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  A string looks like this:
3102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @code
3104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                                        [_Rep]
3105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                                        _M_length
3106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @endcode
3110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  pointer to the header.
3114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
ARM GAS  /tmp/ccL95Edz.s 			page 286


3121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  object at the front.
3122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  string length.)
3128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  for a C++ string implementation.
3137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   */
3138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // 21.3  Template class basic_string
3139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     class basic_string
3141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
3142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Types:
3145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Traits					    traits_type;
3147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
3152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef value_type&				    reference;
3156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****                                                             const_iterator;
3163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     protected:
3167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef iterator __const_iterator;
3169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
3171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _Rep: string representation
3172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   Invariants:
3173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      must be kept null-terminated.
3175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   3. _M_refcount has three states:
ARM GAS  /tmp/ccL95Edz.s 			page 287


3178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //       0: one reference, non-const.
3180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      empty string representation needs no constructor.
3184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Rep_base
3186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	size_type		_M_length;
3188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	size_type		_M_capacity;
3189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Rep : _Rep_base
3193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Types:
3195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// (Public) Data members:
3198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// look like this:
3206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Solving for m:
3208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	static const size_type	_S_max_size;
3211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _Rep&
3218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { 
3220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  // be reasonably safe in this case.
3223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         bool
3228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
3230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if defined(__GTHREADS)
3231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
ARM GAS  /tmp/ccL95Edz.s 			page 288


3235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return this->_M_refcount < 0;
3238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
3240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         bool
3242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if defined(__GTHREADS)
3245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // _M_dispose.
3250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return this->_M_refcount > 0;
3253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
3255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
3257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->_M_refcount = -1; }
3259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
3261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->_M_refcount = 0; }
3263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	void
3265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    {
3271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_M_length = __n;
3273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    }
3277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
3280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_refdata() throw()
3281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
3284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Create & Destroy
3291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	static _Rep*
ARM GAS  /tmp/ccL95Edz.s 			page 289


3292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	void
3295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    {
3301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   the last decrement that will delete the object.
3306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   all the previous decrements.
3308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   the object is not shared anymore.
3311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 							 -1) <= 0)
3313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		{
3314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _M_destroy(__a);
3316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		}
3317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    }
3318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}  // XXX MT
3319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	void
3321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
3324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_refcopy() throw()
3325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_refdata();
3331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}  // XXX MT
3332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
3334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Data Members (public):
3348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
ARM GAS  /tmp/ccL95Edz.s 			page 290


3349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // size that the allocator can hold.
3350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
3354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Data Members (private):
3355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
3358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
3362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _Rep*
3366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // but they do not call _M_leak.
3371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data()); }
3374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_leak_hard();
3384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__pos > this->size())
3390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __s, __pos, this->size());
3393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __pos;
3394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccL95Edz.s 			page 291


3406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
3421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
3425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
3434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
3443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Iterator>
3451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static void
3452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
3454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
ARM GAS  /tmp/ccL95Edz.s 			page 292


3463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static int
3477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return int(__d);
3487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_leak_hard();
3494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static _Rep&
3496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _Res>;
3509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static __sv_type
3512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __svt; }
3514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
3517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
3518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // is provided.
3519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct __sv_wrapper
ARM GAS  /tmp/ccL95Edz.s 			page 293


3520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__sv_type _M_sv;
3523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          wrapper.
3528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
3532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Construct/copy/destroy:
3538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string()
3545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { }
3552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
3557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str);
3565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 294


3577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n);
3585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
3598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  has no special meaning.
3603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source C string.
3609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
3615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to use.
3616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move construct string.
3623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
3628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str)
3629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 295


3634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { }
3651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
3657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
3663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
3667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
3671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __end  End of range.
3672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
3675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 296


3691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit
3698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
3701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const basic_string& __str)
3714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__str); }
3715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const _CharT* __s) 
3722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__s); }
3723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Source character.
3727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
3730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(_CharT __c) 
3733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
3734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(1, __c); 
3735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
3736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
3746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(basic_string&& __str)
ARM GAS  /tmp/ccL95Edz.s 			page 297


3748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// NB: DR 1204.
3751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->swap(__str);
3752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
3753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
3764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
3766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
3773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return this->assign(__svt); }
3776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return A string_view.
3780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator __sv_type() const noexcept
3782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
3784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Iterators:
3786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string.  Unshares the string.
3789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
3794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data());
3795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
3800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 298


3805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
3813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
3819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  order.  Unshares the string.
3828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
3830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
3837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element order.  Unshares the string.
3846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
3848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
3855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccL95Edz.s 			page 299


3862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
3864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cbegin() const noexcept
3867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
3872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cend() const noexcept
3875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
3881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crbegin() const noexcept
3884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
3890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crend() const noexcept
3893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Capacity:
3898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
3900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
3906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
ARM GAS  /tmp/ccL95Edz.s 			page 300


3919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  setting them to 0.
3937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n)
3940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_exceptions
3948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (capacity() > size())
3949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
3950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    try
3951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { reserve(0); }
3952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    catch(...)
3953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { }
3954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
3955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  before needing to allocate more memory.
3962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          characters.
3970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
ARM GAS  /tmp/ccL95Edz.s 			page 301


3976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
3977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  data.
3983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Erases the string, making it empty.
3989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
3996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
3999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
4000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
4003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // PR 56166: this should not throw.
4004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       clear()
4006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
4008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
4012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->size() == 0; }
4016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Element access:
4018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)
4027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
ARM GAS  /tmp/ccL95Edz.s 			page 302


4033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)  Unshares the string.
4044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
4046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[](size_type __pos)
4047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// and in C++11 mode.
4050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
4054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
4055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
4060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n) const
4069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= this->size())
4071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
4074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
4075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
4076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
4081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  unsharing the string.
4088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
ARM GAS  /tmp/ccL95Edz.s 			page 303


4090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n)
4091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= size())
4093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
4096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
4097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
4098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
4099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
4105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
4107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front()
4108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
4111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
4116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front() const noexcept
4119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
4122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
4127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
4129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back()
4130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
4133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last element of the %string.
4138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back() const noexcept
4141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
4144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
4146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 304


4147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Modifiers:
4148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
4150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
4151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
4155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
4156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
4159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
4164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__s); }
4165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a character.
4168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to append.
4169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(_CharT __c)
4173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
4174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->push_back(__c);
4175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
4176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
4192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return this->append(__svt); }
4199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
4203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
ARM GAS  /tmp/ccL95Edz.s 			page 305


4204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str);
4208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a substring.
4211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
4212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
4221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C substring.
4227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
4236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s)
4241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
4248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
4250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
ARM GAS  /tmp/ccL95Edz.s 			page 306


4261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
4270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
4277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
4278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
4284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	append(const _Tp& __svt)
4290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *               from.
4299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return append(__sv.data()
4309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a single character.
4316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to append.
4317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccL95Edz.s 			page 307


4318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       push_back(_CharT __c)
4320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
4321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->reserve(__len);
4324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
4331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str);
4335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
4340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(basic_string&& __str)
4347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->swap(__str);
4350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
4351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to use.
4357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__str._M_data()
4370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a C substring.
ARM GAS  /tmp/ccL95Edz.s 			page 308


4375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
4376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
4389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function returns.
4394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s)
4397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
4406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character @a __c.
4410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
4424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
4425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
ARM GAS  /tmp/ccL95Edz.s 			page 309


4432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	assign(const _Tp& __svt)
4448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return assign(__sv.data()
4466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccL95Edz.s 			page 310


4489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __beg  Start of range.
4492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __end  End of range.
4493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
4501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
4502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert value of a string.
4522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
4524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a substring.
4538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
4540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
ARM GAS  /tmp/ccL95Edz.s 			page 311


4546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C substring.
4563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
4565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C string.
4582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
4584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
4594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccL95Edz.s 			page 312


4603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert one character.
4625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
4637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
4649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 313


4660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
4663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from.
4667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove characters.
4684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
4700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
4703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove one character.
4707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
4714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(iterator __position)
4715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
ARM GAS  /tmp/ccL95Edz.s 			page 314


4717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __position < _M_iend());
4718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
4734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  
4736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove the last character.
4739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The string must be non-empty.
4741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	erase(size() - 1, 1);
4747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
4755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  error is thrown.
4766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
ARM GAS  /tmp/ccL95Edz.s 			page 315


4774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
4776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.size().
4781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
4801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
4813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2);
4817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
4823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
ARM GAS  /tmp/ccL95Edz.s 			page 316


4831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
4847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
4857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String value to insert.
4868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
4885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  /tmp/ccL95Edz.s 			page 317


4888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
4894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
4908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
4929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 318


4945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
4959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
4961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
4962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
4965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
ARM GAS  /tmp/ccL95Edz.s 			page 319


5002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
5006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
5017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
5030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
5035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
ARM GAS  /tmp/ccL95Edz.s 			page 320


5059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
5069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           to replace at.
5077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           for the replace.
5079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
5092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Integer>
5093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
5094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _Integer __val, __true_type)
5096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
5099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
5100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
5104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     _CharT __c);
5106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
5108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		      size_type __n2);
5110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InIterator>
5114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
ARM GAS  /tmp/ccL95Edz.s 			page 321


5116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Integer>
5125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				    __end, __a); }
5130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static _CharT*
5132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InIterator>
5136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
5142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InIterator>
5145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		      input_iterator_tag);
5148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _FwdIterator>
5152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     forward_iterator_tag);
5155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static _CharT*
5157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
5160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Number of characters actually copied
5167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.
5172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
ARM GAS  /tmp/ccL95Edz.s 			page 322


5173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String to swap with.
5179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  time.
5182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
5184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       swap(basic_string& __s)
5185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // String operations:
5188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  happen.
5193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
5195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
5197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
5207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
5209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
5218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() noexcept
5219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
5221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data();
5222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
5224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       allocator_type
5229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccL95Edz.s 			page 323


5230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
5231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string.
5250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
5251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns npos.
5257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C string.
5265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
5282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
ARM GAS  /tmp/ccL95Edz.s 			page 324


5287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string.
5312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
5313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
ARM GAS  /tmp/ccL95Edz.s 			page 325


5344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
5360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
ARM GAS  /tmp/ccL95Edz.s 			page 326


5401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
5415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
5440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__c, __pos); }
5453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
ARM GAS  /tmp/ccL95Edz.s 			page 327


5458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
5459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
5499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
ARM GAS  /tmp/ccL95Edz.s 			page 328


5515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
5524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
5543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccL95Edz.s 			page 329


5572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a different character.
5607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
5608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
5624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
ARM GAS  /tmp/ccL95Edz.s 			page 330


5629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
5664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 331


5686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
5690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
5706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Get a substring.
5721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  The new string.
5724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string
5732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
5734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string.
5738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
ARM GAS  /tmp/ccL95Edz.s 			page 332


5743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const basic_string& __str) const
5752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
5754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
5755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!__r)
5759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __r;
5761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __size = this->size();
5776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (!__r)
5781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __r;
5783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                against.
5791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
ARM GAS  /tmp/ccL95Edz.s 			page 333


5800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                 against.
5808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this)
5820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling
5839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the shorter one is ordered first.
5842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
ARM GAS  /tmp/ccL95Edz.s 			page 334


5857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  calling
5865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a C string.
5875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
5876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  ordered first.
5886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 5 String::compare specification questionable
5892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
5897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two string by calling
5907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
5910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 335


5914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two strings by calling
5931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
5934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  no special meaning.
5937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2) const;
5941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus > 201703L
5943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++20
5967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend void
5970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
ARM GAS  /tmp/ccL95Edz.s 			page 336


5971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					    void* exc);
5972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend const char*
5973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend void
5975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend void
5977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** # endif
5979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   };
5980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
5988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
5990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
5991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
5993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
5994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
5995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
5998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
5999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
6010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator+
6012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __str.append(__rhs);
6025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __str;
6026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 337


6028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __str.append(__rhs);
6062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __str;
6063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __string_type __str(__lhs);
6078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __str;
6080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
6083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
ARM GAS  /tmp/ccL95Edz.s 			page 338


6085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
6101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
6102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
6103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
6104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
6105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(_CharT __lhs,
6116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 4775              		.loc 2 6121 5 is_stmt 1 view .LVU1140
 4776              	.LBB6313:
 4777              	.LBI6313:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4778              		.loc 2 1263 7 view .LVU1141
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4779              		.loc 2 1263 7 is_stmt 0 view .LVU1142
 4780              	.LBE6313:
 4781              	.LBE6312:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 4782              		.loc 8 332 2 is_stmt 1 view .LVU1143
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 4783              		.loc 8 335 2 view .LVU1144
 4784              	.LBB6361:
 4785              	.LBB6321:
 4786              	.LBB6314:
 4787              	.LBB6315:
 4788              	.LBI6315:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4789              		.loc 2 320 7 view .LVU1145
ARM GAS  /tmp/ccL95Edz.s 			page 339


 4790              	.LBB6316:
 4791              	.LBB6317:
 4792              	.LBI6317:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4793              		.loc 2 930 7 view .LVU1146
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4794              		.loc 2 930 7 is_stmt 0 view .LVU1147
 4795              	.LBE6317:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4796              		.loc 2 322 2 view .LVU1148
 4797 0018 0D9B     		ldr	r3, [sp, #52]
 4798 001a C3F17F53 		rsb	r3, r3, #1069547520
 4799 001e 03F57F13 		add	r3, r3, #4177920
 4800 0022 03F57F53 		add	r3, r3, #16320
 4801 0026 3F33     		adds	r3, r3, #63
 4802 0028 012B     		cmp	r3, #1
 4803 002a 3ED9     		bls	.L165
 4804              	.LVL358:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4805              		.loc 2 322 2 view .LVU1149
 4806              	.LBE6316:
 4807              	.LBE6315:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 4808              		.loc 2 1268 27 view .LVU1150
 4809 002c 0222     		movs	r2, #2
 4810 002e 2449     		ldr	r1, .L167
 4811 0030 0CA8     		add	r0, sp, #48
 4812              	.LVL359:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 4813              		.loc 2 1268 27 view .LVU1151
 4814 0032 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 4815              	.LVL360:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 4816              		.loc 2 1268 27 view .LVU1152
 4817 0036 0446     		mov	r4, r0
 4818              	.LVL361:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 4819              		.loc 2 1268 27 view .LVU1153
 4820              	.LBE6314:
 4821              	.LBE6321:
 4822              	.LBB6322:
 4823              	.LBI6322:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 4824              		.loc 2 552 7 is_stmt 1 view .LVU1154
 4825              	.LBB6323:
 4826              	.LBB6324:
 4827              	.LBB6325:
 4828              	.LBI6325:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4829              		.loc 2 190 7 view .LVU1155
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4830              		.loc 2 190 7 is_stmt 0 view .LVU1156
 4831              	.LBE6325:
 4832              	.LBB6326:
 4833              	.LBI6326:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4834              		.loc 2 286 7 is_stmt 1 view .LVU1157
ARM GAS  /tmp/ccL95Edz.s 			page 340


 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4835              		.loc 2 286 7 is_stmt 0 view .LVU1158
 4836              	.LBE6326:
 4837              	.LBB6327:
 4838              	.LBI6327:
 4839              		.loc 9 99 5 is_stmt 1 view .LVU1159
 4840              		.loc 9 99 5 is_stmt 0 view .LVU1160
 4841              	.LBE6327:
 4842              	.LBB6328:
 4843              	.LBI6328:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 4844              		.loc 2 159 2 is_stmt 1 view .LVU1161
 4845              	.LBB6329:
 4846              	.LBB6330:
 4847              	.LBB6331:
 4848              	.LBI6331:
 4849              		.loc 9 99 5 view .LVU1162
 4850              		.loc 9 99 5 is_stmt 0 view .LVU1163
 4851              	.LBE6331:
 4852              	.LBB6332:
 4853              	.LBI6332:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4854              		.loc 5 141 7 is_stmt 1 view .LVU1164
 4855              	.LBB6333:
 4856              	.LBI6333:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4857              		.loc 4 83 7 view .LVU1165
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4858              		.loc 4 83 7 is_stmt 0 view .LVU1166
 4859              	.LBE6333:
 4860              	.LBE6332:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4861              		.loc 2 160 46 view .LVU1167
 4862 0038 08AB     		add	r3, sp, #32
 4863              	.LVL362:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4864              		.loc 2 160 46 view .LVU1168
 4865 003a 0693     		str	r3, [sp, #24]
 4866              	.LVL363:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4867              		.loc 2 160 46 view .LVU1169
 4868              	.LBE6330:
 4869              	.LBE6329:
 4870              	.LBE6328:
 4871              	.LBB6334:
 4872              	.LBI6334:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4873              		.loc 2 221 7 is_stmt 1 view .LVU1170
 4874              	.LBB6335:
 4875              	.LBI6335:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4876              		.loc 2 186 7 view .LVU1171
 4877              	.LBB6336:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4878              		.loc 2 187 28 is_stmt 0 view .LVU1172
 4879 003c 0546     		mov	r5, r0
 4880 003e 55F8083B 		ldr	r3, [r5], #8
ARM GAS  /tmp/ccL95Edz.s 			page 341


 4881              	.LVL364:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4882              		.loc 2 187 28 view .LVU1173
 4883              	.LBE6336:
 4884              	.LBE6335:
 4885              	.LBB6337:
 4886              	.LBI6337:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4887              		.loc 2 200 7 is_stmt 1 view .LVU1174
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4888              		.loc 2 200 7 is_stmt 0 view .LVU1175
 4889              	.LBE6337:
 4890              	.LBE6334:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 4891              		.loc 2 555 2 view .LVU1176
 4892 0042 AB42     		cmp	r3, r5
 4893 0044 34D0     		beq	.L166
 4894              	.LVL365:
 4895              	.LBB6338:
 4896              	.LBI6338:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4897              		.loc 2 186 7 is_stmt 1 view .LVU1177
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4898              		.loc 2 186 7 is_stmt 0 view .LVU1178
 4899              	.LBE6338:
 4900              	.LBB6339:
 4901              	.LBI6339:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4902              		.loc 2 178 7 is_stmt 1 view .LVU1179
 4903              	.LBB6340:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4904              		.loc 2 179 9 is_stmt 0 view .LVU1180
 4905 0046 0693     		str	r3, [sp, #24]
 4906              	.LVL366:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4907              		.loc 2 179 9 view .LVU1181
 4908              	.LBE6340:
 4909              	.LBE6339:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 4910              		.loc 2 563 6 view .LVU1182
 4911 0048 8368     		ldr	r3, [r0, #8]
 4912              	.LVL367:
 4913              	.LBB6341:
 4914              	.LBI6341:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 4915              		.loc 2 210 7 is_stmt 1 view .LVU1183
 4916              	.LBB6342:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4917              		.loc 2 211 9 is_stmt 0 view .LVU1184
 4918 004a 0893     		str	r3, [sp, #32]
 4919              	.LVL368:
 4920              	.L160:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4921              		.loc 2 211 9 view .LVU1185
 4922              	.LBE6342:
 4923              	.LBE6341:
 4924              	.LBB6343:
ARM GAS  /tmp/ccL95Edz.s 			page 342


 4925              	.LBI6343:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4926              		.loc 2 936 7 is_stmt 1 view .LVU1186
 4927              	.LBB6344:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4928              		.loc 2 937 16 is_stmt 0 view .LVU1187
 4929 004c 6368     		ldr	r3, [r4, #4]
 4930              	.LVL369:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4931              		.loc 2 937 16 view .LVU1188
 4932              	.LBE6344:
 4933              	.LBE6343:
 4934              	.LBB6345:
 4935              	.LBI6345:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4936              		.loc 2 182 7 is_stmt 1 view .LVU1189
 4937              	.LBB6346:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4938              		.loc 2 183 9 is_stmt 0 view .LVU1190
 4939 004e 0793     		str	r3, [sp, #28]
 4940              	.LVL370:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4941              		.loc 2 183 9 view .LVU1191
 4942              	.LBE6346:
 4943              	.LBE6345:
 4944              	.LBB6347:
 4945              	.LBI6347:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4946              		.loc 2 190 7 is_stmt 1 view .LVU1192
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4947              		.loc 2 190 7 is_stmt 0 view .LVU1193
 4948              	.LBE6347:
 4949              	.LBB6348:
 4950              	.LBI6348:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4951              		.loc 2 178 7 is_stmt 1 view .LVU1194
 4952              	.LBB6349:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4953              		.loc 2 179 9 is_stmt 0 view .LVU1195
 4954 0050 2560     		str	r5, [r4]
 4955              	.LVL371:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4956              		.loc 2 179 9 view .LVU1196
 4957              	.LBE6349:
 4958              	.LBE6348:
 4959              	.LBB6350:
 4960              	.LBI6350:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4961              		.loc 2 214 7 is_stmt 1 view .LVU1197
 4962              	.LBB6351:
 4963              	.LBI6351:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4964              		.loc 2 182 7 view .LVU1198
 4965              	.LBB6352:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4966              		.loc 2 183 9 is_stmt 0 view .LVU1199
 4967 0052 0023     		movs	r3, #0
ARM GAS  /tmp/ccL95Edz.s 			page 343


 4968 0054 6360     		str	r3, [r4, #4]
 4969              	.LVL372:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4970              		.loc 2 183 9 view .LVU1200
 4971              	.LBE6352:
 4972              	.LBE6351:
 4973              	.LBB6353:
 4974              	.LBI6353:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 4975              		.loc 8 299 7 is_stmt 1 view .LVU1201
 4976              	.LBB6354:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4977              		.loc 8 300 9 view .LVU1202
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4978              		.loc 8 300 14 is_stmt 0 view .LVU1203
 4979 0056 2372     		strb	r3, [r4, #8]
 4980              	.LVL373:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4981              		.loc 8 300 14 view .LVU1204
 4982              	.LBE6354:
 4983              	.LBE6353:
 4984              	.LBE6350:
 4985              	.LBE6324:
 4986              	.LBE6323:
 4987              	.LBE6322:
 4988              	.LBE6361:
 4989              		.loc 17 100 15 view .LVU1205
 4990 0058 06A9     		add	r1, sp, #24
 4991 005a 3046     		mov	r0, r6
 4992 005c FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 4993              	.LVL374:
 4994              	.LBB6362:
 4995              	.LBI6362:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 4996              		.loc 2 657 7 is_stmt 1 view .LVU1206
 4997              	.LBB6363:
 4998              	.LBI6363:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4999              		.loc 2 229 7 view .LVU1207
 5000              	.LBB6364:
 5001              	.LBB6365:
 5002              	.LBI6365:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5003              		.loc 2 221 7 view .LVU1208
 5004              	.LBB6366:
 5005              	.LBI6366:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5006              		.loc 2 186 7 view .LVU1209
 5007              	.LBB6367:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5008              		.loc 2 187 28 is_stmt 0 view .LVU1210
 5009 0060 0698     		ldr	r0, [sp, #24]
 5010              	.LVL375:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5011              		.loc 2 187 28 view .LVU1211
 5012              	.LBE6367:
 5013              	.LBE6366:
ARM GAS  /tmp/ccL95Edz.s 			page 344


 5014              	.LBB6368:
 5015              	.LBI6368:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5016              		.loc 2 200 7 is_stmt 1 view .LVU1212
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5017              		.loc 2 200 7 is_stmt 0 view .LVU1213
 5018              	.LBE6368:
 5019              	.LBE6365:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5020              		.loc 2 231 2 view .LVU1214
 5021 0062 08AB     		add	r3, sp, #32
 5022 0064 9842     		cmp	r0, r3
 5023 0066 01D0     		beq	.L161
 5024              	.LVL376:
 5025              	.LBB6369:
 5026              	.LBI6369:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5027              		.loc 2 236 7 is_stmt 1 view .LVU1215
 5028              	.LBB6370:
 5029              	.LBB6371:
 5030              	.LBI6371:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5031              		.loc 3 469 7 view .LVU1216
 5032              	.LBB6372:
 5033              	.LBI6372:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 5034              		.loc 4 119 7 view .LVU1217
 5035              	.LBB6373:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 5036              		.loc 4 128 19 is_stmt 0 view .LVU1218
 5037 0068 FFF7FEFF 		bl	_ZdlPv
 5038              	.LVL377:
 5039              	.L161:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 5040              		.loc 4 128 19 view .LVU1219
 5041              	.LBE6373:
 5042              	.LBE6372:
 5043              	.LBE6371:
 5044              	.LBE6370:
 5045              	.LBE6369:
 5046              	.LBE6364:
 5047              	.LBE6363:
 5048              	.LBB6374:
 5049              	.LBI6374:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5050              		.loc 2 150 14 is_stmt 1 view .LVU1220
 5051              	.LBB6375:
 5052              	.LBI6375:
 5053              		.loc 5 153 7 view .LVU1221
 5054              	.LBB6376:
 5055              	.LBI6376:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5056              		.loc 4 89 7 view .LVU1222
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5057              		.loc 4 89 7 is_stmt 0 view .LVU1223
 5058              	.LBE6376:
 5059              	.LBE6375:
ARM GAS  /tmp/ccL95Edz.s 			page 345


 5060              	.LBE6374:
 5061              	.LBE6362:
 5062              	.LBB6377:
 5063              	.LBI6377:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 5064              		.loc 2 657 7 is_stmt 1 view .LVU1224
 5065              	.LBB6378:
 5066              	.LBI6378:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5067              		.loc 2 229 7 view .LVU1225
 5068              	.LBB6379:
 5069              	.LBB6380:
 5070              	.LBI6380:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5071              		.loc 2 221 7 view .LVU1226
 5072              	.LBB6381:
 5073              	.LBI6381:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5074              		.loc 2 186 7 view .LVU1227
 5075              	.LBB6382:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5076              		.loc 2 187 28 is_stmt 0 view .LVU1228
 5077 006c 0C98     		ldr	r0, [sp, #48]
 5078              	.LVL378:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5079              		.loc 2 187 28 view .LVU1229
 5080              	.LBE6382:
 5081              	.LBE6381:
 5082              	.LBB6383:
 5083              	.LBI6383:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5084              		.loc 2 200 7 is_stmt 1 view .LVU1230
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5085              		.loc 2 200 7 is_stmt 0 view .LVU1231
 5086              	.LBE6383:
 5087              	.LBE6380:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5088              		.loc 2 231 2 view .LVU1232
 5089 006e 0EAB     		add	r3, sp, #56
 5090 0070 9842     		cmp	r0, r3
 5091 0072 01D0     		beq	.L162
 5092              	.LVL379:
 5093              	.LBB6384:
 5094              	.LBI6384:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5095              		.loc 2 236 7 is_stmt 1 view .LVU1233
 5096              	.LBB6385:
 5097              	.LBB6386:
 5098              	.LBI6386:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5099              		.loc 3 469 7 view .LVU1234
 5100              	.LBB6387:
 5101              	.LBI6387:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 5102              		.loc 4 119 7 view .LVU1235
 5103              	.LBB6388:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 346


 5104              		.loc 4 128 19 is_stmt 0 view .LVU1236
 5105 0074 FFF7FEFF 		bl	_ZdlPv
 5106              	.LVL380:
 5107              	.L162:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 5108              		.loc 4 128 19 view .LVU1237
 5109              	.LBE6388:
 5110              	.LBE6387:
 5111              	.LBE6386:
 5112              	.LBE6385:
 5113              	.LBE6384:
 5114              	.LBE6379:
 5115              	.LBE6378:
 5116              	.LBB6389:
 5117              	.LBI6389:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5118              		.loc 2 150 14 is_stmt 1 view .LVU1238
 5119              	.LBB6390:
 5120              	.LBI6390:
 5121              		.loc 5 153 7 view .LVU1239
 5122              	.LBB6391:
 5123              	.LBI6391:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5124              		.loc 4 89 7 view .LVU1240
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5125              		.loc 4 89 7 is_stmt 0 view .LVU1241
 5126              	.LBE6391:
 5127              	.LBE6390:
 5128              	.LBE6389:
 5129              	.LBE6377:
 101:alohal/filesystem/filesystem.cpp ****     return 0;
 5130              		.loc 17 101 5 is_stmt 1 view .LVU1242
 5131              		.loc 17 101 12 is_stmt 0 view .LVU1243
 5132 0078 0020     		movs	r0, #0
 5133              	.LVL381:
 5134              	.L154:
 102:alohal/filesystem/filesystem.cpp **** }
 5135              		.loc 17 102 1 view .LVU1244
 5136 007a 13B0     		add	sp, sp, #76
 5137              	.LCFI23:
 5138              		.cfi_remember_state
 5139              		.cfi_def_cfa_offset 20
 5140              		@ sp needed
 5141 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 5142              	.LVL382:
 5143              	.L164:
 5144              	.LCFI24:
 5145              		.cfi_restore_state
  97:alohal/filesystem/filesystem.cpp ****         return E2BIG;
 5146              		.loc 17 97 9 is_stmt 1 view .LVU1245
 5147 007e 8568     		ldr	r5, [r0, #8]
 5148              	.LVL383:
 5149              	.LBB6392:
 5150              	.LBI6392:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 5151              		.loc 5 138 7 view .LVU1246
 5152              	.LBB6393:
ARM GAS  /tmp/ccL95Edz.s 			page 347


 5153              	.LBI6393:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5154              		.loc 4 80 7 view .LVU1247
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5155              		.loc 4 80 7 is_stmt 0 view .LVU1248
 5156              	.LBE6393:
 5157              	.LBE6392:
 5158              	.LBB6394:
 5159              	.LBI6394:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5160              		.loc 2 525 7 is_stmt 1 view .LVU1249
 5161              	.LBB6395:
 5162              	.LBB6396:
 5163              	.LBB6397:
 5164              	.LBI6397:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5165              		.loc 2 190 7 view .LVU1250
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5166              		.loc 2 190 7 is_stmt 0 view .LVU1251
 5167              	.LBE6397:
 5168              	.LBB6398:
 5169              	.LBI6398:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5170              		.loc 2 156 2 is_stmt 1 view .LVU1252
 5171              	.LBB6399:
 5172              	.LBB6400:
 5173              	.LBB6401:
 5174              	.LBI6401:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5175              		.loc 5 141 7 view .LVU1253
 5176              	.LBB6402:
 5177              	.LBI6402:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5178              		.loc 4 83 7 view .LVU1254
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5179              		.loc 4 83 7 is_stmt 0 view .LVU1255
 5180              	.LBE6402:
 5181              	.LBE6401:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5182              		.loc 2 157 35 view .LVU1256
 5183 0080 02AC     		add	r4, sp, #8
 5184              	.LVL384:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5185              		.loc 2 157 35 view .LVU1257
 5186 0082 0094     		str	r4, [sp]
 5187              	.LVL385:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5188              		.loc 2 157 35 view .LVU1258
 5189              	.LBE6400:
 5190              	.LBE6399:
 5191              	.LBE6398:
 5192              	.LBB6403:
 5193              	.LBI6403:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 5194              		.loc 8 329 7 is_stmt 1 view .LVU1259
 5195              	.LBE6403:
 5196              	.LBE6396:
ARM GAS  /tmp/ccL95Edz.s 			page 348


 5197              	.LBE6395:
 5198              	.LBE6394:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 5199              		.loc 8 332 2 view .LVU1260
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 5200              		.loc 8 335 2 view .LVU1261
 5201              	.LBB6410:
 5202              	.LBB6409:
 5203              	.LBB6408:
 5204              	.LBB6404:
 5205              	.LBI6404:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 5206              		.loc 2 263 9 view .LVU1262
 5207              	.LBB6405:
 5208              	.LBB6406:
 5209              	.LBI6406:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 5210              		.loc 2 243 9 view .LVU1263
 5211              	.LBB6407:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5212              		.loc 2 247 11 is_stmt 0 view .LVU1264
 5213 0084 0F4A     		ldr	r2, .L167+4
 5214              	.LVL386:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5215              		.loc 2 247 11 view .LVU1265
 5216 0086 4FF00003 		mov	r3, #0
 5217 008a A2F12E01 		sub	r1, r2, #46
 5218              	.LVL387:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5219              		.loc 2 247 11 view .LVU1266
 5220 008e 6846     		mov	r0, sp
 5221              	.LVL388:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5222              		.loc 2 247 11 view .LVU1267
 5223 0090 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 5224              	.LVL389:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5225              		.loc 2 247 11 view .LVU1268
 5226              	.LBE6407:
 5227              	.LBE6406:
 5228              	.LBE6405:
 5229              	.LBE6404:
 5230              	.LBE6408:
 5231              	.LBE6409:
 5232              	.LBE6410:
  97:alohal/filesystem/filesystem.cpp ****         return E2BIG;
 5233              		.loc 17 97 19 view .LVU1269
 5234 0094 6946     		mov	r1, sp
 5235 0096 2846     		mov	r0, r5
 5236 0098 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 5237              	.LVL390:
 5238              	.LBB6411:
 5239              	.LBI6411:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 5240              		.loc 2 657 7 is_stmt 1 view .LVU1270
 5241              	.LBB6412:
 5242              	.LBI6412:
ARM GAS  /tmp/ccL95Edz.s 			page 349


 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5243              		.loc 2 229 7 view .LVU1271
 5244              	.LBB6413:
 5245              	.LBB6414:
 5246              	.LBI6414:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5247              		.loc 2 221 7 view .LVU1272
 5248              	.LBB6415:
 5249              	.LBI6415:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5250              		.loc 2 186 7 view .LVU1273
 5251              	.LBB6416:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5252              		.loc 2 187 28 is_stmt 0 view .LVU1274
 5253 009c 0098     		ldr	r0, [sp]
 5254              	.LVL391:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5255              		.loc 2 187 28 view .LVU1275
 5256              	.LBE6416:
 5257              	.LBE6415:
 5258              	.LBB6417:
 5259              	.LBI6417:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5260              		.loc 2 200 7 is_stmt 1 view .LVU1276
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5261              		.loc 2 200 7 is_stmt 0 view .LVU1277
 5262              	.LBE6417:
 5263              	.LBE6414:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5264              		.loc 2 231 2 view .LVU1278
 5265 009e A042     		cmp	r0, r4
 5266 00a0 01D0     		beq	.L156
 5267              	.LVL392:
 5268              	.LBB6418:
 5269              	.LBI6418:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5270              		.loc 2 236 7 is_stmt 1 view .LVU1279
 5271              	.LBB6419:
 5272              	.LBB6420:
 5273              	.LBI6420:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5274              		.loc 3 469 7 view .LVU1280
 5275              	.LBB6421:
 5276              	.LBI6421:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 5277              		.loc 4 119 7 view .LVU1281
 5278              	.LBB6422:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 5279              		.loc 4 128 19 is_stmt 0 view .LVU1282
 5280 00a2 FFF7FEFF 		bl	_ZdlPv
 5281              	.LVL393:
 5282              	.L156:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 5283              		.loc 4 128 19 view .LVU1283
 5284              	.LBE6422:
 5285              	.LBE6421:
 5286              	.LBE6420:
ARM GAS  /tmp/ccL95Edz.s 			page 350


 5287              	.LBE6419:
 5288              	.LBE6418:
 5289              	.LBE6413:
 5290              	.LBE6412:
 5291              	.LBB6423:
 5292              	.LBI6423:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5293              		.loc 2 150 14 is_stmt 1 view .LVU1284
 5294              	.LBB6424:
 5295              	.LBI6424:
 5296              		.loc 5 153 7 view .LVU1285
 5297              	.LBB6425:
 5298              	.LBI6425:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5299              		.loc 4 89 7 view .LVU1286
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5300              		.loc 4 89 7 is_stmt 0 view .LVU1287
 5301              	.LBE6425:
 5302              	.LBE6424:
 5303              	.LBE6423:
 5304              	.LBE6411:
 5305              	.LBB6426:
 5306              	.LBI6426:
 5307              		.loc 5 153 7 is_stmt 1 view .LVU1288
 5308              	.LBB6427:
 5309              	.LBI6427:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5310              		.loc 4 89 7 view .LVU1289
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5311              		.loc 4 89 7 is_stmt 0 view .LVU1290
 5312              	.LBE6427:
 5313              	.LBE6426:
  98:alohal/filesystem/filesystem.cpp ****     }
 5314              		.loc 17 98 9 is_stmt 1 view .LVU1291
  98:alohal/filesystem/filesystem.cpp ****     }
 5315              		.loc 17 98 16 is_stmt 0 view .LVU1292
 5316 00a6 0720     		movs	r0, #7
 5317 00a8 E7E7     		b	.L154
 5318              	.LVL394:
 5319              	.L165:
 5320              	.LBB6428:
 5321              	.LBB6359:
 5322              	.LBB6320:
 5323              	.LBB6319:
 5324              	.LBB6318:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5325              		.loc 2 323 24 view .LVU1293
 5326 00aa 0748     		ldr	r0, .L167+8
 5327 00ac FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 5328              	.LVL395:
 5329              	.L166:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5330              		.loc 2 323 24 view .LVU1294
 5331              	.LBE6318:
 5332              	.LBE6319:
 5333              	.LBE6320:
 5334              	.LBE6359:
ARM GAS  /tmp/ccL95Edz.s 			page 351


 5335              	.LBB6360:
 5336              	.LBB6358:
 5337              	.LBB6357:
 5338              	.LBB6355:
 5339              	.LBI6355:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 5340              		.loc 8 361 7 is_stmt 1 view .LVU1295
 5341              	.LBB6356:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 5342              		.loc 8 363 2 view .LVU1296
 5343              		.loc 8 365 2 view .LVU1297
 5344              		.loc 8 365 49 is_stmt 0 view .LVU1298
 5345 00b0 08AF     		add	r7, sp, #32
 5346 00b2 2868     		ldr	r0, [r5]	@ unaligned
 5347              	.LVL396:
 5348              		.loc 8 365 49 view .LVU1299
 5349 00b4 6968     		ldr	r1, [r5, #4]	@ unaligned
 5350 00b6 AA68     		ldr	r2, [r5, #8]	@ unaligned
 5351 00b8 EB68     		ldr	r3, [r5, #12]	@ unaligned
 5352 00ba 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 5353 00bc C6E7     		b	.L160
 5354              	.L168:
 5355 00be 00BF     		.align	2
 5356              	.L167:
 5357 00c0 30000000 		.word	.LC4
 5358 00c4 2E000000 		.word	.LC3+46
 5359 00c8 00000000 		.word	.LC0
 5360              	.LBE6356:
 5361              	.LBE6355:
 5362              	.LBE6357:
 5363              	.LBE6358:
 5364              	.LBE6360:
 5365              	.LBE6428:
 5366              		.cfi_endproc
 5367              	.LFE3373:
 5369              		.section	.rodata._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 5370              		.align	2
 5371              	.LC5:
 5372 0000 2E00     		.ascii	".\000"
 5373 0002 0000     		.align	2
 5374              	.LC6:
 5375 0004 2F00     		.ascii	"/\000"
 5376 0006 0000     		.align	2
 5377              	.LC7:
 5378 0008 62617369 		.ascii	"basic_string::erase\000"
 5378      635F7374 
 5378      72696E67 
 5378      3A3A6572 
 5378      61736500 
 5379              		.align	2
 5380              	.LC8:
 5381 001c 25733A20 		.ascii	"%s: __pos (which is %zu) > this->size() (which is %"
 5381      5F5F706F 
 5381      73202877 
 5381      68696368 
 5381      20697320 
 5382 004f 7A752900 		.ascii	"zu)\000"
ARM GAS  /tmp/ccL95Edz.s 			page 352


 5383              		.section	.text._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 5384              		.align	1
 5385              		.global	_ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 5386              		.syntax unified
 5387              		.thumb
 5388              		.thumb_func
 5389              		.fpu fpv4-sp-d16
 5391              	_ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 5392              	.LVL397:
 5393              	.LFB3378:
 103:alohal/filesystem/filesystem.cpp **** 
 104:alohal/filesystem/filesystem.cpp **** string Filesystem::Command_check(vector<string> args) const {
 105:alohal/filesystem/filesystem.cpp ****     if (args.size() > 2) {
 106:alohal/filesystem/filesystem.cpp ****         cli->Print("Invalid parameters \r\n");
 107:alohal/filesystem/filesystem.cpp ****         return "";
 108:alohal/filesystem/filesystem.cpp ****     }
 109:alohal/filesystem/filesystem.cpp ****     string directory_name;
 110:alohal/filesystem/filesystem.cpp ****     if (args.size() == 1) {
 111:alohal/filesystem/filesystem.cpp ****         directory_name = Absolute_path(".");
 112:alohal/filesystem/filesystem.cpp ****     } else {
 113:alohal/filesystem/filesystem.cpp ****         directory_name = Absolute_path(args[1]);
 114:alohal/filesystem/filesystem.cpp ****     }
 115:alohal/filesystem/filesystem.cpp ****     if (!Entry_exists(directory_name)) {
 116:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location does not exists \r\n");
 117:alohal/filesystem/filesystem.cpp ****         return "";
 118:alohal/filesystem/filesystem.cpp ****     }
 119:alohal/filesystem/filesystem.cpp ****     return directory_name;
 120:alohal/filesystem/filesystem.cpp **** }
 121:alohal/filesystem/filesystem.cpp **** 
 122:alohal/filesystem/filesystem.cpp **** string Filesystem::Absolute_path(string filename) const {
 5394              		.loc 17 122 57 is_stmt 1 view -0
 5395              		.cfi_startproc
 5396              		@ args = 0, pretend = 0, frame = 48
 5397              		@ frame_needed = 0, uses_anonymous_args = 0
 5398              		.loc 17 122 57 is_stmt 0 view .LVU1301
 5399 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5400              	.LCFI25:
 5401              		.cfi_def_cfa_offset 20
 5402              		.cfi_offset 4, -20
 5403              		.cfi_offset 5, -16
 5404              		.cfi_offset 6, -12
 5405              		.cfi_offset 7, -8
 5406              		.cfi_offset 14, -4
 5407 0002 8DB0     		sub	sp, sp, #52
 5408              	.LCFI26:
 5409              		.cfi_def_cfa_offset 72
 5410 0004 0546     		mov	r5, r0
 5411 0006 0E46     		mov	r6, r1
 5412 0008 1446     		mov	r4, r2
 123:alohal/filesystem/filesystem.cpp ****     if (filename == ".") {
 5413              		.loc 17 123 5 is_stmt 1 view .LVU1302
 5414              	.LVL398:
 5415              	.LBB6644:
 5416              	.LBI6644:
6122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 353


6125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _CharT __rhs)
6129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
6131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator ==
6133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT>
6147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline
6148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
6154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 5417              		.loc 2 6175 5 view .LVU1303
 5418              	.LBB6645:
6176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
 5419              		.loc 2 6177 35 is_stmt 0 view .LVU1304
 5420 000a 5649     		ldr	r1, .L198
ARM GAS  /tmp/ccL95Edz.s 			page 354


 5421              	.LVL399:
 5422              		.loc 2 6177 35 view .LVU1305
 5423 000c 1046     		mov	r0, r2
 5424              	.LVL400:
 5425              		.loc 2 6177 35 view .LVU1306
 5426 000e FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 5427              	.LVL401:
 5428              		.loc 2 6177 35 view .LVU1307
 5429              	.LBE6645:
 5430              	.LBE6644:
 5431              		.loc 17 123 5 view .LVU1308
 5432 0012 30B9     		cbnz	r0, .L170
 124:alohal/filesystem/filesystem.cpp ****         return actual_position->Path();
 5433              		.loc 17 124 9 is_stmt 1 view .LVU1309
 5434              		.loc 17 124 38 is_stmt 0 view .LVU1310
 5435 0014 7168     		ldr	r1, [r6, #4]
 5436 0016 2846     		mov	r0, r5
 5437 0018 FFF7FEFF 		bl	_ZNK8FS_entry4PathB5cxx11Ev
 5438              	.LVL402:
 5439              	.L169:
 125:alohal/filesystem/filesystem.cpp ****     }
 126:alohal/filesystem/filesystem.cpp **** 
 127:alohal/filesystem/filesystem.cpp ****     if (filename == "/") {
 128:alohal/filesystem/filesystem.cpp ****         return "/";
 129:alohal/filesystem/filesystem.cpp ****     }
 130:alohal/filesystem/filesystem.cpp **** 
 131:alohal/filesystem/filesystem.cpp ****     if (filename[0] != '/') {                     // Relative path, add absolute prefix
 132:alohal/filesystem/filesystem.cpp ****         filename = actual_position->Path() + filename;
 133:alohal/filesystem/filesystem.cpp ****     }
 134:alohal/filesystem/filesystem.cpp ****     if (filename[filename.length() - 1] == '/') { // Remove / at end of string
 135:alohal/filesystem/filesystem.cpp ****         filename.erase(filename.length() - 1);
 136:alohal/filesystem/filesystem.cpp ****     }
 137:alohal/filesystem/filesystem.cpp ****     return filename;
 138:alohal/filesystem/filesystem.cpp **** }
 5440              		.loc 17 138 1 view .LVU1311
 5441 001c 2846     		mov	r0, r5
 5442 001e 0DB0     		add	sp, sp, #52
 5443              	.LCFI27:
 5444              		.cfi_remember_state
 5445              		.cfi_def_cfa_offset 20
 5446              		@ sp needed
 5447 0020 F0BD     		pop	{r4, r5, r6, r7, pc}
 5448              	.LVL403:
 5449              	.L170:
 5450              	.LCFI28:
 5451              		.cfi_restore_state
 127:alohal/filesystem/filesystem.cpp ****         return "/";
 5452              		.loc 17 127 5 is_stmt 1 view .LVU1312
 5453              	.LBB6646:
 5454              	.LBI6646:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 5455              		.loc 2 6175 5 view .LVU1313
 5456              	.LBB6647:
 5457              		.loc 2 6177 35 is_stmt 0 view .LVU1314
 5458 0022 5149     		ldr	r1, .L198+4
 5459 0024 2046     		mov	r0, r4
 5460 0026 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
ARM GAS  /tmp/ccL95Edz.s 			page 355


 5461              	.LVL404:
 5462              		.loc 2 6177 35 view .LVU1315
 5463              	.LBE6647:
 5464              	.LBE6646:
 127:alohal/filesystem/filesystem.cpp ****         return "/";
 5465              		.loc 17 127 5 view .LVU1316
 5466 002a D8B1     		cbz	r0, .L190
 131:alohal/filesystem/filesystem.cpp ****         filename = actual_position->Path() + filename;
 5467              		.loc 17 131 5 is_stmt 1 view .LVU1317
 5468              	.LVL405:
 5469              	.LBB6648:
 5470              	.LBI6648:
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5471              		.loc 2 1063 7 view .LVU1318
 5472              	.LBB6649:
 5473              	.LBI6649:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5474              		.loc 2 186 7 view .LVU1319
 5475              	.LBB6650:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5476              		.loc 2 187 28 is_stmt 0 view .LVU1320
 5477 002c 2368     		ldr	r3, [r4]
 5478              	.LVL406:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5479              		.loc 2 187 28 view .LVU1321
 5480              	.LBE6650:
 5481              	.LBE6649:
 5482              	.LBE6648:
 131:alohal/filesystem/filesystem.cpp ****         filename = actual_position->Path() + filename;
 5483              		.loc 17 131 21 view .LVU1322
 5484 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131:alohal/filesystem/filesystem.cpp ****         filename = actual_position->Path() + filename;
 5485              		.loc 17 131 5 view .LVU1323
 5486 0030 2F2B     		cmp	r3, #47
 5487 0032 22D1     		bne	.L191
 5488              	.LVL407:
 5489              	.L173:
 134:alohal/filesystem/filesystem.cpp ****         filename.erase(filename.length() - 1);
 5490              		.loc 17 134 5 is_stmt 1 view .LVU1324
 5491              	.LBB6651:
 5492              	.LBI6651:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5493              		.loc 2 936 7 view .LVU1325
 5494              	.LBB6652:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5495              		.loc 2 937 16 is_stmt 0 view .LVU1326
 5496 0034 6268     		ldr	r2, [r4, #4]
 5497              	.LVL408:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5498              		.loc 2 937 16 view .LVU1327
 5499              	.LBE6652:
 5500              	.LBE6651:
 134:alohal/filesystem/filesystem.cpp ****         filename.erase(filename.length() - 1);
 5501              		.loc 17 134 39 view .LVU1328
 5502 0036 013A     		subs	r2, r2, #1
 5503              	.LVL409:
 5504              	.LBB6653:
ARM GAS  /tmp/ccL95Edz.s 			page 356


 5505              	.LBI6653:
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5506              		.loc 2 1063 7 is_stmt 1 view .LVU1329
 5507              	.LBB6654:
 5508              	.LBB6655:
 5509              	.LBI6655:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5510              		.loc 2 186 7 view .LVU1330
 5511              	.LBB6656:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5512              		.loc 2 187 28 is_stmt 0 view .LVU1331
 5513 0038 2368     		ldr	r3, [r4]
 5514              	.LVL410:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5515              		.loc 2 187 28 view .LVU1332
 5516              	.LBE6656:
 5517              	.LBE6655:
 5518              	.LBE6654:
 5519              	.LBE6653:
 134:alohal/filesystem/filesystem.cpp ****         filename.erase(filename.length() - 1);
 5520              		.loc 17 134 41 view .LVU1333
 5521 003a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 134:alohal/filesystem/filesystem.cpp ****         filename.erase(filename.length() - 1);
 5522              		.loc 17 134 5 view .LVU1334
 5523 003c 2F2B     		cmp	r3, #47
 5524 003e 7BD0     		beq	.L192
 5525              	.L184:
 137:alohal/filesystem/filesystem.cpp **** }
 5526              		.loc 17 137 5 is_stmt 1 view .LVU1335
 5527              	.LVL411:
 5528              	.LBB6657:
 5529              	.LBI6657:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 5530              		.loc 2 552 7 view .LVU1336
 5531              	.LBB6658:
 5532              	.LBB6659:
 5533              	.LBB6660:
 5534              	.LBI6660:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5535              		.loc 2 190 7 view .LVU1337
 5536              	.LBB6661:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5537              		.loc 2 193 51 is_stmt 0 view .LVU1338
 5538 0040 05F10801 		add	r1, r5, #8
 5539              	.LVL412:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5540              		.loc 2 193 51 view .LVU1339
 5541              	.LBE6661:
 5542              	.LBE6660:
 5543              	.LBB6662:
 5544              	.LBI6662:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5545              		.loc 2 286 7 is_stmt 1 view .LVU1340
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5546              		.loc 2 286 7 is_stmt 0 view .LVU1341
 5547              	.LBE6662:
 5548              	.LBB6663:
ARM GAS  /tmp/ccL95Edz.s 			page 357


 5549              	.LBI6663:
 5550              		.loc 9 99 5 is_stmt 1 view .LVU1342
 5551              		.loc 9 99 5 is_stmt 0 view .LVU1343
 5552              	.LBE6663:
 5553              	.LBB6664:
 5554              	.LBI6664:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5555              		.loc 2 159 2 is_stmt 1 view .LVU1344
 5556              	.LBB6665:
 5557              	.LBB6666:
 5558              	.LBI6666:
 5559              		.loc 9 99 5 view .LVU1345
 5560              		.loc 9 99 5 is_stmt 0 view .LVU1346
 5561              	.LBE6666:
 5562              	.LBB6667:
 5563              	.LBI6667:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5564              		.loc 5 141 7 is_stmt 1 view .LVU1347
 5565              	.LBB6668:
 5566              	.LBI6668:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5567              		.loc 4 83 7 view .LVU1348
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5568              		.loc 4 83 7 is_stmt 0 view .LVU1349
 5569              	.LBE6668:
 5570              	.LBE6667:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5571              		.loc 2 160 46 view .LVU1350
 5572 0044 2960     		str	r1, [r5]
 5573              	.LVL413:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5574              		.loc 2 160 46 view .LVU1351
 5575              	.LBE6665:
 5576              	.LBE6664:
 5577              	.LBB6669:
 5578              	.LBI6669:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5579              		.loc 2 221 7 is_stmt 1 view .LVU1352
 5580              	.LBB6670:
 5581              	.LBI6670:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5582              		.loc 2 186 7 view .LVU1353
 5583              	.LBB6671:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5584              		.loc 2 187 28 is_stmt 0 view .LVU1354
 5585 0046 2346     		mov	r3, r4
 5586 0048 53F8082B 		ldr	r2, [r3], #8
 5587              	.LVL414:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5588              		.loc 2 187 28 view .LVU1355
 5589              	.LBE6671:
 5590              	.LBE6670:
 5591              	.LBB6672:
 5592              	.LBI6672:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5593              		.loc 2 200 7 is_stmt 1 view .LVU1356
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 358


 5594              		.loc 2 200 7 is_stmt 0 view .LVU1357
 5595              	.LBE6672:
 5596              	.LBE6669:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 5597              		.loc 2 555 2 view .LVU1358
 5598 004c 9A42     		cmp	r2, r3
 5599 004e 7FD0     		beq	.L193
 5600              	.LVL415:
 5601              	.LBB6673:
 5602              	.LBI6673:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5603              		.loc 2 186 7 is_stmt 1 view .LVU1359
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5604              		.loc 2 186 7 is_stmt 0 view .LVU1360
 5605              	.LBE6673:
 5606              	.LBB6674:
 5607              	.LBI6674:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5608              		.loc 2 178 7 is_stmt 1 view .LVU1361
 5609              	.LBB6675:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5610              		.loc 2 179 9 is_stmt 0 view .LVU1362
 5611 0050 2A60     		str	r2, [r5]
 5612              	.LVL416:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5613              		.loc 2 179 9 view .LVU1363
 5614              	.LBE6675:
 5615              	.LBE6674:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 5616              		.loc 2 563 6 view .LVU1364
 5617 0052 A268     		ldr	r2, [r4, #8]
 5618              	.LVL417:
 5619              	.LBB6676:
 5620              	.LBI6676:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 5621              		.loc 2 210 7 is_stmt 1 view .LVU1365
 5622              	.LBB6677:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5623              		.loc 2 211 9 is_stmt 0 view .LVU1366
 5624 0054 AA60     		str	r2, [r5, #8]
 5625              	.LVL418:
 5626              	.L187:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5627              		.loc 2 211 9 view .LVU1367
 5628              	.LBE6677:
 5629              	.LBE6676:
 5630              	.LBB6678:
 5631              	.LBI6678:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5632              		.loc 2 936 7 is_stmt 1 view .LVU1368
 5633              	.LBB6679:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5634              		.loc 2 937 16 is_stmt 0 view .LVU1369
 5635 0056 6268     		ldr	r2, [r4, #4]
 5636              	.LVL419:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5637              		.loc 2 937 16 view .LVU1370
ARM GAS  /tmp/ccL95Edz.s 			page 359


 5638              	.LBE6679:
 5639              	.LBE6678:
 5640              	.LBB6680:
 5641              	.LBI6680:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5642              		.loc 2 182 7 is_stmt 1 view .LVU1371
 5643              	.LBB6681:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5644              		.loc 2 183 9 is_stmt 0 view .LVU1372
 5645 0058 6A60     		str	r2, [r5, #4]
 5646              	.LVL420:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5647              		.loc 2 183 9 view .LVU1373
 5648              	.LBE6681:
 5649              	.LBE6680:
 5650              	.LBB6682:
 5651              	.LBI6682:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5652              		.loc 2 190 7 is_stmt 1 view .LVU1374
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5653              		.loc 2 190 7 is_stmt 0 view .LVU1375
 5654              	.LBE6682:
 5655              	.LBB6683:
 5656              	.LBI6683:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5657              		.loc 2 178 7 is_stmt 1 view .LVU1376
 5658              	.LBB6684:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5659              		.loc 2 179 9 is_stmt 0 view .LVU1377
 5660 005a 2360     		str	r3, [r4]
 5661              	.LVL421:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5662              		.loc 2 179 9 view .LVU1378
 5663              	.LBE6684:
 5664              	.LBE6683:
 5665              	.LBB6685:
 5666              	.LBI6685:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5667              		.loc 2 214 7 is_stmt 1 view .LVU1379
 5668              	.LBB6686:
 5669              	.LBI6686:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5670              		.loc 2 182 7 view .LVU1380
 5671              	.LBB6687:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5672              		.loc 2 183 9 is_stmt 0 view .LVU1381
 5673 005c 0023     		movs	r3, #0
 5674 005e 6360     		str	r3, [r4, #4]
 5675              	.LVL422:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5676              		.loc 2 183 9 view .LVU1382
 5677              	.LBE6687:
 5678              	.LBE6686:
 5679              	.LBB6688:
 5680              	.LBI6688:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 5681              		.loc 8 299 7 is_stmt 1 view .LVU1383
ARM GAS  /tmp/ccL95Edz.s 			page 360


 5682              	.LBB6689:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5683              		.loc 8 300 9 view .LVU1384
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5684              		.loc 8 300 14 is_stmt 0 view .LVU1385
 5685 0060 2372     		strb	r3, [r4, #8]
 5686              	.LVL423:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5687              		.loc 8 300 14 view .LVU1386
 5688              	.LBE6689:
 5689              	.LBE6688:
 5690              	.LBE6685:
 5691              	.LBE6659:
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5692              		.loc 2 572 7 view .LVU1387
 5693 0062 DBE7     		b	.L169
 5694              	.LVL424:
 5695              	.L190:
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5696              		.loc 2 572 7 view .LVU1388
 5697              	.LBE6658:
 5698              	.LBE6657:
 128:alohal/filesystem/filesystem.cpp ****     }
 5699              		.loc 17 128 9 is_stmt 1 view .LVU1389
 5700              	.LBB6694:
 5701              	.LBI6694:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 5702              		.loc 5 138 7 view .LVU1390
 5703              	.LBB6695:
 5704              	.LBI6695:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5705              		.loc 4 80 7 view .LVU1391
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5706              		.loc 4 80 7 is_stmt 0 view .LVU1392
 5707              	.LBE6695:
 5708              	.LBE6694:
 5709              	.LBB6696:
 5710              	.LBI6696:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5711              		.loc 2 525 7 is_stmt 1 view .LVU1393
 5712              	.LBB6697:
 5713              	.LBB6698:
 5714              	.LBI6698:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5715              		.loc 2 190 7 view .LVU1394
 5716              	.LBB6699:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5717              		.loc 2 193 51 is_stmt 0 view .LVU1395
 5718 0064 05F10803 		add	r3, r5, #8
 5719              	.LVL425:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5720              		.loc 2 193 51 view .LVU1396
 5721              	.LBE6699:
 5722              	.LBE6698:
 5723              	.LBB6700:
 5724              	.LBI6700:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
ARM GAS  /tmp/ccL95Edz.s 			page 361


 5725              		.loc 2 156 2 is_stmt 1 view .LVU1397
 5726              	.LBB6701:
 5727              	.LBB6702:
 5728              	.LBI6702:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5729              		.loc 5 141 7 view .LVU1398
 5730              	.LBB6703:
 5731              	.LBI6703:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5732              		.loc 4 83 7 view .LVU1399
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5733              		.loc 4 83 7 is_stmt 0 view .LVU1400
 5734              	.LBE6703:
 5735              	.LBE6702:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5736              		.loc 2 157 35 view .LVU1401
 5737 0068 2B60     		str	r3, [r5]
 5738              	.LVL426:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5739              		.loc 2 157 35 view .LVU1402
 5740              	.LBE6701:
 5741              	.LBE6700:
 5742              	.LBB6704:
 5743              	.LBI6704:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 5744              		.loc 8 329 7 is_stmt 1 view .LVU1403
 5745              	.LBE6704:
 5746              	.LBE6697:
 5747              	.LBE6696:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 5748              		.loc 8 332 2 view .LVU1404
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 5749              		.loc 8 335 2 view .LVU1405
 5750              	.LBB6710:
 5751              	.LBB6709:
 5752              	.LBB6705:
 5753              	.LBI6705:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 5754              		.loc 2 263 9 view .LVU1406
 5755              	.LBB6706:
 5756              	.LBB6707:
 5757              	.LBI6707:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 5758              		.loc 2 243 9 view .LVU1407
 5759              	.LBB6708:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5760              		.loc 2 247 11 is_stmt 0 view .LVU1408
 5761 006a 404A     		ldr	r2, .L198+8
 5762              	.LVL427:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5763              		.loc 2 247 11 view .LVU1409
 5764 006c 4FF00003 		mov	r3, #0
 5765 0070 511E     		subs	r1, r2, #1
 5766 0072 2846     		mov	r0, r5
 5767 0074 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 5768              	.LVL428:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 362


 5769              		.loc 2 247 11 view .LVU1410
 5770              	.LBE6708:
 5771              	.LBE6707:
 5772              	.LBE6706:
 5773              	.LBE6705:
 5774              	.LBE6709:
 5775              	.LBE6710:
 5776              	.LBB6711:
 5777              	.LBI6711:
 5778              		.loc 5 153 7 is_stmt 1 view .LVU1411
 5779              	.LBB6712:
 5780              	.LBI6712:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5781              		.loc 4 89 7 view .LVU1412
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5782              		.loc 4 89 7 is_stmt 0 view .LVU1413
 5783 0078 D0E7     		b	.L169
 5784              	.L191:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5785              		.loc 4 89 7 view .LVU1414
 5786              	.LBE6712:
 5787              	.LBE6711:
 132:alohal/filesystem/filesystem.cpp ****     }
 5788              		.loc 17 132 9 is_stmt 1 view .LVU1415
 132:alohal/filesystem/filesystem.cpp ****     }
 5789              		.loc 17 132 41 is_stmt 0 view .LVU1416
 5790 007a 7168     		ldr	r1, [r6, #4]
 5791 007c 06A8     		add	r0, sp, #24
 5792 007e FFF7FEFF 		bl	_ZNK8FS_entry4PathB5cxx11Ev
 5793              	.LVL429:
 5794              	.LBB6713:
 5795              	.LBI6713:
6085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 5796              		.loc 2 6085 5 is_stmt 1 view .LVU1417
 5797              	.LBB6714:
 5798              	.LBI6714:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 5799              		.loc 2 1221 7 view .LVU1418
 5800              	.LBB6715:
 5801              	.LBB6716:
 5802              	.LBI6716:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5803              		.loc 2 186 7 view .LVU1419
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5804              		.loc 2 186 7 is_stmt 0 view .LVU1420
 5805              	.LBE6716:
 5806              	.LBB6717:
 5807              	.LBI6717:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5808              		.loc 2 930 7 is_stmt 1 view .LVU1421
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5809              		.loc 2 930 7 is_stmt 0 view .LVU1422
 5810              	.LBE6717:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5811              		.loc 2 1222 55 view .LVU1423
 5812 0082 6268     		ldr	r2, [r4, #4]
 5813 0084 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccL95Edz.s 			page 363


 5814 0086 06A8     		add	r0, sp, #24
 5815              	.LVL430:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5816              		.loc 2 1222 55 view .LVU1424
 5817 0088 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 5818              	.LVL431:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5819              		.loc 2 1222 55 view .LVU1425
 5820 008c 0646     		mov	r6, r0
 5821              	.LVL432:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5822              		.loc 2 1222 55 view .LVU1426
 5823              	.LBE6715:
 5824              	.LBE6714:
 5825              	.LBB6718:
 5826              	.LBI6718:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 5827              		.loc 2 552 7 is_stmt 1 view .LVU1427
 5828              	.LBB6719:
 5829              	.LBB6720:
 5830              	.LBB6721:
 5831              	.LBI6721:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5832              		.loc 2 190 7 view .LVU1428
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5833              		.loc 2 190 7 is_stmt 0 view .LVU1429
 5834              	.LBE6721:
 5835              	.LBB6722:
 5836              	.LBI6722:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5837              		.loc 2 286 7 is_stmt 1 view .LVU1430
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5838              		.loc 2 286 7 is_stmt 0 view .LVU1431
 5839              	.LBE6722:
 5840              	.LBB6723:
 5841              	.LBI6723:
 5842              		.loc 9 99 5 is_stmt 1 view .LVU1432
 5843              		.loc 9 99 5 is_stmt 0 view .LVU1433
 5844              	.LBE6723:
 5845              	.LBB6724:
 5846              	.LBI6724:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5847              		.loc 2 159 2 is_stmt 1 view .LVU1434
 5848              	.LBB6725:
 5849              	.LBB6726:
 5850              	.LBB6727:
 5851              	.LBI6727:
 5852              		.loc 9 99 5 view .LVU1435
 5853              		.loc 9 99 5 is_stmt 0 view .LVU1436
 5854              	.LBE6727:
 5855              	.LBB6728:
 5856              	.LBI6728:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5857              		.loc 5 141 7 is_stmt 1 view .LVU1437
 5858              	.LBB6729:
 5859              	.LBI6729:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 364


 5860              		.loc 4 83 7 view .LVU1438
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5861              		.loc 4 83 7 is_stmt 0 view .LVU1439
 5862              	.LBE6729:
 5863              	.LBE6728:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5864              		.loc 2 160 46 view .LVU1440
 5865 008e 02AB     		add	r3, sp, #8
 5866              	.LVL433:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5867              		.loc 2 160 46 view .LVU1441
 5868 0090 0093     		str	r3, [sp]
 5869              	.LVL434:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5870              		.loc 2 160 46 view .LVU1442
 5871              	.LBE6726:
 5872              	.LBE6725:
 5873              	.LBE6724:
 5874              	.LBB6730:
 5875              	.LBI6730:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5876              		.loc 2 221 7 is_stmt 1 view .LVU1443
 5877              	.LBB6731:
 5878              	.LBI6731:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5879              		.loc 2 186 7 view .LVU1444
 5880              	.LBB6732:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5881              		.loc 2 187 28 is_stmt 0 view .LVU1445
 5882 0092 8446     		mov	ip, r0
 5883 0094 5CF8083B 		ldr	r3, [ip], #8
 5884              	.LVL435:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5885              		.loc 2 187 28 view .LVU1446
 5886              	.LBE6732:
 5887              	.LBE6731:
 5888              	.LBB6733:
 5889              	.LBI6733:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5890              		.loc 2 200 7 is_stmt 1 view .LVU1447
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5891              		.loc 2 200 7 is_stmt 0 view .LVU1448
 5892              	.LBE6733:
 5893              	.LBE6730:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 5894              		.loc 2 555 2 view .LVU1449
 5895 0098 6345     		cmp	r3, ip
 5896 009a 2CD0     		beq	.L194
 5897              	.LVL436:
 5898              	.LBB6734:
 5899              	.LBI6734:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5900              		.loc 2 186 7 is_stmt 1 view .LVU1450
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5901              		.loc 2 186 7 is_stmt 0 view .LVU1451
 5902              	.LBE6734:
 5903              	.LBB6735:
ARM GAS  /tmp/ccL95Edz.s 			page 365


 5904              	.LBI6735:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5905              		.loc 2 178 7 is_stmt 1 view .LVU1452
 5906              	.LBB6736:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5907              		.loc 2 179 9 is_stmt 0 view .LVU1453
 5908 009c 0093     		str	r3, [sp]
 5909              	.LVL437:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5910              		.loc 2 179 9 view .LVU1454
 5911              	.LBE6736:
 5912              	.LBE6735:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 5913              		.loc 2 563 6 view .LVU1455
 5914 009e 8368     		ldr	r3, [r0, #8]
 5915              	.LVL438:
 5916              	.LBB6737:
 5917              	.LBI6737:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 5918              		.loc 2 210 7 is_stmt 1 view .LVU1456
 5919              	.LBB6738:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5920              		.loc 2 211 9 is_stmt 0 view .LVU1457
 5921 00a0 0293     		str	r3, [sp, #8]
 5922              	.LVL439:
 5923              	.L175:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5924              		.loc 2 211 9 view .LVU1458
 5925              	.LBE6738:
 5926              	.LBE6737:
 5927              	.LBB6739:
 5928              	.LBI6739:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5929              		.loc 2 936 7 is_stmt 1 view .LVU1459
 5930              	.LBB6740:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5931              		.loc 2 937 16 is_stmt 0 view .LVU1460
 5932 00a2 7368     		ldr	r3, [r6, #4]
 5933              	.LVL440:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5934              		.loc 2 937 16 view .LVU1461
 5935              	.LBE6740:
 5936              	.LBE6739:
 5937              	.LBB6741:
 5938              	.LBI6741:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5939              		.loc 2 182 7 is_stmt 1 view .LVU1462
 5940              	.LBB6742:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5941              		.loc 2 183 9 is_stmt 0 view .LVU1463
 5942 00a4 0193     		str	r3, [sp, #4]
 5943              	.LVL441:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5944              		.loc 2 183 9 view .LVU1464
 5945              	.LBE6742:
 5946              	.LBE6741:
 5947              	.LBB6743:
ARM GAS  /tmp/ccL95Edz.s 			page 366


 5948              	.LBI6743:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5949              		.loc 2 190 7 is_stmt 1 view .LVU1465
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5950              		.loc 2 190 7 is_stmt 0 view .LVU1466
 5951              	.LBE6743:
 5952              	.LBB6744:
 5953              	.LBI6744:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5954              		.loc 2 178 7 is_stmt 1 view .LVU1467
 5955              	.LBB6745:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5956              		.loc 2 179 9 is_stmt 0 view .LVU1468
 5957 00a6 C6F800C0 		str	ip, [r6]
 5958              	.LVL442:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5959              		.loc 2 179 9 view .LVU1469
 5960              	.LBE6745:
 5961              	.LBE6744:
 5962              	.LBB6746:
 5963              	.LBI6746:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5964              		.loc 2 214 7 is_stmt 1 view .LVU1470
 5965              	.LBB6747:
 5966              	.LBI6747:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5967              		.loc 2 182 7 view .LVU1471
 5968              	.LBB6748:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5969              		.loc 2 183 9 is_stmt 0 view .LVU1472
 5970 00aa 0023     		movs	r3, #0
 5971 00ac 7360     		str	r3, [r6, #4]
 5972              	.LVL443:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5973              		.loc 2 183 9 view .LVU1473
 5974              	.LBE6748:
 5975              	.LBE6747:
 5976              	.LBB6749:
 5977              	.LBI6749:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 5978              		.loc 8 299 7 is_stmt 1 view .LVU1474
 5979              	.LBB6750:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5980              		.loc 8 300 9 view .LVU1475
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5981              		.loc 8 300 14 is_stmt 0 view .LVU1476
 5982 00ae 3372     		strb	r3, [r6, #8]
 5983              	.LVL444:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5984              		.loc 8 300 14 view .LVU1477
 5985              	.LBE6750:
 5986              	.LBE6749:
 5987              	.LBE6746:
 5988              	.LBE6720:
 5989              	.LBE6719:
 5990              	.LBE6718:
 5991              	.LBE6713:
ARM GAS  /tmp/ccL95Edz.s 			page 367


 5992              	.LBB6756:
 5993              	.LBI6756:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 5994              		.loc 2 732 7 is_stmt 1 view .LVU1478
 5995              	.LBB6757:
 5996              	.LBI6757:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5997              		.loc 2 221 7 view .LVU1479
 5998              	.LBB6758:
 5999              	.LBI6758:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6000              		.loc 2 186 7 view .LVU1480
 6001              	.LBB6759:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6002              		.loc 2 187 28 is_stmt 0 view .LVU1481
 6003 00b0 2346     		mov	r3, r4
 6004 00b2 53F8080B 		ldr	r0, [r3], #8
 6005              	.LVL445:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6006              		.loc 2 187 28 view .LVU1482
 6007              	.LBE6759:
 6008              	.LBE6758:
 6009              	.LBB6760:
 6010              	.LBI6760:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6011              		.loc 2 200 7 is_stmt 1 view .LVU1483
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6012              		.loc 2 200 7 is_stmt 0 view .LVU1484
 6013              	.LBE6760:
 6014              	.LBE6757:
 6015              	.LBB6761:
 6016              	.LBB6762:
 6017              	.LBI6762:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6018              		.loc 2 221 7 is_stmt 1 view .LVU1485
 6019              	.LBB6763:
 6020              	.LBI6763:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6021              		.loc 2 186 7 view .LVU1486
 6022              	.LBB6764:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6023              		.loc 2 187 28 is_stmt 0 view .LVU1487
 6024 00b6 0099     		ldr	r1, [sp]
 6025              	.LVL446:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6026              		.loc 2 187 28 view .LVU1488
 6027              	.LBE6764:
 6028              	.LBE6763:
 6029              	.LBB6765:
 6030              	.LBI6765:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6031              		.loc 2 200 7 is_stmt 1 view .LVU1489
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6032              		.loc 2 200 7 is_stmt 0 view .LVU1490
 6033              	.LBE6765:
 6034              	.LBE6762:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
ARM GAS  /tmp/ccL95Edz.s 			page 368


 6035              		.loc 2 747 2 view .LVU1491
 6036 00b8 02AA     		add	r2, sp, #8
 6037 00ba 9142     		cmp	r1, r2
 6038 00bc 28D0     		beq	.L195
 6039              	.LVL447:
 6040              	.LBB6766:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 6041              		.loc 2 761 6 view .LVU1492
 6042 00be 9842     		cmp	r0, r3
 6043 00c0 35D0     		beq	.L188
 6044              	.LVL448:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 6045              		.loc 2 767 7 view .LVU1493
 6046 00c2 A768     		ldr	r7, [r4, #8]
 6047              	.LVL449:
 6048              	.L180:
 6049              	.LBB6767:
 6050              	.LBI6767:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 6051              		.loc 2 178 7 is_stmt 1 view .LVU1494
 6052              	.LBB6768:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6053              		.loc 2 179 9 is_stmt 0 view .LVU1495
 6054 00c4 2160     		str	r1, [r4]
 6055              	.LVL450:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6056              		.loc 2 179 9 view .LVU1496
 6057              	.LBE6768:
 6058              	.LBE6767:
 6059              	.LBB6769:
 6060              	.LBI6769:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6061              		.loc 2 936 7 is_stmt 1 view .LVU1497
 6062              	.LBB6770:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6063              		.loc 2 937 16 is_stmt 0 view .LVU1498
 6064 00c6 019B     		ldr	r3, [sp, #4]
 6065              	.LVL451:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6066              		.loc 2 937 16 view .LVU1499
 6067              	.LBE6770:
 6068              	.LBE6769:
 6069              	.LBB6771:
 6070              	.LBI6771:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6071              		.loc 2 182 7 is_stmt 1 view .LVU1500
 6072              	.LBB6772:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6073              		.loc 2 183 9 is_stmt 0 view .LVU1501
 6074 00c8 6360     		str	r3, [r4, #4]
 6075              	.LVL452:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6076              		.loc 2 183 9 view .LVU1502
 6077              	.LBE6772:
 6078              	.LBE6771:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 6079              		.loc 2 775 6 view .LVU1503
ARM GAS  /tmp/ccL95Edz.s 			page 369


 6080 00ca 029B     		ldr	r3, [sp, #8]
 6081              	.LVL453:
 6082              	.LBB6773:
 6083              	.LBI6773:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 6084              		.loc 2 210 7 is_stmt 1 view .LVU1504
 6085              	.LBB6774:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6086              		.loc 2 211 9 is_stmt 0 view .LVU1505
 6087 00cc A360     		str	r3, [r4, #8]
 6088              	.LVL454:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6089              		.loc 2 211 9 view .LVU1506
 6090              	.LBE6774:
 6091              	.LBE6773:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 6092              		.loc 2 776 6 view .LVU1507
 6093 00ce 80B3     		cbz	r0, .L181
 6094              	.LVL455:
 6095              	.LBB6775:
 6096              	.LBI6775:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 6097              		.loc 2 178 7 is_stmt 1 view .LVU1508
 6098              	.LBB6776:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6099              		.loc 2 179 9 is_stmt 0 view .LVU1509
 6100 00d0 0090     		str	r0, [sp]
 6101              	.LVL456:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6102              		.loc 2 179 9 view .LVU1510
 6103              	.LBE6776:
 6104              	.LBE6775:
 6105              	.LBB6777:
 6106              	.LBI6777:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 6107              		.loc 2 210 7 is_stmt 1 view .LVU1511
 6108              	.LBB6778:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6109              		.loc 2 211 9 is_stmt 0 view .LVU1512
 6110 00d2 0297     		str	r7, [sp, #8]
 6111              	.LVL457:
 6112              	.L179:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6113              		.loc 2 211 9 view .LVU1513
 6114              	.LBE6778:
 6115              	.LBE6777:
 6116              	.LBE6766:
 6117              	.LBE6761:
 6118              	.LBB6802:
 6119              	.LBI6802:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 6120              		.loc 2 1023 7 is_stmt 1 view .LVU1514
 6121              	.LBB6803:
 6122              	.LBI6803:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6123              		.loc 2 214 7 view .LVU1515
 6124              	.LBB6804:
ARM GAS  /tmp/ccL95Edz.s 			page 370


 6125              	.LBI6804:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6126              		.loc 2 182 7 view .LVU1516
 6127              	.LBB6805:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6128              		.loc 2 183 9 is_stmt 0 view .LVU1517
 6129 00d4 0023     		movs	r3, #0
 6130 00d6 0193     		str	r3, [sp, #4]
 6131              	.LVL458:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6132              		.loc 2 183 9 view .LVU1518
 6133              	.LBE6805:
 6134              	.LBE6804:
 6135              	.LBB6806:
 6136              	.LBI6806:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6137              		.loc 2 186 7 is_stmt 1 view .LVU1519
 6138              	.LBB6807:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6139              		.loc 2 187 28 is_stmt 0 view .LVU1520
 6140 00d8 009A     		ldr	r2, [sp]
 6141              	.LVL459:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6142              		.loc 2 187 28 view .LVU1521
 6143              	.LBE6807:
 6144              	.LBE6806:
 6145              	.LBB6808:
 6146              	.LBI6808:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6147              		.loc 8 299 7 is_stmt 1 view .LVU1522
 6148              	.LBB6809:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6149              		.loc 8 300 9 view .LVU1523
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6150              		.loc 8 300 14 is_stmt 0 view .LVU1524
 6151 00da 1370     		strb	r3, [r2]
 6152              	.LVL460:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6153              		.loc 8 300 14 view .LVU1525
 6154              	.LBE6809:
 6155              	.LBE6808:
 6156              	.LBE6803:
 6157              	.LBE6802:
 6158              	.LBE6756:
 6159              	.LBB6811:
 6160              	.LBI6811:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 6161              		.loc 2 657 7 is_stmt 1 view .LVU1526
 6162              	.LBB6812:
 6163              	.LBI6812:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6164              		.loc 2 229 7 view .LVU1527
 6165              	.LBB6813:
 6166              	.LBB6814:
 6167              	.LBI6814:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6168              		.loc 2 221 7 view .LVU1528
ARM GAS  /tmp/ccL95Edz.s 			page 371


 6169              	.LBB6815:
 6170              	.LBI6815:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6171              		.loc 2 186 7 view .LVU1529
 6172              	.LBB6816:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6173              		.loc 2 187 28 is_stmt 0 view .LVU1530
 6174 00dc 0098     		ldr	r0, [sp]
 6175              	.LVL461:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6176              		.loc 2 187 28 view .LVU1531
 6177              	.LBE6816:
 6178              	.LBE6815:
 6179              	.LBB6817:
 6180              	.LBI6817:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6181              		.loc 2 200 7 is_stmt 1 view .LVU1532
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6182              		.loc 2 200 7 is_stmt 0 view .LVU1533
 6183              	.LBE6817:
 6184              	.LBE6814:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6185              		.loc 2 231 2 view .LVU1534
 6186 00de 02AB     		add	r3, sp, #8
 6187 00e0 9842     		cmp	r0, r3
 6188 00e2 01D0     		beq	.L182
 6189              	.LVL462:
 6190              	.LBB6818:
 6191              	.LBI6818:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6192              		.loc 2 236 7 is_stmt 1 view .LVU1535
 6193              	.LBB6819:
 6194              	.LBB6820:
 6195              	.LBI6820:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6196              		.loc 3 469 7 view .LVU1536
 6197              	.LBB6821:
 6198              	.LBI6821:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6199              		.loc 4 119 7 view .LVU1537
 6200              	.LBB6822:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6201              		.loc 4 128 19 is_stmt 0 view .LVU1538
 6202 00e4 FFF7FEFF 		bl	_ZdlPv
 6203              	.LVL463:
 6204              	.L182:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6205              		.loc 4 128 19 view .LVU1539
 6206              	.LBE6822:
 6207              	.LBE6821:
 6208              	.LBE6820:
 6209              	.LBE6819:
 6210              	.LBE6818:
 6211              	.LBE6813:
 6212              	.LBE6812:
 6213              	.LBB6823:
 6214              	.LBI6823:
ARM GAS  /tmp/ccL95Edz.s 			page 372


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6215              		.loc 2 150 14 is_stmt 1 view .LVU1540
 6216              	.LBB6824:
 6217              	.LBI6824:
 6218              		.loc 5 153 7 view .LVU1541
 6219              	.LBB6825:
 6220              	.LBI6825:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6221              		.loc 4 89 7 view .LVU1542
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6222              		.loc 4 89 7 is_stmt 0 view .LVU1543
 6223              	.LBE6825:
 6224              	.LBE6824:
 6225              	.LBE6823:
 6226              	.LBE6811:
 6227              	.LBB6826:
 6228              	.LBI6826:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 6229              		.loc 2 657 7 is_stmt 1 view .LVU1544
 6230              	.LBB6827:
 6231              	.LBI6827:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6232              		.loc 2 229 7 view .LVU1545
 6233              	.LBB6828:
 6234              	.LBB6829:
 6235              	.LBI6829:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6236              		.loc 2 221 7 view .LVU1546
 6237              	.LBB6830:
 6238              	.LBI6830:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6239              		.loc 2 186 7 view .LVU1547
 6240              	.LBB6831:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6241              		.loc 2 187 28 is_stmt 0 view .LVU1548
 6242 00e8 0698     		ldr	r0, [sp, #24]
 6243              	.LVL464:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6244              		.loc 2 187 28 view .LVU1549
 6245              	.LBE6831:
 6246              	.LBE6830:
 6247              	.LBB6832:
 6248              	.LBI6832:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6249              		.loc 2 200 7 is_stmt 1 view .LVU1550
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6250              		.loc 2 200 7 is_stmt 0 view .LVU1551
 6251              	.LBE6832:
 6252              	.LBE6829:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6253              		.loc 2 231 2 view .LVU1552
 6254 00ea 08AB     		add	r3, sp, #32
 6255 00ec 9842     		cmp	r0, r3
 6256 00ee A1D0     		beq	.L173
 6257              	.LVL465:
 6258              	.LBB6833:
 6259              	.LBI6833:
ARM GAS  /tmp/ccL95Edz.s 			page 373


 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6260              		.loc 2 236 7 is_stmt 1 view .LVU1553
 6261              	.LBB6834:
 6262              	.LBB6835:
 6263              	.LBI6835:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6264              		.loc 3 469 7 view .LVU1554
 6265              	.LBB6836:
 6266              	.LBI6836:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6267              		.loc 4 119 7 view .LVU1555
 6268              	.LBB6837:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6269              		.loc 4 128 19 is_stmt 0 view .LVU1556
 6270 00f0 FFF7FEFF 		bl	_ZdlPv
 6271              	.LVL466:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6272              		.loc 4 128 19 view .LVU1557
 6273              	.LBE6837:
 6274              	.LBE6836:
 6275              	.LBE6835:
 6276              	.LBE6834:
 6277              	.LBE6833:
 6278              	.LBE6828:
 6279              	.LBE6827:
 6280              	.LBB6841:
 6281              	.LBI6841:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6282              		.loc 2 150 14 is_stmt 1 view .LVU1558
 6283              	.LBB6842:
 6284              	.LBI6842:
 6285              		.loc 5 153 7 view .LVU1559
 6286              	.LBB6843:
 6287              	.LBI6843:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6288              		.loc 4 89 7 view .LVU1560
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6289              		.loc 4 89 7 is_stmt 0 view .LVU1561
 6290              	.LBE6843:
 6291              	.LBE6842:
 6292              	.LBE6841:
 6293              	.LBB6844:
 6294              	.LBB6840:
 6295              	.LBB6839:
 6296              	.LBB6838:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6297              		.loc 2 237 79 view .LVU1562
 6298 00f4 9EE7     		b	.L173
 6299              	.LVL467:
 6300              	.L194:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6301              		.loc 2 237 79 view .LVU1563
 6302              	.LBE6838:
 6303              	.LBE6839:
 6304              	.LBE6840:
 6305              	.LBE6844:
 6306              	.LBE6826:
ARM GAS  /tmp/ccL95Edz.s 			page 374


 6307              	.LBB6845:
 6308              	.LBB6755:
 6309              	.LBB6754:
 6310              	.LBB6753:
 6311              	.LBB6751:
 6312              	.LBI6751:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6313              		.loc 8 361 7 is_stmt 1 view .LVU1564
 6314              	.LBB6752:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6315              		.loc 8 363 2 view .LVU1565
 6316              		.loc 8 365 2 view .LVU1566
 6317              		.loc 8 365 49 is_stmt 0 view .LVU1567
 6318 00f6 0DF1080E 		add	lr, sp, #8
 6319 00fa DCF80000 		ldr	r0, [ip]	@ unaligned
 6320              	.LVL468:
 6321              		.loc 8 365 49 view .LVU1568
 6322 00fe DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 6323 0102 DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 6324 0106 DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 6325 010a AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 6326 010e C8E7     		b	.L175
 6327              	.LVL469:
 6328              	.L195:
 6329              		.loc 8 365 49 view .LVU1569
 6330              	.LBE6752:
 6331              	.LBE6751:
 6332              	.LBE6753:
 6333              	.LBE6754:
 6334              	.LBE6755:
 6335              	.LBE6845:
 6336              	.LBB6846:
 6337              	.LBB6810:
 6338              	.LBB6781:
 6339              	.LBI6781:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6340              		.loc 2 930 7 is_stmt 1 view .LVU1570
 6341              	.LBB6782:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6342              		.loc 2 931 16 is_stmt 0 view .LVU1571
 6343 0110 019A     		ldr	r2, [sp, #4]
 6344              	.LVL470:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6345              		.loc 2 931 16 view .LVU1572
 6346              	.LBE6782:
 6347              	.LBE6781:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 6348              		.loc 2 750 6 view .LVU1573
 6349 0112 1AB1     		cbz	r2, .L177
 6350              	.LVL471:
 6351              	.LBB6783:
 6352              	.LBI6783:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6353              		.loc 2 346 7 is_stmt 1 view .LVU1574
 6354              	.LBB6784:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 6355              		.loc 2 348 2 is_stmt 0 view .LVU1575
ARM GAS  /tmp/ccL95Edz.s 			page 375


 6356 0114 012A     		cmp	r2, #1
 6357 0116 07D0     		beq	.L196
 6358              	.LVL472:
 6359              	.LBB6785:
 6360              	.LBI6785:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6361              		.loc 8 361 7 is_stmt 1 view .LVU1576
 6362              	.LBB6786:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6363              		.loc 8 363 2 view .LVU1577
 6364              		.loc 8 365 2 view .LVU1578
 6365              		.loc 8 365 49 is_stmt 0 view .LVU1579
 6366 0118 FFF7FEFF 		bl	memcpy
 6367              	.LVL473:
 6368              	.L177:
 6369              		.loc 8 365 49 view .LVU1580
 6370              	.LBE6786:
 6371              	.LBE6785:
 6372              	.LBE6784:
 6373              	.LBE6783:
 6374              	.LBB6790:
 6375              	.LBI6790:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6376              		.loc 2 930 7 is_stmt 1 view .LVU1581
 6377              	.LBB6791:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6378              		.loc 2 931 16 is_stmt 0 view .LVU1582
 6379 011c 019B     		ldr	r3, [sp, #4]
 6380              	.LVL474:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6381              		.loc 2 931 16 view .LVU1583
 6382              	.LBE6791:
 6383              	.LBE6790:
 6384              	.LBB6792:
 6385              	.LBI6792:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6386              		.loc 2 214 7 is_stmt 1 view .LVU1584
 6387              	.LBB6793:
 6388              	.LBB6794:
 6389              	.LBI6794:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6390              		.loc 2 182 7 view .LVU1585
 6391              	.LBB6795:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6392              		.loc 2 183 9 is_stmt 0 view .LVU1586
 6393 011e 6360     		str	r3, [r4, #4]
 6394              	.LVL475:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6395              		.loc 2 183 9 view .LVU1587
 6396              	.LBE6795:
 6397              	.LBE6794:
 6398              	.LBB6796:
 6399              	.LBI6796:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6400              		.loc 2 186 7 is_stmt 1 view .LVU1588
 6401              	.LBB6797:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 376


 6402              		.loc 2 187 28 is_stmt 0 view .LVU1589
 6403 0120 2268     		ldr	r2, [r4]
 6404              	.LVL476:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6405              		.loc 2 187 28 view .LVU1590
 6406              	.LBE6797:
 6407              	.LBE6796:
 6408              	.LBB6798:
 6409              	.LBI6798:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6410              		.loc 8 299 7 is_stmt 1 view .LVU1591
 6411              	.LBB6799:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6412              		.loc 8 300 9 view .LVU1592
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6413              		.loc 8 300 14 is_stmt 0 view .LVU1593
 6414 0122 0021     		movs	r1, #0
 6415 0124 D154     		strb	r1, [r2, r3]
 6416              	.LVL477:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6417              		.loc 8 300 14 view .LVU1594
 6418              	.LBE6799:
 6419              	.LBE6798:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6420              		.loc 2 218 7 view .LVU1595
 6421 0126 D5E7     		b	.L179
 6422              	.LVL478:
 6423              	.L196:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6424              		.loc 2 218 7 view .LVU1596
 6425              	.LBE6793:
 6426              	.LBE6792:
 6427              	.LBB6800:
 6428              	.LBB6789:
 6429              	.LBB6787:
 6430              	.LBI6787:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6431              		.loc 8 299 7 is_stmt 1 view .LVU1597
 6432              	.LBB6788:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6433              		.loc 8 300 9 view .LVU1598
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6434              		.loc 8 300 16 is_stmt 0 view .LVU1599
 6435 0128 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6436              		.loc 8 300 14 view .LVU1600
 6437 012a 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6438              		.loc 8 300 22 view .LVU1601
 6439 012c F6E7     		b	.L177
 6440              	.LVL479:
 6441              	.L188:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6442              		.loc 8 300 22 view .LVU1602
 6443              	.LBE6788:
 6444              	.LBE6787:
 6445              	.LBE6789:
ARM GAS  /tmp/ccL95Edz.s 			page 377


 6446              	.LBE6800:
 6447              	.LBB6801:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 6448              		.loc 2 759 14 view .LVU1603
 6449 012e 0020     		movs	r0, #0
 6450 0130 C8E7     		b	.L180
 6451              	.LVL480:
 6452              	.L181:
 6453              	.LBB6779:
 6454              	.LBI6779:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 6455              		.loc 2 178 7 is_stmt 1 view .LVU1604
 6456              	.LBB6780:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6457              		.loc 2 179 9 is_stmt 0 view .LVU1605
 6458 0132 02AB     		add	r3, sp, #8
 6459 0134 0093     		str	r3, [sp]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6460              		.loc 2 179 33 view .LVU1606
 6461 0136 CDE7     		b	.L179
 6462              	.LVL481:
 6463              	.L192:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6464              		.loc 2 179 33 view .LVU1607
 6465              	.LBE6780:
 6466              	.LBE6779:
 6467              	.LBE6801:
 6468              	.LBE6810:
 6469              	.LBE6846:
 135:alohal/filesystem/filesystem.cpp ****     }
 6470              		.loc 17 135 9 is_stmt 1 view .LVU1608
 6471              	.LBB6847:
 6472              	.LBI6847:
1807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6473              		.loc 2 1807 7 view .LVU1609
 6474              	.LBB6848:
 6475              	.LBB6849:
 6476              	.LBI6849:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6477              		.loc 2 310 7 view .LVU1610
 6478              	.LBB6850:
 6479              	.LBB6851:
 6480              	.LBI6851:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6481              		.loc 2 930 7 view .LVU1611
 6482              	.LBB6852:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6483              		.loc 2 931 16 is_stmt 0 view .LVU1612
 6484 0138 6368     		ldr	r3, [r4, #4]
 6485              	.LVL482:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6486              		.loc 2 931 16 view .LVU1613
 6487              	.LBE6852:
 6488              	.LBE6851:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 6489              		.loc 2 312 2 view .LVU1614
 6490 013a 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccL95Edz.s 			page 378


 6491 013c 04D8     		bhi	.L197
 6492              	.LVL483:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 6493              		.loc 2 312 2 view .LVU1615
 6494              	.LBE6850:
 6495              	.LBE6849:
 6496              	.LBB6854:
 6497              	.LBI6854:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6498              		.loc 2 214 7 is_stmt 1 view .LVU1616
 6499              	.LBB6855:
 6500              	.LBB6856:
 6501              	.LBI6856:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6502              		.loc 2 182 7 view .LVU1617
 6503              	.LBB6857:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6504              		.loc 2 183 9 is_stmt 0 view .LVU1618
 6505 013e 6260     		str	r2, [r4, #4]
 6506              	.LVL484:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6507              		.loc 2 183 9 view .LVU1619
 6508              	.LBE6857:
 6509              	.LBE6856:
 6510              	.LBB6858:
 6511              	.LBI6858:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6512              		.loc 2 186 7 is_stmt 1 view .LVU1620
 6513              	.LBB6859:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6514              		.loc 2 187 28 is_stmt 0 view .LVU1621
 6515 0140 2368     		ldr	r3, [r4]
 6516              	.LVL485:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6517              		.loc 2 187 28 view .LVU1622
 6518              	.LBE6859:
 6519              	.LBE6858:
 6520              	.LBB6860:
 6521              	.LBI6860:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6522              		.loc 8 299 7 is_stmt 1 view .LVU1623
 6523              	.LBB6861:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6524              		.loc 8 300 9 view .LVU1624
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6525              		.loc 8 300 14 is_stmt 0 view .LVU1625
 6526 0142 0021     		movs	r1, #0
 6527 0144 9954     		strb	r1, [r3, r2]
 6528              	.LVL486:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6529              		.loc 8 300 14 view .LVU1626
 6530              	.LBE6861:
 6531              	.LBE6860:
 6532              	.LBE6855:
 6533              	.LBE6854:
1814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 6534              		.loc 2 1814 10 view .LVU1627
ARM GAS  /tmp/ccL95Edz.s 			page 379


 6535 0146 7BE7     		b	.L184
 6536              	.LVL487:
 6537              	.L197:
 6538              	.LBB6862:
 6539              	.LBB6853:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 6540              		.loc 2 313 28 view .LVU1628
 6541 0148 0949     		ldr	r1, .L198+12
 6542 014a 0A48     		ldr	r0, .L198+16
 6543 014c FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 6544              	.LVL488:
 6545              	.L193:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 6546              		.loc 2 313 28 view .LVU1629
 6547              	.LBE6853:
 6548              	.LBE6862:
 6549              	.LBE6848:
 6550              	.LBE6847:
 6551              	.LBB6863:
 6552              	.LBB6693:
 6553              	.LBB6692:
 6554              	.LBB6690:
 6555              	.LBI6690:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6556              		.loc 8 361 7 is_stmt 1 view .LVU1630
 6557              	.LBB6691:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6558              		.loc 8 363 2 view .LVU1631
 6559              		.loc 8 365 2 view .LVU1632
 6560              		.loc 8 365 49 is_stmt 0 view .LVU1633
 6561 0150 1F68     		ldr	r7, [r3]	@ unaligned
 6562 0152 5E68     		ldr	r6, [r3, #4]	@ unaligned
 6563 0154 9868     		ldr	r0, [r3, #8]	@ unaligned
 6564 0156 DA68     		ldr	r2, [r3, #12]	@ unaligned
 6565 0158 AF60     		str	r7, [r5, #8]	@ unaligned
 6566 015a EE60     		str	r6, [r5, #12]	@ unaligned
 6567 015c 2861     		str	r0, [r5, #16]	@ unaligned
 6568 015e 6A61     		str	r2, [r5, #20]	@ unaligned
 6569 0160 79E7     		b	.L187
 6570              	.L199:
 6571 0162 00BF     		.align	2
 6572              	.L198:
 6573 0164 00000000 		.word	.LC5
 6574 0168 04000000 		.word	.LC6
 6575 016c 01000000 		.word	.LC6+1
 6576 0170 08000000 		.word	.LC7
 6577 0174 1C000000 		.word	.LC8
 6578              	.LBE6691:
 6579              	.LBE6690:
 6580              	.LBE6692:
 6581              	.LBE6693:
 6582              	.LBE6863:
 6583              		.cfi_endproc
 6584              	.LFE3378:
 6586              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20f
 6587              		.align	1
 6588              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_it
ARM GAS  /tmp/ccL95Edz.s 			page 380


 6589              		.syntax unified
 6590              		.thumb
 6591              		.thumb_func
 6592              		.fpu fpv4-sp-d16
 6594              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_
 6595              	.LVL489:
 6596              	.LFB4058:
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6597              		.loc 7 206 7 is_stmt 1 view -0
 6598              		.cfi_startproc
 6599              		@ args = 0, pretend = 0, frame = 8
 6600              		@ frame_needed = 0, uses_anonymous_args = 0
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6601              		.loc 7 206 7 is_stmt 0 view .LVU1635
 6602 0000 70B5     		push	{r4, r5, r6, lr}
 6603              	.LCFI29:
 6604              		.cfi_def_cfa_offset 16
 6605              		.cfi_offset 4, -16
 6606              		.cfi_offset 5, -12
 6607              		.cfi_offset 6, -8
 6608              		.cfi_offset 14, -4
 6609 0002 82B0     		sub	sp, sp, #8
 6610              	.LCFI30:
 6611              		.cfi_def_cfa_offset 24
 6612 0004 0546     		mov	r5, r0
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 6613              		.loc 7 211 42 view .LVU1636
 6614 0006 0E46     		mov	r6, r1
 6615 0008 61B1     		cbz	r1, .L206
 6616              	.L201:
 6617              	.LVL490:
 6618              	.LBB6864:
 6619              	.LBI6864:
 6620              		.loc 16 138 5 is_stmt 1 view .LVU1637
 6621              	.LBB6865:
 6622              	.LBI6865:
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 6623              		.loc 16 98 5 view .LVU1638
 6624              	.LBB6866:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 6625              		.loc 16 104 23 is_stmt 0 view .LVU1639
 6626 000a 941B     		subs	r4, r2, r6
 6627              	.LVL491:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 6628              		.loc 16 104 23 view .LVU1640
 6629              	.LBE6866:
 6630              	.LBE6865:
 6631              	.LBE6864:
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 6632              		.loc 7 215 12 view .LVU1641
 6633 000c 0194     		str	r4, [sp, #4]
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 6634              		.loc 7 217 2 view .LVU1642
 6635 000e 0F2C     		cmp	r4, #15
 6636 0010 0DD8     		bhi	.L207
 6637              	.LVL492:
 6638              	.L202:
ARM GAS  /tmp/ccL95Edz.s 			page 381


 6639              	.LBB6867:
 6640              	.LBI6867:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6641              		.loc 2 186 7 is_stmt 1 view .LVU1643
 6642              	.LBB6868:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6643              		.loc 2 187 28 is_stmt 0 view .LVU1644
 6644 0012 2868     		ldr	r0, [r5]
 6645              	.LVL493:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6646              		.loc 2 187 28 view .LVU1645
 6647              	.LBE6868:
 6648              	.LBE6867:
 6649              	.LBB6869:
 6650              	.LBI6869:
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 6651              		.loc 2 392 7 is_stmt 1 view .LVU1646
 6652              	.LBB6870:
 6653              	.LBI6870:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6654              		.loc 2 346 7 view .LVU1647
 6655              	.LBB6871:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 6656              		.loc 2 348 2 is_stmt 0 view .LVU1648
 6657 0014 012C     		cmp	r4, #1
 6658 0016 13D0     		beq	.L208
 6659              	.LVL494:
 6660              	.LBB6872:
 6661              	.LBI6872:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6662              		.loc 8 361 7 is_stmt 1 view .LVU1649
 6663              	.LBB6873:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6664              		.loc 8 363 2 view .LVU1650
 6665 0018 A4B1     		cbz	r4, .L204
 6666              		.loc 8 365 2 view .LVU1651
 6667              		.loc 8 365 49 is_stmt 0 view .LVU1652
 6668 001a 2246     		mov	r2, r4
 6669 001c 3146     		mov	r1, r6
 6670 001e FFF7FEFF 		bl	memcpy
 6671              	.LVL495:
 6672              		.loc 8 365 66 view .LVU1653
 6673 0022 0FE0     		b	.L204
 6674              	.LVL496:
 6675              	.L206:
 6676              		.loc 8 365 66 view .LVU1654
 6677              	.LBE6873:
 6678              	.LBE6872:
 6679              	.LBE6871:
 6680              	.LBE6870:
 6681              	.LBE6869:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 6682              		.loc 7 211 42 discriminator 1 view .LVU1655
 6683 0024 9142     		cmp	r1, r2
 6684 0026 F0D0     		beq	.L201
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 6685              		.loc 7 212 28 view .LVU1656
ARM GAS  /tmp/ccL95Edz.s 			page 382


 6686 0028 0A48     		ldr	r0, .L209
 6687              	.LVL497:
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 6688              		.loc 7 212 28 view .LVU1657
 6689 002a FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 6690              	.LVL498:
 6691              	.L207:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 6692              		.loc 7 219 6 view .LVU1658
 6693 002e 0022     		movs	r2, #0
 6694              	.LVL499:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 6695              		.loc 7 219 6 view .LVU1659
 6696 0030 01A9     		add	r1, sp, #4
 6697              	.LVL500:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 6698              		.loc 7 219 6 view .LVU1660
 6699 0032 2846     		mov	r0, r5
 6700              	.LVL501:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 6701              		.loc 7 219 6 view .LVU1661
 6702 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 6703              	.LVL502:
 6704              	.LBB6878:
 6705              	.LBI6878:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 6706              		.loc 2 178 7 is_stmt 1 view .LVU1662
 6707              	.LBB6879:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6708              		.loc 2 179 9 is_stmt 0 view .LVU1663
 6709 0038 2860     		str	r0, [r5]
 6710              	.LVL503:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6711              		.loc 2 179 9 view .LVU1664
 6712              	.LBE6879:
 6713              	.LBE6878:
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 6714              		.loc 7 220 6 view .LVU1665
 6715 003a 019B     		ldr	r3, [sp, #4]
 6716              	.LVL504:
 6717              	.LBB6880:
 6718              	.LBI6880:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 6719              		.loc 2 210 7 is_stmt 1 view .LVU1666
 6720              	.LBB6881:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6721              		.loc 2 211 9 is_stmt 0 view .LVU1667
 6722 003c AB60     		str	r3, [r5, #8]
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6723              		.loc 2 211 45 view .LVU1668
 6724 003e E8E7     		b	.L202
 6725              	.LVL505:
 6726              	.L208:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6727              		.loc 2 211 45 view .LVU1669
 6728              	.LBE6881:
 6729              	.LBE6880:
ARM GAS  /tmp/ccL95Edz.s 			page 383


 6730              	.LBB6882:
 6731              	.LBB6877:
 6732              	.LBB6876:
 6733              	.LBB6874:
 6734              	.LBI6874:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6735              		.loc 8 299 7 is_stmt 1 view .LVU1670
 6736              	.LBB6875:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6737              		.loc 8 300 9 view .LVU1671
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6738              		.loc 8 300 16 is_stmt 0 view .LVU1672
 6739 0040 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6740              		.loc 8 300 14 view .LVU1673
 6741 0042 0370     		strb	r3, [r0]
 6742              	.LVL506:
 6743              	.L204:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6744              		.loc 8 300 14 view .LVU1674
 6745              	.LBE6875:
 6746              	.LBE6874:
 6747              	.LBE6876:
 6748              	.LBE6877:
 6749              	.LBE6882:
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 6750              		.loc 7 232 2 view .LVU1675
 6751 0044 019B     		ldr	r3, [sp, #4]
 6752              	.LVL507:
 6753              	.LBB6883:
 6754              	.LBI6883:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6755              		.loc 2 214 7 is_stmt 1 view .LVU1676
 6756              	.LBB6884:
 6757              	.LBB6885:
 6758              	.LBI6885:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6759              		.loc 2 182 7 view .LVU1677
 6760              	.LBB6886:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6761              		.loc 2 183 9 is_stmt 0 view .LVU1678
 6762 0046 6B60     		str	r3, [r5, #4]
 6763              	.LVL508:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6764              		.loc 2 183 9 view .LVU1679
 6765              	.LBE6886:
 6766              	.LBE6885:
 6767              	.LBB6887:
 6768              	.LBI6887:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6769              		.loc 2 186 7 is_stmt 1 view .LVU1680
 6770              	.LBB6888:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6771              		.loc 2 187 28 is_stmt 0 view .LVU1681
 6772 0048 2A68     		ldr	r2, [r5]
 6773              	.LVL509:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 384


 6774              		.loc 2 187 28 view .LVU1682
 6775              	.LBE6888:
 6776              	.LBE6887:
 6777              	.LBB6889:
 6778              	.LBI6889:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6779              		.loc 8 299 7 is_stmt 1 view .LVU1683
 6780              	.LBB6890:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6781              		.loc 8 300 9 view .LVU1684
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6782              		.loc 8 300 14 is_stmt 0 view .LVU1685
 6783 004a 0021     		movs	r1, #0
 6784 004c D154     		strb	r1, [r2, r3]
 6785              	.LVL510:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6786              		.loc 8 300 14 view .LVU1686
 6787              	.LBE6890:
 6788              	.LBE6889:
 6789              	.LBE6884:
 6790              	.LBE6883:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 6791              		.loc 7 233 7 view .LVU1687
 6792 004e 02B0     		add	sp, sp, #8
 6793              	.LCFI31:
 6794              		.cfi_def_cfa_offset 16
 6795              		@ sp needed
 6796 0050 70BD     		pop	{r4, r5, r6, pc}
 6797              	.LVL511:
 6798              	.L210:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 6799              		.loc 7 233 7 view .LVU1688
 6800 0052 00BF     		.align	2
 6801              	.L209:
 6802 0054 00000000 		.word	.LC2
 6803              		.cfi_endproc
 6804              	.LFE4058:
 6806              		.section	.text._ZN7CommandI10FilesystemE8Get_helpB5cxx11Ev,"axG",%progbits,_ZN7CommandI10Filesyste
 6807              		.align	1
 6808              		.weak	_ZN7CommandI10FilesystemE8Get_helpB5cxx11Ev
 6809              		.syntax unified
 6810              		.thumb
 6811              		.thumb_func
 6812              		.fpu fpv4-sp-d16
 6814              	_ZN7CommandI10FilesystemE8Get_helpB5cxx11Ev:
 6815              	.LVL512:
 6816              	.LFB4221:
 6817              		.file 18 "alohal/cli/command.hpp"
   1:alohal/cli/command.hpp **** #pragma once
   2:alohal/cli/command.hpp **** 
   3:alohal/cli/command.hpp **** #include <string>
   4:alohal/cli/command.hpp **** #include <vector>
   5:alohal/cli/command.hpp **** 
   6:alohal/cli/command.hpp **** using namespace std;
   7:alohal/cli/command.hpp **** 
   8:alohal/cli/command.hpp **** /**
   9:alohal/cli/command.hpp ****  * @brief   Base class that allows to store all derivated Commands in one vector
ARM GAS  /tmp/ccL95Edz.s 			page 385


  10:alohal/cli/command.hpp ****  *          Event when Commands tamplates are based on different classes
  11:alohal/cli/command.hpp ****  */
  12:alohal/cli/command.hpp **** class Command_base
  13:alohal/cli/command.hpp **** {
  14:alohal/cli/command.hpp **** private:
  15:alohal/cli/command.hpp **** public:
  16:alohal/cli/command.hpp ****     Command_base() = default;
  17:alohal/cli/command.hpp ****     ~Command_base() = default;
  18:alohal/cli/command.hpp **** 
  19:alohal/cli/command.hpp ****     virtual const int Invoke(vector<string> &args) = 0;
  20:alohal/cli/command.hpp ****     virtual const string Get_command() = 0;
  21:alohal/cli/command.hpp ****     virtual const string Get_help() = 0;
  22:alohal/cli/command.hpp **** };
  23:alohal/cli/command.hpp **** 
  24:alohal/cli/command.hpp **** /**
  25:alohal/cli/command.hpp ****  * @brief   Contain one command for CLI
  26:alohal/cli/command.hpp ****  *          Command can be executed from every place in CLi
  27:alohal/cli/command.hpp ****  */
  28:alohal/cli/command.hpp **** template<typename template_class>
  29:alohal/cli/command.hpp **** class Command : public Command_base{
  30:alohal/cli/command.hpp **** private:
  31:alohal/cli/command.hpp ****     /**
  32:alohal/cli/command.hpp ****      * @brief Name of command, like 'ls'
  33:alohal/cli/command.hpp ****      */
  34:alohal/cli/command.hpp ****     string command;
  35:alohal/cli/command.hpp **** 
  36:alohal/cli/command.hpp ****     /**
  37:alohal/cli/command.hpp ****      * @brief Helping string, description of command
  38:alohal/cli/command.hpp ****      */
  39:alohal/cli/command.hpp ****     string help;
  40:alohal/cli/command.hpp **** 
  41:alohal/cli/command.hpp ****     /**
  42:alohal/cli/command.hpp ****      * @brief Pointer to object which is responsible for command
  43:alohal/cli/command.hpp ****      */
  44:alohal/cli/command.hpp ****     template_class * object_ptr = nullptr;
  45:alohal/cli/command.hpp **** 
  46:alohal/cli/command.hpp ****     /**
  47:alohal/cli/command.hpp ****      * @brief Pointer to method of object, which is performing a command
  48:alohal/cli/command.hpp ****      */
  49:alohal/cli/command.hpp ****     int (template_class::*method_pointer)(vector<string> args);
  50:alohal/cli/command.hpp **** 
  51:alohal/cli/command.hpp ****     /**
  52:alohal/cli/command.hpp ****      * @brief Pointer to function which perform command
  53:alohal/cli/command.hpp ****      */
  54:alohal/cli/command.hpp ****     int (*function)(vector<string> args) = nullptr;
  55:alohal/cli/command.hpp **** 
  56:alohal/cli/command.hpp **** public:
  57:alohal/cli/command.hpp ****     /**
  58:alohal/cli/command.hpp ****      * @brief Construct a new Command object
  59:alohal/cli/command.hpp ****      */
  60:alohal/cli/command.hpp ****     Command() =default;
  61:alohal/cli/command.hpp ****     ~Command() =default;
  62:alohal/cli/command.hpp **** 
  63:alohal/cli/command.hpp ****     /**
  64:alohal/cli/command.hpp ****      * @brief   Construct a new Command object based on object and his method
  65:alohal/cli/command.hpp ****      *
  66:alohal/cli/command.hpp ****      * @param command   Name of command, like 'ls'
ARM GAS  /tmp/ccL95Edz.s 			page 386


  67:alohal/cli/command.hpp ****      * @param help      Helping string, description of command
  68:alohal/cli/command.hpp ****      * @param object    Object which is responsible for command
  69:alohal/cli/command.hpp ****      * @param method    Method of object which is executed
  70:alohal/cli/command.hpp ****      */
  71:alohal/cli/command.hpp ****     Command(string command, string help, template_class *object, int (template_class::*method)(vect
  72:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
  73:alohal/cli/command.hpp ****     {}
  74:alohal/cli/command.hpp **** 
  75:alohal/cli/command.hpp ****     /**
  76:alohal/cli/command.hpp ****      * @brief   Construct a new Command object based on function
  77:alohal/cli/command.hpp ****      *
  78:alohal/cli/command.hpp ****      * @param command   Name of command, like 'ls'
  79:alohal/cli/command.hpp ****      * @param help      Helping string, description of command
  80:alohal/cli/command.hpp ****      * @param function_pointer_set  Pointer to function which perform command
  81:alohal/cli/command.hpp ****      */
  82:alohal/cli/command.hpp ****     Command(string command, string help,int (*function_pointer_set)(vector<string> args))
  83:alohal/cli/command.hpp ****         :command(command), help(help), function(function)
  84:alohal/cli/command.hpp ****     {}
  85:alohal/cli/command.hpp **** 
  86:alohal/cli/command.hpp ****     /**
  87:alohal/cli/command.hpp ****      * @brief Invoke command encapsulated inside command
  88:alohal/cli/command.hpp ****      *
  89:alohal/cli/command.hpp ****      * @param args          Arguments of command
  90:alohal/cli/command.hpp ****      * @return const int    Return code of command
  91:alohal/cli/command.hpp ****      */
  92:alohal/cli/command.hpp ****     const int Invoke(vector<string> &args) final override {
  93:alohal/cli/command.hpp ****         if (function) {
  94:alohal/cli/command.hpp ****             return (*(function))(args);
  95:alohal/cli/command.hpp ****         } else if (object_ptr){
  96:alohal/cli/command.hpp ****             return (*object_ptr.*method_pointer)(args);
  97:alohal/cli/command.hpp ****         }
  98:alohal/cli/command.hpp ****         return -1;
  99:alohal/cli/command.hpp ****     }
 100:alohal/cli/command.hpp **** 
 101:alohal/cli/command.hpp ****     /**
 102:alohal/cli/command.hpp ****      * @brief Gettor for command name
 103:alohal/cli/command.hpp ****      *
 104:alohal/cli/command.hpp ****      * @return const string Command name
 105:alohal/cli/command.hpp ****      */
 106:alohal/cli/command.hpp ****     inline const string Get_command() final override {return command;};
 107:alohal/cli/command.hpp **** 
 108:alohal/cli/command.hpp ****     /**
 109:alohal/cli/command.hpp ****      * @brief Gettor for command help string
 110:alohal/cli/command.hpp ****      *
 111:alohal/cli/command.hpp ****      * @return const string Command help
 112:alohal/cli/command.hpp ****      */
 113:alohal/cli/command.hpp ****     inline const string Get_help() final override {return help;};
 6818              		.loc 18 113 25 is_stmt 1 view -0
 6819              		.cfi_startproc
 6820              		@ args = 0, pretend = 0, frame = 0
 6821              		@ frame_needed = 0, uses_anonymous_args = 0
 6822              		.loc 18 113 25 is_stmt 0 view .LVU1690
 6823 0000 10B5     		push	{r4, lr}
 6824              	.LCFI32:
 6825              		.cfi_def_cfa_offset 8
 6826              		.cfi_offset 4, -8
 6827              		.cfi_offset 14, -4
ARM GAS  /tmp/ccL95Edz.s 			page 387


 6828 0002 0446     		mov	r4, r0
 6829 0004 0B46     		mov	r3, r1
 6830              	.LVL513:
 6831              	.LBB6891:
 6832              	.LBI6891:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 6833              		.loc 2 448 7 is_stmt 1 view .LVU1691
 6834              	.LBB6892:
 6835              	.LBB6893:
 6836              	.LBI6893:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6837              		.loc 2 190 7 view .LVU1692
 6838              	.LBB6894:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 6839              		.loc 2 193 51 is_stmt 0 view .LVU1693
 6840 0006 00F10802 		add	r2, r0, #8
 6841              	.LVL514:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 6842              		.loc 2 193 51 view .LVU1694
 6843              	.LBE6894:
 6844              	.LBE6893:
 6845              	.LBB6895:
 6846              	.LBI6895:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 6847              		.loc 2 290 7 is_stmt 1 view .LVU1695
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 6848              		.loc 2 290 7 is_stmt 0 view .LVU1696
 6849              	.LBE6895:
 6850              	.LBB6896:
 6851              	.LBI6896:
 6852              		.file 19 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
ARM GAS  /tmp/ccL95Edz.s 			page 388


  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  */
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #pragma GCC system_header
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** # include <bits/move.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #else
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #endif
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** {
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** /**
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  * @ingroup allocators
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** */
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   struct __alloc_traits
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #endif
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   {
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   private:
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   public:
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
ARM GAS  /tmp/ccL95Edz.s 			page 389


  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       {
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       }
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     template<typename _Ptr>
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 6853              		.loc 19 97 19 is_stmt 1 view .LVU1697
 6854              	.LBB6897:
 6855              	.LBI6897:
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static size_type
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       max_size(const allocator_type& __a) noexcept
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.max_size(); }
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __rhs
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static allocator_type
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 6856              		.loc 3 514 7 view .LVU1698
 6857              	.LBB6898:
 6858              	.LBI6898:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6859              		.loc 5 141 7 view .LVU1699
 6860              	.LBB6899:
 6861              	.LBI6899:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6862              		.loc 4 83 7 view .LVU1700
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6863              		.loc 4 83 7 is_stmt 0 view .LVU1701
 6864              	.LBE6899:
 6865              	.LBE6898:
 6866              	.LBE6897:
 6867              	.LBE6896:
 6868              	.LBB6900:
 6869              	.LBI6900:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 6870              		.loc 2 159 2 is_stmt 1 view .LVU1702
 6871              	.LBB6901:
 6872              	.LBB6902:
ARM GAS  /tmp/ccL95Edz.s 			page 390


 6873              	.LBI6902:
 6874              		.loc 9 99 5 view .LVU1703
 6875              		.loc 9 99 5 is_stmt 0 view .LVU1704
 6876              	.LBE6902:
 6877              	.LBB6903:
 6878              	.LBI6903:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6879              		.loc 5 141 7 is_stmt 1 view .LVU1705
 6880              	.LBB6904:
 6881              	.LBI6904:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6882              		.loc 4 83 7 view .LVU1706
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6883              		.loc 4 83 7 is_stmt 0 view .LVU1707
 6884              	.LBE6904:
 6885              	.LBE6903:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 6886              		.loc 2 160 46 view .LVU1708
 6887 000a 0260     		str	r2, [r0]
 6888              	.LVL515:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 6889              		.loc 2 160 46 view .LVU1709
 6890              	.LBE6901:
 6891              	.LBE6900:
 6892              	.LBB6905:
 6893              	.LBI6905:
 6894              		.loc 5 153 7 is_stmt 1 view .LVU1710
 6895              	.LBB6906:
 6896              	.LBI6906:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6897              		.loc 4 89 7 view .LVU1711
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6898              		.loc 4 89 7 is_stmt 0 view .LVU1712
 6899              	.LBE6906:
 6900              	.LBE6905:
 6901              	.LBB6907:
 6902              	.LBI6907:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6903              		.loc 2 186 7 is_stmt 1 view .LVU1713
 6904              	.LBB6908:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6905              		.loc 2 187 28 is_stmt 0 view .LVU1714
 6906 000c C969     		ldr	r1, [r1, #28]
 6907              	.LVL516:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6908              		.loc 2 187 28 view .LVU1715
 6909              	.LBE6908:
 6910              	.LBE6907:
 6911              	.LBB6909:
 6912              	.LBI6909:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6913              		.loc 2 186 7 is_stmt 1 view .LVU1716
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6914              		.loc 2 186 7 is_stmt 0 view .LVU1717
 6915              	.LBE6909:
 6916              	.LBB6910:
 6917              	.LBI6910:
ARM GAS  /tmp/ccL95Edz.s 			page 391


 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6918              		.loc 2 936 7 is_stmt 1 view .LVU1718
 6919              	.LBB6911:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6920              		.loc 2 937 16 is_stmt 0 view .LVU1719
 6921 000e 1A6A     		ldr	r2, [r3, #32]
 6922              	.LVL517:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6923              		.loc 2 937 16 view .LVU1720
 6924              	.LBE6911:
 6925              	.LBE6910:
 6926              	.LBB6912:
 6927              	.LBI6912:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 6928              		.loc 2 263 9 is_stmt 1 view .LVU1721
 6929              	.LBB6913:
 6930              	.LBB6914:
 6931              	.LBI6914:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 6932              		.loc 2 243 9 view .LVU1722
 6933              	.LBB6915:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 6934              		.loc 2 247 11 is_stmt 0 view .LVU1723
 6935 0010 4FF00003 		mov	r3, #0
 6936              	.LVL518:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 6937              		.loc 2 247 11 view .LVU1724
 6938 0014 0A44     		add	r2, r2, r1
 6939              	.LVL519:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 6940              		.loc 2 247 11 view .LVU1725
 6941 0016 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 6942              	.LVL520:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 6943              		.loc 2 247 11 view .LVU1726
 6944              	.LBE6915:
 6945              	.LBE6914:
 6946              	.LBE6913:
 6947              	.LBE6912:
 6948              	.LBE6892:
 6949              	.LBE6891:
 6950              		.loc 18 113 64 view .LVU1727
 6951 001a 2046     		mov	r0, r4
 6952 001c 10BD     		pop	{r4, pc}
 6953              		.loc 18 113 64 view .LVU1728
 6954              		.cfi_endproc
 6955              	.LFE4221:
 6957              		.section	.text._ZN7CommandI10FilesystemE11Get_commandB5cxx11Ev,"axG",%progbits,_ZN7CommandI10Files
 6958              		.align	1
 6959              		.weak	_ZN7CommandI10FilesystemE11Get_commandB5cxx11Ev
 6960              		.syntax unified
 6961              		.thumb
 6962              		.thumb_func
 6963              		.fpu fpv4-sp-d16
 6965              	_ZN7CommandI10FilesystemE11Get_commandB5cxx11Ev:
 6966              	.LVL521:
 6967              	.LFB4220:
ARM GAS  /tmp/ccL95Edz.s 			page 392


 106:alohal/cli/command.hpp **** 
 6968              		.loc 18 106 25 is_stmt 1 view -0
 6969              		.cfi_startproc
 6970              		@ args = 0, pretend = 0, frame = 0
 6971              		@ frame_needed = 0, uses_anonymous_args = 0
 106:alohal/cli/command.hpp **** 
 6972              		.loc 18 106 25 is_stmt 0 view .LVU1730
 6973 0000 10B5     		push	{r4, lr}
 6974              	.LCFI33:
 6975              		.cfi_def_cfa_offset 8
 6976              		.cfi_offset 4, -8
 6977              		.cfi_offset 14, -4
 6978 0002 0446     		mov	r4, r0
 6979 0004 0B46     		mov	r3, r1
 6980              	.LVL522:
 6981              	.LBB6916:
 6982              	.LBI6916:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 6983              		.loc 2 448 7 is_stmt 1 view .LVU1731
 6984              	.LBB6917:
 6985              	.LBB6918:
 6986              	.LBI6918:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6987              		.loc 2 190 7 view .LVU1732
 6988              	.LBB6919:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 6989              		.loc 2 193 51 is_stmt 0 view .LVU1733
 6990 0006 00F10802 		add	r2, r0, #8
 6991              	.LVL523:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 6992              		.loc 2 193 51 view .LVU1734
 6993              	.LBE6919:
 6994              	.LBE6918:
 6995              	.LBB6920:
 6996              	.LBI6920:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 6997              		.loc 2 290 7 is_stmt 1 view .LVU1735
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 6998              		.loc 2 290 7 is_stmt 0 view .LVU1736
 6999              	.LBE6920:
 7000              	.LBB6921:
 7001              	.LBI6921:
 7002              		.loc 19 97 19 is_stmt 1 view .LVU1737
 7003              	.LBB6922:
 7004              	.LBI6922:
 7005              		.loc 3 514 7 view .LVU1738
 7006              	.LBB6923:
 7007              	.LBI6923:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7008              		.loc 5 141 7 view .LVU1739
 7009              	.LBB6924:
 7010              	.LBI6924:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7011              		.loc 4 83 7 view .LVU1740
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7012              		.loc 4 83 7 is_stmt 0 view .LVU1741
 7013              	.LBE6924:
ARM GAS  /tmp/ccL95Edz.s 			page 393


 7014              	.LBE6923:
 7015              	.LBE6922:
 7016              	.LBE6921:
 7017              	.LBB6925:
 7018              	.LBI6925:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 7019              		.loc 2 159 2 is_stmt 1 view .LVU1742
 7020              	.LBB6926:
 7021              	.LBB6927:
 7022              	.LBI6927:
 7023              		.loc 9 99 5 view .LVU1743
 7024              		.loc 9 99 5 is_stmt 0 view .LVU1744
 7025              	.LBE6927:
 7026              	.LBB6928:
 7027              	.LBI6928:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7028              		.loc 5 141 7 is_stmt 1 view .LVU1745
 7029              	.LBB6929:
 7030              	.LBI6929:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7031              		.loc 4 83 7 view .LVU1746
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7032              		.loc 4 83 7 is_stmt 0 view .LVU1747
 7033              	.LBE6929:
 7034              	.LBE6928:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7035              		.loc 2 160 46 view .LVU1748
 7036 000a 0260     		str	r2, [r0]
 7037              	.LVL524:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7038              		.loc 2 160 46 view .LVU1749
 7039              	.LBE6926:
 7040              	.LBE6925:
 7041              	.LBB6930:
 7042              	.LBI6930:
 7043              		.loc 5 153 7 is_stmt 1 view .LVU1750
 7044              	.LBB6931:
 7045              	.LBI6931:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7046              		.loc 4 89 7 view .LVU1751
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7047              		.loc 4 89 7 is_stmt 0 view .LVU1752
 7048              	.LBE6931:
 7049              	.LBE6930:
 7050              	.LBB6932:
 7051              	.LBI6932:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7052              		.loc 2 186 7 is_stmt 1 view .LVU1753
 7053              	.LBB6933:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7054              		.loc 2 187 28 is_stmt 0 view .LVU1754
 7055 000c 4968     		ldr	r1, [r1, #4]
 7056              	.LVL525:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7057              		.loc 2 187 28 view .LVU1755
 7058              	.LBE6933:
 7059              	.LBE6932:
ARM GAS  /tmp/ccL95Edz.s 			page 394


 7060              	.LBB6934:
 7061              	.LBI6934:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7062              		.loc 2 186 7 is_stmt 1 view .LVU1756
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7063              		.loc 2 186 7 is_stmt 0 view .LVU1757
 7064              	.LBE6934:
 7065              	.LBB6935:
 7066              	.LBI6935:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7067              		.loc 2 936 7 is_stmt 1 view .LVU1758
 7068              	.LBB6936:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7069              		.loc 2 937 16 is_stmt 0 view .LVU1759
 7070 000e 9A68     		ldr	r2, [r3, #8]
 7071              	.LVL526:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7072              		.loc 2 937 16 view .LVU1760
 7073              	.LBE6936:
 7074              	.LBE6935:
 7075              	.LBB6937:
 7076              	.LBI6937:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 7077              		.loc 2 263 9 is_stmt 1 view .LVU1761
 7078              	.LBB6938:
 7079              	.LBB6939:
 7080              	.LBI6939:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 7081              		.loc 2 243 9 view .LVU1762
 7082              	.LBB6940:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7083              		.loc 2 247 11 is_stmt 0 view .LVU1763
 7084 0010 4FF00003 		mov	r3, #0
 7085              	.LVL527:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7086              		.loc 2 247 11 view .LVU1764
 7087 0014 0A44     		add	r2, r2, r1
 7088              	.LVL528:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7089              		.loc 2 247 11 view .LVU1765
 7090 0016 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 7091              	.LVL529:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7092              		.loc 2 247 11 view .LVU1766
 7093              	.LBE6940:
 7094              	.LBE6939:
 7095              	.LBE6938:
 7096              	.LBE6937:
 7097              	.LBE6917:
 7098              	.LBE6916:
 106:alohal/cli/command.hpp **** 
 7099              		.loc 18 106 70 view .LVU1767
 7100 001a 2046     		mov	r0, r4
 7101 001c 10BD     		pop	{r4, pc}
 106:alohal/cli/command.hpp **** 
 7102              		.loc 18 106 70 view .LVU1768
 7103              		.cfi_endproc
ARM GAS  /tmp/ccL95Edz.s 			page 395


 7104              	.LFE4220:
 7106              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEE
 7107              		.align	1
 7108              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_
 7109              		.syntax unified
 7110              		.thumb
 7111              		.thumb_func
 7112              		.fpu fpv4-sp-d16
 7114              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_S
 7115              	.LVL530:
 7116              	.LFB3490:
 7117              		.file 20 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // String Conversions -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** /** @file ext/string_conversions.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****  */
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #ifndef _STRING_CONVERSIONS_H
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #define _STRING_CONVERSIONS_H 1
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #pragma GCC system_header
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #if __cplusplus < 201103L
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** # include <bits/c++0x_warning.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #else
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <bits/c++config.h>
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <ext/numeric_traits.h>
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <bits/functexcept.h>
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cstdlib>
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cwchar>
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cstdio>
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cerrno>
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 396


  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** {
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   // Helper for all the sto* functions.
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   template<typename _TRet, typename _Ret = _TRet, typename _CharT,
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	   typename... _Base>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     _Ret
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	   const char* __name, const _CharT* __str, std::size_t* __idx,
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	   _Base... __base)
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     {
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       _Ret __ret;
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       _CharT* __endptr;
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       struct _Save_errno {
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	_Save_errno() : _M_errno(errno) { errno = 0; }
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	~_Save_errno() { if (errno == 0) errno = _M_errno; }
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	int _M_errno;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       } const __save_errno;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       struct _Range_chk {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  static bool
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  _S_chk(_TRet, std::false_type) { return false; }
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  static bool
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  {
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	    return __val < _TRet(__numeric_traits<int>::__min)
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	      || __val > _TRet(__numeric_traits<int>::__max);
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  }
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       };
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       const _TRet __tmp = __convf(__str, &__endptr, __base...);
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       if (__endptr == __str)
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	std::__throw_invalid_argument(__name);
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       else if (errno == ERANGE
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	std::__throw_out_of_range(__name);
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       else
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	__ret = __tmp;
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       if (__idx)
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	*__idx = __endptr - __str;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       return __ret;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     }
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   // Helper for the to_string / to_wstring functions.
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   template<typename _String, typename _CharT = typename _String::value_type>
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     _String
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 7118              		.loc 20 99 5 is_stmt 1 view -0
 7119              		.cfi_startproc
 7120              		@ args = 4, pretend = 4, frame = 8
ARM GAS  /tmp/ccL95Edz.s 			page 397


 7121              		@ frame_needed = 1, uses_anonymous_args = 1
 7122              		.loc 20 99 5 is_stmt 0 view .LVU1770
 7123 0000 08B4     		push	{r3}
 7124              	.LCFI34:
 7125              		.cfi_def_cfa_offset 4
 7126              		.cfi_offset 3, -4
 7127              	.LVL531:
 7128              		.loc 20 99 5 view .LVU1771
 7129 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 7130              	.LCFI35:
 7131              		.cfi_def_cfa_offset 24
 7132              		.cfi_offset 4, -24
 7133              		.cfi_offset 5, -20
 7134              		.cfi_offset 6, -16
 7135              		.cfi_offset 7, -12
 7136              		.cfi_offset 14, -8
 7137              	.LVL532:
 7138              		.loc 20 99 5 view .LVU1772
 7139 0004 82B0     		sub	sp, sp, #8
 7140              	.LCFI36:
 7141              		.cfi_def_cfa_offset 32
 7142              	.LVL533:
 7143              		.loc 20 99 5 view .LVU1773
 7144 0006 00AF     		add	r7, sp, #0
 7145              	.LCFI37:
 7146              		.cfi_def_cfa_register 7
 7147 0008 0446     		mov	r4, r0
 7148 000a 0E46     		mov	r6, r1
 7149 000c 1146     		mov	r1, r2
 7150              	.LVL534:
 7151              		.loc 20 99 5 view .LVU1774
 7152 000e 07F11C03 		add	r3, r7, #28
 7153 0012 53F8042B 		ldr	r2, [r3], #4
 7154              	.LVL535:
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 		 const _CharT* __fmt, ...)
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     {
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       // XXX Eventually the result should be constructed in-place in
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       // the __cxx11 string, likely with the help of internal hooks.
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 7155              		.loc 20 105 58 view .LVU1775
 7156 0016 C81D     		adds	r0, r1, #7
 7157              	.LVL536:
 7158              		.loc 20 105 58 view .LVU1776
 7159 0018 20F00700 		bic	r0, r0, #7
 7160 001c ADEB000D 		sub	sp, sp, r0
 7161              	.LVL537:
 7162              		.loc 20 105 58 view .LVU1777
 7163 0020 6D46     		mov	r5, sp
 7164              	.LVL538:
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 							  * __n));
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       __builtin_va_list __args;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       __builtin_va_start(__args, __fmt);
 7165              		.loc 20 109 25 view .LVU1778
 7166 0022 7B60     		str	r3, [r7, #4]
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 398


 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       const int __len = __convf(__s, __n, __fmt, __args);
 7167              		.loc 20 111 32 view .LVU1779
 7168 0024 2846     		mov	r0, r5
 7169 0026 B047     		blx	r6
 7170              	.LVL539:
 7171              	.LBB6941:
 7172              	.LBI6941:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 7173              		.loc 5 138 7 is_stmt 1 view .LVU1780
 7174              	.LBB6942:
 7175              	.LBI6942:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7176              		.loc 4 80 7 view .LVU1781
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7177              		.loc 4 80 7 is_stmt 0 view .LVU1782
 7178              	.LBE6942:
 7179              	.LBE6941:
 7180              	.LBB6943:
 7181              	.LBI6943:
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 7182              		.loc 2 625 9 is_stmt 1 view .LVU1783
 7183              	.LBB6944:
 7184              	.LBI6944:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7185              		.loc 2 190 7 view .LVU1784
 7186              	.LBB6945:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7187              		.loc 2 193 51 is_stmt 0 view .LVU1785
 7188 0028 04F10803 		add	r3, r4, #8
 7189              	.LVL540:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7190              		.loc 2 193 51 view .LVU1786
 7191              	.LBE6945:
 7192              	.LBE6944:
 7193              	.LBB6946:
 7194              	.LBI6946:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 7195              		.loc 2 156 2 is_stmt 1 view .LVU1787
 7196              	.LBB6947:
 7197              	.LBB6948:
 7198              	.LBI6948:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7199              		.loc 5 141 7 view .LVU1788
 7200              	.LBB6949:
 7201              	.LBI6949:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7202              		.loc 4 83 7 view .LVU1789
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7203              		.loc 4 83 7 is_stmt 0 view .LVU1790
 7204              	.LBE6949:
 7205              	.LBE6948:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7206              		.loc 2 157 35 view .LVU1791
 7207 002c 2360     		str	r3, [r4]
 7208              	.LVL541:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7209              		.loc 2 157 35 view .LVU1792
ARM GAS  /tmp/ccL95Edz.s 			page 399


 7210              	.LBE6947:
 7211              	.LBE6946:
 7212              	.LBB6950:
 7213              	.LBI6950:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 7214              		.loc 2 263 9 is_stmt 1 view .LVU1793
 7215              	.LBB6951:
 7216              	.LBB6952:
 7217              	.LBI6952:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 7218              		.loc 2 243 9 view .LVU1794
 7219              	.LBB6953:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7220              		.loc 2 247 11 is_stmt 0 view .LVU1795
 7221 002e 4FF00003 		mov	r3, #0
 7222 0032 2A18     		adds	r2, r5, r0
 7223              	.LVL542:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7224              		.loc 2 247 11 view .LVU1796
 7225 0034 2946     		mov	r1, r5
 7226 0036 2046     		mov	r0, r4
 7227              	.LVL543:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7228              		.loc 2 247 11 view .LVU1797
 7229 0038 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 7230              	.LVL544:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7231              		.loc 2 247 11 view .LVU1798
 7232              	.LBE6953:
 7233              	.LBE6952:
 7234              	.LBE6951:
 7235              	.LBE6950:
 7236              	.LBE6943:
 7237              	.LBB6954:
 7238              	.LBI6954:
 7239              		.loc 5 153 7 is_stmt 1 view .LVU1799
 7240              	.LBB6955:
 7241              	.LBI6955:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7242              		.loc 4 89 7 view .LVU1800
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7243              		.loc 4 89 7 is_stmt 0 view .LVU1801
 7244              	.LBE6955:
 7245              	.LBE6954:
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       __builtin_va_end(__args);
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       return _String(__s, __s + __len);
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     }
 7246              		.loc 20 116 5 view .LVU1802
 7247 003c 2046     		mov	r0, r4
 7248 003e 0837     		adds	r7, r7, #8
 7249              	.LCFI38:
 7250              		.cfi_def_cfa_offset 24
 7251              	.LVL545:
 7252              		.loc 20 116 5 view .LVU1803
 7253 0040 BD46     		mov	sp, r7
ARM GAS  /tmp/ccL95Edz.s 			page 400


 7254              	.LCFI39:
 7255              		.cfi_def_cfa_register 13
 7256              		@ sp needed
 7257 0042 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 7258              	.LCFI40:
 7259              		.cfi_restore 14
 7260              		.cfi_restore 7
 7261              		.cfi_restore 6
 7262              		.cfi_restore 5
 7263              		.cfi_restore 4
 7264              		.cfi_def_cfa_offset 4
 7265              	.LVL546:
 7266              		.loc 20 116 5 view .LVU1804
 7267 0046 01B0     		add	sp, sp, #4
 7268              	.LCFI41:
 7269              		.cfi_restore 3
 7270              		.cfi_def_cfa_offset 0
 7271 0048 7047     		bx	lr
 7272              		.cfi_endproc
 7273              	.LFE3490:
 7275              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reall
 7276              		.align	1
 7277              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insert
 7278              		.syntax unified
 7279              		.thumb
 7280              		.thumb_func
 7281              		.fpu fpv4-sp-d16
 7283              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_E
 7284              	.LVL547:
 7285              	.LFB3911:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 7286              		.loc 10 426 7 is_stmt 1 view -0
 7287              		.cfi_startproc
 7288              		@ args = 0, pretend = 0, frame = 8
 7289              		@ frame_needed = 0, uses_anonymous_args = 0
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 7290              		.loc 10 426 7 is_stmt 0 view .LVU1806
 7291 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7292              	.LCFI42:
 7293              		.cfi_def_cfa_offset 36
 7294              		.cfi_offset 4, -36
 7295              		.cfi_offset 5, -32
 7296              		.cfi_offset 6, -28
 7297              		.cfi_offset 7, -24
 7298              		.cfi_offset 8, -20
 7299              		.cfi_offset 9, -16
 7300              		.cfi_offset 10, -12
 7301              		.cfi_offset 11, -8
 7302              		.cfi_offset 14, -4
 7303 0004 83B0     		sub	sp, sp, #12
 7304              	.LCFI43:
 7305              		.cfi_def_cfa_offset 48
 7306 0006 1446     		mov	r4, r2
 7307              	.LVL548:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 7308              		.loc 10 426 7 view .LVU1807
 7309 0008 0123     		movs	r3, #1
ARM GAS  /tmp/ccL95Edz.s 			page 401


 7310 000a 0093     		str	r3, [sp]
 7311              	.LVL549:
 7312              	.LBB7146:
 7313              	.LBI7146:
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 7314              		.loc 11 1753 7 is_stmt 1 view .LVU1808
 7315              	.LBB7147:
 7316              	.LBB7148:
 7317              	.LBI7148:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7318              		.loc 11 915 7 view .LVU1809
 7319              	.LBB7149:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7320              		.loc 11 916 40 is_stmt 0 view .LVU1810
 7321 000c 4368     		ldr	r3, [r0, #4]
 7322              	.LVL550:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7323              		.loc 11 916 66 view .LVU1811
 7324 000e 0568     		ldr	r5, [r0]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7325              		.loc 11 916 50 view .LVU1812
 7326 0010 5D1B     		subs	r5, r3, r5
 7327 0012 EA10     		asrs	r2, r5, #3
 7328              	.LVL551:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7329              		.loc 11 916 50 view .LVU1813
 7330 0014 584D     		ldr	r5, .L246
 7331 0016 05FB02F5 		mul	r5, r5, r2
 7332              	.LVL552:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7333              		.loc 11 916 50 view .LVU1814
 7334              	.LBE7149:
 7335              	.LBE7148:
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 7336              		.loc 11 1755 17 view .LVU1815
 7337 001a 584A     		ldr	r2, .L246+4
 7338 001c 521B     		subs	r2, r2, r5
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 7339              		.loc 11 1755 2 view .LVU1816
 7340 001e 8AB3     		cbz	r2, .L239
 7341 0020 0746     		mov	r7, r0
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 7342              		.loc 11 1758 45 view .LVU1817
 7343 0022 0195     		str	r5, [sp, #4]
 7344              	.LVL553:
 7345              	.LBB7150:
 7346              	.LBI7150:
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 7347              		.loc 12 222 5 is_stmt 1 view .LVU1818
 7348              	.LBB7151:
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 7349              		.loc 12 227 7 is_stmt 0 view .LVU1819
 7350 0024 8DB3     		cbz	r5, .L234
 7351              		.loc 12 229 14 view .LVU1820
 7352 0026 01AA     		add	r2, sp, #4
 7353              	.LVL554:
 7354              	.L219:
ARM GAS  /tmp/ccL95Edz.s 			page 402


 7355              		.loc 12 229 14 view .LVU1821
 7356              	.LBE7151:
 7357              	.LBE7150:
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 7358              		.loc 11 1758 33 view .LVU1822
 7359 0028 1268     		ldr	r2, [r2]
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 7360              		.loc 11 1758 18 view .LVU1823
 7361 002a 1544     		add	r5, r5, r2
 7362              	.LVL555:
 7363              	.LBB7153:
 7364              	.LBI7153:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7365              		.loc 11 915 7 is_stmt 1 view .LVU1824
 7366              	.LBB7154:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7367              		.loc 11 916 66 is_stmt 0 view .LVU1825
 7368 002c 3A68     		ldr	r2, [r7]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7369              		.loc 11 916 50 view .LVU1826
 7370 002e 9B1A     		subs	r3, r3, r2
 7371 0030 DB10     		asrs	r3, r3, #3
 7372 0032 514A     		ldr	r2, .L246
 7373 0034 02FB03F3 		mul	r3, r2, r3
 7374              	.LVL556:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7375              		.loc 11 916 50 view .LVU1827
 7376              	.LBE7154:
 7377              	.LBE7153:
 7378              		.loc 11 1759 48 view .LVU1828
 7379 0038 9D42     		cmp	r5, r3
 7380 003a 28D3     		bcc	.L235
 7381              		.loc 11 1759 25 view .LVU1829
 7382 003c 4F4B     		ldr	r3, .L246+4
 7383 003e 9D42     		cmp	r5, r3
 7384 0040 27D8     		bhi	.L240
 7385              	.LVL557:
 7386              	.L220:
 7387              		.loc 11 1759 25 view .LVU1830
 7388              	.LBE7147:
 7389              	.LBE7146:
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 7390              		.loc 10 437 15 view .LVU1831
 7391 0042 D7F80090 		ldr	r9, [r7]
 7392              	.LVL558:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 7393              		.loc 10 438 15 view .LVU1832
 7394 0046 D7F804A0 		ldr	r10, [r7, #4]
 7395              	.LVL559:
 7396              	.LBB7157:
 7397              	.LBI7157:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 7398              		.loc 11 808 7 is_stmt 1 view .LVU1833
 7399              	.LBB7158:
 7400              	.LBI7158:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 7401              		.loc 13 806 7 view .LVU1834
ARM GAS  /tmp/ccL95Edz.s 			page 403


 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 7402              		.loc 13 806 7 is_stmt 0 view .LVU1835
 7403              	.LBE7158:
 7404              	.LBE7157:
 7405              	.LBB7159:
 7406              	.LBI7159:
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 7407              		.loc 13 989 5 is_stmt 1 view .LVU1836
 7408              	.LBB7160:
 7409              		.loc 13 992 27 is_stmt 0 view .LVU1837
 7410 004a 0E46     		mov	r6, r1
 7411 004c A1EB090B 		sub	fp, r1, r9
 7412              	.LVL560:
 7413              		.loc 13 992 27 view .LVU1838
 7414              	.LBE7160:
 7415              	.LBE7159:
 7416              	.LBB7161:
 7417              	.LBI7161:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 7418              		.loc 11 340 7 is_stmt 1 view .LVU1839
 7419              	.LBB7162:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 7420              		.loc 11 343 18 is_stmt 0 view .LVU1840
 7421 0050 1DB3     		cbz	r5, .L237
 7422              	.LVL561:
 7423              	.LBB7163:
 7424              	.LBI7163:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 7425              		.loc 3 443 7 is_stmt 1 view .LVU1841
 7426              	.LBB7164:
 7427              	.LBI7164:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 7428              		.loc 4 102 7 view .LVU1842
 7429              	.LBB7165:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 7430              		.loc 4 104 2 is_stmt 0 view .LVU1843
 7431 0052 4A4B     		ldr	r3, .L246+4
 7432 0054 9D42     		cmp	r5, r3
 7433 0056 1ED8     		bhi	.L241
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7434              		.loc 4 114 41 view .LVU1844
 7435 0058 05EB4500 		add	r0, r5, r5, lsl #1
 7436              	.LVL562:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7437              		.loc 4 114 41 view .LVU1845
 7438 005c C000     		lsls	r0, r0, #3
 7439 005e FFF7FEFF 		bl	_Znwj
 7440              	.LVL563:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7441              		.loc 4 114 41 view .LVU1846
 7442 0062 8046     		mov	r8, r0
 7443              	.LVL564:
 7444              	.L221:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7445              		.loc 4 114 41 view .LVU1847
 7446              	.LBE7165:
 7447              	.LBE7164:
ARM GAS  /tmp/ccL95Edz.s 			page 404


 7448              	.LBE7163:
 7449              	.LBE7162:
 7450              	.LBE7161:
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before,
 7451              		.loc 10 449 28 view .LVU1848
 7452 0064 08EB0B00 		add	r0, r8, fp
 7453              	.LVL565:
 7454              	.LBB7170:
 7455              	.LBI7170:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 7456              		.loc 3 482 2 is_stmt 1 view .LVU1849
 7457              	.LBB7171:
 7458              	.LBI7171:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 7459              		.loc 4 144 2 view .LVU1850
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 7460              		.loc 4 144 2 is_stmt 0 view .LVU1851
 7461              	.LBE7171:
 7462              	.LBE7170:
 7463              		.loc 14 174 3 is_stmt 1 view .LVU1852
 7464              	.LBB7205:
 7465              	.LBB7203:
 7466              	.LBB7172:
 7467              	.LBI7172:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 7468              		.loc 2 448 7 view .LVU1853
 7469              	.LBB7173:
 7470              	.LBB7174:
 7471              	.LBI7174:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7472              		.loc 2 190 7 view .LVU1854
 7473              	.LBB7175:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7474              		.loc 2 193 51 is_stmt 0 view .LVU1855
 7475 0068 00F10803 		add	r3, r0, #8
 7476              	.LVL566:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7477              		.loc 2 193 51 view .LVU1856
 7478              	.LBE7175:
 7479              	.LBE7174:
 7480              	.LBB7176:
 7481              	.LBI7176:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 7482              		.loc 2 290 7 is_stmt 1 view .LVU1857
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 7483              		.loc 2 290 7 is_stmt 0 view .LVU1858
 7484              	.LBE7176:
 7485              	.LBB7177:
 7486              	.LBI7177:
 7487              		.loc 19 97 19 is_stmt 1 view .LVU1859
 7488              	.LBB7178:
 7489              	.LBI7178:
 7490              		.loc 3 514 7 view .LVU1860
 7491              	.LBB7179:
 7492              	.LBI7179:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7493              		.loc 5 141 7 view .LVU1861
ARM GAS  /tmp/ccL95Edz.s 			page 405


 7494              	.LBB7180:
 7495              	.LBI7180:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7496              		.loc 4 83 7 view .LVU1862
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7497              		.loc 4 83 7 is_stmt 0 view .LVU1863
 7498              	.LBE7180:
 7499              	.LBE7179:
 7500              	.LBE7178:
 7501              	.LBE7177:
 7502              	.LBB7181:
 7503              	.LBI7181:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 7504              		.loc 2 159 2 is_stmt 1 view .LVU1864
 7505              	.LBB7182:
 7506              	.LBB7183:
 7507              	.LBI7183:
 7508              		.loc 9 99 5 view .LVU1865
 7509              		.loc 9 99 5 is_stmt 0 view .LVU1866
 7510              	.LBE7183:
 7511              	.LBB7184:
 7512              	.LBI7184:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7513              		.loc 5 141 7 is_stmt 1 view .LVU1867
 7514              	.LBB7185:
 7515              	.LBI7185:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7516              		.loc 4 83 7 view .LVU1868
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7517              		.loc 4 83 7 is_stmt 0 view .LVU1869
 7518              	.LBE7185:
 7519              	.LBE7184:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7520              		.loc 2 160 46 view .LVU1870
 7521 006c 48F80B30 		str	r3, [r8, fp]
 7522              	.LVL567:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7523              		.loc 2 160 46 view .LVU1871
 7524              	.LBE7182:
 7525              	.LBE7181:
 7526              	.LBB7186:
 7527              	.LBI7186:
 7528              		.loc 5 153 7 is_stmt 1 view .LVU1872
 7529              	.LBB7187:
 7530              	.LBI7187:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7531              		.loc 4 89 7 view .LVU1873
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7532              		.loc 4 89 7 is_stmt 0 view .LVU1874
 7533              	.LBE7187:
 7534              	.LBE7186:
 7535              	.LBB7188:
 7536              	.LBI7188:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7537              		.loc 2 186 7 is_stmt 1 view .LVU1875
 7538              	.LBB7189:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 406


 7539              		.loc 2 187 28 is_stmt 0 view .LVU1876
 7540 0070 2168     		ldr	r1, [r4]
 7541              	.LVL568:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7542              		.loc 2 187 28 view .LVU1877
 7543              	.LBE7189:
 7544              	.LBE7188:
 7545              	.LBB7190:
 7546              	.LBI7190:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7547              		.loc 2 186 7 is_stmt 1 view .LVU1878
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7548              		.loc 2 186 7 is_stmt 0 view .LVU1879
 7549              	.LBE7190:
 7550              	.LBB7191:
 7551              	.LBI7191:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7552              		.loc 2 936 7 is_stmt 1 view .LVU1880
 7553              	.LBB7192:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7554              		.loc 2 937 16 is_stmt 0 view .LVU1881
 7555 0072 6268     		ldr	r2, [r4, #4]
 7556              	.LVL569:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7557              		.loc 2 937 16 view .LVU1882
 7558              	.LBE7192:
 7559              	.LBE7191:
 7560              	.LBB7193:
 7561              	.LBI7193:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 7562              		.loc 2 263 9 is_stmt 1 view .LVU1883
 7563              	.LBB7194:
 7564              	.LBB7195:
 7565              	.LBI7195:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 7566              		.loc 2 243 9 view .LVU1884
 7567              	.LBB7196:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7568              		.loc 2 247 11 is_stmt 0 view .LVU1885
 7569 0074 4FF00003 		mov	r3, #0
 7570 0078 0A44     		add	r2, r2, r1
 7571              	.LVL570:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7572              		.loc 2 247 11 view .LVU1886
 7573 007a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 7574              	.LVL571:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7575              		.loc 2 247 11 view .LVU1887
 7576              	.LBE7196:
 7577              	.LBE7195:
 7578              	.LBE7194:
 7579              	.LBE7193:
 7580              	.LBE7173:
 7581              	.LBE7172:
 7582              	.LBE7203:
 7583              	.LBE7205:
 7584              	.LBB7206:
ARM GAS  /tmp/ccL95Edz.s 			page 407


 7585              	.LBI7206:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 7586              		.loc 11 462 7 is_stmt 1 view .LVU1888
 7587              	.LBB7207:
 7588              	.LBB7208:
 7589              	.LBI7208:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 7590              		.loc 11 450 7 view .LVU1889
 7591              	.LBB7209:
 7592              	.LBI7209:
 7593              		.loc 15 958 5 view .LVU1890
 7594              	.LBB7210:
 7595              	.LBI7210:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 7596              		.loc 15 936 5 view .LVU1891
 7597              	.LBB7211:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 7598              		.loc 15 948 24 is_stmt 0 view .LVU1892
 7599 007e 4446     		mov	r4, r8
 7600              	.LVL572:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 7601              		.loc 15 948 24 view .LVU1893
 7602              	.LBE7211:
 7603              	.LBE7210:
 7604              	.LBE7209:
 7605              	.LBE7208:
 7606              	.LBE7207:
 7607              	.LBE7206:
 7608              	.LBB7292:
 7609              	.LBB7204:
 7610              	.LBB7202:
 7611              	.LBB7201:
 7612              	.LBB7200:
 7613              	.LBB7199:
 7614              	.LBB7198:
 7615              	.LBB7197:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7616              		.loc 2 247 11 view .LVU1894
 7617 0080 CB46     		mov	fp, r9
 7618              	.LVL573:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7619              		.loc 2 247 11 view .LVU1895
 7620 0082 1FE0     		b	.L227
 7621              	.LVL574:
 7622              	.L239:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7623              		.loc 2 247 11 view .LVU1896
 7624              	.LBE7197:
 7625              	.LBE7198:
 7626              	.LBE7199:
 7627              	.LBE7200:
 7628              	.LBE7201:
 7629              	.LBE7202:
 7630              	.LBE7204:
 7631              	.LBE7292:
 7632              	.LBB7293:
 7633              	.LBB7156:
ARM GAS  /tmp/ccL95Edz.s 			page 408


1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7634              		.loc 11 1756 24 view .LVU1897
 7635 0084 3E48     		ldr	r0, .L246+8
 7636              	.LVL575:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 7637              		.loc 11 1756 24 view .LVU1898
 7638 0086 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 7639              	.LVL576:
 7640              	.L234:
 7641              	.LBB7155:
 7642              	.LBB7152:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 7643              		.loc 12 228 9 view .LVU1899
 7644 008a 6A46     		mov	r2, sp
 7645 008c CCE7     		b	.L219
 7646              	.LVL577:
 7647              	.L235:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 7648              		.loc 12 228 9 view .LVU1900
 7649              	.LBE7152:
 7650              	.LBE7155:
 7651              		.loc 11 1759 48 view .LVU1901
 7652 008e 3B4D     		ldr	r5, .L246+4
 7653              	.LVL578:
 7654              		.loc 11 1759 48 view .LVU1902
 7655 0090 D7E7     		b	.L220
 7656              	.LVL579:
 7657              	.L240:
 7658              		.loc 11 1759 48 view .LVU1903
 7659 0092 3A4D     		ldr	r5, .L246+4
 7660              	.LVL580:
 7661              		.loc 11 1759 48 view .LVU1904
 7662 0094 D5E7     		b	.L220
 7663              	.LVL581:
 7664              	.L241:
 7665              		.loc 11 1759 48 view .LVU1905
 7666              	.LBE7156:
 7667              	.LBE7293:
 7668              	.LBB7294:
 7669              	.LBB7169:
 7670              	.LBB7168:
 7671              	.LBB7167:
 7672              	.LBB7166:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7673              		.loc 4 105 26 view .LVU1906
 7674 0096 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 7675              	.LVL582:
 7676              	.L237:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7677              		.loc 4 105 26 view .LVU1907
 7678              	.LBE7166:
 7679              	.LBE7167:
 7680              	.LBE7168:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 7681              		.loc 11 343 18 view .LVU1908
 7682 009a 4FF00008 		mov	r8, #0
 7683 009e E1E7     		b	.L221
ARM GAS  /tmp/ccL95Edz.s 			page 409


 7684              	.LVL583:
 7685              	.L242:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 7686              		.loc 11 343 18 view .LVU1909
 7687              	.LBE7169:
 7688              	.LBE7294:
 7689              	.LBB7295:
 7690              	.LBB7290:
 7691              	.LBB7288:
 7692              	.LBB7286:
 7693              	.LBB7284:
 7694              	.LBB7282:
 7695              	.LBB7212:
 7696              	.LBB7213:
 7697              	.LBB7214:
 7698              	.LBB7215:
 7699              	.LBB7216:
 7700              	.LBB7217:
 7701              	.LBB7218:
 7702              	.LBI7218:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 7703              		.loc 8 361 7 is_stmt 1 view .LVU1910
 7704              	.LBB7219:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 7705              		.loc 8 363 2 view .LVU1911
 7706              		.loc 8 365 2 view .LVU1912
 7707              		.loc 8 365 49 is_stmt 0 view .LVU1913
 7708 00a0 D3F800E0 		ldr	lr, [r3]	@ unaligned
 7709 00a4 D3F804C0 		ldr	ip, [r3, #4]	@ unaligned
 7710 00a8 9868     		ldr	r0, [r3, #8]	@ unaligned
 7711 00aa D968     		ldr	r1, [r3, #12]	@ unaligned
 7712 00ac C4F808E0 		str	lr, [r4, #8]	@ unaligned
 7713 00b0 C4F80CC0 		str	ip, [r4, #12]	@ unaligned
 7714 00b4 2061     		str	r0, [r4, #16]	@ unaligned
 7715 00b6 6161     		str	r1, [r4, #20]	@ unaligned
 7716 00b8 12E0     		b	.L225
 7717              	.LVL584:
 7718              	.L243:
 7719              		.loc 8 365 49 view .LVU1914
 7720              	.LBE7219:
 7721              	.LBE7218:
 7722              	.LBE7217:
 7723              	.LBE7216:
 7724              	.LBE7215:
 7725              	.LBE7214:
 7726              	.LBB7254:
 7727              	.LBB7255:
 7728              	.LBB7256:
 7729              	.LBB7257:
 7730              	.LBB7258:
 7731              	.LBB7259:
 7732              	.LBI7259:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7733              		.loc 2 236 7 is_stmt 1 view .LVU1915
 7734              	.LBB7260:
 7735              	.LBB7261:
 7736              	.LBI7261:
ARM GAS  /tmp/ccL95Edz.s 			page 410


 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7737              		.loc 3 469 7 view .LVU1916
 7738              	.LBB7262:
 7739              	.LBI7262:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 7740              		.loc 4 119 7 view .LVU1917
 7741              	.LBB7263:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7742              		.loc 4 128 19 is_stmt 0 view .LVU1918
 7743 00ba FFF7FEFF 		bl	_ZdlPv
 7744              	.LVL585:
 7745              	.L226:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7746              		.loc 4 128 19 view .LVU1919
 7747              	.LBE7263:
 7748              	.LBE7262:
 7749              	.LBE7261:
 7750              	.LBE7260:
 7751              	.LBE7259:
 7752              	.LBE7258:
 7753              	.LBE7257:
 7754              	.LBB7269:
 7755              	.LBI7269:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7756              		.loc 2 150 14 is_stmt 1 view .LVU1920
 7757              	.LBB7270:
 7758              	.LBI7270:
 7759              		.loc 5 153 7 view .LVU1921
 7760              	.LBB7271:
 7761              	.LBI7271:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7762              		.loc 4 89 7 view .LVU1922
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7763              		.loc 4 89 7 is_stmt 0 view .LVU1923
 7764              	.LBE7271:
 7765              	.LBE7270:
 7766              	.LBE7269:
 7767              	.LBE7256:
 7768              	.LBE7255:
 7769              	.LBE7254:
 7770              	.LBE7213:
 7771              	.LBE7212:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7772              		.loc 15 949 7 is_stmt 1 view .LVU1924
 7773 00be 0BF1180B 		add	fp, fp, #24
 7774              	.LVL586:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7775              		.loc 15 949 7 is_stmt 0 view .LVU1925
 7776 00c2 1834     		adds	r4, r4, #24
 7777              	.LVL587:
 7778              	.L227:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7779              		.loc 15 949 22 is_stmt 1 view .LVU1926
 7780 00c4 5E45     		cmp	r6, fp
 7781 00c6 1AD0     		beq	.L223
 7782              	.LVL588:
 7783              	.LBB7280:
ARM GAS  /tmp/ccL95Edz.s 			page 411


 7784              	.LBI7212:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 7785              		.loc 15 905 5 view .LVU1927
 7786              	.LBB7278:
 7787              	.LBB7275:
 7788              	.LBI7214:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 7789              		.loc 3 482 2 view .LVU1928
 7790              	.LBB7252:
 7791              	.LBI7215:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 7792              		.loc 4 144 2 view .LVU1929
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 7793              		.loc 4 144 2 is_stmt 0 view .LVU1930
 7794              	.LBE7252:
 7795              	.LBE7275:
 7796              	.LBE7278:
 7797              	.LBE7280:
 7798              	.LBE7282:
 7799              	.LBE7284:
 7800              	.LBE7286:
 7801              	.LBE7288:
 7802              	.LBE7290:
 7803              	.LBE7295:
 7804              		.loc 14 174 3 is_stmt 1 view .LVU1931
 7805              	.LBB7296:
 7806              	.LBB7291:
 7807              	.LBB7289:
 7808              	.LBB7287:
 7809              	.LBB7285:
 7810              	.LBB7283:
 7811              	.LBB7281:
 7812              	.LBB7279:
 7813              	.LBB7276:
 7814              	.LBB7253:
 7815              	.LBB7251:
 7816              	.LBI7216:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 7817              		.loc 2 552 7 view .LVU1932
 7818              	.LBB7250:
 7819              	.LBB7220:
 7820              	.LBI7220:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7821              		.loc 2 190 7 view .LVU1933
 7822              	.LBB7221:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7823              		.loc 2 193 51 is_stmt 0 view .LVU1934
 7824 00c8 04F10802 		add	r2, r4, #8
 7825              	.LVL589:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7826              		.loc 2 193 51 view .LVU1935
 7827              	.LBE7221:
 7828              	.LBE7220:
 7829              	.LBB7222:
 7830              	.LBI7222:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 7831              		.loc 2 286 7 is_stmt 1 view .LVU1936
ARM GAS  /tmp/ccL95Edz.s 			page 412


 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 7832              		.loc 2 286 7 is_stmt 0 view .LVU1937
 7833              	.LBE7222:
 7834              	.LBB7223:
 7835              	.LBI7223:
 7836              		.loc 9 99 5 is_stmt 1 view .LVU1938
 7837              		.loc 9 99 5 is_stmt 0 view .LVU1939
 7838              	.LBE7223:
 7839              	.LBB7224:
 7840              	.LBI7224:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 7841              		.loc 2 159 2 is_stmt 1 view .LVU1940
 7842              	.LBB7225:
 7843              	.LBB7226:
 7844              	.LBI7226:
 7845              		.loc 9 99 5 view .LVU1941
 7846              		.loc 9 99 5 is_stmt 0 view .LVU1942
 7847              	.LBE7226:
 7848              	.LBB7227:
 7849              	.LBI7227:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7850              		.loc 5 141 7 is_stmt 1 view .LVU1943
 7851              	.LBB7228:
 7852              	.LBI7228:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7853              		.loc 4 83 7 view .LVU1944
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7854              		.loc 4 83 7 is_stmt 0 view .LVU1945
 7855              	.LBE7228:
 7856              	.LBE7227:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7857              		.loc 2 160 46 view .LVU1946
 7858 00cc 2260     		str	r2, [r4]
 7859              	.LVL590:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7860              		.loc 2 160 46 view .LVU1947
 7861              	.LBE7225:
 7862              	.LBE7224:
 7863              	.LBB7229:
 7864              	.LBI7229:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7865              		.loc 2 221 7 is_stmt 1 view .LVU1948
 7866              	.LBB7230:
 7867              	.LBI7230:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7868              		.loc 2 186 7 view .LVU1949
 7869              	.LBB7231:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7870              		.loc 2 187 28 is_stmt 0 view .LVU1950
 7871 00ce 5B46     		mov	r3, fp
 7872 00d0 53F8081B 		ldr	r1, [r3], #8
 7873              	.LVL591:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7874              		.loc 2 187 28 view .LVU1951
 7875              	.LBE7231:
 7876              	.LBE7230:
 7877              	.LBB7232:
ARM GAS  /tmp/ccL95Edz.s 			page 413


 7878              	.LBI7232:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7879              		.loc 2 200 7 is_stmt 1 view .LVU1952
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7880              		.loc 2 200 7 is_stmt 0 view .LVU1953
 7881              	.LBE7232:
 7882              	.LBE7229:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 7883              		.loc 2 555 2 view .LVU1954
 7884 00d4 9942     		cmp	r1, r3
 7885 00d6 E3D0     		beq	.L242
 7886              	.LVL592:
 7887              	.LBB7233:
 7888              	.LBI7233:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7889              		.loc 2 186 7 is_stmt 1 view .LVU1955
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7890              		.loc 2 186 7 is_stmt 0 view .LVU1956
 7891              	.LBE7233:
 7892              	.LBB7234:
 7893              	.LBI7234:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7894              		.loc 2 178 7 is_stmt 1 view .LVU1957
 7895              	.LBB7235:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7896              		.loc 2 179 9 is_stmt 0 view .LVU1958
 7897 00d8 2160     		str	r1, [r4]
 7898              	.LVL593:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7899              		.loc 2 179 9 view .LVU1959
 7900              	.LBE7235:
 7901              	.LBE7234:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 7902              		.loc 2 563 6 view .LVU1960
 7903 00da DBF80820 		ldr	r2, [fp, #8]
 7904              	.LVL594:
 7905              	.LBB7236:
 7906              	.LBI7236:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 7907              		.loc 2 210 7 is_stmt 1 view .LVU1961
 7908              	.LBB7237:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7909              		.loc 2 211 9 is_stmt 0 view .LVU1962
 7910 00de A260     		str	r2, [r4, #8]
 7911              	.LVL595:
 7912              	.L225:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7913              		.loc 2 211 9 view .LVU1963
 7914              	.LBE7237:
 7915              	.LBE7236:
 7916              	.LBB7238:
 7917              	.LBI7238:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7918              		.loc 2 936 7 is_stmt 1 view .LVU1964
 7919              	.LBB7239:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7920              		.loc 2 937 16 is_stmt 0 view .LVU1965
ARM GAS  /tmp/ccL95Edz.s 			page 414


 7921 00e0 DBF80420 		ldr	r2, [fp, #4]
 7922              	.LVL596:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7923              		.loc 2 937 16 view .LVU1966
 7924              	.LBE7239:
 7925              	.LBE7238:
 7926              	.LBB7240:
 7927              	.LBI7240:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7928              		.loc 2 182 7 is_stmt 1 view .LVU1967
 7929              	.LBB7241:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7930              		.loc 2 183 9 is_stmt 0 view .LVU1968
 7931 00e4 6260     		str	r2, [r4, #4]
 7932              	.LVL597:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7933              		.loc 2 183 9 view .LVU1969
 7934              	.LBE7241:
 7935              	.LBE7240:
 7936              	.LBB7242:
 7937              	.LBI7242:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7938              		.loc 2 190 7 is_stmt 1 view .LVU1970
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7939              		.loc 2 190 7 is_stmt 0 view .LVU1971
 7940              	.LBE7242:
 7941              	.LBB7243:
 7942              	.LBI7243:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7943              		.loc 2 178 7 is_stmt 1 view .LVU1972
 7944              	.LBB7244:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7945              		.loc 2 179 9 is_stmt 0 view .LVU1973
 7946 00e6 CBF80030 		str	r3, [fp]
 7947              	.LVL598:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7948              		.loc 2 179 9 view .LVU1974
 7949              	.LBE7244:
 7950              	.LBE7243:
 7951              	.LBB7245:
 7952              	.LBI7245:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7953              		.loc 2 214 7 is_stmt 1 view .LVU1975
 7954              	.LBB7246:
 7955              	.LBI7246:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7956              		.loc 2 182 7 view .LVU1976
 7957              	.LBB7247:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7958              		.loc 2 183 9 is_stmt 0 view .LVU1977
 7959 00ea 0022     		movs	r2, #0
 7960 00ec CBF80420 		str	r2, [fp, #4]
 7961              	.LVL599:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7962              		.loc 2 183 9 view .LVU1978
 7963              	.LBE7247:
 7964              	.LBE7246:
ARM GAS  /tmp/ccL95Edz.s 			page 415


 7965              	.LBB7248:
 7966              	.LBI7248:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 7967              		.loc 8 299 7 is_stmt 1 view .LVU1979
 7968              	.LBB7249:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7969              		.loc 8 300 9 view .LVU1980
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7970              		.loc 8 300 14 is_stmt 0 view .LVU1981
 7971 00f0 1A70     		strb	r2, [r3]
 7972              	.LVL600:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7973              		.loc 8 300 14 view .LVU1982
 7974              	.LBE7249:
 7975              	.LBE7248:
 7976              	.LBE7245:
 7977              	.LBE7250:
 7978              	.LBE7251:
 7979              	.LBE7253:
 7980              	.LBE7276:
 7981              	.LBB7277:
 7982              	.LBI7254:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 7983              		.loc 3 495 2 is_stmt 1 view .LVU1983
 7984              	.LBB7274:
 7985              	.LBI7255:
 7986              		.loc 4 151 2 view .LVU1984
 7987              	.LBB7273:
 7988              	.LBI7256:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 7989              		.loc 2 657 7 view .LVU1985
 7990              	.LBB7272:
 7991              	.LBI7257:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7992              		.loc 2 229 7 view .LVU1986
 7993              	.LBB7268:
 7994              	.LBB7264:
 7995              	.LBI7264:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7996              		.loc 2 221 7 view .LVU1987
 7997              	.LBB7265:
 7998              	.LBI7265:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7999              		.loc 2 186 7 view .LVU1988
 8000              	.LBB7266:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8001              		.loc 2 187 28 is_stmt 0 view .LVU1989
 8002 00f2 5B46     		mov	r3, fp
 8003 00f4 53F8080B 		ldr	r0, [r3], #8
 8004              	.LVL601:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8005              		.loc 2 187 28 view .LVU1990
 8006              	.LBE7266:
 8007              	.LBE7265:
 8008              	.LBB7267:
 8009              	.LBI7267:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 416


 8010              		.loc 2 200 7 is_stmt 1 view .LVU1991
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8011              		.loc 2 200 7 is_stmt 0 view .LVU1992
 8012              	.LBE7267:
 8013              	.LBE7264:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8014              		.loc 2 231 2 view .LVU1993
 8015 00f8 9842     		cmp	r0, r3
 8016 00fa DED1     		bne	.L243
 8017 00fc DFE7     		b	.L226
 8018              	.LVL602:
 8019              	.L223:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8020              		.loc 2 231 2 view .LVU1994
 8021              	.LBE7268:
 8022              	.LBE7272:
 8023              	.LBE7273:
 8024              	.LBE7274:
 8025              	.LBE7277:
 8026              	.LBE7279:
 8027              	.LBE7281:
 8028              	.LBE7283:
 8029              	.LBE7285:
 8030              	.LBE7287:
 8031              	.LBE7289:
 8032              	.LBE7291:
 8033              	.LBE7296:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 8034              		.loc 10 464 8 view .LVU1995
 8035 00fe 1834     		adds	r4, r4, #24
 8036              	.LVL603:
 8037              	.LBB7297:
 8038              	.LBI7297:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 8039              		.loc 11 462 7 is_stmt 1 view .LVU1996
 8040              	.LBB7298:
 8041              	.LBB7299:
 8042              	.LBI7299:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 8043              		.loc 11 450 7 view .LVU1997
 8044              	.LBB7300:
 8045              	.LBI7300:
 8046              		.loc 15 958 5 view .LVU1998
 8047              	.LBB7301:
 8048              	.LBI7301:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 8049              		.loc 15 936 5 view .LVU1999
 8050 0100 10E0     		b	.L232
 8051              	.LVL604:
 8052              	.L244:
 8053              	.LBB7302:
 8054              	.LBB7303:
 8055              	.LBB7304:
 8056              	.LBB7305:
 8057              	.LBB7306:
 8058              	.LBB7307:
 8059              	.LBB7308:
ARM GAS  /tmp/ccL95Edz.s 			page 417


 8060              	.LBB7309:
 8061              	.LBI7309:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 8062              		.loc 8 361 7 view .LVU2000
 8063              	.LBB7310:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 8064              		.loc 8 363 2 view .LVU2001
 8065              		.loc 8 365 2 view .LVU2002
 8066              		.loc 8 365 49 is_stmt 0 view .LVU2003
 8067 0102 D3F800E0 		ldr	lr, [r3]	@ unaligned
 8068 0106 D3F804C0 		ldr	ip, [r3, #4]	@ unaligned
 8069 010a 9868     		ldr	r0, [r3, #8]	@ unaligned
 8070 010c D968     		ldr	r1, [r3, #12]	@ unaligned
 8071 010e C4F808E0 		str	lr, [r4, #8]	@ unaligned
 8072 0112 C4F80CC0 		str	ip, [r4, #12]	@ unaligned
 8073 0116 2061     		str	r0, [r4, #16]	@ unaligned
 8074 0118 6161     		str	r1, [r4, #20]	@ unaligned
 8075 011a 10E0     		b	.L230
 8076              	.LVL605:
 8077              	.L245:
 8078              		.loc 8 365 49 view .LVU2004
 8079              	.LBE7310:
 8080              	.LBE7309:
 8081              	.LBE7308:
 8082              	.LBE7307:
 8083              	.LBE7306:
 8084              	.LBE7305:
 8085              	.LBB7345:
 8086              	.LBB7346:
 8087              	.LBB7347:
 8088              	.LBB7348:
 8089              	.LBB7349:
 8090              	.LBB7350:
 8091              	.LBI7350:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8092              		.loc 2 236 7 is_stmt 1 view .LVU2005
 8093              	.LBB7351:
 8094              	.LBB7352:
 8095              	.LBI7352:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8096              		.loc 3 469 7 view .LVU2006
 8097              	.LBB7353:
 8098              	.LBI7353:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8099              		.loc 4 119 7 view .LVU2007
 8100              	.LBB7354:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8101              		.loc 4 128 19 is_stmt 0 view .LVU2008
 8102 011c FFF7FEFF 		bl	_ZdlPv
 8103              	.LVL606:
 8104              	.L231:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8105              		.loc 4 128 19 view .LVU2009
 8106              	.LBE7354:
 8107              	.LBE7353:
 8108              	.LBE7352:
 8109              	.LBE7351:
ARM GAS  /tmp/ccL95Edz.s 			page 418


 8110              	.LBE7350:
 8111              	.LBE7349:
 8112              	.LBE7348:
 8113              	.LBB7360:
 8114              	.LBI7360:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8115              		.loc 2 150 14 is_stmt 1 view .LVU2010
 8116              	.LBB7361:
 8117              	.LBI7361:
 8118              		.loc 5 153 7 view .LVU2011
 8119              	.LBB7362:
 8120              	.LBI7362:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8121              		.loc 4 89 7 view .LVU2012
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8122              		.loc 4 89 7 is_stmt 0 view .LVU2013
 8123              	.LBE7362:
 8124              	.LBE7361:
 8125              	.LBE7360:
 8126              	.LBE7347:
 8127              	.LBE7346:
 8128              	.LBE7345:
 8129              	.LBE7304:
 8130              	.LBE7303:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 8131              		.loc 15 949 7 is_stmt 1 view .LVU2014
 8132 0120 1836     		adds	r6, r6, #24
 8133              	.LVL607:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 8134              		.loc 15 949 7 is_stmt 0 view .LVU2015
 8135 0122 1834     		adds	r4, r4, #24
 8136              	.LVL608:
 8137              	.L232:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 8138              		.loc 15 949 22 is_stmt 1 view .LVU2016
 8139 0124 B245     		cmp	r10, r6
 8140 0126 16D0     		beq	.L228
 8141              	.LVL609:
 8142              	.LBB7371:
 8143              	.LBI7303:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 8144              		.loc 15 905 5 view .LVU2017
 8145              	.LBB7369:
 8146              	.LBB7366:
 8147              	.LBI7305:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 8148              		.loc 3 482 2 view .LVU2018
 8149              	.LBB7343:
 8150              	.LBI7306:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 8151              		.loc 4 144 2 view .LVU2019
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 8152              		.loc 4 144 2 is_stmt 0 view .LVU2020
 8153              	.LBE7343:
 8154              	.LBE7366:
 8155              	.LBE7369:
 8156              	.LBE7371:
ARM GAS  /tmp/ccL95Edz.s 			page 419


 8157              	.LBE7302:
 8158              	.LBE7301:
 8159              	.LBE7300:
 8160              	.LBE7299:
 8161              	.LBE7298:
 8162              	.LBE7297:
 8163              		.loc 14 174 3 is_stmt 1 view .LVU2021
 8164              	.LBB7378:
 8165              	.LBB7377:
 8166              	.LBB7376:
 8167              	.LBB7375:
 8168              	.LBB7374:
 8169              	.LBB7373:
 8170              	.LBB7372:
 8171              	.LBB7370:
 8172              	.LBB7367:
 8173              	.LBB7344:
 8174              	.LBB7342:
 8175              	.LBI7307:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 8176              		.loc 2 552 7 view .LVU2022
 8177              	.LBB7341:
 8178              	.LBB7311:
 8179              	.LBI7311:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8180              		.loc 2 190 7 view .LVU2023
 8181              	.LBB7312:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 8182              		.loc 2 193 51 is_stmt 0 view .LVU2024
 8183 0128 04F10802 		add	r2, r4, #8
 8184              	.LVL610:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 8185              		.loc 2 193 51 view .LVU2025
 8186              	.LBE7312:
 8187              	.LBE7311:
 8188              	.LBB7313:
 8189              	.LBI7313:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8190              		.loc 2 286 7 is_stmt 1 view .LVU2026
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8191              		.loc 2 286 7 is_stmt 0 view .LVU2027
 8192              	.LBE7313:
 8193              	.LBB7314:
 8194              	.LBI7314:
 8195              		.loc 9 99 5 is_stmt 1 view .LVU2028
 8196              		.loc 9 99 5 is_stmt 0 view .LVU2029
 8197              	.LBE7314:
 8198              	.LBB7315:
 8199              	.LBI7315:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 8200              		.loc 2 159 2 is_stmt 1 view .LVU2030
 8201              	.LBB7316:
 8202              	.LBB7317:
 8203              	.LBI7317:
 8204              		.loc 9 99 5 view .LVU2031
 8205              		.loc 9 99 5 is_stmt 0 view .LVU2032
 8206              	.LBE7317:
ARM GAS  /tmp/ccL95Edz.s 			page 420


 8207              	.LBB7318:
 8208              	.LBI7318:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8209              		.loc 5 141 7 is_stmt 1 view .LVU2033
 8210              	.LBB7319:
 8211              	.LBI7319:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8212              		.loc 4 83 7 view .LVU2034
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8213              		.loc 4 83 7 is_stmt 0 view .LVU2035
 8214              	.LBE7319:
 8215              	.LBE7318:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8216              		.loc 2 160 46 view .LVU2036
 8217 012c 2260     		str	r2, [r4]
 8218              	.LVL611:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8219              		.loc 2 160 46 view .LVU2037
 8220              	.LBE7316:
 8221              	.LBE7315:
 8222              	.LBB7320:
 8223              	.LBI7320:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8224              		.loc 2 221 7 is_stmt 1 view .LVU2038
 8225              	.LBB7321:
 8226              	.LBI7321:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8227              		.loc 2 186 7 view .LVU2039
 8228              	.LBB7322:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8229              		.loc 2 187 28 is_stmt 0 view .LVU2040
 8230 012e 3346     		mov	r3, r6
 8231 0130 53F8081B 		ldr	r1, [r3], #8
 8232              	.LVL612:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8233              		.loc 2 187 28 view .LVU2041
 8234              	.LBE7322:
 8235              	.LBE7321:
 8236              	.LBB7323:
 8237              	.LBI7323:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8238              		.loc 2 200 7 is_stmt 1 view .LVU2042
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8239              		.loc 2 200 7 is_stmt 0 view .LVU2043
 8240              	.LBE7323:
 8241              	.LBE7320:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 8242              		.loc 2 555 2 view .LVU2044
 8243 0134 9942     		cmp	r1, r3
 8244 0136 E4D0     		beq	.L244
 8245              	.LVL613:
 8246              	.LBB7324:
 8247              	.LBI7324:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8248              		.loc 2 186 7 is_stmt 1 view .LVU2045
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8249              		.loc 2 186 7 is_stmt 0 view .LVU2046
ARM GAS  /tmp/ccL95Edz.s 			page 421


 8250              	.LBE7324:
 8251              	.LBB7325:
 8252              	.LBI7325:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 8253              		.loc 2 178 7 is_stmt 1 view .LVU2047
 8254              	.LBB7326:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8255              		.loc 2 179 9 is_stmt 0 view .LVU2048
 8256 0138 2160     		str	r1, [r4]
 8257              	.LVL614:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8258              		.loc 2 179 9 view .LVU2049
 8259              	.LBE7326:
 8260              	.LBE7325:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 8261              		.loc 2 563 6 view .LVU2050
 8262 013a B268     		ldr	r2, [r6, #8]
 8263              	.LVL615:
 8264              	.LBB7327:
 8265              	.LBI7327:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 8266              		.loc 2 210 7 is_stmt 1 view .LVU2051
 8267              	.LBB7328:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8268              		.loc 2 211 9 is_stmt 0 view .LVU2052
 8269 013c A260     		str	r2, [r4, #8]
 8270              	.LVL616:
 8271              	.L230:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8272              		.loc 2 211 9 view .LVU2053
 8273              	.LBE7328:
 8274              	.LBE7327:
 8275              	.LBB7329:
 8276              	.LBI7329:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8277              		.loc 2 936 7 is_stmt 1 view .LVU2054
 8278              	.LBB7330:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8279              		.loc 2 937 16 is_stmt 0 view .LVU2055
 8280 013e 7268     		ldr	r2, [r6, #4]
 8281              	.LVL617:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8282              		.loc 2 937 16 view .LVU2056
 8283              	.LBE7330:
 8284              	.LBE7329:
 8285              	.LBB7331:
 8286              	.LBI7331:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 8287              		.loc 2 182 7 is_stmt 1 view .LVU2057
 8288              	.LBB7332:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8289              		.loc 2 183 9 is_stmt 0 view .LVU2058
 8290 0140 6260     		str	r2, [r4, #4]
 8291              	.LVL618:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8292              		.loc 2 183 9 view .LVU2059
 8293              	.LBE7332:
ARM GAS  /tmp/ccL95Edz.s 			page 422


 8294              	.LBE7331:
 8295              	.LBB7333:
 8296              	.LBI7333:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8297              		.loc 2 190 7 is_stmt 1 view .LVU2060
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8298              		.loc 2 190 7 is_stmt 0 view .LVU2061
 8299              	.LBE7333:
 8300              	.LBB7334:
 8301              	.LBI7334:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 8302              		.loc 2 178 7 is_stmt 1 view .LVU2062
 8303              	.LBB7335:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8304              		.loc 2 179 9 is_stmt 0 view .LVU2063
 8305 0142 3360     		str	r3, [r6]
 8306              	.LVL619:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8307              		.loc 2 179 9 view .LVU2064
 8308              	.LBE7335:
 8309              	.LBE7334:
 8310              	.LBB7336:
 8311              	.LBI7336:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8312              		.loc 2 214 7 is_stmt 1 view .LVU2065
 8313              	.LBB7337:
 8314              	.LBI7337:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 8315              		.loc 2 182 7 view .LVU2066
 8316              	.LBB7338:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8317              		.loc 2 183 9 is_stmt 0 view .LVU2067
 8318 0144 0022     		movs	r2, #0
 8319 0146 7260     		str	r2, [r6, #4]
 8320              	.LVL620:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8321              		.loc 2 183 9 view .LVU2068
 8322              	.LBE7338:
 8323              	.LBE7337:
 8324              	.LBB7339:
 8325              	.LBI7339:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 8326              		.loc 8 299 7 is_stmt 1 view .LVU2069
 8327              	.LBB7340:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 8328              		.loc 8 300 9 view .LVU2070
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 8329              		.loc 8 300 14 is_stmt 0 view .LVU2071
 8330 0148 1A70     		strb	r2, [r3]
 8331              	.LVL621:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 8332              		.loc 8 300 14 view .LVU2072
 8333              	.LBE7340:
 8334              	.LBE7339:
 8335              	.LBE7336:
 8336              	.LBE7341:
 8337              	.LBE7342:
ARM GAS  /tmp/ccL95Edz.s 			page 423


 8338              	.LBE7344:
 8339              	.LBE7367:
 8340              	.LBB7368:
 8341              	.LBI7345:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 8342              		.loc 3 495 2 is_stmt 1 view .LVU2073
 8343              	.LBB7365:
 8344              	.LBI7346:
 8345              		.loc 4 151 2 view .LVU2074
 8346              	.LBB7364:
 8347              	.LBI7347:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 8348              		.loc 2 657 7 view .LVU2075
 8349              	.LBB7363:
 8350              	.LBI7348:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8351              		.loc 2 229 7 view .LVU2076
 8352              	.LBB7359:
 8353              	.LBB7355:
 8354              	.LBI7355:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8355              		.loc 2 221 7 view .LVU2077
 8356              	.LBB7356:
 8357              	.LBI7356:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8358              		.loc 2 186 7 view .LVU2078
 8359              	.LBB7357:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8360              		.loc 2 187 28 is_stmt 0 view .LVU2079
 8361 014a 3346     		mov	r3, r6
 8362 014c 53F8080B 		ldr	r0, [r3], #8
 8363              	.LVL622:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8364              		.loc 2 187 28 view .LVU2080
 8365              	.LBE7357:
 8366              	.LBE7356:
 8367              	.LBB7358:
 8368              	.LBI7358:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8369              		.loc 2 200 7 is_stmt 1 view .LVU2081
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8370              		.loc 2 200 7 is_stmt 0 view .LVU2082
 8371              	.LBE7358:
 8372              	.LBE7355:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8373              		.loc 2 231 2 view .LVU2083
 8374 0150 9842     		cmp	r0, r3
 8375 0152 E3D1     		bne	.L245
 8376 0154 E4E7     		b	.L231
 8377              	.LVL623:
 8378              	.L228:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8379              		.loc 2 231 2 view .LVU2084
 8380              	.LBE7359:
 8381              	.LBE7363:
 8382              	.LBE7364:
 8383              	.LBE7365:
ARM GAS  /tmp/ccL95Edz.s 			page 424


 8384              	.LBE7368:
 8385              	.LBE7370:
 8386              	.LBE7372:
 8387              	.LBE7373:
 8388              	.LBE7374:
 8389              	.LBE7375:
 8390              	.LBE7376:
 8391              	.LBE7377:
 8392              	.LBE7378:
 8393              	.LBB7379:
 8394              	.LBI7379:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 8395              		.loc 11 347 7 is_stmt 1 view .LVU2085
 8396              	.LBB7380:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8397              		.loc 11 350 2 is_stmt 0 view .LVU2086
 8398 0156 B9F1000F 		cmp	r9, #0
 8399 015a 02D0     		beq	.L233
 8400              	.LVL624:
 8401              	.LBB7381:
 8402              	.LBI7381:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8403              		.loc 3 469 7 is_stmt 1 view .LVU2087
 8404              	.LBB7382:
 8405              	.LBB7383:
 8406              	.LBI7383:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8407              		.loc 4 119 7 view .LVU2088
 8408              	.LBB7384:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8409              		.loc 4 128 19 is_stmt 0 view .LVU2089
 8410 015c 4846     		mov	r0, r9
 8411 015e FFF7FEFF 		bl	_ZdlPv
 8412              	.LVL625:
 8413              	.L233:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8414              		.loc 4 128 19 view .LVU2090
 8415              	.LBE7384:
 8416              	.LBE7383:
 8417              	.LBE7382:
 8418              	.LBE7381:
 8419              	.LBE7380:
 8420              	.LBE7379:
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 8421              		.loc 10 502 7 view .LVU2091
 8422 0162 C7F80080 		str	r8, [r7]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 8423              		.loc 10 503 7 view .LVU2092
 8424 0166 7C60     		str	r4, [r7, #4]
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 8425              		.loc 10 504 53 view .LVU2093
 8426 0168 05EB4505 		add	r5, r5, r5, lsl #1
 8427              	.LVL626:
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 8428              		.loc 10 504 53 view .LVU2094
 8429 016c 08EBC505 		add	r5, r8, r5, lsl #3
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
ARM GAS  /tmp/ccL95Edz.s 			page 425


 8430              		.loc 10 504 7 view .LVU2095
 8431 0170 BD60     		str	r5, [r7, #8]
 8432              		.loc 10 505 5 view .LVU2096
 8433 0172 03B0     		add	sp, sp, #12
 8434              	.LCFI44:
 8435              		.cfi_def_cfa_offset 36
 8436              		@ sp needed
 8437 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8438              	.LVL627:
 8439              	.L247:
 8440              		.loc 10 505 5 view .LVU2097
 8441              		.align	2
 8442              	.L246:
 8443 0178 ABAAAAAA 		.word	-1431655765
 8444 017c 55555505 		.word	89478485
 8445 0180 00000000 		.word	.LC1
 8446              		.cfi_endproc
 8447              	.LFE3911:
 8449              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_
 8450              		.align	1
 8451              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5
 8452              		.syntax unified
 8453              		.thumb
 8454              		.thumb_func
 8455              		.fpu fpv4-sp-d16
 8457              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_
 8458              	.LVL628:
 8459              	.LFB3721:
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 8460              		.loc 10 109 7 is_stmt 1 view -0
 8461              		.cfi_startproc
 8462              		@ args = 0, pretend = 0, frame = 0
 8463              		@ frame_needed = 0, uses_anonymous_args = 0
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 8464              		.loc 10 109 7 is_stmt 0 view .LVU2099
 8465 0000 10B5     		push	{r4, lr}
 8466              	.LCFI45:
 8467              		.cfi_def_cfa_offset 8
 8468              		.cfi_offset 4, -8
 8469              		.cfi_offset 14, -4
 8470 0002 0446     		mov	r4, r0
 8471 0004 0A46     		mov	r2, r1
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 8472              		.loc 10 112 20 view .LVU2100
 8473 0006 4068     		ldr	r0, [r0, #4]
 8474              	.LVL629:
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 8475              		.loc 10 112 47 view .LVU2101
 8476 0008 A368     		ldr	r3, [r4, #8]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 8477              		.loc 10 112 2 view .LVU2102
 8478 000a 9842     		cmp	r0, r3
 8479 000c 0FD0     		beq	.L249
 8480              	.LVL630:
 8481              	.LBB7385:
 8482              	.LBI7385:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
ARM GAS  /tmp/ccL95Edz.s 			page 426


 8483              		.loc 3 482 2 is_stmt 1 view .LVU2103
 8484              	.LBB7386:
 8485              	.LBI7386:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 8486              		.loc 4 144 2 view .LVU2104
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 8487              		.loc 4 144 2 is_stmt 0 view .LVU2105
 8488              	.LBE7386:
 8489              	.LBE7385:
 8490              		.loc 14 174 3 is_stmt 1 view .LVU2106
 8491              	.LBB7413:
 8492              	.LBB7412:
 8493              	.LBB7387:
 8494              	.LBI7387:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 8495              		.loc 2 448 7 view .LVU2107
 8496              	.LBB7388:
 8497              	.LBB7389:
 8498              	.LBI7389:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8499              		.loc 2 190 7 view .LVU2108
 8500              	.LBB7390:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 8501              		.loc 2 193 51 is_stmt 0 view .LVU2109
 8502 000e 00F10803 		add	r3, r0, #8
 8503              	.LVL631:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 8504              		.loc 2 193 51 view .LVU2110
 8505              	.LBE7390:
 8506              	.LBE7389:
 8507              	.LBB7391:
 8508              	.LBI7391:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8509              		.loc 2 290 7 is_stmt 1 view .LVU2111
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8510              		.loc 2 290 7 is_stmt 0 view .LVU2112
 8511              	.LBE7391:
 8512              	.LBB7392:
 8513              	.LBI7392:
 8514              		.loc 19 97 19 is_stmt 1 view .LVU2113
 8515              	.LBB7393:
 8516              	.LBI7393:
 8517              		.loc 3 514 7 view .LVU2114
 8518              	.LBB7394:
 8519              	.LBI7394:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8520              		.loc 5 141 7 view .LVU2115
 8521              	.LBB7395:
 8522              	.LBI7395:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8523              		.loc 4 83 7 view .LVU2116
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8524              		.loc 4 83 7 is_stmt 0 view .LVU2117
 8525              	.LBE7395:
 8526              	.LBE7394:
 8527              	.LBE7393:
 8528              	.LBE7392:
ARM GAS  /tmp/ccL95Edz.s 			page 427


 8529              	.LBB7396:
 8530              	.LBI7396:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 8531              		.loc 2 159 2 is_stmt 1 view .LVU2118
 8532              	.LBB7397:
 8533              	.LBB7398:
 8534              	.LBI7398:
 8535              		.loc 9 99 5 view .LVU2119
 8536              		.loc 9 99 5 is_stmt 0 view .LVU2120
 8537              	.LBE7398:
 8538              	.LBB7399:
 8539              	.LBI7399:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8540              		.loc 5 141 7 is_stmt 1 view .LVU2121
 8541              	.LBB7400:
 8542              	.LBI7400:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8543              		.loc 4 83 7 view .LVU2122
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8544              		.loc 4 83 7 is_stmt 0 view .LVU2123
 8545              	.LBE7400:
 8546              	.LBE7399:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8547              		.loc 2 160 46 view .LVU2124
 8548 0012 0360     		str	r3, [r0]
 8549              	.LVL632:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8550              		.loc 2 160 46 view .LVU2125
 8551              	.LBE7397:
 8552              	.LBE7396:
 8553              	.LBB7401:
 8554              	.LBI7401:
 8555              		.loc 5 153 7 is_stmt 1 view .LVU2126
 8556              	.LBB7402:
 8557              	.LBI7402:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8558              		.loc 4 89 7 view .LVU2127
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8559              		.loc 4 89 7 is_stmt 0 view .LVU2128
 8560              	.LBE7402:
 8561              	.LBE7401:
 8562              	.LBB7403:
 8563              	.LBI7403:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8564              		.loc 2 186 7 is_stmt 1 view .LVU2129
 8565              	.LBB7404:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8566              		.loc 2 187 28 is_stmt 0 view .LVU2130
 8567 0014 0968     		ldr	r1, [r1]
 8568              	.LVL633:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8569              		.loc 2 187 28 view .LVU2131
 8570              	.LBE7404:
 8571              	.LBE7403:
 8572              	.LBB7405:
 8573              	.LBI7405:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 428


 8574              		.loc 2 186 7 is_stmt 1 view .LVU2132
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8575              		.loc 2 186 7 is_stmt 0 view .LVU2133
 8576              	.LBE7405:
 8577              	.LBB7406:
 8578              	.LBI7406:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8579              		.loc 2 936 7 is_stmt 1 view .LVU2134
 8580              	.LBB7407:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8581              		.loc 2 937 16 is_stmt 0 view .LVU2135
 8582 0016 5268     		ldr	r2, [r2, #4]
 8583              	.LVL634:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8584              		.loc 2 937 16 view .LVU2136
 8585              	.LBE7407:
 8586              	.LBE7406:
 8587              	.LBB7408:
 8588              	.LBI7408:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 8589              		.loc 2 263 9 is_stmt 1 view .LVU2137
 8590              	.LBB7409:
 8591              	.LBB7410:
 8592              	.LBI7410:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 8593              		.loc 2 243 9 view .LVU2138
 8594              	.LBB7411:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8595              		.loc 2 247 11 is_stmt 0 view .LVU2139
 8596 0018 4FF00003 		mov	r3, #0
 8597 001c 0A44     		add	r2, r2, r1
 8598              	.LVL635:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8599              		.loc 2 247 11 view .LVU2140
 8600 001e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 8601              	.LVL636:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8602              		.loc 2 247 11 view .LVU2141
 8603              	.LBE7411:
 8604              	.LBE7410:
 8605              	.LBE7409:
 8606              	.LBE7408:
 8607              	.LBE7388:
 8608              	.LBE7387:
 8609              	.LBE7412:
 8610              	.LBE7413:
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8611              		.loc 10 117 22 view .LVU2142
 8612 0022 6368     		ldr	r3, [r4, #4]
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8613              		.loc 10 117 6 view .LVU2143
 8614 0024 1833     		adds	r3, r3, #24
 8615 0026 6360     		str	r3, [r4, #4]
 8616              	.L250:
 8617              	.LVL637:
 8618              	.LBB7414:
 8619              	.LBI7414:
ARM GAS  /tmp/ccL95Edz.s 			page 429


1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 8620              		.loc 11 1140 7 is_stmt 1 view .LVU2144
 8621              	.LBB7415:
 8622              	.LBI7415:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8623              		.loc 11 826 7 view .LVU2145
 8624              	.LBB7416:
 8625              	.LBI7416:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 8626              		.loc 13 806 7 view .LVU2146
 8627              	.LBB7417:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 8628              		.loc 13 807 23 is_stmt 0 view .LVU2147
 8629 0028 6068     		ldr	r0, [r4, #4]
 8630              	.LVL638:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 8631              		.loc 13 807 23 view .LVU2148
 8632              	.LBE7417:
 8633              	.LBE7416:
 8634              	.LBE7415:
 8635              	.LBB7418:
 8636              	.LBI7418:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 8637              		.loc 13 867 7 is_stmt 1 view .LVU2149
 8638              	.LBB7419:
 8639              	.LBB7420:
 8640              	.LBI7420:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 8641              		.loc 13 806 7 view .LVU2150
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 8642              		.loc 13 806 7 is_stmt 0 view .LVU2151
 8643              	.LBE7420:
 8644              	.LBE7419:
 8645              	.LBE7418:
 8646              	.LBE7414:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 8647              		.loc 10 125 7 view .LVU2152
 8648 002a 1838     		subs	r0, r0, #24
 8649 002c 10BD     		pop	{r4, pc}
 8650              	.LVL639:
 8651              	.L249:
 8652              	.LBB7421:
 8653              	.LBI7421:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8654              		.loc 11 826 7 is_stmt 1 view .LVU2153
 8655              	.LBB7422:
 8656              	.LBB7423:
 8657              	.LBI7423:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 8658              		.loc 13 806 7 view .LVU2154
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 8659              		.loc 13 806 7 is_stmt 0 view .LVU2155
 8660              	.LBE7423:
 8661              	.LBE7422:
 8662              	.LBE7421:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 8663              		.loc 10 121 4 view .LVU2156
ARM GAS  /tmp/ccL95Edz.s 			page 430


 8664 002e 0146     		mov	r1, r0
 8665              	.LVL640:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 8666              		.loc 10 121 4 view .LVU2157
 8667 0030 2046     		mov	r0, r4
 8668 0032 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJR
 8669              	.LVL641:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 8670              		.loc 10 121 4 view .LVU2158
 8671 0036 F7E7     		b	.L250
 8672              		.cfi_endproc
 8673              	.LFE3721:
 8675              		.section	.rodata._ZN10FilesystemC2EP3CLI.str1.4,"aMS",%progbits,1
 8676              		.align	2
 8677              	.LC9:
 8678 0000 6C7300   		.ascii	"ls\000"
 8679 0003 00       		.align	2
 8680              	.LC10:
 8681 0004 6C732061 		.ascii	"ls as in Linux\000"
 8681      7320696E 
 8681      204C696E 
 8681      757800
 8682 0013 00       		.align	2
 8683              	.LC11:
 8684 0014 636400   		.ascii	"cd\000"
 8685 0017 00       		.align	2
 8686              	.LC12:
 8687 0018 63642061 		.ascii	"cd as in Linux\000"
 8687      7320696E 
 8687      204C696E 
 8687      757800
 8688 0027 00       		.align	2
 8689              	.LC13:
 8690 0028 70776400 		.ascii	"pwd\000"
 8691              		.align	2
 8692              	.LC14:
 8693 002c 70776420 		.ascii	"pwd as in Linux\000"
 8693      61732069 
 8693      6E204C69 
 8693      6E757800 
 8694              		.align	2
 8695              	.LC15:
 8696 003c 63617400 		.ascii	"cat\000"
 8697              		.align	2
 8698              	.LC16:
 8699 0040 63617420 		.ascii	"cat as in Linux\000"
 8699      61732069 
 8699      6E204C69 
 8699      6E757800 
 8700              		.section	.text._ZN10FilesystemC2EP3CLI,"ax",%progbits
 8701              		.align	1
 8702              		.global	_ZN10FilesystemC2EP3CLI
 8703              		.syntax unified
 8704              		.thumb
 8705              		.thumb_func
 8706              		.fpu fpv4-sp-d16
 8708              	_ZN10FilesystemC2EP3CLI:
ARM GAS  /tmp/ccL95Edz.s 			page 431


 8709              	.LVL642:
 8710              	.LFB3367:
   3:alohal/filesystem/filesystem.cpp ****     cli(cli){
 8711              		.loc 17 3 1 is_stmt 1 view -0
 8712              		.cfi_startproc
 8713              		@ args = 0, pretend = 0, frame = 496
 8714              		@ frame_needed = 0, uses_anonymous_args = 0
   3:alohal/filesystem/filesystem.cpp ****     cli(cli){
 8715              		.loc 17 3 1 is_stmt 0 view .LVU2160
 8716 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 8717              	.LCFI46:
 8718              		.cfi_def_cfa_offset 32
 8719              		.cfi_offset 4, -32
 8720              		.cfi_offset 5, -28
 8721              		.cfi_offset 6, -24
 8722              		.cfi_offset 7, -20
 8723              		.cfi_offset 8, -16
 8724              		.cfi_offset 9, -12
 8725              		.cfi_offset 10, -8
 8726              		.cfi_offset 14, -4
 8727 0004 FCB0     		sub	sp, sp, #496
 8728              	.LCFI47:
 8729              		.cfi_def_cfa_offset 528
 8730 0006 0446     		mov	r4, r0
 8731 0008 0E46     		mov	r6, r1
 8732              	.LVL643:
 8733              	.LBB8323:
 8734              	.LBB8324:
 8735              	.LBI8324:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 8736              		.loc 5 138 7 is_stmt 1 view .LVU2161
 8737              	.LBB8325:
 8738              	.LBI8325:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8739              		.loc 4 80 7 view .LVU2162
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8740              		.loc 4 80 7 is_stmt 0 view .LVU2163
 8741              	.LBE8325:
 8742              	.LBE8324:
 8743              	.LBB8326:
 8744              	.LBI8326:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 8745              		.loc 2 525 7 is_stmt 1 view .LVU2164
 8746              	.LBB8327:
 8747              	.LBB8328:
 8748              	.LBB8329:
 8749              	.LBI8329:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8750              		.loc 2 190 7 view .LVU2165
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8751              		.loc 2 190 7 is_stmt 0 view .LVU2166
 8752              	.LBE8329:
 8753              	.LBB8330:
 8754              	.LBI8330:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 8755              		.loc 2 156 2 is_stmt 1 view .LVU2167
 8756              	.LBB8331:
ARM GAS  /tmp/ccL95Edz.s 			page 432


 8757              	.LBB8332:
 8758              	.LBB8333:
 8759              	.LBI8333:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8760              		.loc 5 141 7 view .LVU2168
 8761              	.LBB8334:
 8762              	.LBI8334:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8763              		.loc 4 83 7 view .LVU2169
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8764              		.loc 4 83 7 is_stmt 0 view .LVU2170
 8765              	.LBE8334:
 8766              	.LBE8333:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8767              		.loc 2 157 35 view .LVU2171
 8768 000a 06AF     		add	r7, sp, #24
 8769              	.LVL644:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8770              		.loc 2 157 35 view .LVU2172
 8771 000c 0497     		str	r7, [sp, #16]
 8772              	.LVL645:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8773              		.loc 2 157 35 view .LVU2173
 8774              	.LBE8332:
 8775              	.LBE8331:
 8776              	.LBE8330:
 8777              	.LBB8335:
 8778              	.LBI8335:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 8779              		.loc 8 329 7 is_stmt 1 view .LVU2174
 8780              	.LBE8335:
 8781              	.LBE8328:
 8782              	.LBE8327:
 8783              	.LBE8326:
 8784              	.LBE8323:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 8785              		.loc 8 332 2 view .LVU2175
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 8786              		.loc 8 335 2 view .LVU2176
 8787              	.LBB9203:
 8788              	.LBB8342:
 8789              	.LBB8341:
 8790              	.LBB8340:
 8791              	.LBB8336:
 8792              	.LBI8336:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 8793              		.loc 2 263 9 view .LVU2177
 8794              	.LBB8337:
 8795              	.LBB8338:
 8796              	.LBI8338:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 8797              		.loc 2 243 9 view .LVU2178
 8798              	.LBB8339:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8799              		.loc 2 247 11 is_stmt 0 view .LVU2179
 8800 000e C04A     		ldr	r2, .L272
 8801              	.LVL646:
ARM GAS  /tmp/ccL95Edz.s 			page 433


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8802              		.loc 2 247 11 view .LVU2180
 8803 0010 4FF00003 		mov	r3, #0
 8804 0014 511E     		subs	r1, r2, #1
 8805              	.LVL647:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8806              		.loc 2 247 11 view .LVU2181
 8807 0016 04A8     		add	r0, sp, #16
 8808              	.LVL648:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8809              		.loc 2 247 11 view .LVU2182
 8810 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 8811              	.LVL649:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8812              		.loc 2 247 11 view .LVU2183
 8813              	.LBE8339:
 8814              	.LBE8338:
 8815              	.LBE8337:
 8816              	.LBE8336:
 8817              	.LBE8340:
 8818              	.LBE8341:
 8819              	.LBE8342:
   4:alohal/filesystem/filesystem.cpp ****     cli->Register_command("ls", "ls as in Linux", this, &Filesystem::Command_ls);
 8820              		.loc 17 4 12 view .LVU2184
 8821 001c 3020     		movs	r0, #48
 8822 001e FFF7FEFF 		bl	_Znwj
 8823              	.LVL650:
 8824 0022 0546     		mov	r5, r0
 8825 0024 04A9     		add	r1, sp, #16
 8826 0026 FFF7FEFF 		bl	_ZN9DirectoryC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 8827              	.LVL651:
 8828 002a 2560     		str	r5, [r4]
 8829              	.LVL652:
 8830              	.LBB8343:
 8831              	.LBI8343:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 8832              		.loc 2 657 7 is_stmt 1 view .LVU2185
 8833              	.LBB8344:
 8834              	.LBI8344:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8835              		.loc 2 229 7 view .LVU2186
 8836              	.LBB8345:
 8837              	.LBB8346:
 8838              	.LBI8346:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8839              		.loc 2 221 7 view .LVU2187
 8840              	.LBB8347:
 8841              	.LBI8347:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8842              		.loc 2 186 7 view .LVU2188
 8843              	.LBB8348:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8844              		.loc 2 187 28 is_stmt 0 view .LVU2189
 8845 002c 0498     		ldr	r0, [sp, #16]
 8846              	.LVL653:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8847              		.loc 2 187 28 view .LVU2190
ARM GAS  /tmp/ccL95Edz.s 			page 434


 8848              	.LBE8348:
 8849              	.LBE8347:
 8850              	.LBB8349:
 8851              	.LBI8349:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8852              		.loc 2 200 7 is_stmt 1 view .LVU2191
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8853              		.loc 2 200 7 is_stmt 0 view .LVU2192
 8854              	.LBE8349:
 8855              	.LBE8346:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8856              		.loc 2 231 2 view .LVU2193
 8857 002e B842     		cmp	r0, r7
 8858 0030 01D0     		beq	.L253
 8859              	.LVL654:
 8860              	.LBB8350:
 8861              	.LBI8350:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8862              		.loc 2 236 7 is_stmt 1 view .LVU2194
 8863              	.LBB8351:
 8864              	.LBB8352:
 8865              	.LBI8352:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8866              		.loc 3 469 7 view .LVU2195
 8867              	.LBB8353:
 8868              	.LBI8353:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8869              		.loc 4 119 7 view .LVU2196
 8870              	.LBB8354:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8871              		.loc 4 128 19 is_stmt 0 view .LVU2197
 8872 0032 FFF7FEFF 		bl	_ZdlPv
 8873              	.LVL655:
 8874              	.L253:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8875              		.loc 4 128 19 view .LVU2198
 8876              	.LBE8354:
 8877              	.LBE8353:
 8878              	.LBE8352:
 8879              	.LBE8351:
 8880              	.LBE8350:
 8881              	.LBE8345:
 8882              	.LBE8344:
 8883              	.LBB8355:
 8884              	.LBI8355:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8885              		.loc 2 150 14 is_stmt 1 view .LVU2199
 8886              	.LBB8356:
 8887              	.LBI8356:
 8888              		.loc 5 153 7 view .LVU2200
 8889              	.LBB8357:
 8890              	.LBI8357:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8891              		.loc 4 89 7 view .LVU2201
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8892              		.loc 4 89 7 is_stmt 0 view .LVU2202
 8893              	.LBE8357:
ARM GAS  /tmp/ccL95Edz.s 			page 435


 8894              	.LBE8356:
 8895              	.LBE8355:
 8896              	.LBE8343:
 8897              	.LBB8358:
 8898              	.LBI8358:
 8899              		.loc 5 153 7 is_stmt 1 view .LVU2203
 8900              	.LBB8359:
 8901              	.LBI8359:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8902              		.loc 4 89 7 view .LVU2204
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8903              		.loc 4 89 7 is_stmt 0 view .LVU2205
 8904              	.LBE8359:
 8905              	.LBE8358:
   4:alohal/filesystem/filesystem.cpp ****     cli->Register_command("ls", "ls as in Linux", this, &Filesystem::Command_ls);
 8906              		.loc 17 4 12 view .LVU2206
 8907 0036 2368     		ldr	r3, [r4]
 8908 0038 6360     		str	r3, [r4, #4]
 8909 003a A660     		str	r6, [r4, #8]
   5:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cd", "cd as in Linux", this, &Filesystem::Command_cd);
 8910              		.loc 17 5 5 is_stmt 1 view .LVU2207
 8911              	.LVL656:
 8912              	.LBB8360:
 8913              	.LBI8360:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 8914              		.loc 5 138 7 view .LVU2208
 8915              	.LBB8361:
 8916              	.LBI8361:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8917              		.loc 4 80 7 view .LVU2209
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8918              		.loc 4 80 7 is_stmt 0 view .LVU2210
 8919              	.LBE8361:
 8920              	.LBE8360:
 8921              	.LBB8362:
 8922              	.LBI8362:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 8923              		.loc 2 525 7 is_stmt 1 view .LVU2211
 8924              	.LBB8363:
 8925              	.LBB8364:
 8926              	.LBB8365:
 8927              	.LBI8365:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8928              		.loc 2 190 7 view .LVU2212
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8929              		.loc 2 190 7 is_stmt 0 view .LVU2213
 8930              	.LBE8365:
 8931              	.LBB8366:
 8932              	.LBI8366:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 8933              		.loc 2 156 2 is_stmt 1 view .LVU2214
 8934              	.LBB8367:
 8935              	.LBB8368:
 8936              	.LBB8369:
 8937              	.LBI8369:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8938              		.loc 5 141 7 view .LVU2215
ARM GAS  /tmp/ccL95Edz.s 			page 436


 8939              	.LBB8370:
 8940              	.LBI8370:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8941              		.loc 4 83 7 view .LVU2216
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8942              		.loc 4 83 7 is_stmt 0 view .LVU2217
 8943              	.LBE8370:
 8944              	.LBE8369:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8945              		.loc 2 157 35 view .LVU2218
 8946 003c 0CAB     		add	r3, sp, #48
 8947              	.LVL657:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8948              		.loc 2 157 35 view .LVU2219
 8949 003e 0A93     		str	r3, [sp, #40]
 8950              	.LVL658:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8951              		.loc 2 157 35 view .LVU2220
 8952              	.LBE8368:
 8953              	.LBE8367:
 8954              	.LBE8366:
 8955              	.LBB8371:
 8956              	.LBI8371:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 8957              		.loc 8 329 7 is_stmt 1 view .LVU2221
 8958              	.LBE8371:
 8959              	.LBE8364:
 8960              	.LBE8363:
 8961              	.LBE8362:
 8962              	.LBE9203:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 8963              		.loc 8 332 2 view .LVU2222
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 8964              		.loc 8 335 2 view .LVU2223
 8965              	.LBB9204:
 8966              	.LBB8378:
 8967              	.LBB8377:
 8968              	.LBB8376:
 8969              	.LBB8372:
 8970              	.LBI8372:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 8971              		.loc 2 263 9 view .LVU2224
 8972              	.LBB8373:
 8973              	.LBB8374:
 8974              	.LBI8374:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 8975              		.loc 2 243 9 view .LVU2225
 8976              	.LBB8375:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8977              		.loc 2 247 11 is_stmt 0 view .LVU2226
 8978 0040 B44A     		ldr	r2, .L272+4
 8979              	.LVL659:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8980              		.loc 2 247 11 view .LVU2227
 8981 0042 4FF00003 		mov	r3, #0
 8982 0046 911E     		subs	r1, r2, #2
 8983 0048 0AA8     		add	r0, sp, #40
ARM GAS  /tmp/ccL95Edz.s 			page 437


 8984              	.LVL660:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8985              		.loc 2 247 11 view .LVU2228
 8986 004a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 8987              	.LVL661:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8988              		.loc 2 247 11 view .LVU2229
 8989              	.LBE8375:
 8990              	.LBE8374:
 8991              	.LBE8373:
 8992              	.LBE8372:
 8993              	.LBE8376:
 8994              	.LBE8377:
 8995              	.LBE8378:
 8996              	.LBB8379:
 8997              	.LBI8379:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 8998              		.loc 5 138 7 is_stmt 1 view .LVU2230
 8999              	.LBB8380:
 9000              	.LBI8380:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9001              		.loc 4 80 7 view .LVU2231
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9002              		.loc 4 80 7 is_stmt 0 view .LVU2232
 9003              	.LBE8380:
 9004              	.LBE8379:
 9005              	.LBB8381:
 9006              	.LBI8381:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 9007              		.loc 2 525 7 is_stmt 1 view .LVU2233
 9008              	.LBB8382:
 9009              	.LBB8383:
 9010              	.LBB8384:
 9011              	.LBI8384:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9012              		.loc 2 190 7 view .LVU2234
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9013              		.loc 2 190 7 is_stmt 0 view .LVU2235
 9014              	.LBE8384:
 9015              	.LBB8385:
 9016              	.LBI8385:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 9017              		.loc 2 156 2 is_stmt 1 view .LVU2236
 9018              	.LBB8386:
 9019              	.LBB8387:
 9020              	.LBB8388:
 9021              	.LBI8388:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9022              		.loc 5 141 7 view .LVU2237
 9023              	.LBB8389:
 9024              	.LBI8389:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9025              		.loc 4 83 7 view .LVU2238
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9026              		.loc 4 83 7 is_stmt 0 view .LVU2239
 9027              	.LBE8389:
 9028              	.LBE8388:
ARM GAS  /tmp/ccL95Edz.s 			page 438


 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9029              		.loc 2 157 35 view .LVU2240
 9030 004e 12AB     		add	r3, sp, #72
 9031              	.LVL662:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9032              		.loc 2 157 35 view .LVU2241
 9033 0050 1093     		str	r3, [sp, #64]
 9034              	.LVL663:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9035              		.loc 2 157 35 view .LVU2242
 9036              	.LBE8387:
 9037              	.LBE8386:
 9038              	.LBE8385:
 9039              	.LBB8390:
 9040              	.LBI8390:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 9041              		.loc 8 329 7 is_stmt 1 view .LVU2243
 9042              	.LBE8390:
 9043              	.LBE8383:
 9044              	.LBE8382:
 9045              	.LBE8381:
 9046              	.LBE9204:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 9047              		.loc 8 332 2 view .LVU2244
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 9048              		.loc 8 335 2 view .LVU2245
 9049              	.LBB9205:
 9050              	.LBB8397:
 9051              	.LBB8396:
 9052              	.LBB8395:
 9053              	.LBB8391:
 9054              	.LBI8391:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 9055              		.loc 2 263 9 view .LVU2246
 9056              	.LBB8392:
 9057              	.LBB8393:
 9058              	.LBI8393:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 9059              		.loc 2 243 9 view .LVU2247
 9060              	.LBB8394:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9061              		.loc 2 247 11 is_stmt 0 view .LVU2248
 9062 0052 B14A     		ldr	r2, .L272+8
 9063              	.LVL664:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9064              		.loc 2 247 11 view .LVU2249
 9065 0054 4FF00003 		mov	r3, #0
 9066 0058 A2F10E01 		sub	r1, r2, #14
 9067 005c 10A8     		add	r0, sp, #64
 9068              	.LVL665:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9069              		.loc 2 247 11 view .LVU2250
 9070 005e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 9071              	.LVL666:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9072              		.loc 2 247 11 view .LVU2251
 9073              	.LBE8394:
ARM GAS  /tmp/ccL95Edz.s 			page 439


 9074              	.LBE8393:
 9075              	.LBE8392:
 9076              	.LBE8391:
 9077              	.LBE8395:
 9078              	.LBE8396:
 9079              	.LBE8397:
   5:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cd", "cd as in Linux", this, &Filesystem::Command_cd);
 9080              		.loc 17 5 26 view .LVU2252
 9081 0062 16AB     		add	r3, sp, #88
 9082 0064 AD4A     		ldr	r2, .L272+12
 9083 0066 1692     		str	r2, [sp, #88]
 9084 0068 4FF00009 		mov	r9, #0
 9085 006c CDF85C90 		str	r9, [sp, #92]
 9086              	.LVL667:
   5:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cd", "cd as in Linux", this, &Filesystem::Command_cd);
 9087              		.loc 17 5 26 view .LVU2253
 9088 0070 E846     		mov	r8, sp
 9089 0072 93E80300 		ldm	r3, {r0, r1}
 9090 0076 88E80300 		stm	r8, {r0, r1}
 9091              	.LBB8398:
 9092              	.LBI8398:
 9093              		.file 21 "alohal/cli/cli.hpp"
   1:alohal/cli/cli.hpp **** #pragma once
   2:alohal/cli/cli.hpp **** 
   3:alohal/cli/cli.hpp **** #include <string>
   4:alohal/cli/cli.hpp **** #include <vector>
   5:alohal/cli/cli.hpp **** 
   6:alohal/cli/cli.hpp **** #include "uart/serial_line.hpp"
   7:alohal/cli/cli.hpp **** #include "command.hpp"
   8:alohal/cli/cli.hpp **** #include "history.hpp"
   9:alohal/cli/cli.hpp **** 
  10:alohal/cli/cli.hpp **** class Filesystem;
  11:alohal/cli/cli.hpp **** 
  12:alohal/cli/cli.hpp **** class CLI
  13:alohal/cli/cli.hpp **** {
  14:alohal/cli/cli.hpp **** private:
  15:alohal/cli/cli.hpp ****     /**
  16:alohal/cli/cli.hpp ****      * @brief Communication interface used for all CLI interaction
  17:alohal/cli/cli.hpp ****      */
  18:alohal/cli/cli.hpp ****     Serial_line *serial_connection = nullptr;
  19:alohal/cli/cli.hpp **** 
  20:alohal/cli/cli.hpp ****     /**
  21:alohal/cli/cli.hpp ****      * @brief Content of line on screen including FS prefix and line opening
  22:alohal/cli/cli.hpp ****      */
  23:alohal/cli/cli.hpp ****     string actual_line = "";
  24:alohal/cli/cli.hpp **** 
  25:alohal/cli/cli.hpp ****     /**
  26:alohal/cli/cli.hpp ****      * @brief   Last printed line used to determinated how much white space is needed for
  27:alohal/cli/cli.hpp ****      *              redrawing trailing printed character
  28:alohal/cli/cli.hpp ****      *          Without it adding white space: AB -> C => CB
  29:alohal/cli/cli.hpp ****      */
  30:alohal/cli/cli.hpp ****     string last_printed_line = "";
  31:alohal/cli/cli.hpp **** 
  32:alohal/cli/cli.hpp ****     /**
  33:alohal/cli/cli.hpp ****      * @brief Content which is inserted to every new line
  34:alohal/cli/cli.hpp ****      */
  35:alohal/cli/cli.hpp ****     const string line_opening = "\u001b[1m\u001b[32;1m>\u001b[0m ";
ARM GAS  /tmp/ccL95Edz.s 			page 440


  36:alohal/cli/cli.hpp **** 
  37:alohal/cli/cli.hpp ****     /**
  38:alohal/cli/cli.hpp ****      * @brief Pointer to filesystem, which is connected to CLI
  39:alohal/cli/cli.hpp ****      */
  40:alohal/cli/cli.hpp ****     Filesystem* fs = nullptr;
  41:alohal/cli/cli.hpp **** 
  42:alohal/cli/cli.hpp ****     /**
  43:alohal/cli/cli.hpp ****      * @brief   Prefix before line opening, contains location inside filesystem, updated with every
  44:alohal/cli/cli.hpp ****      *          Used before line opening on new line
  45:alohal/cli/cli.hpp ****      */
  46:alohal/cli/cli.hpp ****     string filesystem_prefix = "";
  47:alohal/cli/cli.hpp **** 
  48:alohal/cli/cli.hpp ****     /**
  49:alohal/cli/cli.hpp ****      * @brief   List of command which can be used inside CLI
  50:alohal/cli/cli.hpp ****      *          Contains generic linux commands as ls, cd, pwd ...
  51:alohal/cli/cli.hpp ****      */
  52:alohal/cli/cli.hpp ****     vector<Command_base *> commands;
  53:alohal/cli/cli.hpp **** 
  54:alohal/cli/cli.hpp ****     /**
  55:alohal/cli/cli.hpp ****      * @brief   Pointer to object which add support for command history
  56:alohal/cli/cli.hpp ****      */
  57:alohal/cli/cli.hpp ****     CLI_history *command_history = nullptr;
  58:alohal/cli/cli.hpp **** 
  59:alohal/cli/cli.hpp ****     /**
  60:alohal/cli/cli.hpp ****      * @brief   Number of remaining characters of escape sequence
  61:alohal/cli/cli.hpp ****      *          If higher then 0, escape sequence is recording
  62:alohal/cli/cli.hpp ****      *          Now are only supported ^[A (arrow up) and ^[B (arrow down)
  63:alohal/cli/cli.hpp ****      *              for command history browsing
  64:alohal/cli/cli.hpp ****      */
  65:alohal/cli/cli.hpp ****     unsigned short escape_sequency_remaining = 0;
  66:alohal/cli/cli.hpp **** 
  67:alohal/cli/cli.hpp **** public:
  68:alohal/cli/cli.hpp ****     CLI() =default;
  69:alohal/cli/cli.hpp **** 
  70:alohal/cli/cli.hpp ****     /**
  71:alohal/cli/cli.hpp ****      * @brief Connect CLI to specified serial interface, this interface will be
  72:alohal/cli/cli.hpp ****      * used for comunication with user
  73:alohal/cli/cli.hpp ****      *
  74:alohal/cli/cli.hpp ****      * @param connection Serial communication interface (UART of USB CDC)
  75:alohal/cli/cli.hpp ****      */
  76:alohal/cli/cli.hpp ****     void Connect(Serial_line *connection);
  77:alohal/cli/cli.hpp **** 
  78:alohal/cli/cli.hpp ****     /**
  79:alohal/cli/cli.hpp ****      * @brief Enable lading characters from user, register basic CLI commands
  80:alohal/cli/cli.hpp ****      */
  81:alohal/cli/cli.hpp ****     void Start();
  82:alohal/cli/cli.hpp **** 
  83:alohal/cli/cli.hpp ****     /**
  84:alohal/cli/cli.hpp ****      * @brief   Load next available char from Serial_line, eventually start processing of line
  85:alohal/cli/cli.hpp ****      *          Called from IRQ Handler
  86:alohal/cli/cli.hpp ****      *
  87:alohal/cli/cli.hpp ****      */
  88:alohal/cli/cli.hpp ****     void Char_load();
  89:alohal/cli/cli.hpp **** 
  90:alohal/cli/cli.hpp ****     /**
  91:alohal/cli/cli.hpp ****      * @brief   Print given string to CLI to new line
  92:alohal/cli/cli.hpp ****      *          New line characters "\r\n" must be added by programer to end line
ARM GAS  /tmp/ccL95Edz.s 			page 441


  93:alohal/cli/cli.hpp ****      *
  94:alohal/cli/cli.hpp ****      * @param text text to print on CLI screen
  95:alohal/cli/cli.hpp ****      * @return int Length of new line
  96:alohal/cli/cli.hpp ****      */
  97:alohal/cli/cli.hpp ****     int Print(string text);
  98:alohal/cli/cli.hpp **** 
  99:alohal/cli/cli.hpp ****     /**
 100:alohal/cli/cli.hpp ****      * @brief   Enable command history and listing in it for CLI
 101:alohal/cli/cli.hpp ****      *          Can be only used once, another usage has no effect
 102:alohal/cli/cli.hpp ****      *          Size of command history cannot be changed during run
 103:alohal/cli/cli.hpp ****      *
 104:alohal/cli/cli.hpp ****      * @param size_of_history   Number of commands which will be stored in history buffer
 105:alohal/cli/cli.hpp ****      * @return int              -1 if history already exists
 106:alohal/cli/cli.hpp ****      */
 107:alohal/cli/cli.hpp ****     int Enable_history(uint size_of_history);
 108:alohal/cli/cli.hpp **** 
 109:alohal/cli/cli.hpp ****     /**
 110:alohal/cli/cli.hpp ****      * @brief   Enable to run any executable from file system, executable cannot have name of any c
 111:alohal/cli/cli.hpp ****      *
 112:alohal/cli/cli.hpp ****      * @param fs Pointer to filesystem, from which will be executable loaded
 113:alohal/cli/cli.hpp ****      * @return int 0 if OK, 1 if filesystem is already set
 114:alohal/cli/cli.hpp ****      */
 115:alohal/cli/cli.hpp ****     int Enable_filesystem_executable(Filesystem* fs);
 116:alohal/cli/cli.hpp **** 
 117:alohal/cli/cli.hpp ****     /**
 118:alohal/cli/cli.hpp ****      * @brief   Save prefix which will be printed before line opening,
 119:alohal/cli/cli.hpp ****      *          This prefix means current location inside filesystem
 120:alohal/cli/cli.hpp ****      *          Called by filesystem everytime when 'cd' command is used
 121:alohal/cli/cli.hpp ****      *
 122:alohal/cli/cli.hpp ****      * @param prefix    Position in filesystem
 123:alohal/cli/cli.hpp ****      */
 124:alohal/cli/cli.hpp ****     void Set_filesystem_prefix(const string prefix);
 125:alohal/cli/cli.hpp **** 
 126:alohal/cli/cli.hpp ****     /**
 127:alohal/cli/cli.hpp ****      * @brief Register method of some object as CLI command
 128:alohal/cli/cli.hpp ****      *
 129:alohal/cli/cli.hpp ****      * @tparam registrator_class    Class of object, which is making registration
 130:alohal/cli/cli.hpp ****      * @param command   Name of command
 131:alohal/cli/cli.hpp ****      * @param help      Help for command
 132:alohal/cli/cli.hpp ****      * @param object    Pointer to object on which will be method invocated
 133:alohal/cli/cli.hpp ****      * @param method    Method of class which will be invocated
 134:alohal/cli/cli.hpp ****      */
 135:alohal/cli/cli.hpp ****     template <typename registrator_class>
 136:alohal/cli/cli.hpp ****     void Register_command(string command, string help, registrator_class *object, int (registrator_
 9094              		.loc 21 136 10 is_stmt 1 view .LVU2254
 9095              	.LVL668:
 9096              	.LBB8399:
 9097              	.LBB8400:
 9098              	.LBI8400:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 9099              		.loc 2 448 7 view .LVU2255
 9100              	.LBB8401:
 9101              	.LBB8402:
 9102              	.LBB8403:
 9103              	.LBI8403:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9104              		.loc 2 190 7 view .LVU2256
ARM GAS  /tmp/ccL95Edz.s 			page 442


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9105              		.loc 2 190 7 is_stmt 0 view .LVU2257
 9106              	.LBE8403:
 9107              	.LBB8404:
 9108              	.LBI8404:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9109              		.loc 2 290 7 is_stmt 1 view .LVU2258
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9110              		.loc 2 290 7 is_stmt 0 view .LVU2259
 9111              	.LBE8404:
 9112              	.LBB8405:
 9113              	.LBI8405:
 9114              		.loc 19 97 19 is_stmt 1 view .LVU2260
 9115              	.LBB8406:
 9116              	.LBI8406:
 9117              		.loc 3 514 7 view .LVU2261
 9118              	.LBB8407:
 9119              	.LBI8407:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9120              		.loc 5 141 7 view .LVU2262
 9121              	.LBB8408:
 9122              	.LBI8408:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9123              		.loc 4 83 7 view .LVU2263
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9124              		.loc 4 83 7 is_stmt 0 view .LVU2264
 9125              	.LBE8408:
 9126              	.LBE8407:
 9127              	.LBE8406:
 9128              	.LBE8405:
 9129              	.LBB8409:
 9130              	.LBI8409:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9131              		.loc 2 159 2 is_stmt 1 view .LVU2265
 9132              	.LBB8410:
 9133              	.LBB8411:
 9134              	.LBB8412:
 9135              	.LBI8412:
 9136              		.loc 9 99 5 view .LVU2266
 9137              		.loc 9 99 5 is_stmt 0 view .LVU2267
 9138              	.LBE8412:
 9139              	.LBB8413:
 9140              	.LBI8413:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9141              		.loc 5 141 7 is_stmt 1 view .LVU2268
 9142              	.LBB8414:
 9143              	.LBI8414:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9144              		.loc 4 83 7 view .LVU2269
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9145              		.loc 4 83 7 is_stmt 0 view .LVU2270
 9146              	.LBE8414:
 9147              	.LBE8413:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9148              		.loc 2 160 46 view .LVU2271
 9149 007a 50AB     		add	r3, sp, #320
 9150              	.LVL669:
ARM GAS  /tmp/ccL95Edz.s 			page 443


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9151              		.loc 2 160 46 view .LVU2272
 9152 007c 4E93     		str	r3, [sp, #312]
 9153              	.LVL670:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9154              		.loc 2 160 46 view .LVU2273
 9155              	.LBE8411:
 9156              	.LBE8410:
 9157              	.LBE8409:
 9158              	.LBB8415:
 9159              	.LBI8415:
 9160              		.loc 5 153 7 is_stmt 1 view .LVU2274
 9161              	.LBB8416:
 9162              	.LBI8416:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9163              		.loc 4 89 7 view .LVU2275
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9164              		.loc 4 89 7 is_stmt 0 view .LVU2276
 9165              	.LBE8416:
 9166              	.LBE8415:
 9167              	.LBB8417:
 9168              	.LBI8417:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9169              		.loc 2 186 7 is_stmt 1 view .LVU2277
 9170              	.LBB8418:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9171              		.loc 2 187 28 is_stmt 0 view .LVU2278
 9172 007e 0A99     		ldr	r1, [sp, #40]
 9173              	.LVL671:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9174              		.loc 2 187 28 view .LVU2279
 9175              	.LBE8418:
 9176              	.LBE8417:
 9177              	.LBB8419:
 9178              	.LBI8419:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9179              		.loc 2 186 7 is_stmt 1 view .LVU2280
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9180              		.loc 2 186 7 is_stmt 0 view .LVU2281
 9181              	.LBE8419:
 9182              	.LBB8420:
 9183              	.LBI8420:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9184              		.loc 2 936 7 is_stmt 1 view .LVU2282
 9185              	.LBB8421:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9186              		.loc 2 937 16 is_stmt 0 view .LVU2283
 9187 0080 0B9A     		ldr	r2, [sp, #44]
 9188              	.LVL672:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9189              		.loc 2 937 16 view .LVU2284
 9190              	.LBE8421:
 9191              	.LBE8420:
 9192              	.LBB8422:
 9193              	.LBI8422:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 9194              		.loc 2 263 9 is_stmt 1 view .LVU2285
ARM GAS  /tmp/ccL95Edz.s 			page 444


 9195              	.LBB8423:
 9196              	.LBB8424:
 9197              	.LBI8424:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 9198              		.loc 2 243 9 view .LVU2286
 9199              	.LBB8425:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9200              		.loc 2 247 11 is_stmt 0 view .LVU2287
 9201 0082 4FF00003 		mov	r3, #0
 9202 0086 0A44     		add	r2, r2, r1
 9203              	.LVL673:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9204              		.loc 2 247 11 view .LVU2288
 9205 0088 4EA8     		add	r0, sp, #312
 9206              	.LVL674:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9207              		.loc 2 247 11 view .LVU2289
 9208 008a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 9209              	.LVL675:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9210              		.loc 2 247 11 view .LVU2290
 9211              	.LBE8425:
 9212              	.LBE8424:
 9213              	.LBE8423:
 9214              	.LBE8422:
 9215              	.LBE8402:
 9216              	.LBE8401:
 9217              	.LBE8400:
 9218              	.LBB8426:
 9219              	.LBI8426:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 9220              		.loc 2 448 7 is_stmt 1 view .LVU2291
 9221              	.LBB8427:
 9222              	.LBB8428:
 9223              	.LBB8429:
 9224              	.LBI8429:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9225              		.loc 2 190 7 view .LVU2292
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9226              		.loc 2 190 7 is_stmt 0 view .LVU2293
 9227              	.LBE8429:
 9228              	.LBB8430:
 9229              	.LBI8430:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9230              		.loc 2 290 7 is_stmt 1 view .LVU2294
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9231              		.loc 2 290 7 is_stmt 0 view .LVU2295
 9232              	.LBE8430:
 9233              	.LBB8431:
 9234              	.LBI8431:
 9235              		.loc 19 97 19 is_stmt 1 view .LVU2296
 9236              	.LBB8432:
 9237              	.LBI8432:
 9238              		.loc 3 514 7 view .LVU2297
 9239              	.LBB8433:
 9240              	.LBI8433:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccL95Edz.s 			page 445


 9241              		.loc 5 141 7 view .LVU2298
 9242              	.LBB8434:
 9243              	.LBI8434:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9244              		.loc 4 83 7 view .LVU2299
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9245              		.loc 4 83 7 is_stmt 0 view .LVU2300
 9246              	.LBE8434:
 9247              	.LBE8433:
 9248              	.LBE8432:
 9249              	.LBE8431:
 9250              	.LBB8435:
 9251              	.LBI8435:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9252              		.loc 2 159 2 is_stmt 1 view .LVU2301
 9253              	.LBB8436:
 9254              	.LBB8437:
 9255              	.LBB8438:
 9256              	.LBI8438:
 9257              		.loc 9 99 5 view .LVU2302
 9258              		.loc 9 99 5 is_stmt 0 view .LVU2303
 9259              	.LBE8438:
 9260              	.LBB8439:
 9261              	.LBI8439:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9262              		.loc 5 141 7 is_stmt 1 view .LVU2304
 9263              	.LBB8440:
 9264              	.LBI8440:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9265              		.loc 4 83 7 view .LVU2305
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9266              		.loc 4 83 7 is_stmt 0 view .LVU2306
 9267              	.LBE8440:
 9268              	.LBE8439:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9269              		.loc 2 160 46 view .LVU2307
 9270 008e 0DF5947A 		add	r10, sp, #296
 9271              	.LVL676:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9272              		.loc 2 160 46 view .LVU2308
 9273 0092 CDF820A1 		str	r10, [sp, #288]
 9274              	.LVL677:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9275              		.loc 2 160 46 view .LVU2309
 9276              	.LBE8437:
 9277              	.LBE8436:
 9278              	.LBE8435:
 9279              	.LBB8441:
 9280              	.LBI8441:
 9281              		.loc 5 153 7 is_stmt 1 view .LVU2310
 9282              	.LBB8442:
 9283              	.LBI8442:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9284              		.loc 4 89 7 view .LVU2311
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9285              		.loc 4 89 7 is_stmt 0 view .LVU2312
 9286              	.LBE8442:
ARM GAS  /tmp/ccL95Edz.s 			page 446


 9287              	.LBE8441:
 9288              	.LBB8443:
 9289              	.LBI8443:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9290              		.loc 2 186 7 is_stmt 1 view .LVU2313
 9291              	.LBB8444:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9292              		.loc 2 187 28 is_stmt 0 view .LVU2314
 9293 0096 1099     		ldr	r1, [sp, #64]
 9294              	.LVL678:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9295              		.loc 2 187 28 view .LVU2315
 9296              	.LBE8444:
 9297              	.LBE8443:
 9298              	.LBB8445:
 9299              	.LBI8445:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9300              		.loc 2 186 7 is_stmt 1 view .LVU2316
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9301              		.loc 2 186 7 is_stmt 0 view .LVU2317
 9302              	.LBE8445:
 9303              	.LBB8446:
 9304              	.LBI8446:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9305              		.loc 2 936 7 is_stmt 1 view .LVU2318
 9306              	.LBB8447:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9307              		.loc 2 937 16 is_stmt 0 view .LVU2319
 9308 0098 119A     		ldr	r2, [sp, #68]
 9309              	.LVL679:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9310              		.loc 2 937 16 view .LVU2320
 9311              	.LBE8447:
 9312              	.LBE8446:
 9313              	.LBB8448:
 9314              	.LBI8448:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 9315              		.loc 2 263 9 is_stmt 1 view .LVU2321
 9316              	.LBB8449:
 9317              	.LBB8450:
 9318              	.LBI8450:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 9319              		.loc 2 243 9 view .LVU2322
 9320              	.LBB8451:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9321              		.loc 2 247 11 is_stmt 0 view .LVU2323
 9322 009a 4FF00003 		mov	r3, #0
 9323 009e 0A44     		add	r2, r2, r1
 9324              	.LVL680:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9325              		.loc 2 247 11 view .LVU2324
 9326 00a0 48A8     		add	r0, sp, #288
 9327              	.LVL681:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9328              		.loc 2 247 11 view .LVU2325
 9329 00a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 9330              	.LVL682:
ARM GAS  /tmp/ccL95Edz.s 			page 447


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9331              		.loc 2 247 11 view .LVU2326
 9332              	.LBE8451:
 9333              	.LBE8450:
 9334              	.LBE8449:
 9335              	.LBE8448:
 9336              	.LBE8428:
 9337              	.LBE8427:
 9338              	.LBE8426:
 137:alohal/cli/cli.hpp ****         commands.emplace_back(new Command<registrator_class>(command, help, object, method));
 9339              		.loc 21 137 31 view .LVU2327
 9340 00a6 4420     		movs	r0, #68
 9341 00a8 FFF7FEFF 		bl	_Znwj
 9342              	.LVL683:
 9343 00ac 0546     		mov	r5, r0
 9344              	.LVL684:
 9345              		.loc 21 137 31 view .LVU2328
 9346 00ae 02AF     		add	r7, sp, #8
 9347 00b0 98E80300 		ldm	r8, {r0, r1}
 9348              	.LVL685:
 9349              		.loc 21 137 31 view .LVU2329
 9350 00b4 87E80300 		stm	r7, {r0, r1}
 9351              	.LBB8452:
 9352              	.LBI8452:
  71:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
 9353              		.loc 18 71 5 is_stmt 1 view .LVU2330
 9354              	.LVL686:
 9355              	.LBB8453:
 9356              	.LBB8454:
 9357              	.LBI8454:
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 9358              		.loc 18 16 5 view .LVU2331
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 9359              		.loc 18 16 5 is_stmt 0 view .LVU2332
 9360              	.LBE8454:
  72:alohal/cli/command.hpp ****     {}
 9361              		.loc 18 72 81 view .LVU2333
 9362 00b8 2846     		mov	r0, r5
 9363 00ba 994B     		ldr	r3, .L272+16
 9364 00bc 40F8043B 		str	r3, [r0], #4
 9365              	.LVL687:
 9366              	.LBB8455:
 9367              	.LBI8455:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 9368              		.loc 2 448 7 is_stmt 1 view .LVU2334
 9369              	.LBB8456:
 9370              	.LBB8457:
 9371              	.LBI8457:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9372              		.loc 2 190 7 view .LVU2335
 9373              	.LBB8458:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9374              		.loc 2 193 51 is_stmt 0 view .LVU2336
 9375 00c0 05F10C03 		add	r3, r5, #12
 9376              	.LVL688:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9377              		.loc 2 193 51 view .LVU2337
ARM GAS  /tmp/ccL95Edz.s 			page 448


 9378              	.LBE8458:
 9379              	.LBE8457:
 9380              	.LBB8459:
 9381              	.LBI8459:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9382              		.loc 2 290 7 is_stmt 1 view .LVU2338
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9383              		.loc 2 290 7 is_stmt 0 view .LVU2339
 9384              	.LBE8459:
 9385              	.LBB8460:
 9386              	.LBI8460:
 9387              		.loc 19 97 19 is_stmt 1 view .LVU2340
 9388              	.LBB8461:
 9389              	.LBI8461:
 9390              		.loc 3 514 7 view .LVU2341
 9391              	.LBB8462:
 9392              	.LBI8462:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9393              		.loc 5 141 7 view .LVU2342
 9394              	.LBB8463:
 9395              	.LBI8463:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9396              		.loc 4 83 7 view .LVU2343
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9397              		.loc 4 83 7 is_stmt 0 view .LVU2344
 9398              	.LBE8463:
 9399              	.LBE8462:
 9400              	.LBE8461:
 9401              	.LBE8460:
 9402              	.LBB8464:
 9403              	.LBI8464:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9404              		.loc 2 159 2 is_stmt 1 view .LVU2345
 9405              	.LBB8465:
 9406              	.LBB8466:
 9407              	.LBI8466:
 9408              		.loc 9 99 5 view .LVU2346
 9409              		.loc 9 99 5 is_stmt 0 view .LVU2347
 9410              	.LBE8466:
 9411              	.LBB8467:
 9412              	.LBI8467:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9413              		.loc 5 141 7 is_stmt 1 view .LVU2348
 9414              	.LBB8468:
 9415              	.LBI8468:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9416              		.loc 4 83 7 view .LVU2349
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9417              		.loc 4 83 7 is_stmt 0 view .LVU2350
 9418              	.LBE8468:
 9419              	.LBE8467:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9420              		.loc 2 160 46 view .LVU2351
 9421 00c4 6B60     		str	r3, [r5, #4]
 9422              	.LVL689:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9423              		.loc 2 160 46 view .LVU2352
ARM GAS  /tmp/ccL95Edz.s 			page 449


 9424              	.LBE8465:
 9425              	.LBE8464:
 9426              	.LBB8469:
 9427              	.LBI8469:
 9428              		.loc 5 153 7 is_stmt 1 view .LVU2353
 9429              	.LBB8470:
 9430              	.LBI8470:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9431              		.loc 4 89 7 view .LVU2354
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9432              		.loc 4 89 7 is_stmt 0 view .LVU2355
 9433              	.LBE8470:
 9434              	.LBE8469:
 9435              	.LBB8471:
 9436              	.LBI8471:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9437              		.loc 2 186 7 is_stmt 1 view .LVU2356
 9438              	.LBB8472:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9439              		.loc 2 187 28 is_stmt 0 view .LVU2357
 9440 00c6 4E99     		ldr	r1, [sp, #312]
 9441              	.LVL690:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9442              		.loc 2 187 28 view .LVU2358
 9443              	.LBE8472:
 9444              	.LBE8471:
 9445              	.LBB8473:
 9446              	.LBI8473:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9447              		.loc 2 186 7 is_stmt 1 view .LVU2359
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9448              		.loc 2 186 7 is_stmt 0 view .LVU2360
 9449              	.LBE8473:
 9450              	.LBB8474:
 9451              	.LBI8474:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9452              		.loc 2 936 7 is_stmt 1 view .LVU2361
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9453              		.loc 2 936 7 is_stmt 0 view .LVU2362
 9454              	.LBE8474:
 9455              	.LBB8475:
 9456              	.LBI8475:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 9457              		.loc 2 263 9 is_stmt 1 view .LVU2363
 9458              	.LBB8476:
 9459              	.LBB8477:
 9460              	.LBI8477:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 9461              		.loc 2 243 9 view .LVU2364
 9462              	.LBB8478:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9463              		.loc 2 247 11 is_stmt 0 view .LVU2365
 9464 00c8 4FF00003 		mov	r3, #0
 9465 00cc 4F9A     		ldr	r2, [sp, #316]
 9466 00ce 0A44     		add	r2, r2, r1
 9467              	.LVL691:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 450


 9468              		.loc 2 247 11 view .LVU2366
 9469 00d0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 9470              	.LVL692:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9471              		.loc 2 247 11 view .LVU2367
 9472              	.LBE8478:
 9473              	.LBE8477:
 9474              	.LBE8476:
 9475              	.LBE8475:
 9476              	.LBE8456:
 9477              	.LBE8455:
 9478              	.LBB8479:
 9479              	.LBI8479:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 9480              		.loc 2 448 7 is_stmt 1 view .LVU2368
 9481              	.LBB8480:
 9482              	.LBB8481:
 9483              	.LBI8481:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9484              		.loc 2 190 7 view .LVU2369
 9485              	.LBB8482:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9486              		.loc 2 193 51 is_stmt 0 view .LVU2370
 9487 00d4 05F12403 		add	r3, r5, #36
 9488              	.LVL693:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9489              		.loc 2 193 51 view .LVU2371
 9490              	.LBE8482:
 9491              	.LBE8481:
 9492              	.LBB8483:
 9493              	.LBI8483:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9494              		.loc 2 290 7 is_stmt 1 view .LVU2372
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9495              		.loc 2 290 7 is_stmt 0 view .LVU2373
 9496              	.LBE8483:
 9497              	.LBB8484:
 9498              	.LBI8484:
 9499              		.loc 19 97 19 is_stmt 1 view .LVU2374
 9500              	.LBB8485:
 9501              	.LBI8485:
 9502              		.loc 3 514 7 view .LVU2375
 9503              	.LBB8486:
 9504              	.LBI8486:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9505              		.loc 5 141 7 view .LVU2376
 9506              	.LBB8487:
 9507              	.LBI8487:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9508              		.loc 4 83 7 view .LVU2377
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9509              		.loc 4 83 7 is_stmt 0 view .LVU2378
 9510              	.LBE8487:
 9511              	.LBE8486:
 9512              	.LBE8485:
 9513              	.LBE8484:
 9514              	.LBB8488:
ARM GAS  /tmp/ccL95Edz.s 			page 451


 9515              	.LBI8488:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9516              		.loc 2 159 2 is_stmt 1 view .LVU2379
 9517              	.LBB8489:
 9518              	.LBB8490:
 9519              	.LBI8490:
 9520              		.loc 9 99 5 view .LVU2380
 9521              		.loc 9 99 5 is_stmt 0 view .LVU2381
 9522              	.LBE8490:
 9523              	.LBB8491:
 9524              	.LBI8491:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9525              		.loc 5 141 7 is_stmt 1 view .LVU2382
 9526              	.LBB8492:
 9527              	.LBI8492:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9528              		.loc 4 83 7 view .LVU2383
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9529              		.loc 4 83 7 is_stmt 0 view .LVU2384
 9530              	.LBE8492:
 9531              	.LBE8491:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9532              		.loc 2 160 46 view .LVU2385
 9533 00d8 EB61     		str	r3, [r5, #28]
 9534              	.LVL694:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9535              		.loc 2 160 46 view .LVU2386
 9536              	.LBE8489:
 9537              	.LBE8488:
 9538              	.LBB8493:
 9539              	.LBI8493:
 9540              		.loc 5 153 7 is_stmt 1 view .LVU2387
 9541              	.LBB8494:
 9542              	.LBI8494:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9543              		.loc 4 89 7 view .LVU2388
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9544              		.loc 4 89 7 is_stmt 0 view .LVU2389
 9545              	.LBE8494:
 9546              	.LBE8493:
 9547              	.LBB8495:
 9548              	.LBI8495:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9549              		.loc 2 186 7 is_stmt 1 view .LVU2390
 9550              	.LBB8496:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9551              		.loc 2 187 28 is_stmt 0 view .LVU2391
 9552 00da 4899     		ldr	r1, [sp, #288]
 9553              	.LVL695:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9554              		.loc 2 187 28 view .LVU2392
 9555              	.LBE8496:
 9556              	.LBE8495:
 9557              	.LBB8497:
 9558              	.LBI8497:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9559              		.loc 2 186 7 is_stmt 1 view .LVU2393
ARM GAS  /tmp/ccL95Edz.s 			page 452


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9560              		.loc 2 186 7 is_stmt 0 view .LVU2394
 9561              	.LBE8497:
 9562              	.LBB8498:
 9563              	.LBI8498:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9564              		.loc 2 936 7 is_stmt 1 view .LVU2395
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9565              		.loc 2 936 7 is_stmt 0 view .LVU2396
 9566              	.LBE8498:
 9567              	.LBB8499:
 9568              	.LBI8499:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 9569              		.loc 2 263 9 is_stmt 1 view .LVU2397
 9570              	.LBB8500:
 9571              	.LBB8501:
 9572              	.LBI8501:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 9573              		.loc 2 243 9 view .LVU2398
 9574              	.LBB8502:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9575              		.loc 2 247 11 is_stmt 0 view .LVU2399
 9576 00dc 4FF00003 		mov	r3, #0
 9577 00e0 499A     		ldr	r2, [sp, #292]
 9578 00e2 0A44     		add	r2, r2, r1
 9579              	.LVL696:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9580              		.loc 2 247 11 view .LVU2400
 9581 00e4 05F11C00 		add	r0, r5, #28
 9582              	.LVL697:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9583              		.loc 2 247 11 view .LVU2401
 9584 00e8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 9585              	.LVL698:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9586              		.loc 2 247 11 view .LVU2402
 9587              	.LBE8502:
 9588              	.LBE8501:
 9589              	.LBE8500:
 9590              	.LBE8499:
 9591              	.LBE8480:
 9592              	.LBE8479:
  72:alohal/cli/command.hpp ****     {}
 9593              		.loc 18 72 81 view .LVU2403
 9594 00ec 6C63     		str	r4, [r5, #52]
 9595 00ee 05F13803 		add	r3, r5, #56
 9596 00f2 97E80300 		ldm	r7, {r0, r1}
 9597 00f6 83E80300 		stm	r3, {r0, r1}
 9598 00fa C5F84090 		str	r9, [r5, #64]
 9599              	.LVL699:
  72:alohal/cli/command.hpp ****     {}
 9600              		.loc 18 72 81 view .LVU2404
 9601              	.LBE8453:
 9602              	.LBE8452:
 9603              		.loc 21 137 9 view .LVU2405
 9604 00fe 5495     		str	r5, [sp, #336]
 9605 0100 54A9     		add	r1, sp, #336
ARM GAS  /tmp/ccL95Edz.s 			page 453


 9606 0102 06F16800 		add	r0, r6, #104
 9607 0106 FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_
 9608              	.LVL700:
 9609              	.LBB8503:
 9610              	.LBI8503:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 9611              		.loc 2 657 7 is_stmt 1 view .LVU2406
 9612              	.LBB8504:
 9613              	.LBI8504:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9614              		.loc 2 229 7 view .LVU2407
 9615              	.LBB8505:
 9616              	.LBB8506:
 9617              	.LBI8506:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9618              		.loc 2 221 7 view .LVU2408
 9619              	.LBB8507:
 9620              	.LBI8507:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9621              		.loc 2 186 7 view .LVU2409
 9622              	.LBB8508:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9623              		.loc 2 187 28 is_stmt 0 view .LVU2410
 9624 010a 4898     		ldr	r0, [sp, #288]
 9625              	.LVL701:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9626              		.loc 2 187 28 view .LVU2411
 9627              	.LBE8508:
 9628              	.LBE8507:
 9629              	.LBB8509:
 9630              	.LBI8509:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9631              		.loc 2 200 7 is_stmt 1 view .LVU2412
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9632              		.loc 2 200 7 is_stmt 0 view .LVU2413
 9633              	.LBE8509:
 9634              	.LBE8506:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9635              		.loc 2 231 2 view .LVU2414
 9636 010c 5045     		cmp	r0, r10
 9637 010e 01D0     		beq	.L254
 9638              	.LVL702:
 9639              	.LBB8510:
 9640              	.LBI8510:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9641              		.loc 2 236 7 is_stmt 1 view .LVU2415
 9642              	.LBB8511:
 9643              	.LBB8512:
 9644              	.LBI8512:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9645              		.loc 3 469 7 view .LVU2416
 9646              	.LBB8513:
 9647              	.LBI8513:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 9648              		.loc 4 119 7 view .LVU2417
 9649              	.LBB8514:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 454


 9650              		.loc 4 128 19 is_stmt 0 view .LVU2418
 9651 0110 FFF7FEFF 		bl	_ZdlPv
 9652              	.LVL703:
 9653              	.L254:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9654              		.loc 4 128 19 view .LVU2419
 9655              	.LBE8514:
 9656              	.LBE8513:
 9657              	.LBE8512:
 9658              	.LBE8511:
 9659              	.LBE8510:
 9660              	.LBE8505:
 9661              	.LBE8504:
 9662              	.LBB8515:
 9663              	.LBI8515:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9664              		.loc 2 150 14 is_stmt 1 view .LVU2420
 9665              	.LBB8516:
 9666              	.LBI8516:
 9667              		.loc 5 153 7 view .LVU2421
 9668              	.LBB8517:
 9669              	.LBI8517:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9670              		.loc 4 89 7 view .LVU2422
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9671              		.loc 4 89 7 is_stmt 0 view .LVU2423
 9672              	.LBE8517:
 9673              	.LBE8516:
 9674              	.LBE8515:
 9675              	.LBE8503:
 9676              	.LBB8518:
 9677              	.LBI8518:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 9678              		.loc 2 657 7 is_stmt 1 view .LVU2424
 9679              	.LBB8519:
 9680              	.LBI8519:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9681              		.loc 2 229 7 view .LVU2425
 9682              	.LBB8520:
 9683              	.LBB8521:
 9684              	.LBI8521:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9685              		.loc 2 221 7 view .LVU2426
 9686              	.LBB8522:
 9687              	.LBI8522:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9688              		.loc 2 186 7 view .LVU2427
 9689              	.LBB8523:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9690              		.loc 2 187 28 is_stmt 0 view .LVU2428
 9691 0114 4E98     		ldr	r0, [sp, #312]
 9692              	.LVL704:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9693              		.loc 2 187 28 view .LVU2429
 9694              	.LBE8523:
 9695              	.LBE8522:
 9696              	.LBB8524:
ARM GAS  /tmp/ccL95Edz.s 			page 455


 9697              	.LBI8524:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9698              		.loc 2 200 7 is_stmt 1 view .LVU2430
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9699              		.loc 2 200 7 is_stmt 0 view .LVU2431
 9700              	.LBE8524:
 9701              	.LBE8521:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9702              		.loc 2 231 2 view .LVU2432
 9703 0116 50AB     		add	r3, sp, #320
 9704 0118 9842     		cmp	r0, r3
 9705 011a 01D0     		beq	.L255
 9706              	.LVL705:
 9707              	.LBB8525:
 9708              	.LBI8525:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9709              		.loc 2 236 7 is_stmt 1 view .LVU2433
 9710              	.LBB8526:
 9711              	.LBB8527:
 9712              	.LBI8527:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9713              		.loc 3 469 7 view .LVU2434
 9714              	.LBB8528:
 9715              	.LBI8528:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 9716              		.loc 4 119 7 view .LVU2435
 9717              	.LBB8529:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9718              		.loc 4 128 19 is_stmt 0 view .LVU2436
 9719 011c FFF7FEFF 		bl	_ZdlPv
 9720              	.LVL706:
 9721              	.L255:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9722              		.loc 4 128 19 view .LVU2437
 9723              	.LBE8529:
 9724              	.LBE8528:
 9725              	.LBE8527:
 9726              	.LBE8526:
 9727              	.LBE8525:
 9728              	.LBE8520:
 9729              	.LBE8519:
 9730              	.LBB8530:
 9731              	.LBI8530:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9732              		.loc 2 150 14 is_stmt 1 view .LVU2438
 9733              	.LBB8531:
 9734              	.LBI8531:
 9735              		.loc 5 153 7 view .LVU2439
 9736              	.LBB8532:
 9737              	.LBI8532:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9738              		.loc 4 89 7 view .LVU2440
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9739              		.loc 4 89 7 is_stmt 0 view .LVU2441
 9740              	.LBE8532:
 9741              	.LBE8531:
 9742              	.LBE8530:
ARM GAS  /tmp/ccL95Edz.s 			page 456


 9743              	.LBE8518:
 9744              	.LBE8399:
 9745              	.LBE8398:
 9746              	.LBB8533:
 9747              	.LBI8533:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 9748              		.loc 2 657 7 is_stmt 1 view .LVU2442
 9749              	.LBB8534:
 9750              	.LBI8534:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9751              		.loc 2 229 7 view .LVU2443
 9752              	.LBB8535:
 9753              	.LBB8536:
 9754              	.LBI8536:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9755              		.loc 2 221 7 view .LVU2444
 9756              	.LBB8537:
 9757              	.LBI8537:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9758              		.loc 2 186 7 view .LVU2445
 9759              	.LBB8538:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9760              		.loc 2 187 28 is_stmt 0 view .LVU2446
 9761 0120 1098     		ldr	r0, [sp, #64]
 9762              	.LVL707:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9763              		.loc 2 187 28 view .LVU2447
 9764              	.LBE8538:
 9765              	.LBE8537:
 9766              	.LBB8539:
 9767              	.LBI8539:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9768              		.loc 2 200 7 is_stmt 1 view .LVU2448
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9769              		.loc 2 200 7 is_stmt 0 view .LVU2449
 9770              	.LBE8539:
 9771              	.LBE8536:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9772              		.loc 2 231 2 view .LVU2450
 9773 0122 12AB     		add	r3, sp, #72
 9774 0124 9842     		cmp	r0, r3
 9775 0126 01D0     		beq	.L256
 9776              	.LVL708:
 9777              	.LBB8540:
 9778              	.LBI8540:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9779              		.loc 2 236 7 is_stmt 1 view .LVU2451
 9780              	.LBB8541:
 9781              	.LBB8542:
 9782              	.LBI8542:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9783              		.loc 3 469 7 view .LVU2452
 9784              	.LBB8543:
 9785              	.LBI8543:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 9786              		.loc 4 119 7 view .LVU2453
 9787              	.LBB8544:
ARM GAS  /tmp/ccL95Edz.s 			page 457


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9788              		.loc 4 128 19 is_stmt 0 view .LVU2454
 9789 0128 FFF7FEFF 		bl	_ZdlPv
 9790              	.LVL709:
 9791              	.L256:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9792              		.loc 4 128 19 view .LVU2455
 9793              	.LBE8544:
 9794              	.LBE8543:
 9795              	.LBE8542:
 9796              	.LBE8541:
 9797              	.LBE8540:
 9798              	.LBE8535:
 9799              	.LBE8534:
 9800              	.LBB8545:
 9801              	.LBI8545:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9802              		.loc 2 150 14 is_stmt 1 view .LVU2456
 9803              	.LBB8546:
 9804              	.LBI8546:
 9805              		.loc 5 153 7 view .LVU2457
 9806              	.LBB8547:
 9807              	.LBI8547:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9808              		.loc 4 89 7 view .LVU2458
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9809              		.loc 4 89 7 is_stmt 0 view .LVU2459
 9810              	.LBE8547:
 9811              	.LBE8546:
 9812              	.LBE8545:
 9813              	.LBE8533:
 9814              	.LBB8548:
 9815              	.LBI8548:
 9816              		.loc 5 153 7 is_stmt 1 view .LVU2460
 9817              	.LBB8549:
 9818              	.LBI8549:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9819              		.loc 4 89 7 view .LVU2461
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9820              		.loc 4 89 7 is_stmt 0 view .LVU2462
 9821              	.LBE8549:
 9822              	.LBE8548:
 9823              	.LBB8550:
 9824              	.LBI8550:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 9825              		.loc 2 657 7 is_stmt 1 view .LVU2463
 9826              	.LBB8551:
 9827              	.LBI8551:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9828              		.loc 2 229 7 view .LVU2464
 9829              	.LBB8552:
 9830              	.LBB8553:
 9831              	.LBI8553:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9832              		.loc 2 221 7 view .LVU2465
 9833              	.LBB8554:
 9834              	.LBI8554:
ARM GAS  /tmp/ccL95Edz.s 			page 458


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9835              		.loc 2 186 7 view .LVU2466
 9836              	.LBB8555:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9837              		.loc 2 187 28 is_stmt 0 view .LVU2467
 9838 012c 0A98     		ldr	r0, [sp, #40]
 9839              	.LVL710:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9840              		.loc 2 187 28 view .LVU2468
 9841              	.LBE8555:
 9842              	.LBE8554:
 9843              	.LBB8556:
 9844              	.LBI8556:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9845              		.loc 2 200 7 is_stmt 1 view .LVU2469
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9846              		.loc 2 200 7 is_stmt 0 view .LVU2470
 9847              	.LBE8556:
 9848              	.LBE8553:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9849              		.loc 2 231 2 view .LVU2471
 9850 012e 0CAB     		add	r3, sp, #48
 9851 0130 9842     		cmp	r0, r3
 9852 0132 01D0     		beq	.L257
 9853              	.LVL711:
 9854              	.LBB8557:
 9855              	.LBI8557:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9856              		.loc 2 236 7 is_stmt 1 view .LVU2472
 9857              	.LBB8558:
 9858              	.LBB8559:
 9859              	.LBI8559:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9860              		.loc 3 469 7 view .LVU2473
 9861              	.LBB8560:
 9862              	.LBI8560:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 9863              		.loc 4 119 7 view .LVU2474
 9864              	.LBB8561:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9865              		.loc 4 128 19 is_stmt 0 view .LVU2475
 9866 0134 FFF7FEFF 		bl	_ZdlPv
 9867              	.LVL712:
 9868              	.L257:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9869              		.loc 4 128 19 view .LVU2476
 9870              	.LBE8561:
 9871              	.LBE8560:
 9872              	.LBE8559:
 9873              	.LBE8558:
 9874              	.LBE8557:
 9875              	.LBE8552:
 9876              	.LBE8551:
 9877              	.LBB8562:
 9878              	.LBI8562:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9879              		.loc 2 150 14 is_stmt 1 view .LVU2477
ARM GAS  /tmp/ccL95Edz.s 			page 459


 9880              	.LBB8563:
 9881              	.LBI8563:
 9882              		.loc 5 153 7 view .LVU2478
 9883              	.LBB8564:
 9884              	.LBI8564:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9885              		.loc 4 89 7 view .LVU2479
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9886              		.loc 4 89 7 is_stmt 0 view .LVU2480
 9887              	.LBE8564:
 9888              	.LBE8563:
 9889              	.LBE8562:
 9890              	.LBE8550:
 9891              	.LBB8565:
 9892              	.LBI8565:
 9893              		.loc 5 153 7 is_stmt 1 view .LVU2481
 9894              	.LBB8566:
 9895              	.LBI8566:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9896              		.loc 4 89 7 view .LVU2482
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9897              		.loc 4 89 7 is_stmt 0 view .LVU2483
 9898              	.LBE8566:
 9899              	.LBE8565:
   6:alohal/filesystem/filesystem.cpp ****     cli->Register_command("pwd", "pwd as in Linux", this, &Filesystem::Command_pwd);
 9900              		.loc 17 6 5 is_stmt 1 view .LVU2484
 9901              	.LBB8567:
 9902              	.LBI8567:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 9903              		.loc 5 138 7 view .LVU2485
 9904              	.LBB8568:
 9905              	.LBI8568:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9906              		.loc 4 80 7 view .LVU2486
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9907              		.loc 4 80 7 is_stmt 0 view .LVU2487
 9908              	.LBE8568:
 9909              	.LBE8567:
 9910              	.LBB8569:
 9911              	.LBI8569:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 9912              		.loc 2 525 7 is_stmt 1 view .LVU2488
 9913              	.LBB8570:
 9914              	.LBB8571:
 9915              	.LBB8572:
 9916              	.LBI8572:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9917              		.loc 2 190 7 view .LVU2489
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9918              		.loc 2 190 7 is_stmt 0 view .LVU2490
 9919              	.LBE8572:
 9920              	.LBB8573:
 9921              	.LBI8573:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 9922              		.loc 2 156 2 is_stmt 1 view .LVU2491
 9923              	.LBB8574:
 9924              	.LBB8575:
ARM GAS  /tmp/ccL95Edz.s 			page 460


 9925              	.LBB8576:
 9926              	.LBI8576:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9927              		.loc 5 141 7 view .LVU2492
 9928              	.LBB8577:
 9929              	.LBI8577:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9930              		.loc 4 83 7 view .LVU2493
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9931              		.loc 4 83 7 is_stmt 0 view .LVU2494
 9932              	.LBE8577:
 9933              	.LBE8576:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9934              		.loc 2 157 35 view .LVU2495
 9935 0138 1AAB     		add	r3, sp, #104
 9936              	.LVL713:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9937              		.loc 2 157 35 view .LVU2496
 9938 013a 1893     		str	r3, [sp, #96]
 9939              	.LVL714:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9940              		.loc 2 157 35 view .LVU2497
 9941              	.LBE8575:
 9942              	.LBE8574:
 9943              	.LBE8573:
 9944              	.LBB8578:
 9945              	.LBI8578:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 9946              		.loc 8 329 7 is_stmt 1 view .LVU2498
 9947              	.LBE8578:
 9948              	.LBE8571:
 9949              	.LBE8570:
 9950              	.LBE8569:
 9951              	.LBE9205:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 9952              		.loc 8 332 2 view .LVU2499
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 9953              		.loc 8 335 2 view .LVU2500
 9954              	.LBB9206:
 9955              	.LBB8585:
 9956              	.LBB8584:
 9957              	.LBB8583:
 9958              	.LBB8579:
 9959              	.LBI8579:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 9960              		.loc 2 263 9 view .LVU2501
 9961              	.LBB8580:
 9962              	.LBB8581:
 9963              	.LBI8581:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 9964              		.loc 2 243 9 view .LVU2502
 9965              	.LBB8582:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9966              		.loc 2 247 11 is_stmt 0 view .LVU2503
 9967 013c 794A     		ldr	r2, .L272+20
 9968              	.LVL715:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 461


 9969              		.loc 2 247 11 view .LVU2504
 9970 013e 4FF00003 		mov	r3, #0
 9971 0142 911E     		subs	r1, r2, #2
 9972 0144 18A8     		add	r0, sp, #96
 9973              	.LVL716:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9974              		.loc 2 247 11 view .LVU2505
 9975 0146 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 9976              	.LVL717:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9977              		.loc 2 247 11 view .LVU2506
 9978              	.LBE8582:
 9979              	.LBE8581:
 9980              	.LBE8580:
 9981              	.LBE8579:
 9982              	.LBE8583:
 9983              	.LBE8584:
 9984              	.LBE8585:
 9985              	.LBB8586:
 9986              	.LBI8586:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 9987              		.loc 5 138 7 is_stmt 1 view .LVU2507
 9988              	.LBB8587:
 9989              	.LBI8587:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9990              		.loc 4 80 7 view .LVU2508
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9991              		.loc 4 80 7 is_stmt 0 view .LVU2509
 9992              	.LBE8587:
 9993              	.LBE8586:
 9994              	.LBB8588:
 9995              	.LBI8588:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 9996              		.loc 2 525 7 is_stmt 1 view .LVU2510
 9997              	.LBB8589:
 9998              	.LBB8590:
 9999              	.LBB8591:
 10000              	.LBI8591:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10001              		.loc 2 190 7 view .LVU2511
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10002              		.loc 2 190 7 is_stmt 0 view .LVU2512
 10003              	.LBE8591:
 10004              	.LBB8592:
 10005              	.LBI8592:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 10006              		.loc 2 156 2 is_stmt 1 view .LVU2513
 10007              	.LBB8593:
 10008              	.LBB8594:
 10009              	.LBB8595:
 10010              	.LBI8595:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10011              		.loc 5 141 7 view .LVU2514
 10012              	.LBB8596:
 10013              	.LBI8596:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10014              		.loc 4 83 7 view .LVU2515
ARM GAS  /tmp/ccL95Edz.s 			page 462


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10015              		.loc 4 83 7 is_stmt 0 view .LVU2516
 10016              	.LBE8596:
 10017              	.LBE8595:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10018              		.loc 2 157 35 view .LVU2517
 10019 014a 20AB     		add	r3, sp, #128
 10020              	.LVL718:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10021              		.loc 2 157 35 view .LVU2518
 10022 014c 1E93     		str	r3, [sp, #120]
 10023              	.LVL719:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10024              		.loc 2 157 35 view .LVU2519
 10025              	.LBE8594:
 10026              	.LBE8593:
 10027              	.LBE8592:
 10028              	.LBB8597:
 10029              	.LBI8597:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 10030              		.loc 8 329 7 is_stmt 1 view .LVU2520
 10031              	.LBE8597:
 10032              	.LBE8590:
 10033              	.LBE8589:
 10034              	.LBE8588:
 10035              	.LBE9206:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 10036              		.loc 8 332 2 view .LVU2521
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 10037              		.loc 8 335 2 view .LVU2522
 10038              	.LBB9207:
 10039              	.LBB8604:
 10040              	.LBB8603:
 10041              	.LBB8602:
 10042              	.LBB8598:
 10043              	.LBI8598:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10044              		.loc 2 263 9 view .LVU2523
 10045              	.LBB8599:
 10046              	.LBB8600:
 10047              	.LBI8600:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10048              		.loc 2 243 9 view .LVU2524
 10049              	.LBB8601:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10050              		.loc 2 247 11 is_stmt 0 view .LVU2525
 10051 014e 764A     		ldr	r2, .L272+24
 10052              	.LVL720:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10053              		.loc 2 247 11 view .LVU2526
 10054 0150 4FF00003 		mov	r3, #0
 10055 0154 A2F10E01 		sub	r1, r2, #14
 10056 0158 1EA8     		add	r0, sp, #120
 10057              	.LVL721:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10058              		.loc 2 247 11 view .LVU2527
 10059 015a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
ARM GAS  /tmp/ccL95Edz.s 			page 463


 10060              	.LVL722:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10061              		.loc 2 247 11 view .LVU2528
 10062              	.LBE8601:
 10063              	.LBE8600:
 10064              	.LBE8599:
 10065              	.LBE8598:
 10066              	.LBE8602:
 10067              	.LBE8603:
 10068              	.LBE8604:
   6:alohal/filesystem/filesystem.cpp ****     cli->Register_command("pwd", "pwd as in Linux", this, &Filesystem::Command_pwd);
 10069              		.loc 17 6 26 view .LVU2529
 10070 015e 24AB     		add	r3, sp, #144
 10071 0160 724A     		ldr	r2, .L272+28
 10072 0162 2492     		str	r2, [sp, #144]
 10073 0164 4FF00009 		mov	r9, #0
 10074 0168 CDF89490 		str	r9, [sp, #148]
 10075              	.LVL723:
   6:alohal/filesystem/filesystem.cpp ****     cli->Register_command("pwd", "pwd as in Linux", this, &Filesystem::Command_pwd);
 10076              		.loc 17 6 26 view .LVU2530
 10077 016c E846     		mov	r8, sp
 10078 016e 93E80300 		ldm	r3, {r0, r1}
 10079 0172 88E80300 		stm	r8, {r0, r1}
 10080              	.LBB8605:
 10081              	.LBI8605:
 136:alohal/cli/cli.hpp ****         commands.emplace_back(new Command<registrator_class>(command, help, object, method));
 10082              		.loc 21 136 10 is_stmt 1 view .LVU2531
 10083              	.LVL724:
 10084              	.LBB8606:
 10085              	.LBB8607:
 10086              	.LBI8607:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 10087              		.loc 2 448 7 view .LVU2532
 10088              	.LBB8608:
 10089              	.LBB8609:
 10090              	.LBB8610:
 10091              	.LBI8610:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10092              		.loc 2 190 7 view .LVU2533
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10093              		.loc 2 190 7 is_stmt 0 view .LVU2534
 10094              	.LBE8610:
 10095              	.LBB8611:
 10096              	.LBI8611:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10097              		.loc 2 290 7 is_stmt 1 view .LVU2535
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10098              		.loc 2 290 7 is_stmt 0 view .LVU2536
 10099              	.LBE8611:
 10100              	.LBB8612:
 10101              	.LBI8612:
 10102              		.loc 19 97 19 is_stmt 1 view .LVU2537
 10103              	.LBB8613:
 10104              	.LBI8613:
 10105              		.loc 3 514 7 view .LVU2538
 10106              	.LBB8614:
 10107              	.LBI8614:
ARM GAS  /tmp/ccL95Edz.s 			page 464


 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10108              		.loc 5 141 7 view .LVU2539
 10109              	.LBB8615:
 10110              	.LBI8615:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10111              		.loc 4 83 7 view .LVU2540
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10112              		.loc 4 83 7 is_stmt 0 view .LVU2541
 10113              	.LBE8615:
 10114              	.LBE8614:
 10115              	.LBE8613:
 10116              	.LBE8612:
 10117              	.LBB8616:
 10118              	.LBI8616:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10119              		.loc 2 159 2 is_stmt 1 view .LVU2542
 10120              	.LBB8617:
 10121              	.LBB8618:
 10122              	.LBB8619:
 10123              	.LBI8619:
 10124              		.loc 9 99 5 view .LVU2543
 10125              		.loc 9 99 5 is_stmt 0 view .LVU2544
 10126              	.LBE8619:
 10127              	.LBB8620:
 10128              	.LBI8620:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10129              		.loc 5 141 7 is_stmt 1 view .LVU2545
 10130              	.LBB8621:
 10131              	.LBI8621:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10132              		.loc 4 83 7 view .LVU2546
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10133              		.loc 4 83 7 is_stmt 0 view .LVU2547
 10134              	.LBE8621:
 10135              	.LBE8620:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10136              		.loc 2 160 46 view .LVU2548
 10137 0176 5DAB     		add	r3, sp, #372
 10138              	.LVL725:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10139              		.loc 2 160 46 view .LVU2549
 10140 0178 5B93     		str	r3, [sp, #364]
 10141              	.LVL726:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10142              		.loc 2 160 46 view .LVU2550
 10143              	.LBE8618:
 10144              	.LBE8617:
 10145              	.LBE8616:
 10146              	.LBB8622:
 10147              	.LBI8622:
 10148              		.loc 5 153 7 is_stmt 1 view .LVU2551
 10149              	.LBB8623:
 10150              	.LBI8623:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10151              		.loc 4 89 7 view .LVU2552
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10152              		.loc 4 89 7 is_stmt 0 view .LVU2553
ARM GAS  /tmp/ccL95Edz.s 			page 465


 10153              	.LBE8623:
 10154              	.LBE8622:
 10155              	.LBB8624:
 10156              	.LBI8624:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10157              		.loc 2 186 7 is_stmt 1 view .LVU2554
 10158              	.LBB8625:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10159              		.loc 2 187 28 is_stmt 0 view .LVU2555
 10160 017a 1899     		ldr	r1, [sp, #96]
 10161              	.LVL727:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10162              		.loc 2 187 28 view .LVU2556
 10163              	.LBE8625:
 10164              	.LBE8624:
 10165              	.LBB8626:
 10166              	.LBI8626:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10167              		.loc 2 186 7 is_stmt 1 view .LVU2557
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10168              		.loc 2 186 7 is_stmt 0 view .LVU2558
 10169              	.LBE8626:
 10170              	.LBB8627:
 10171              	.LBI8627:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10172              		.loc 2 936 7 is_stmt 1 view .LVU2559
 10173              	.LBB8628:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10174              		.loc 2 937 16 is_stmt 0 view .LVU2560
 10175 017c 199A     		ldr	r2, [sp, #100]
 10176              	.LVL728:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10177              		.loc 2 937 16 view .LVU2561
 10178              	.LBE8628:
 10179              	.LBE8627:
 10180              	.LBB8629:
 10181              	.LBI8629:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10182              		.loc 2 263 9 is_stmt 1 view .LVU2562
 10183              	.LBB8630:
 10184              	.LBB8631:
 10185              	.LBI8631:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10186              		.loc 2 243 9 view .LVU2563
 10187              	.LBB8632:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10188              		.loc 2 247 11 is_stmt 0 view .LVU2564
 10189 017e 4FF00003 		mov	r3, #0
 10190 0182 0A44     		add	r2, r2, r1
 10191              	.LVL729:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10192              		.loc 2 247 11 view .LVU2565
 10193 0184 5BA8     		add	r0, sp, #364
 10194              	.LVL730:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10195              		.loc 2 247 11 view .LVU2566
 10196 0186 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
ARM GAS  /tmp/ccL95Edz.s 			page 466


 10197              	.LVL731:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10198              		.loc 2 247 11 view .LVU2567
 10199              	.LBE8632:
 10200              	.LBE8631:
 10201              	.LBE8630:
 10202              	.LBE8629:
 10203              	.LBE8609:
 10204              	.LBE8608:
 10205              	.LBE8607:
 10206              	.LBB8633:
 10207              	.LBI8633:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 10208              		.loc 2 448 7 is_stmt 1 view .LVU2568
 10209              	.LBB8634:
 10210              	.LBB8635:
 10211              	.LBB8636:
 10212              	.LBI8636:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10213              		.loc 2 190 7 view .LVU2569
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10214              		.loc 2 190 7 is_stmt 0 view .LVU2570
 10215              	.LBE8636:
 10216              	.LBB8637:
 10217              	.LBI8637:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10218              		.loc 2 290 7 is_stmt 1 view .LVU2571
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10219              		.loc 2 290 7 is_stmt 0 view .LVU2572
 10220              	.LBE8637:
 10221              	.LBB8638:
 10222              	.LBI8638:
 10223              		.loc 19 97 19 is_stmt 1 view .LVU2573
 10224              	.LBB8639:
 10225              	.LBI8639:
 10226              		.loc 3 514 7 view .LVU2574
 10227              	.LBB8640:
 10228              	.LBI8640:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10229              		.loc 5 141 7 view .LVU2575
 10230              	.LBB8641:
 10231              	.LBI8641:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10232              		.loc 4 83 7 view .LVU2576
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10233              		.loc 4 83 7 is_stmt 0 view .LVU2577
 10234              	.LBE8641:
 10235              	.LBE8640:
 10236              	.LBE8639:
 10237              	.LBE8638:
 10238              	.LBB8642:
 10239              	.LBI8642:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10240              		.loc 2 159 2 is_stmt 1 view .LVU2578
 10241              	.LBB8643:
 10242              	.LBB8644:
 10243              	.LBB8645:
ARM GAS  /tmp/ccL95Edz.s 			page 467


 10244              	.LBI8645:
 10245              		.loc 9 99 5 view .LVU2579
 10246              		.loc 9 99 5 is_stmt 0 view .LVU2580
 10247              	.LBE8645:
 10248              	.LBB8646:
 10249              	.LBI8646:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10250              		.loc 5 141 7 is_stmt 1 view .LVU2581
 10251              	.LBB8647:
 10252              	.LBI8647:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10253              		.loc 4 83 7 view .LVU2582
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10254              		.loc 4 83 7 is_stmt 0 view .LVU2583
 10255              	.LBE8647:
 10256              	.LBE8646:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10257              		.loc 2 160 46 view .LVU2584
 10258 018a 0DF5AE7A 		add	r10, sp, #348
 10259              	.LVL732:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10260              		.loc 2 160 46 view .LVU2585
 10261 018e CDF854A1 		str	r10, [sp, #340]
 10262              	.LVL733:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10263              		.loc 2 160 46 view .LVU2586
 10264              	.LBE8644:
 10265              	.LBE8643:
 10266              	.LBE8642:
 10267              	.LBB8648:
 10268              	.LBI8648:
 10269              		.loc 5 153 7 is_stmt 1 view .LVU2587
 10270              	.LBB8649:
 10271              	.LBI8649:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10272              		.loc 4 89 7 view .LVU2588
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10273              		.loc 4 89 7 is_stmt 0 view .LVU2589
 10274              	.LBE8649:
 10275              	.LBE8648:
 10276              	.LBB8650:
 10277              	.LBI8650:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10278              		.loc 2 186 7 is_stmt 1 view .LVU2590
 10279              	.LBB8651:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10280              		.loc 2 187 28 is_stmt 0 view .LVU2591
 10281 0192 1E99     		ldr	r1, [sp, #120]
 10282              	.LVL734:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10283              		.loc 2 187 28 view .LVU2592
 10284              	.LBE8651:
 10285              	.LBE8650:
 10286              	.LBB8652:
 10287              	.LBI8652:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10288              		.loc 2 186 7 is_stmt 1 view .LVU2593
ARM GAS  /tmp/ccL95Edz.s 			page 468


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10289              		.loc 2 186 7 is_stmt 0 view .LVU2594
 10290              	.LBE8652:
 10291              	.LBB8653:
 10292              	.LBI8653:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10293              		.loc 2 936 7 is_stmt 1 view .LVU2595
 10294              	.LBB8654:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10295              		.loc 2 937 16 is_stmt 0 view .LVU2596
 10296 0194 1F9A     		ldr	r2, [sp, #124]
 10297              	.LVL735:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10298              		.loc 2 937 16 view .LVU2597
 10299              	.LBE8654:
 10300              	.LBE8653:
 10301              	.LBB8655:
 10302              	.LBI8655:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10303              		.loc 2 263 9 is_stmt 1 view .LVU2598
 10304              	.LBB8656:
 10305              	.LBB8657:
 10306              	.LBI8657:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10307              		.loc 2 243 9 view .LVU2599
 10308              	.LBB8658:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10309              		.loc 2 247 11 is_stmt 0 view .LVU2600
 10310 0196 4FF00003 		mov	r3, #0
 10311 019a 0A44     		add	r2, r2, r1
 10312              	.LVL736:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10313              		.loc 2 247 11 view .LVU2601
 10314 019c 55A8     		add	r0, sp, #340
 10315              	.LVL737:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10316              		.loc 2 247 11 view .LVU2602
 10317 019e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 10318              	.LVL738:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10319              		.loc 2 247 11 view .LVU2603
 10320              	.LBE8658:
 10321              	.LBE8657:
 10322              	.LBE8656:
 10323              	.LBE8655:
 10324              	.LBE8635:
 10325              	.LBE8634:
 10326              	.LBE8633:
 10327              		.loc 21 137 31 view .LVU2604
 10328 01a2 4420     		movs	r0, #68
 10329 01a4 FFF7FEFF 		bl	_Znwj
 10330              	.LVL739:
 10331 01a8 0546     		mov	r5, r0
 10332              	.LVL740:
 10333              		.loc 21 137 31 view .LVU2605
 10334 01aa 02AF     		add	r7, sp, #8
 10335 01ac 98E80300 		ldm	r8, {r0, r1}
ARM GAS  /tmp/ccL95Edz.s 			page 469


 10336              	.LVL741:
 10337              		.loc 21 137 31 view .LVU2606
 10338 01b0 87E80300 		stm	r7, {r0, r1}
 10339              	.LBB8659:
 10340              	.LBI8659:
  71:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
 10341              		.loc 18 71 5 is_stmt 1 view .LVU2607
 10342              	.LVL742:
 10343              	.LBB8660:
 10344              	.LBB8661:
 10345              	.LBI8661:
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 10346              		.loc 18 16 5 view .LVU2608
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 10347              		.loc 18 16 5 is_stmt 0 view .LVU2609
 10348              	.LBE8661:
  72:alohal/cli/command.hpp ****     {}
 10349              		.loc 18 72 81 view .LVU2610
 10350 01b4 2846     		mov	r0, r5
 10351 01b6 5A4B     		ldr	r3, .L272+16
 10352 01b8 40F8043B 		str	r3, [r0], #4
 10353              	.LVL743:
 10354              	.LBB8662:
 10355              	.LBI8662:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 10356              		.loc 2 448 7 is_stmt 1 view .LVU2611
 10357              	.LBB8663:
 10358              	.LBB8664:
 10359              	.LBI8664:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10360              		.loc 2 190 7 view .LVU2612
 10361              	.LBB8665:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 10362              		.loc 2 193 51 is_stmt 0 view .LVU2613
 10363 01bc 05F10C03 		add	r3, r5, #12
 10364              	.LVL744:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 10365              		.loc 2 193 51 view .LVU2614
 10366              	.LBE8665:
 10367              	.LBE8664:
 10368              	.LBB8666:
 10369              	.LBI8666:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10370              		.loc 2 290 7 is_stmt 1 view .LVU2615
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10371              		.loc 2 290 7 is_stmt 0 view .LVU2616
 10372              	.LBE8666:
 10373              	.LBB8667:
 10374              	.LBI8667:
 10375              		.loc 19 97 19 is_stmt 1 view .LVU2617
 10376              	.LBB8668:
 10377              	.LBI8668:
 10378              		.loc 3 514 7 view .LVU2618
 10379              	.LBB8669:
 10380              	.LBI8669:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10381              		.loc 5 141 7 view .LVU2619
ARM GAS  /tmp/ccL95Edz.s 			page 470


 10382              	.LBB8670:
 10383              	.LBI8670:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10384              		.loc 4 83 7 view .LVU2620
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10385              		.loc 4 83 7 is_stmt 0 view .LVU2621
 10386              	.LBE8670:
 10387              	.LBE8669:
 10388              	.LBE8668:
 10389              	.LBE8667:
 10390              	.LBB8671:
 10391              	.LBI8671:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10392              		.loc 2 159 2 is_stmt 1 view .LVU2622
 10393              	.LBB8672:
 10394              	.LBB8673:
 10395              	.LBI8673:
 10396              		.loc 9 99 5 view .LVU2623
 10397              		.loc 9 99 5 is_stmt 0 view .LVU2624
 10398              	.LBE8673:
 10399              	.LBB8674:
 10400              	.LBI8674:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10401              		.loc 5 141 7 is_stmt 1 view .LVU2625
 10402              	.LBB8675:
 10403              	.LBI8675:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10404              		.loc 4 83 7 view .LVU2626
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10405              		.loc 4 83 7 is_stmt 0 view .LVU2627
 10406              	.LBE8675:
 10407              	.LBE8674:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10408              		.loc 2 160 46 view .LVU2628
 10409 01c0 6B60     		str	r3, [r5, #4]
 10410              	.LVL745:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10411              		.loc 2 160 46 view .LVU2629
 10412              	.LBE8672:
 10413              	.LBE8671:
 10414              	.LBB8676:
 10415              	.LBI8676:
 10416              		.loc 5 153 7 is_stmt 1 view .LVU2630
 10417              	.LBB8677:
 10418              	.LBI8677:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10419              		.loc 4 89 7 view .LVU2631
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10420              		.loc 4 89 7 is_stmt 0 view .LVU2632
 10421              	.LBE8677:
 10422              	.LBE8676:
 10423              	.LBB8678:
 10424              	.LBI8678:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10425              		.loc 2 186 7 is_stmt 1 view .LVU2633
 10426              	.LBB8679:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 471


 10427              		.loc 2 187 28 is_stmt 0 view .LVU2634
 10428 01c2 5B99     		ldr	r1, [sp, #364]
 10429              	.LVL746:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10430              		.loc 2 187 28 view .LVU2635
 10431              	.LBE8679:
 10432              	.LBE8678:
 10433              	.LBB8680:
 10434              	.LBI8680:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10435              		.loc 2 186 7 is_stmt 1 view .LVU2636
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10436              		.loc 2 186 7 is_stmt 0 view .LVU2637
 10437              	.LBE8680:
 10438              	.LBB8681:
 10439              	.LBI8681:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10440              		.loc 2 936 7 is_stmt 1 view .LVU2638
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10441              		.loc 2 936 7 is_stmt 0 view .LVU2639
 10442              	.LBE8681:
 10443              	.LBB8682:
 10444              	.LBI8682:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10445              		.loc 2 263 9 is_stmt 1 view .LVU2640
 10446              	.LBB8683:
 10447              	.LBB8684:
 10448              	.LBI8684:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10449              		.loc 2 243 9 view .LVU2641
 10450              	.LBB8685:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10451              		.loc 2 247 11 is_stmt 0 view .LVU2642
 10452 01c4 4FF00003 		mov	r3, #0
 10453 01c8 5C9A     		ldr	r2, [sp, #368]
 10454 01ca 0A44     		add	r2, r2, r1
 10455              	.LVL747:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10456              		.loc 2 247 11 view .LVU2643
 10457 01cc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 10458              	.LVL748:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10459              		.loc 2 247 11 view .LVU2644
 10460              	.LBE8685:
 10461              	.LBE8684:
 10462              	.LBE8683:
 10463              	.LBE8682:
 10464              	.LBE8663:
 10465              	.LBE8662:
 10466              	.LBB8686:
 10467              	.LBI8686:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 10468              		.loc 2 448 7 is_stmt 1 view .LVU2645
 10469              	.LBB8687:
 10470              	.LBB8688:
 10471              	.LBI8688:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 472


 10472              		.loc 2 190 7 view .LVU2646
 10473              	.LBB8689:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 10474              		.loc 2 193 51 is_stmt 0 view .LVU2647
 10475 01d0 05F12403 		add	r3, r5, #36
 10476              	.LVL749:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 10477              		.loc 2 193 51 view .LVU2648
 10478              	.LBE8689:
 10479              	.LBE8688:
 10480              	.LBB8690:
 10481              	.LBI8690:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10482              		.loc 2 290 7 is_stmt 1 view .LVU2649
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10483              		.loc 2 290 7 is_stmt 0 view .LVU2650
 10484              	.LBE8690:
 10485              	.LBB8691:
 10486              	.LBI8691:
 10487              		.loc 19 97 19 is_stmt 1 view .LVU2651
 10488              	.LBB8692:
 10489              	.LBI8692:
 10490              		.loc 3 514 7 view .LVU2652
 10491              	.LBB8693:
 10492              	.LBI8693:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10493              		.loc 5 141 7 view .LVU2653
 10494              	.LBB8694:
 10495              	.LBI8694:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10496              		.loc 4 83 7 view .LVU2654
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10497              		.loc 4 83 7 is_stmt 0 view .LVU2655
 10498              	.LBE8694:
 10499              	.LBE8693:
 10500              	.LBE8692:
 10501              	.LBE8691:
 10502              	.LBB8695:
 10503              	.LBI8695:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10504              		.loc 2 159 2 is_stmt 1 view .LVU2656
 10505              	.LBB8696:
 10506              	.LBB8697:
 10507              	.LBI8697:
 10508              		.loc 9 99 5 view .LVU2657
 10509              		.loc 9 99 5 is_stmt 0 view .LVU2658
 10510              	.LBE8697:
 10511              	.LBB8698:
 10512              	.LBI8698:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10513              		.loc 5 141 7 is_stmt 1 view .LVU2659
 10514              	.LBB8699:
 10515              	.LBI8699:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10516              		.loc 4 83 7 view .LVU2660
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10517              		.loc 4 83 7 is_stmt 0 view .LVU2661
ARM GAS  /tmp/ccL95Edz.s 			page 473


 10518              	.LBE8699:
 10519              	.LBE8698:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10520              		.loc 2 160 46 view .LVU2662
 10521 01d4 EB61     		str	r3, [r5, #28]
 10522              	.LVL750:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10523              		.loc 2 160 46 view .LVU2663
 10524              	.LBE8696:
 10525              	.LBE8695:
 10526              	.LBB8700:
 10527              	.LBI8700:
 10528              		.loc 5 153 7 is_stmt 1 view .LVU2664
 10529              	.LBB8701:
 10530              	.LBI8701:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10531              		.loc 4 89 7 view .LVU2665
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10532              		.loc 4 89 7 is_stmt 0 view .LVU2666
 10533              	.LBE8701:
 10534              	.LBE8700:
 10535              	.LBB8702:
 10536              	.LBI8702:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10537              		.loc 2 186 7 is_stmt 1 view .LVU2667
 10538              	.LBB8703:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10539              		.loc 2 187 28 is_stmt 0 view .LVU2668
 10540 01d6 5599     		ldr	r1, [sp, #340]
 10541              	.LVL751:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10542              		.loc 2 187 28 view .LVU2669
 10543              	.LBE8703:
 10544              	.LBE8702:
 10545              	.LBB8704:
 10546              	.LBI8704:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10547              		.loc 2 186 7 is_stmt 1 view .LVU2670
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10548              		.loc 2 186 7 is_stmt 0 view .LVU2671
 10549              	.LBE8704:
 10550              	.LBB8705:
 10551              	.LBI8705:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10552              		.loc 2 936 7 is_stmt 1 view .LVU2672
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10553              		.loc 2 936 7 is_stmt 0 view .LVU2673
 10554              	.LBE8705:
 10555              	.LBB8706:
 10556              	.LBI8706:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10557              		.loc 2 263 9 is_stmt 1 view .LVU2674
 10558              	.LBB8707:
 10559              	.LBB8708:
 10560              	.LBI8708:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10561              		.loc 2 243 9 view .LVU2675
ARM GAS  /tmp/ccL95Edz.s 			page 474


 10562              	.LBB8709:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10563              		.loc 2 247 11 is_stmt 0 view .LVU2676
 10564 01d8 4FF00003 		mov	r3, #0
 10565 01dc 569A     		ldr	r2, [sp, #344]
 10566 01de 0A44     		add	r2, r2, r1
 10567              	.LVL752:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10568              		.loc 2 247 11 view .LVU2677
 10569 01e0 05F11C00 		add	r0, r5, #28
 10570              	.LVL753:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10571              		.loc 2 247 11 view .LVU2678
 10572 01e4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 10573              	.LVL754:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10574              		.loc 2 247 11 view .LVU2679
 10575              	.LBE8709:
 10576              	.LBE8708:
 10577              	.LBE8707:
 10578              	.LBE8706:
 10579              	.LBE8687:
 10580              	.LBE8686:
  72:alohal/cli/command.hpp ****     {}
 10581              		.loc 18 72 81 view .LVU2680
 10582 01e8 6C63     		str	r4, [r5, #52]
 10583 01ea 05F13803 		add	r3, r5, #56
 10584 01ee 97E80300 		ldm	r7, {r0, r1}
 10585 01f2 83E80300 		stm	r3, {r0, r1}
 10586 01f6 C5F84090 		str	r9, [r5, #64]
 10587              	.LVL755:
  72:alohal/cli/command.hpp ****     {}
 10588              		.loc 18 72 81 view .LVU2681
 10589              	.LBE8660:
 10590              	.LBE8659:
 10591              		.loc 21 137 9 view .LVU2682
 10592 01fa 6195     		str	r5, [sp, #388]
 10593 01fc 61A9     		add	r1, sp, #388
 10594 01fe 06F16800 		add	r0, r6, #104
 10595 0202 FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_
 10596              	.LVL756:
 10597              	.LBB8710:
 10598              	.LBI8710:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10599              		.loc 2 657 7 is_stmt 1 view .LVU2683
 10600              	.LBB8711:
 10601              	.LBI8711:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10602              		.loc 2 229 7 view .LVU2684
 10603              	.LBB8712:
 10604              	.LBB8713:
 10605              	.LBI8713:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10606              		.loc 2 221 7 view .LVU2685
 10607              	.LBB8714:
 10608              	.LBI8714:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 475


 10609              		.loc 2 186 7 view .LVU2686
 10610              	.LBB8715:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10611              		.loc 2 187 28 is_stmt 0 view .LVU2687
 10612 0206 5598     		ldr	r0, [sp, #340]
 10613              	.LVL757:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10614              		.loc 2 187 28 view .LVU2688
 10615              	.LBE8715:
 10616              	.LBE8714:
 10617              	.LBB8716:
 10618              	.LBI8716:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10619              		.loc 2 200 7 is_stmt 1 view .LVU2689
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10620              		.loc 2 200 7 is_stmt 0 view .LVU2690
 10621              	.LBE8716:
 10622              	.LBE8713:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10623              		.loc 2 231 2 view .LVU2691
 10624 0208 5045     		cmp	r0, r10
 10625 020a 01D0     		beq	.L258
 10626              	.LVL758:
 10627              	.LBB8717:
 10628              	.LBI8717:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10629              		.loc 2 236 7 is_stmt 1 view .LVU2692
 10630              	.LBB8718:
 10631              	.LBB8719:
 10632              	.LBI8719:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10633              		.loc 3 469 7 view .LVU2693
 10634              	.LBB8720:
 10635              	.LBI8720:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10636              		.loc 4 119 7 view .LVU2694
 10637              	.LBB8721:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10638              		.loc 4 128 19 is_stmt 0 view .LVU2695
 10639 020c FFF7FEFF 		bl	_ZdlPv
 10640              	.LVL759:
 10641              	.L258:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10642              		.loc 4 128 19 view .LVU2696
 10643              	.LBE8721:
 10644              	.LBE8720:
 10645              	.LBE8719:
 10646              	.LBE8718:
 10647              	.LBE8717:
 10648              	.LBE8712:
 10649              	.LBE8711:
 10650              	.LBB8722:
 10651              	.LBI8722:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10652              		.loc 2 150 14 is_stmt 1 view .LVU2697
 10653              	.LBB8723:
 10654              	.LBI8723:
ARM GAS  /tmp/ccL95Edz.s 			page 476


 10655              		.loc 5 153 7 view .LVU2698
 10656              	.LBB8724:
 10657              	.LBI8724:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10658              		.loc 4 89 7 view .LVU2699
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10659              		.loc 4 89 7 is_stmt 0 view .LVU2700
 10660              	.LBE8724:
 10661              	.LBE8723:
 10662              	.LBE8722:
 10663              	.LBE8710:
 10664              	.LBB8725:
 10665              	.LBI8725:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10666              		.loc 2 657 7 is_stmt 1 view .LVU2701
 10667              	.LBB8726:
 10668              	.LBI8726:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10669              		.loc 2 229 7 view .LVU2702
 10670              	.LBB8727:
 10671              	.LBB8728:
 10672              	.LBI8728:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10673              		.loc 2 221 7 view .LVU2703
 10674              	.LBB8729:
 10675              	.LBI8729:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10676              		.loc 2 186 7 view .LVU2704
 10677              	.LBB8730:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10678              		.loc 2 187 28 is_stmt 0 view .LVU2705
 10679 0210 5B98     		ldr	r0, [sp, #364]
 10680              	.LVL760:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10681              		.loc 2 187 28 view .LVU2706
 10682              	.LBE8730:
 10683              	.LBE8729:
 10684              	.LBB8731:
 10685              	.LBI8731:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10686              		.loc 2 200 7 is_stmt 1 view .LVU2707
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10687              		.loc 2 200 7 is_stmt 0 view .LVU2708
 10688              	.LBE8731:
 10689              	.LBE8728:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10690              		.loc 2 231 2 view .LVU2709
 10691 0212 5DAB     		add	r3, sp, #372
 10692 0214 9842     		cmp	r0, r3
 10693 0216 01D0     		beq	.L259
 10694              	.LVL761:
 10695              	.LBB8732:
 10696              	.LBI8732:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10697              		.loc 2 236 7 is_stmt 1 view .LVU2710
 10698              	.LBB8733:
 10699              	.LBB8734:
ARM GAS  /tmp/ccL95Edz.s 			page 477


 10700              	.LBI8734:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10701              		.loc 3 469 7 view .LVU2711
 10702              	.LBB8735:
 10703              	.LBI8735:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10704              		.loc 4 119 7 view .LVU2712
 10705              	.LBB8736:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10706              		.loc 4 128 19 is_stmt 0 view .LVU2713
 10707 0218 FFF7FEFF 		bl	_ZdlPv
 10708              	.LVL762:
 10709              	.L259:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10710              		.loc 4 128 19 view .LVU2714
 10711              	.LBE8736:
 10712              	.LBE8735:
 10713              	.LBE8734:
 10714              	.LBE8733:
 10715              	.LBE8732:
 10716              	.LBE8727:
 10717              	.LBE8726:
 10718              	.LBB8737:
 10719              	.LBI8737:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10720              		.loc 2 150 14 is_stmt 1 view .LVU2715
 10721              	.LBB8738:
 10722              	.LBI8738:
 10723              		.loc 5 153 7 view .LVU2716
 10724              	.LBB8739:
 10725              	.LBI8739:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10726              		.loc 4 89 7 view .LVU2717
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10727              		.loc 4 89 7 is_stmt 0 view .LVU2718
 10728              	.LBE8739:
 10729              	.LBE8738:
 10730              	.LBE8737:
 10731              	.LBE8725:
 10732              	.LBE8606:
 10733              	.LBE8605:
 10734              	.LBB8740:
 10735              	.LBI8740:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10736              		.loc 2 657 7 is_stmt 1 view .LVU2719
 10737              	.LBB8741:
 10738              	.LBI8741:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10739              		.loc 2 229 7 view .LVU2720
 10740              	.LBB8742:
 10741              	.LBB8743:
 10742              	.LBI8743:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10743              		.loc 2 221 7 view .LVU2721
 10744              	.LBB8744:
 10745              	.LBI8744:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 478


 10746              		.loc 2 186 7 view .LVU2722
 10747              	.LBB8745:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10748              		.loc 2 187 28 is_stmt 0 view .LVU2723
 10749 021c 1E98     		ldr	r0, [sp, #120]
 10750              	.LVL763:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10751              		.loc 2 187 28 view .LVU2724
 10752              	.LBE8745:
 10753              	.LBE8744:
 10754              	.LBB8746:
 10755              	.LBI8746:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10756              		.loc 2 200 7 is_stmt 1 view .LVU2725
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10757              		.loc 2 200 7 is_stmt 0 view .LVU2726
 10758              	.LBE8746:
 10759              	.LBE8743:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10760              		.loc 2 231 2 view .LVU2727
 10761 021e 20AB     		add	r3, sp, #128
 10762 0220 9842     		cmp	r0, r3
 10763 0222 01D0     		beq	.L260
 10764              	.LVL764:
 10765              	.LBB8747:
 10766              	.LBI8747:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10767              		.loc 2 236 7 is_stmt 1 view .LVU2728
 10768              	.LBB8748:
 10769              	.LBB8749:
 10770              	.LBI8749:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10771              		.loc 3 469 7 view .LVU2729
 10772              	.LBB8750:
 10773              	.LBI8750:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10774              		.loc 4 119 7 view .LVU2730
 10775              	.LBB8751:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10776              		.loc 4 128 19 is_stmt 0 view .LVU2731
 10777 0224 FFF7FEFF 		bl	_ZdlPv
 10778              	.LVL765:
 10779              	.L260:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10780              		.loc 4 128 19 view .LVU2732
 10781              	.LBE8751:
 10782              	.LBE8750:
 10783              	.LBE8749:
 10784              	.LBE8748:
 10785              	.LBE8747:
 10786              	.LBE8742:
 10787              	.LBE8741:
 10788              	.LBB8752:
 10789              	.LBI8752:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10790              		.loc 2 150 14 is_stmt 1 view .LVU2733
 10791              	.LBB8753:
ARM GAS  /tmp/ccL95Edz.s 			page 479


 10792              	.LBI8753:
 10793              		.loc 5 153 7 view .LVU2734
 10794              	.LBB8754:
 10795              	.LBI8754:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10796              		.loc 4 89 7 view .LVU2735
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10797              		.loc 4 89 7 is_stmt 0 view .LVU2736
 10798              	.LBE8754:
 10799              	.LBE8753:
 10800              	.LBE8752:
 10801              	.LBE8740:
 10802              	.LBB8755:
 10803              	.LBI8755:
 10804              		.loc 5 153 7 is_stmt 1 view .LVU2737
 10805              	.LBB8756:
 10806              	.LBI8756:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10807              		.loc 4 89 7 view .LVU2738
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10808              		.loc 4 89 7 is_stmt 0 view .LVU2739
 10809              	.LBE8756:
 10810              	.LBE8755:
 10811              	.LBB8757:
 10812              	.LBI8757:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10813              		.loc 2 657 7 is_stmt 1 view .LVU2740
 10814              	.LBB8758:
 10815              	.LBI8758:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10816              		.loc 2 229 7 view .LVU2741
 10817              	.LBB8759:
 10818              	.LBB8760:
 10819              	.LBI8760:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10820              		.loc 2 221 7 view .LVU2742
 10821              	.LBB8761:
 10822              	.LBI8761:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10823              		.loc 2 186 7 view .LVU2743
 10824              	.LBB8762:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10825              		.loc 2 187 28 is_stmt 0 view .LVU2744
 10826 0228 1898     		ldr	r0, [sp, #96]
 10827              	.LVL766:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10828              		.loc 2 187 28 view .LVU2745
 10829              	.LBE8762:
 10830              	.LBE8761:
 10831              	.LBB8763:
 10832              	.LBI8763:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10833              		.loc 2 200 7 is_stmt 1 view .LVU2746
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10834              		.loc 2 200 7 is_stmt 0 view .LVU2747
 10835              	.LBE8763:
 10836              	.LBE8760:
ARM GAS  /tmp/ccL95Edz.s 			page 480


 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10837              		.loc 2 231 2 view .LVU2748
 10838 022a 1AAB     		add	r3, sp, #104
 10839 022c 9842     		cmp	r0, r3
 10840 022e 01D0     		beq	.L261
 10841              	.LVL767:
 10842              	.LBB8764:
 10843              	.LBI8764:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10844              		.loc 2 236 7 is_stmt 1 view .LVU2749
 10845              	.LBB8765:
 10846              	.LBB8766:
 10847              	.LBI8766:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10848              		.loc 3 469 7 view .LVU2750
 10849              	.LBB8767:
 10850              	.LBI8767:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10851              		.loc 4 119 7 view .LVU2751
 10852              	.LBB8768:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10853              		.loc 4 128 19 is_stmt 0 view .LVU2752
 10854 0230 FFF7FEFF 		bl	_ZdlPv
 10855              	.LVL768:
 10856              	.L261:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10857              		.loc 4 128 19 view .LVU2753
 10858              	.LBE8768:
 10859              	.LBE8767:
 10860              	.LBE8766:
 10861              	.LBE8765:
 10862              	.LBE8764:
 10863              	.LBE8759:
 10864              	.LBE8758:
 10865              	.LBB8769:
 10866              	.LBI8769:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10867              		.loc 2 150 14 is_stmt 1 view .LVU2754
 10868              	.LBB8770:
 10869              	.LBI8770:
 10870              		.loc 5 153 7 view .LVU2755
 10871              	.LBB8771:
 10872              	.LBI8771:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10873              		.loc 4 89 7 view .LVU2756
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10874              		.loc 4 89 7 is_stmt 0 view .LVU2757
 10875              	.LBE8771:
 10876              	.LBE8770:
 10877              	.LBE8769:
 10878              	.LBE8757:
 10879              	.LBB8772:
 10880              	.LBI8772:
 10881              		.loc 5 153 7 is_stmt 1 view .LVU2758
 10882              	.LBB8773:
 10883              	.LBI8773:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 481


 10884              		.loc 4 89 7 view .LVU2759
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10885              		.loc 4 89 7 is_stmt 0 view .LVU2760
 10886              	.LBE8773:
 10887              	.LBE8772:
   7:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cat", "cat as in Linux", this, &Filesystem::Command_cat);
 10888              		.loc 17 7 5 is_stmt 1 view .LVU2761
 10889              	.LBB8774:
 10890              	.LBI8774:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 10891              		.loc 5 138 7 view .LVU2762
 10892              	.LBB8775:
 10893              	.LBI8775:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10894              		.loc 4 80 7 view .LVU2763
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10895              		.loc 4 80 7 is_stmt 0 view .LVU2764
 10896              	.LBE8775:
 10897              	.LBE8774:
 10898              	.LBB8776:
 10899              	.LBI8776:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 10900              		.loc 2 525 7 is_stmt 1 view .LVU2765
 10901              	.LBB8777:
 10902              	.LBB8778:
 10903              	.LBB8779:
 10904              	.LBI8779:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10905              		.loc 2 190 7 view .LVU2766
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10906              		.loc 2 190 7 is_stmt 0 view .LVU2767
 10907              	.LBE8779:
 10908              	.LBB8780:
 10909              	.LBI8780:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 10910              		.loc 2 156 2 is_stmt 1 view .LVU2768
 10911              	.LBB8781:
 10912              	.LBB8782:
 10913              	.LBB8783:
 10914              	.LBI8783:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10915              		.loc 5 141 7 view .LVU2769
 10916              	.LBB8784:
 10917              	.LBI8784:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10918              		.loc 4 83 7 view .LVU2770
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10919              		.loc 4 83 7 is_stmt 0 view .LVU2771
 10920              	.LBE8784:
 10921              	.LBE8783:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10922              		.loc 2 157 35 view .LVU2772
 10923 0234 28AB     		add	r3, sp, #160
 10924              	.LVL769:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10925              		.loc 2 157 35 view .LVU2773
 10926 0236 2693     		str	r3, [sp, #152]
ARM GAS  /tmp/ccL95Edz.s 			page 482


 10927              	.LVL770:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10928              		.loc 2 157 35 view .LVU2774
 10929              	.LBE8782:
 10930              	.LBE8781:
 10931              	.LBE8780:
 10932              	.LBB8785:
 10933              	.LBI8785:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 10934              		.loc 8 329 7 is_stmt 1 view .LVU2775
 10935              	.LBE8785:
 10936              	.LBE8778:
 10937              	.LBE8777:
 10938              	.LBE8776:
 10939              	.LBE9207:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 10940              		.loc 8 332 2 view .LVU2776
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 10941              		.loc 8 335 2 view .LVU2777
 10942              	.LBB9208:
 10943              	.LBB8792:
 10944              	.LBB8791:
 10945              	.LBB8790:
 10946              	.LBB8786:
 10947              	.LBI8786:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10948              		.loc 2 263 9 view .LVU2778
 10949              	.LBB8787:
 10950              	.LBB8788:
 10951              	.LBI8788:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10952              		.loc 2 243 9 view .LVU2779
 10953              	.LBB8789:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10954              		.loc 2 247 11 is_stmt 0 view .LVU2780
 10955 0238 3D4A     		ldr	r2, .L272+32
 10956              	.LVL771:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10957              		.loc 2 247 11 view .LVU2781
 10958 023a 4FF00003 		mov	r3, #0
 10959 023e D11E     		subs	r1, r2, #3
 10960 0240 26A8     		add	r0, sp, #152
 10961              	.LVL772:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10962              		.loc 2 247 11 view .LVU2782
 10963 0242 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 10964              	.LVL773:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10965              		.loc 2 247 11 view .LVU2783
 10966              	.LBE8789:
 10967              	.LBE8788:
 10968              	.LBE8787:
 10969              	.LBE8786:
 10970              	.LBE8790:
 10971              	.LBE8791:
 10972              	.LBE8792:
 10973              	.LBB8793:
ARM GAS  /tmp/ccL95Edz.s 			page 483


 10974              	.LBI8793:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 10975              		.loc 5 138 7 is_stmt 1 view .LVU2784
 10976              	.LBB8794:
 10977              	.LBI8794:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10978              		.loc 4 80 7 view .LVU2785
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10979              		.loc 4 80 7 is_stmt 0 view .LVU2786
 10980              	.LBE8794:
 10981              	.LBE8793:
 10982              	.LBB8795:
 10983              	.LBI8795:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 10984              		.loc 2 525 7 is_stmt 1 view .LVU2787
 10985              	.LBB8796:
 10986              	.LBB8797:
 10987              	.LBB8798:
 10988              	.LBI8798:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10989              		.loc 2 190 7 view .LVU2788
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10990              		.loc 2 190 7 is_stmt 0 view .LVU2789
 10991              	.LBE8798:
 10992              	.LBB8799:
 10993              	.LBI8799:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 10994              		.loc 2 156 2 is_stmt 1 view .LVU2790
 10995              	.LBB8800:
 10996              	.LBB8801:
 10997              	.LBB8802:
 10998              	.LBI8802:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10999              		.loc 5 141 7 view .LVU2791
 11000              	.LBB8803:
 11001              	.LBI8803:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11002              		.loc 4 83 7 view .LVU2792
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11003              		.loc 4 83 7 is_stmt 0 view .LVU2793
 11004              	.LBE8803:
 11005              	.LBE8802:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11006              		.loc 2 157 35 view .LVU2794
 11007 0246 2EAB     		add	r3, sp, #184
 11008              	.LVL774:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11009              		.loc 2 157 35 view .LVU2795
 11010 0248 2C93     		str	r3, [sp, #176]
 11011              	.LVL775:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11012              		.loc 2 157 35 view .LVU2796
 11013              	.LBE8801:
 11014              	.LBE8800:
 11015              	.LBE8799:
 11016              	.LBB8804:
 11017              	.LBI8804:
ARM GAS  /tmp/ccL95Edz.s 			page 484


 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 11018              		.loc 8 329 7 is_stmt 1 view .LVU2797
 11019              	.LBE8804:
 11020              	.LBE8797:
 11021              	.LBE8796:
 11022              	.LBE8795:
 11023              	.LBE9208:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 11024              		.loc 8 332 2 view .LVU2798
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 11025              		.loc 8 335 2 view .LVU2799
 11026              	.LBB9209:
 11027              	.LBB8811:
 11028              	.LBB8810:
 11029              	.LBB8809:
 11030              	.LBB8805:
 11031              	.LBI8805:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 11032              		.loc 2 263 9 view .LVU2800
 11033              	.LBB8806:
 11034              	.LBB8807:
 11035              	.LBI8807:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 11036              		.loc 2 243 9 view .LVU2801
 11037              	.LBB8808:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11038              		.loc 2 247 11 is_stmt 0 view .LVU2802
 11039 024a 3A4A     		ldr	r2, .L272+36
 11040              	.LVL776:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11041              		.loc 2 247 11 view .LVU2803
 11042 024c 4FF00003 		mov	r3, #0
 11043 0250 A2F10F01 		sub	r1, r2, #15
 11044 0254 2CA8     		add	r0, sp, #176
 11045              	.LVL777:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11046              		.loc 2 247 11 view .LVU2804
 11047 0256 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 11048              	.LVL778:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11049              		.loc 2 247 11 view .LVU2805
 11050              	.LBE8808:
 11051              	.LBE8807:
 11052              	.LBE8806:
 11053              	.LBE8805:
 11054              	.LBE8809:
 11055              	.LBE8810:
 11056              	.LBE8811:
   7:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cat", "cat as in Linux", this, &Filesystem::Command_cat);
 11057              		.loc 17 7 26 view .LVU2806
 11058 025a 32AB     		add	r3, sp, #200
 11059 025c 364A     		ldr	r2, .L272+40
 11060 025e 3292     		str	r2, [sp, #200]
 11061 0260 4FF00009 		mov	r9, #0
 11062 0264 CDF8CC90 		str	r9, [sp, #204]
 11063              	.LVL779:
   7:alohal/filesystem/filesystem.cpp ****     cli->Register_command("cat", "cat as in Linux", this, &Filesystem::Command_cat);
ARM GAS  /tmp/ccL95Edz.s 			page 485


 11064              		.loc 17 7 26 view .LVU2807
 11065 0268 E846     		mov	r8, sp
 11066 026a 93E80300 		ldm	r3, {r0, r1}
 11067 026e 88E80300 		stm	r8, {r0, r1}
 11068              	.LBB8812:
 11069              	.LBI8812:
 136:alohal/cli/cli.hpp ****         commands.emplace_back(new Command<registrator_class>(command, help, object, method));
 11070              		.loc 21 136 10 is_stmt 1 view .LVU2808
 11071              	.LVL780:
 11072              	.LBB8813:
 11073              	.LBB8814:
 11074              	.LBI8814:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 11075              		.loc 2 448 7 view .LVU2809
 11076              	.LBB8815:
 11077              	.LBB8816:
 11078              	.LBB8817:
 11079              	.LBI8817:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11080              		.loc 2 190 7 view .LVU2810
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11081              		.loc 2 190 7 is_stmt 0 view .LVU2811
 11082              	.LBE8817:
 11083              	.LBB8818:
 11084              	.LBI8818:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11085              		.loc 2 290 7 is_stmt 1 view .LVU2812
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11086              		.loc 2 290 7 is_stmt 0 view .LVU2813
 11087              	.LBE8818:
 11088              	.LBB8819:
 11089              	.LBI8819:
 11090              		.loc 19 97 19 is_stmt 1 view .LVU2814
 11091              	.LBB8820:
 11092              	.LBI8820:
 11093              		.loc 3 514 7 view .LVU2815
 11094              	.LBB8821:
 11095              	.LBI8821:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11096              		.loc 5 141 7 view .LVU2816
 11097              	.LBB8822:
 11098              	.LBI8822:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11099              		.loc 4 83 7 view .LVU2817
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11100              		.loc 4 83 7 is_stmt 0 view .LVU2818
 11101              	.LBE8822:
 11102              	.LBE8821:
 11103              	.LBE8820:
 11104              	.LBE8819:
 11105              	.LBB8823:
 11106              	.LBI8823:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11107              		.loc 2 159 2 is_stmt 1 view .LVU2819
 11108              	.LBB8824:
 11109              	.LBB8825:
 11110              	.LBB8826:
ARM GAS  /tmp/ccL95Edz.s 			page 486


 11111              	.LBI8826:
 11112              		.loc 9 99 5 view .LVU2820
 11113              		.loc 9 99 5 is_stmt 0 view .LVU2821
 11114              	.LBE8826:
 11115              	.LBB8827:
 11116              	.LBI8827:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11117              		.loc 5 141 7 is_stmt 1 view .LVU2822
 11118              	.LBB8828:
 11119              	.LBI8828:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11120              		.loc 4 83 7 view .LVU2823
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11121              		.loc 4 83 7 is_stmt 0 view .LVU2824
 11122              	.LBE8828:
 11123              	.LBE8827:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11124              		.loc 2 160 46 view .LVU2825
 11125 0272 6AAB     		add	r3, sp, #424
 11126              	.LVL781:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11127              		.loc 2 160 46 view .LVU2826
 11128 0274 6893     		str	r3, [sp, #416]
 11129              	.LVL782:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11130              		.loc 2 160 46 view .LVU2827
 11131              	.LBE8825:
 11132              	.LBE8824:
 11133              	.LBE8823:
 11134              	.LBB8829:
 11135              	.LBI8829:
 11136              		.loc 5 153 7 is_stmt 1 view .LVU2828
 11137              	.LBB8830:
 11138              	.LBI8830:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11139              		.loc 4 89 7 view .LVU2829
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11140              		.loc 4 89 7 is_stmt 0 view .LVU2830
 11141              	.LBE8830:
 11142              	.LBE8829:
 11143              	.LBB8831:
 11144              	.LBI8831:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11145              		.loc 2 186 7 is_stmt 1 view .LVU2831
 11146              	.LBB8832:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11147              		.loc 2 187 28 is_stmt 0 view .LVU2832
 11148 0276 2699     		ldr	r1, [sp, #152]
 11149              	.LVL783:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11150              		.loc 2 187 28 view .LVU2833
 11151              	.LBE8832:
 11152              	.LBE8831:
 11153              	.LBB8833:
 11154              	.LBI8833:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11155              		.loc 2 186 7 is_stmt 1 view .LVU2834
ARM GAS  /tmp/ccL95Edz.s 			page 487


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11156              		.loc 2 186 7 is_stmt 0 view .LVU2835
 11157              	.LBE8833:
 11158              	.LBB8834:
 11159              	.LBI8834:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11160              		.loc 2 936 7 is_stmt 1 view .LVU2836
 11161              	.LBB8835:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11162              		.loc 2 937 16 is_stmt 0 view .LVU2837
 11163 0278 279A     		ldr	r2, [sp, #156]
 11164              	.LVL784:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11165              		.loc 2 937 16 view .LVU2838
 11166              	.LBE8835:
 11167              	.LBE8834:
 11168              	.LBB8836:
 11169              	.LBI8836:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 11170              		.loc 2 263 9 is_stmt 1 view .LVU2839
 11171              	.LBB8837:
 11172              	.LBB8838:
 11173              	.LBI8838:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 11174              		.loc 2 243 9 view .LVU2840
 11175              	.LBB8839:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11176              		.loc 2 247 11 is_stmt 0 view .LVU2841
 11177 027a 4FF00003 		mov	r3, #0
 11178 027e 0A44     		add	r2, r2, r1
 11179              	.LVL785:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11180              		.loc 2 247 11 view .LVU2842
 11181 0280 68A8     		add	r0, sp, #416
 11182              	.LVL786:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11183              		.loc 2 247 11 view .LVU2843
 11184 0282 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 11185              	.LVL787:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11186              		.loc 2 247 11 view .LVU2844
 11187              	.LBE8839:
 11188              	.LBE8838:
 11189              	.LBE8837:
 11190              	.LBE8836:
 11191              	.LBE8816:
 11192              	.LBE8815:
 11193              	.LBE8814:
 11194              	.LBB8840:
 11195              	.LBI8840:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 11196              		.loc 2 448 7 is_stmt 1 view .LVU2845
 11197              	.LBB8841:
 11198              	.LBB8842:
 11199              	.LBB8843:
 11200              	.LBI8843:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 488


 11201              		.loc 2 190 7 view .LVU2846
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11202              		.loc 2 190 7 is_stmt 0 view .LVU2847
 11203              	.LBE8843:
 11204              	.LBB8844:
 11205              	.LBI8844:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11206              		.loc 2 290 7 is_stmt 1 view .LVU2848
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11207              		.loc 2 290 7 is_stmt 0 view .LVU2849
 11208              	.LBE8844:
 11209              	.LBB8845:
 11210              	.LBI8845:
 11211              		.loc 19 97 19 is_stmt 1 view .LVU2850
 11212              	.LBB8846:
 11213              	.LBI8846:
 11214              		.loc 3 514 7 view .LVU2851
 11215              	.LBB8847:
 11216              	.LBI8847:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11217              		.loc 5 141 7 view .LVU2852
 11218              	.LBB8848:
 11219              	.LBI8848:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11220              		.loc 4 83 7 view .LVU2853
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11221              		.loc 4 83 7 is_stmt 0 view .LVU2854
 11222              	.LBE8848:
 11223              	.LBE8847:
 11224              	.LBE8846:
 11225              	.LBE8845:
 11226              	.LBB8849:
 11227              	.LBI8849:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11228              		.loc 2 159 2 is_stmt 1 view .LVU2855
 11229              	.LBB8850:
 11230              	.LBB8851:
 11231              	.LBB8852:
 11232              	.LBI8852:
 11233              		.loc 9 99 5 view .LVU2856
 11234              		.loc 9 99 5 is_stmt 0 view .LVU2857
 11235              	.LBE8852:
 11236              	.LBB8853:
 11237              	.LBI8853:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11238              		.loc 5 141 7 is_stmt 1 view .LVU2858
 11239              	.LBB8854:
 11240              	.LBI8854:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11241              		.loc 4 83 7 view .LVU2859
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11242              		.loc 4 83 7 is_stmt 0 view .LVU2860
 11243              	.LBE8854:
 11244              	.LBE8853:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11245              		.loc 2 160 46 view .LVU2861
 11246 0286 0DF5C87A 		add	r10, sp, #400
ARM GAS  /tmp/ccL95Edz.s 			page 489


 11247              	.LVL788:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11248              		.loc 2 160 46 view .LVU2862
 11249 028a CDF888A1 		str	r10, [sp, #392]
 11250              	.LVL789:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11251              		.loc 2 160 46 view .LVU2863
 11252              	.LBE8851:
 11253              	.LBE8850:
 11254              	.LBE8849:
 11255              	.LBB8855:
 11256              	.LBI8855:
 11257              		.loc 5 153 7 is_stmt 1 view .LVU2864
 11258              	.LBB8856:
 11259              	.LBI8856:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11260              		.loc 4 89 7 view .LVU2865
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11261              		.loc 4 89 7 is_stmt 0 view .LVU2866
 11262              	.LBE8856:
 11263              	.LBE8855:
 11264              	.LBB8857:
 11265              	.LBI8857:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11266              		.loc 2 186 7 is_stmt 1 view .LVU2867
 11267              	.LBB8858:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11268              		.loc 2 187 28 is_stmt 0 view .LVU2868
 11269 028e 2C99     		ldr	r1, [sp, #176]
 11270              	.LVL790:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11271              		.loc 2 187 28 view .LVU2869
 11272              	.LBE8858:
 11273              	.LBE8857:
 11274              	.LBB8859:
 11275              	.LBI8859:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11276              		.loc 2 186 7 is_stmt 1 view .LVU2870
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11277              		.loc 2 186 7 is_stmt 0 view .LVU2871
 11278              	.LBE8859:
 11279              	.LBB8860:
 11280              	.LBI8860:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11281              		.loc 2 936 7 is_stmt 1 view .LVU2872
 11282              	.LBB8861:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11283              		.loc 2 937 16 is_stmt 0 view .LVU2873
 11284 0290 2D9A     		ldr	r2, [sp, #180]
 11285              	.LVL791:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11286              		.loc 2 937 16 view .LVU2874
 11287              	.LBE8861:
 11288              	.LBE8860:
 11289              	.LBB8862:
 11290              	.LBI8862:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
ARM GAS  /tmp/ccL95Edz.s 			page 490


 11291              		.loc 2 263 9 is_stmt 1 view .LVU2875
 11292              	.LBB8863:
 11293              	.LBB8864:
 11294              	.LBI8864:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 11295              		.loc 2 243 9 view .LVU2876
 11296              	.LBB8865:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11297              		.loc 2 247 11 is_stmt 0 view .LVU2877
 11298 0292 4FF00003 		mov	r3, #0
 11299 0296 0A44     		add	r2, r2, r1
 11300              	.LVL792:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11301              		.loc 2 247 11 view .LVU2878
 11302 0298 62A8     		add	r0, sp, #392
 11303              	.LVL793:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11304              		.loc 2 247 11 view .LVU2879
 11305 029a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 11306              	.LVL794:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11307              		.loc 2 247 11 view .LVU2880
 11308              	.LBE8865:
 11309              	.LBE8864:
 11310              	.LBE8863:
 11311              	.LBE8862:
 11312              	.LBE8842:
 11313              	.LBE8841:
 11314              	.LBE8840:
 11315              		.loc 21 137 31 view .LVU2881
 11316 029e 4420     		movs	r0, #68
 11317 02a0 FFF7FEFF 		bl	_Znwj
 11318              	.LVL795:
 11319 02a4 0546     		mov	r5, r0
 11320              	.LVL796:
 11321              		.loc 21 137 31 view .LVU2882
 11322 02a6 02AF     		add	r7, sp, #8
 11323 02a8 98E80300 		ldm	r8, {r0, r1}
 11324              	.LVL797:
 11325              		.loc 21 137 31 view .LVU2883
 11326 02ac 87E80300 		stm	r7, {r0, r1}
 11327              	.LBB8866:
 11328              	.LBI8866:
  71:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
 11329              		.loc 18 71 5 is_stmt 1 view .LVU2884
 11330              	.LVL798:
 11331              	.LBB8867:
 11332              	.LBB8868:
 11333              	.LBI8868:
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 11334              		.loc 18 16 5 view .LVU2885
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 11335              		.loc 18 16 5 is_stmt 0 view .LVU2886
 11336              	.LBE8868:
  72:alohal/cli/command.hpp ****     {}
 11337              		.loc 18 72 81 view .LVU2887
 11338 02b0 2846     		mov	r0, r5
ARM GAS  /tmp/ccL95Edz.s 			page 491


 11339 02b2 1B4B     		ldr	r3, .L272+16
 11340 02b4 40F8043B 		str	r3, [r0], #4
 11341              	.LVL799:
 11342              	.LBB8869:
 11343              	.LBI8869:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 11344              		.loc 2 448 7 is_stmt 1 view .LVU2888
 11345              	.LBB8870:
 11346              	.LBB8871:
 11347              	.LBI8871:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11348              		.loc 2 190 7 view .LVU2889
 11349              	.LBB8872:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11350              		.loc 2 193 51 is_stmt 0 view .LVU2890
 11351 02b8 05F10C03 		add	r3, r5, #12
 11352              	.LVL800:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11353              		.loc 2 193 51 view .LVU2891
 11354              	.LBE8872:
 11355              	.LBE8871:
 11356              	.LBB8873:
 11357              	.LBI8873:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11358              		.loc 2 290 7 is_stmt 1 view .LVU2892
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11359              		.loc 2 290 7 is_stmt 0 view .LVU2893
 11360              	.LBE8873:
 11361              	.LBB8874:
 11362              	.LBI8874:
 11363              		.loc 19 97 19 is_stmt 1 view .LVU2894
 11364              	.LBB8875:
 11365              	.LBI8875:
 11366              		.loc 3 514 7 view .LVU2895
 11367              	.LBB8876:
 11368              	.LBI8876:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11369              		.loc 5 141 7 view .LVU2896
 11370              	.LBB8877:
 11371              	.LBI8877:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11372              		.loc 4 83 7 view .LVU2897
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11373              		.loc 4 83 7 is_stmt 0 view .LVU2898
 11374              	.LBE8877:
 11375              	.LBE8876:
 11376              	.LBE8875:
 11377              	.LBE8874:
 11378              	.LBB8878:
 11379              	.LBI8878:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11380              		.loc 2 159 2 is_stmt 1 view .LVU2899
 11381              	.LBB8879:
 11382              	.LBB8880:
 11383              	.LBI8880:
 11384              		.loc 9 99 5 view .LVU2900
 11385              		.loc 9 99 5 is_stmt 0 view .LVU2901
ARM GAS  /tmp/ccL95Edz.s 			page 492


 11386              	.LBE8880:
 11387              	.LBB8881:
 11388              	.LBI8881:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11389              		.loc 5 141 7 is_stmt 1 view .LVU2902
 11390              	.LBB8882:
 11391              	.LBI8882:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11392              		.loc 4 83 7 view .LVU2903
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11393              		.loc 4 83 7 is_stmt 0 view .LVU2904
 11394              	.LBE8882:
 11395              	.LBE8881:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11396              		.loc 2 160 46 view .LVU2905
 11397 02bc 6B60     		str	r3, [r5, #4]
 11398              	.LVL801:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11399              		.loc 2 160 46 view .LVU2906
 11400              	.LBE8879:
 11401              	.LBE8878:
 11402              	.LBB8883:
 11403              	.LBI8883:
 11404              		.loc 5 153 7 is_stmt 1 view .LVU2907
 11405              	.LBB8884:
 11406              	.LBI8884:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11407              		.loc 4 89 7 view .LVU2908
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11408              		.loc 4 89 7 is_stmt 0 view .LVU2909
 11409              	.LBE8884:
 11410              	.LBE8883:
 11411              	.LBB8885:
 11412              	.LBI8885:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11413              		.loc 2 186 7 is_stmt 1 view .LVU2910
 11414              	.LBB8886:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11415              		.loc 2 187 28 is_stmt 0 view .LVU2911
 11416 02be 6899     		ldr	r1, [sp, #416]
 11417              	.LVL802:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11418              		.loc 2 187 28 view .LVU2912
 11419              	.LBE8886:
 11420              	.LBE8885:
 11421              	.LBB8887:
 11422              	.LBI8887:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11423              		.loc 2 186 7 is_stmt 1 view .LVU2913
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11424              		.loc 2 186 7 is_stmt 0 view .LVU2914
 11425              	.LBE8887:
 11426              	.LBB8888:
 11427              	.LBI8888:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11428              		.loc 2 936 7 is_stmt 1 view .LVU2915
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
ARM GAS  /tmp/ccL95Edz.s 			page 493


 11429              		.loc 2 936 7 is_stmt 0 view .LVU2916
 11430              	.LBE8888:
 11431              	.LBB8889:
 11432              	.LBI8889:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 11433              		.loc 2 263 9 is_stmt 1 view .LVU2917
 11434              	.LBB8890:
 11435              	.LBB8891:
 11436              	.LBI8891:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 11437              		.loc 2 243 9 view .LVU2918
 11438              	.LBB8892:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11439              		.loc 2 247 11 is_stmt 0 view .LVU2919
 11440 02c0 4FF00003 		mov	r3, #0
 11441 02c4 699A     		ldr	r2, [sp, #420]
 11442 02c6 0A44     		add	r2, r2, r1
 11443              	.LVL803:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11444              		.loc 2 247 11 view .LVU2920
 11445 02c8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 11446              	.LVL804:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11447              		.loc 2 247 11 view .LVU2921
 11448              	.LBE8892:
 11449              	.LBE8891:
 11450              	.LBE8890:
 11451              	.LBE8889:
 11452              	.LBE8870:
 11453              	.LBE8869:
 11454              	.LBB8893:
 11455              	.LBI8893:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 11456              		.loc 2 448 7 is_stmt 1 view .LVU2922
 11457              	.LBB8894:
 11458              	.LBB8895:
 11459              	.LBI8895:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11460              		.loc 2 190 7 view .LVU2923
 11461              	.LBB8896:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11462              		.loc 2 193 51 is_stmt 0 view .LVU2924
 11463 02cc 05F12403 		add	r3, r5, #36
 11464              	.LVL805:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11465              		.loc 2 193 51 view .LVU2925
 11466              	.LBE8896:
 11467              	.LBE8895:
 11468              	.LBB8897:
 11469              	.LBI8897:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11470              		.loc 2 290 7 is_stmt 1 view .LVU2926
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11471              		.loc 2 290 7 is_stmt 0 view .LVU2927
 11472              	.LBE8897:
 11473              	.LBB8898:
 11474              	.LBI8898:
ARM GAS  /tmp/ccL95Edz.s 			page 494


 11475              		.loc 19 97 19 is_stmt 1 view .LVU2928
 11476              	.LBB8899:
 11477              	.LBI8899:
 11478              		.loc 3 514 7 view .LVU2929
 11479              	.LBB8900:
 11480              	.LBI8900:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11481              		.loc 5 141 7 view .LVU2930
 11482              	.LBB8901:
 11483              	.LBI8901:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11484              		.loc 4 83 7 view .LVU2931
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11485              		.loc 4 83 7 is_stmt 0 view .LVU2932
 11486              	.LBE8901:
 11487              	.LBE8900:
 11488              	.LBE8899:
 11489              	.LBE8898:
 11490              	.LBB8902:
 11491              	.LBI8902:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11492              		.loc 2 159 2 is_stmt 1 view .LVU2933
 11493              	.LBB8903:
 11494              	.LBB8904:
 11495              	.LBI8904:
 11496              		.loc 9 99 5 view .LVU2934
 11497              		.loc 9 99 5 is_stmt 0 view .LVU2935
 11498              	.LBE8904:
 11499              	.LBB8905:
 11500              	.LBI8905:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11501              		.loc 5 141 7 is_stmt 1 view .LVU2936
 11502              	.LBB8906:
 11503              	.LBI8906:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11504              		.loc 4 83 7 view .LVU2937
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11505              		.loc 4 83 7 is_stmt 0 view .LVU2938
 11506              	.LBE8906:
 11507              	.LBE8905:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11508              		.loc 2 160 46 view .LVU2939
 11509 02d0 EB61     		str	r3, [r5, #28]
 11510              	.LVL806:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11511              		.loc 2 160 46 view .LVU2940
 11512              	.LBE8903:
 11513              	.LBE8902:
 11514              	.LBB8907:
 11515              	.LBI8907:
 11516              		.loc 5 153 7 is_stmt 1 view .LVU2941
 11517              	.LBB8908:
 11518              	.LBI8908:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11519              		.loc 4 89 7 view .LVU2942
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11520              		.loc 4 89 7 is_stmt 0 view .LVU2943
ARM GAS  /tmp/ccL95Edz.s 			page 495


 11521              	.LBE8908:
 11522              	.LBE8907:
 11523              	.LBB8909:
 11524              	.LBI8909:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11525              		.loc 2 186 7 is_stmt 1 view .LVU2944
 11526              	.LBB8910:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11527              		.loc 2 187 28 is_stmt 0 view .LVU2945
 11528 02d2 6299     		ldr	r1, [sp, #392]
 11529              	.LVL807:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11530              		.loc 2 187 28 view .LVU2946
 11531              	.LBE8910:
 11532              	.LBE8909:
 11533              	.LBB8911:
 11534              	.LBI8911:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11535              		.loc 2 186 7 is_stmt 1 view .LVU2947
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11536              		.loc 2 186 7 is_stmt 0 view .LVU2948
 11537              	.LBE8911:
 11538              	.LBB8912:
 11539              	.LBI8912:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11540              		.loc 2 936 7 is_stmt 1 view .LVU2949
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11541              		.loc 2 936 7 is_stmt 0 view .LVU2950
 11542              	.LBE8912:
 11543              	.LBB8913:
 11544              	.LBI8913:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 11545              		.loc 2 263 9 is_stmt 1 view .LVU2951
 11546              	.LBB8914:
 11547              	.LBB8915:
 11548              	.LBI8915:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 11549              		.loc 2 243 9 view .LVU2952
 11550              	.LBB8916:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11551              		.loc 2 247 11 is_stmt 0 view .LVU2953
 11552 02d4 4FF00003 		mov	r3, #0
 11553 02d8 639A     		ldr	r2, [sp, #396]
 11554 02da 0A44     		add	r2, r2, r1
 11555              	.LVL808:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11556              		.loc 2 247 11 view .LVU2954
 11557 02dc 05F11C00 		add	r0, r5, #28
 11558              	.LVL809:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11559              		.loc 2 247 11 view .LVU2955
 11560 02e0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 11561              	.LVL810:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11562              		.loc 2 247 11 view .LVU2956
 11563              	.LBE8916:
 11564              	.LBE8915:
ARM GAS  /tmp/ccL95Edz.s 			page 496


 11565              	.LBE8914:
 11566              	.LBE8913:
 11567              	.LBE8894:
 11568              	.LBE8893:
  72:alohal/cli/command.hpp ****     {}
 11569              		.loc 18 72 81 view .LVU2957
 11570 02e4 6C63     		str	r4, [r5, #52]
 11571 02e6 05F13803 		add	r3, r5, #56
 11572 02ea 97E80300 		ldm	r7, {r0, r1}
 11573 02ee 83E80300 		stm	r3, {r0, r1}
 11574 02f2 C5F84090 		str	r9, [r5, #64]
 11575              	.LVL811:
  72:alohal/cli/command.hpp ****     {}
 11576              		.loc 18 72 81 view .LVU2958
 11577              	.LBE8867:
 11578              	.LBE8866:
 11579              		.loc 21 137 9 view .LVU2959
 11580 02f6 6E95     		str	r5, [sp, #440]
 11581 02f8 6EA9     		add	r1, sp, #440
 11582 02fa 06F16800 		add	r0, r6, #104
 11583 02fe FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_
 11584              	.LVL812:
 11585              	.LBB8917:
 11586              	.LBI8917:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11587              		.loc 2 657 7 is_stmt 1 view .LVU2960
 11588              	.LBB8918:
 11589              	.LBI8918:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11590              		.loc 2 229 7 view .LVU2961
 11591              	.LBB8919:
 11592              	.LBB8920:
 11593              	.LBI8920:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11594              		.loc 2 221 7 view .LVU2962
 11595              	.LBB8921:
 11596              	.LBI8921:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11597              		.loc 2 186 7 view .LVU2963
 11598              	.LBB8922:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11599              		.loc 2 187 28 is_stmt 0 view .LVU2964
 11600 0302 6298     		ldr	r0, [sp, #392]
 11601              	.LVL813:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11602              		.loc 2 187 28 view .LVU2965
 11603              	.LBE8922:
 11604              	.LBE8921:
 11605              	.LBB8923:
 11606              	.LBI8923:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11607              		.loc 2 200 7 is_stmt 1 view .LVU2966
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11608              		.loc 2 200 7 is_stmt 0 view .LVU2967
 11609              	.LBE8923:
 11610              	.LBE8920:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
ARM GAS  /tmp/ccL95Edz.s 			page 497


 11611              		.loc 2 231 2 view .LVU2968
 11612 0304 5045     		cmp	r0, r10
 11613 0306 19D0     		beq	.L262
 11614              	.LVL814:
 11615              	.LBB8924:
 11616              	.LBI8924:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11617              		.loc 2 236 7 is_stmt 1 view .LVU2969
 11618              	.LBB8925:
 11619              	.LBB8926:
 11620              	.LBI8926:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11621              		.loc 3 469 7 view .LVU2970
 11622              	.LBB8927:
 11623              	.LBI8927:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11624              		.loc 4 119 7 view .LVU2971
 11625              	.LBB8928:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11626              		.loc 4 128 19 is_stmt 0 view .LVU2972
 11627 0308 FFF7FEFF 		bl	_ZdlPv
 11628              	.LVL815:
 11629 030c 16E0     		b	.L273
 11630              	.L274:
 11631 030e 00BF     		.align	2
 11632              	.L272:
 11633 0310 01000000 		.word	.LC6+1
 11634 0314 02000000 		.word	.LC9+2
 11635 0318 0E000000 		.word	.LC10+14
 11636 031c 00000000 		.word	_ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESa
 11637 0320 08000000 		.word	_ZTV7CommandI10FilesystemE+8
 11638 0324 02000000 		.word	.LC11+2
 11639 0328 0E000000 		.word	.LC12+14
 11640 032c 00000000 		.word	_ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESa
 11641 0330 03000000 		.word	.LC13+3
 11642 0334 0F000000 		.word	.LC14+15
 11643 0338 00000000 		.word	_ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES
 11644              	.L273:
 11645              	.LVL816:
 11646              	.L262:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11647              		.loc 4 128 19 view .LVU2973
 11648              	.LBE8928:
 11649              	.LBE8927:
 11650              	.LBE8926:
 11651              	.LBE8925:
 11652              	.LBE8924:
 11653              	.LBE8919:
 11654              	.LBE8918:
 11655              	.LBB8929:
 11656              	.LBI8929:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11657              		.loc 2 150 14 is_stmt 1 view .LVU2974
 11658              	.LBB8930:
 11659              	.LBI8930:
 11660              		.loc 5 153 7 view .LVU2975
 11661              	.LBB8931:
ARM GAS  /tmp/ccL95Edz.s 			page 498


 11662              	.LBI8931:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11663              		.loc 4 89 7 view .LVU2976
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11664              		.loc 4 89 7 is_stmt 0 view .LVU2977
 11665              	.LBE8931:
 11666              	.LBE8930:
 11667              	.LBE8929:
 11668              	.LBE8917:
 11669              	.LBB8932:
 11670              	.LBI8932:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11671              		.loc 2 657 7 is_stmt 1 view .LVU2978
 11672              	.LBB8933:
 11673              	.LBI8933:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11674              		.loc 2 229 7 view .LVU2979
 11675              	.LBB8934:
 11676              	.LBB8935:
 11677              	.LBI8935:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11678              		.loc 2 221 7 view .LVU2980
 11679              	.LBB8936:
 11680              	.LBI8936:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11681              		.loc 2 186 7 view .LVU2981
 11682              	.LBB8937:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11683              		.loc 2 187 28 is_stmt 0 view .LVU2982
 11684 033c 6898     		ldr	r0, [sp, #416]
 11685              	.LVL817:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11686              		.loc 2 187 28 view .LVU2983
 11687              	.LBE8937:
 11688              	.LBE8936:
 11689              	.LBB8938:
 11690              	.LBI8938:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11691              		.loc 2 200 7 is_stmt 1 view .LVU2984
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11692              		.loc 2 200 7 is_stmt 0 view .LVU2985
 11693              	.LBE8938:
 11694              	.LBE8935:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11695              		.loc 2 231 2 view .LVU2986
 11696 033e 6AAB     		add	r3, sp, #424
 11697 0340 9842     		cmp	r0, r3
 11698 0342 01D0     		beq	.L263
 11699              	.LVL818:
 11700              	.LBB8939:
 11701              	.LBI8939:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11702              		.loc 2 236 7 is_stmt 1 view .LVU2987
 11703              	.LBB8940:
 11704              	.LBB8941:
 11705              	.LBI8941:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  /tmp/ccL95Edz.s 			page 499


 11706              		.loc 3 469 7 view .LVU2988
 11707              	.LBB8942:
 11708              	.LBI8942:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11709              		.loc 4 119 7 view .LVU2989
 11710              	.LBB8943:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11711              		.loc 4 128 19 is_stmt 0 view .LVU2990
 11712 0344 FFF7FEFF 		bl	_ZdlPv
 11713              	.LVL819:
 11714              	.L263:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11715              		.loc 4 128 19 view .LVU2991
 11716              	.LBE8943:
 11717              	.LBE8942:
 11718              	.LBE8941:
 11719              	.LBE8940:
 11720              	.LBE8939:
 11721              	.LBE8934:
 11722              	.LBE8933:
 11723              	.LBB8944:
 11724              	.LBI8944:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11725              		.loc 2 150 14 is_stmt 1 view .LVU2992
 11726              	.LBB8945:
 11727              	.LBI8945:
 11728              		.loc 5 153 7 view .LVU2993
 11729              	.LBB8946:
 11730              	.LBI8946:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11731              		.loc 4 89 7 view .LVU2994
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11732              		.loc 4 89 7 is_stmt 0 view .LVU2995
 11733              	.LBE8946:
 11734              	.LBE8945:
 11735              	.LBE8944:
 11736              	.LBE8932:
 11737              	.LBE8813:
 11738              	.LBE8812:
 11739              	.LBB8947:
 11740              	.LBI8947:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11741              		.loc 2 657 7 is_stmt 1 view .LVU2996
 11742              	.LBB8948:
 11743              	.LBI8948:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11744              		.loc 2 229 7 view .LVU2997
 11745              	.LBB8949:
 11746              	.LBB8950:
 11747              	.LBI8950:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11748              		.loc 2 221 7 view .LVU2998
 11749              	.LBB8951:
 11750              	.LBI8951:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11751              		.loc 2 186 7 view .LVU2999
 11752              	.LBB8952:
ARM GAS  /tmp/ccL95Edz.s 			page 500


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11753              		.loc 2 187 28 is_stmt 0 view .LVU3000
 11754 0348 2C98     		ldr	r0, [sp, #176]
 11755              	.LVL820:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11756              		.loc 2 187 28 view .LVU3001
 11757              	.LBE8952:
 11758              	.LBE8951:
 11759              	.LBB8953:
 11760              	.LBI8953:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11761              		.loc 2 200 7 is_stmt 1 view .LVU3002
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11762              		.loc 2 200 7 is_stmt 0 view .LVU3003
 11763              	.LBE8953:
 11764              	.LBE8950:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11765              		.loc 2 231 2 view .LVU3004
 11766 034a 2EAB     		add	r3, sp, #184
 11767 034c 9842     		cmp	r0, r3
 11768 034e 01D0     		beq	.L264
 11769              	.LVL821:
 11770              	.LBB8954:
 11771              	.LBI8954:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11772              		.loc 2 236 7 is_stmt 1 view .LVU3005
 11773              	.LBB8955:
 11774              	.LBB8956:
 11775              	.LBI8956:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11776              		.loc 3 469 7 view .LVU3006
 11777              	.LBB8957:
 11778              	.LBI8957:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11779              		.loc 4 119 7 view .LVU3007
 11780              	.LBB8958:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11781              		.loc 4 128 19 is_stmt 0 view .LVU3008
 11782 0350 FFF7FEFF 		bl	_ZdlPv
 11783              	.LVL822:
 11784              	.L264:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11785              		.loc 4 128 19 view .LVU3009
 11786              	.LBE8958:
 11787              	.LBE8957:
 11788              	.LBE8956:
 11789              	.LBE8955:
 11790              	.LBE8954:
 11791              	.LBE8949:
 11792              	.LBE8948:
 11793              	.LBB8959:
 11794              	.LBI8959:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11795              		.loc 2 150 14 is_stmt 1 view .LVU3010
 11796              	.LBB8960:
 11797              	.LBI8960:
 11798              		.loc 5 153 7 view .LVU3011
ARM GAS  /tmp/ccL95Edz.s 			page 501


 11799              	.LBB8961:
 11800              	.LBI8961:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11801              		.loc 4 89 7 view .LVU3012
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11802              		.loc 4 89 7 is_stmt 0 view .LVU3013
 11803              	.LBE8961:
 11804              	.LBE8960:
 11805              	.LBE8959:
 11806              	.LBE8947:
 11807              	.LBB8962:
 11808              	.LBI8962:
 11809              		.loc 5 153 7 is_stmt 1 view .LVU3014
 11810              	.LBB8963:
 11811              	.LBI8963:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11812              		.loc 4 89 7 view .LVU3015
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11813              		.loc 4 89 7 is_stmt 0 view .LVU3016
 11814              	.LBE8963:
 11815              	.LBE8962:
 11816              	.LBB8964:
 11817              	.LBI8964:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11818              		.loc 2 657 7 is_stmt 1 view .LVU3017
 11819              	.LBB8965:
 11820              	.LBI8965:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11821              		.loc 2 229 7 view .LVU3018
 11822              	.LBB8966:
 11823              	.LBB8967:
 11824              	.LBI8967:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11825              		.loc 2 221 7 view .LVU3019
 11826              	.LBB8968:
 11827              	.LBI8968:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11828              		.loc 2 186 7 view .LVU3020
 11829              	.LBB8969:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11830              		.loc 2 187 28 is_stmt 0 view .LVU3021
 11831 0354 2698     		ldr	r0, [sp, #152]
 11832              	.LVL823:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11833              		.loc 2 187 28 view .LVU3022
 11834              	.LBE8969:
 11835              	.LBE8968:
 11836              	.LBB8970:
 11837              	.LBI8970:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11838              		.loc 2 200 7 is_stmt 1 view .LVU3023
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11839              		.loc 2 200 7 is_stmt 0 view .LVU3024
 11840              	.LBE8970:
 11841              	.LBE8967:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11842              		.loc 2 231 2 view .LVU3025
ARM GAS  /tmp/ccL95Edz.s 			page 502


 11843 0356 28AB     		add	r3, sp, #160
 11844 0358 9842     		cmp	r0, r3
 11845 035a 01D0     		beq	.L265
 11846              	.LVL824:
 11847              	.LBB8971:
 11848              	.LBI8971:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11849              		.loc 2 236 7 is_stmt 1 view .LVU3026
 11850              	.LBB8972:
 11851              	.LBB8973:
 11852              	.LBI8973:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11853              		.loc 3 469 7 view .LVU3027
 11854              	.LBB8974:
 11855              	.LBI8974:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11856              		.loc 4 119 7 view .LVU3028
 11857              	.LBB8975:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11858              		.loc 4 128 19 is_stmt 0 view .LVU3029
 11859 035c FFF7FEFF 		bl	_ZdlPv
 11860              	.LVL825:
 11861              	.L265:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11862              		.loc 4 128 19 view .LVU3030
 11863              	.LBE8975:
 11864              	.LBE8974:
 11865              	.LBE8973:
 11866              	.LBE8972:
 11867              	.LBE8971:
 11868              	.LBE8966:
 11869              	.LBE8965:
 11870              	.LBB8976:
 11871              	.LBI8976:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11872              		.loc 2 150 14 is_stmt 1 view .LVU3031
 11873              	.LBB8977:
 11874              	.LBI8977:
 11875              		.loc 5 153 7 view .LVU3032
 11876              	.LBB8978:
 11877              	.LBI8978:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11878              		.loc 4 89 7 view .LVU3033
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11879              		.loc 4 89 7 is_stmt 0 view .LVU3034
 11880              	.LBE8978:
 11881              	.LBE8977:
 11882              	.LBE8976:
 11883              	.LBE8964:
 11884              	.LBB8979:
 11885              	.LBI8979:
 11886              		.loc 5 153 7 is_stmt 1 view .LVU3035
 11887              	.LBB8980:
 11888              	.LBI8980:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11889              		.loc 4 89 7 view .LVU3036
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 503


 11890              		.loc 4 89 7 is_stmt 0 view .LVU3037
 11891              	.LBE8980:
 11892              	.LBE8979:
   8:alohal/filesystem/filesystem.cpp ****     cli->Set_filesystem_prefix(actual_position->Path());
 11893              		.loc 17 8 5 is_stmt 1 view .LVU3038
 11894              	.LBB8981:
 11895              	.LBI8981:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 11896              		.loc 5 138 7 view .LVU3039
 11897              	.LBB8982:
 11898              	.LBI8982:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11899              		.loc 4 80 7 view .LVU3040
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11900              		.loc 4 80 7 is_stmt 0 view .LVU3041
 11901              	.LBE8982:
 11902              	.LBE8981:
 11903              	.LBB8983:
 11904              	.LBI8983:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 11905              		.loc 2 525 7 is_stmt 1 view .LVU3042
 11906              	.LBB8984:
 11907              	.LBB8985:
 11908              	.LBB8986:
 11909              	.LBI8986:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11910              		.loc 2 190 7 view .LVU3043
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11911              		.loc 2 190 7 is_stmt 0 view .LVU3044
 11912              	.LBE8986:
 11913              	.LBB8987:
 11914              	.LBI8987:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 11915              		.loc 2 156 2 is_stmt 1 view .LVU3045
 11916              	.LBB8988:
 11917              	.LBB8989:
 11918              	.LBB8990:
 11919              	.LBI8990:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11920              		.loc 5 141 7 view .LVU3046
 11921              	.LBB8991:
 11922              	.LBI8991:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11923              		.loc 4 83 7 view .LVU3047
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11924              		.loc 4 83 7 is_stmt 0 view .LVU3048
 11925              	.LBE8991:
 11926              	.LBE8990:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11927              		.loc 2 157 35 view .LVU3049
 11928 0360 36AB     		add	r3, sp, #216
 11929              	.LVL826:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11930              		.loc 2 157 35 view .LVU3050
 11931 0362 3493     		str	r3, [sp, #208]
 11932              	.LVL827:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 504


 11933              		.loc 2 157 35 view .LVU3051
 11934              	.LBE8989:
 11935              	.LBE8988:
 11936              	.LBE8987:
 11937              	.LBB8992:
 11938              	.LBI8992:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 11939              		.loc 8 329 7 is_stmt 1 view .LVU3052
 11940              	.LBE8992:
 11941              	.LBE8985:
 11942              	.LBE8984:
 11943              	.LBE8983:
 11944              	.LBE9209:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 11945              		.loc 8 332 2 view .LVU3053
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 11946              		.loc 8 335 2 view .LVU3054
 11947              	.LBB9210:
 11948              	.LBB8999:
 11949              	.LBB8998:
 11950              	.LBB8997:
 11951              	.LBB8993:
 11952              	.LBI8993:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 11953              		.loc 2 263 9 view .LVU3055
 11954              	.LBB8994:
 11955              	.LBB8995:
 11956              	.LBI8995:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 11957              		.loc 2 243 9 view .LVU3056
 11958              	.LBB8996:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11959              		.loc 2 247 11 is_stmt 0 view .LVU3057
 11960 0364 484A     		ldr	r2, .L275
 11961              	.LVL828:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11962              		.loc 2 247 11 view .LVU3058
 11963 0366 4FF00003 		mov	r3, #0
 11964 036a D11E     		subs	r1, r2, #3
 11965 036c 34A8     		add	r0, sp, #208
 11966              	.LVL829:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11967              		.loc 2 247 11 view .LVU3059
 11968 036e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 11969              	.LVL830:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11970              		.loc 2 247 11 view .LVU3060
 11971              	.LBE8996:
 11972              	.LBE8995:
 11973              	.LBE8994:
 11974              	.LBE8993:
 11975              	.LBE8997:
 11976              	.LBE8998:
 11977              	.LBE8999:
 11978              	.LBB9000:
 11979              	.LBI9000:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 505


 11980              		.loc 5 138 7 is_stmt 1 view .LVU3061
 11981              	.LBB9001:
 11982              	.LBI9001:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11983              		.loc 4 80 7 view .LVU3062
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11984              		.loc 4 80 7 is_stmt 0 view .LVU3063
 11985              	.LBE9001:
 11986              	.LBE9000:
 11987              	.LBB9002:
 11988              	.LBI9002:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 11989              		.loc 2 525 7 is_stmt 1 view .LVU3064
 11990              	.LBB9003:
 11991              	.LBB9004:
 11992              	.LBB9005:
 11993              	.LBI9005:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11994              		.loc 2 190 7 view .LVU3065
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11995              		.loc 2 190 7 is_stmt 0 view .LVU3066
 11996              	.LBE9005:
 11997              	.LBB9006:
 11998              	.LBI9006:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 11999              		.loc 2 156 2 is_stmt 1 view .LVU3067
 12000              	.LBB9007:
 12001              	.LBB9008:
 12002              	.LBB9009:
 12003              	.LBI9009:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12004              		.loc 5 141 7 view .LVU3068
 12005              	.LBB9010:
 12006              	.LBI9010:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12007              		.loc 4 83 7 view .LVU3069
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12008              		.loc 4 83 7 is_stmt 0 view .LVU3070
 12009              	.LBE9010:
 12010              	.LBE9009:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12011              		.loc 2 157 35 view .LVU3071
 12012 0372 3CAB     		add	r3, sp, #240
 12013              	.LVL831:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12014              		.loc 2 157 35 view .LVU3072
 12015 0374 3A93     		str	r3, [sp, #232]
 12016              	.LVL832:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12017              		.loc 2 157 35 view .LVU3073
 12018              	.LBE9008:
 12019              	.LBE9007:
 12020              	.LBE9006:
 12021              	.LBB9011:
 12022              	.LBI9011:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 12023              		.loc 8 329 7 is_stmt 1 view .LVU3074
ARM GAS  /tmp/ccL95Edz.s 			page 506


 12024              	.LBE9011:
 12025              	.LBE9004:
 12026              	.LBE9003:
 12027              	.LBE9002:
 12028              	.LBE9210:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 12029              		.loc 8 332 2 view .LVU3075
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 12030              		.loc 8 335 2 view .LVU3076
 12031              	.LBB9211:
 12032              	.LBB9018:
 12033              	.LBB9017:
 12034              	.LBB9016:
 12035              	.LBB9012:
 12036              	.LBI9012:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 12037              		.loc 2 263 9 view .LVU3077
 12038              	.LBB9013:
 12039              	.LBB9014:
 12040              	.LBI9014:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 12041              		.loc 2 243 9 view .LVU3078
 12042              	.LBB9015:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12043              		.loc 2 247 11 is_stmt 0 view .LVU3079
 12044 0376 454A     		ldr	r2, .L275+4
 12045              	.LVL833:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12046              		.loc 2 247 11 view .LVU3080
 12047 0378 4FF00003 		mov	r3, #0
 12048 037c A2F10F01 		sub	r1, r2, #15
 12049 0380 3AA8     		add	r0, sp, #232
 12050              	.LVL834:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12051              		.loc 2 247 11 view .LVU3081
 12052 0382 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 12053              	.LVL835:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12054              		.loc 2 247 11 view .LVU3082
 12055              	.LBE9015:
 12056              	.LBE9014:
 12057              	.LBE9013:
 12058              	.LBE9012:
 12059              	.LBE9016:
 12060              	.LBE9017:
 12061              	.LBE9018:
   8:alohal/filesystem/filesystem.cpp ****     cli->Set_filesystem_prefix(actual_position->Path());
 12062              		.loc 17 8 26 view .LVU3083
 12063 0386 424B     		ldr	r3, .L275+8
 12064 0388 4093     		str	r3, [sp, #256]
 12065 038a 4FF0000A 		mov	r10, #0
 12066 038e CDF804A1 		str	r10, [sp, #260]
 12067              	.LVL836:
   8:alohal/filesystem/filesystem.cpp ****     cli->Set_filesystem_prefix(actual_position->Path());
 12068              		.loc 17 8 26 view .LVU3084
 12069 0392 E846     		mov	r8, sp
 12070 0394 5146     		mov	r1, r10
ARM GAS  /tmp/ccL95Edz.s 			page 507


 12071 0396 1846     		mov	r0, r3
 12072 0398 88E80300 		stm	r8, {r0, r1}
 12073              	.LBB9019:
 12074              	.LBI9019:
 136:alohal/cli/cli.hpp ****         commands.emplace_back(new Command<registrator_class>(command, help, object, method));
 12075              		.loc 21 136 10 is_stmt 1 view .LVU3085
 12076              	.LVL837:
 12077              	.LBB9020:
 12078              	.LBB9021:
 12079              	.LBI9021:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 12080              		.loc 2 448 7 view .LVU3086
 12081              	.LBB9022:
 12082              	.LBB9023:
 12083              	.LBB9024:
 12084              	.LBI9024:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12085              		.loc 2 190 7 view .LVU3087
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12086              		.loc 2 190 7 is_stmt 0 view .LVU3088
 12087              	.LBE9024:
 12088              	.LBB9025:
 12089              	.LBI9025:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12090              		.loc 2 290 7 is_stmt 1 view .LVU3089
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12091              		.loc 2 290 7 is_stmt 0 view .LVU3090
 12092              	.LBE9025:
 12093              	.LBB9026:
 12094              	.LBI9026:
 12095              		.loc 19 97 19 is_stmt 1 view .LVU3091
 12096              	.LBB9027:
 12097              	.LBI9027:
 12098              		.loc 3 514 7 view .LVU3092
 12099              	.LBB9028:
 12100              	.LBI9028:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12101              		.loc 5 141 7 view .LVU3093
 12102              	.LBB9029:
 12103              	.LBI9029:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12104              		.loc 4 83 7 view .LVU3094
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12105              		.loc 4 83 7 is_stmt 0 view .LVU3095
 12106              	.LBE9029:
 12107              	.LBE9028:
 12108              	.LBE9027:
 12109              	.LBE9026:
 12110              	.LBB9030:
 12111              	.LBI9030:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12112              		.loc 2 159 2 is_stmt 1 view .LVU3096
 12113              	.LBB9031:
 12114              	.LBB9032:
 12115              	.LBB9033:
 12116              	.LBI9033:
 12117              		.loc 9 99 5 view .LVU3097
ARM GAS  /tmp/ccL95Edz.s 			page 508


 12118              		.loc 9 99 5 is_stmt 0 view .LVU3098
 12119              	.LBE9033:
 12120              	.LBB9034:
 12121              	.LBI9034:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12122              		.loc 5 141 7 is_stmt 1 view .LVU3099
 12123              	.LBB9035:
 12124              	.LBI9035:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12125              		.loc 4 83 7 view .LVU3100
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12126              		.loc 4 83 7 is_stmt 0 view .LVU3101
 12127              	.LBE9035:
 12128              	.LBE9034:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12129              		.loc 2 160 46 view .LVU3102
 12130 039c 77AB     		add	r3, sp, #476
 12131              	.LVL838:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12132              		.loc 2 160 46 view .LVU3103
 12133 039e 7593     		str	r3, [sp, #468]
 12134              	.LVL839:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12135              		.loc 2 160 46 view .LVU3104
 12136              	.LBE9032:
 12137              	.LBE9031:
 12138              	.LBE9030:
 12139              	.LBB9036:
 12140              	.LBI9036:
 12141              		.loc 5 153 7 is_stmt 1 view .LVU3105
 12142              	.LBB9037:
 12143              	.LBI9037:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12144              		.loc 4 89 7 view .LVU3106
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12145              		.loc 4 89 7 is_stmt 0 view .LVU3107
 12146              	.LBE9037:
 12147              	.LBE9036:
 12148              	.LBB9038:
 12149              	.LBI9038:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12150              		.loc 2 186 7 is_stmt 1 view .LVU3108
 12151              	.LBB9039:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12152              		.loc 2 187 28 is_stmt 0 view .LVU3109
 12153 03a0 3499     		ldr	r1, [sp, #208]
 12154              	.LVL840:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12155              		.loc 2 187 28 view .LVU3110
 12156              	.LBE9039:
 12157              	.LBE9038:
 12158              	.LBB9040:
 12159              	.LBI9040:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12160              		.loc 2 186 7 is_stmt 1 view .LVU3111
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12161              		.loc 2 186 7 is_stmt 0 view .LVU3112
ARM GAS  /tmp/ccL95Edz.s 			page 509


 12162              	.LBE9040:
 12163              	.LBB9041:
 12164              	.LBI9041:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12165              		.loc 2 936 7 is_stmt 1 view .LVU3113
 12166              	.LBB9042:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12167              		.loc 2 937 16 is_stmt 0 view .LVU3114
 12168 03a2 359A     		ldr	r2, [sp, #212]
 12169              	.LVL841:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12170              		.loc 2 937 16 view .LVU3115
 12171              	.LBE9042:
 12172              	.LBE9041:
 12173              	.LBB9043:
 12174              	.LBI9043:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 12175              		.loc 2 263 9 is_stmt 1 view .LVU3116
 12176              	.LBB9044:
 12177              	.LBB9045:
 12178              	.LBI9045:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 12179              		.loc 2 243 9 view .LVU3117
 12180              	.LBB9046:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12181              		.loc 2 247 11 is_stmt 0 view .LVU3118
 12182 03a4 4FF00003 		mov	r3, #0
 12183 03a8 0A44     		add	r2, r2, r1
 12184              	.LVL842:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12185              		.loc 2 247 11 view .LVU3119
 12186 03aa 75A8     		add	r0, sp, #468
 12187              	.LVL843:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12188              		.loc 2 247 11 view .LVU3120
 12189 03ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 12190              	.LVL844:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12191              		.loc 2 247 11 view .LVU3121
 12192              	.LBE9046:
 12193              	.LBE9045:
 12194              	.LBE9044:
 12195              	.LBE9043:
 12196              	.LBE9023:
 12197              	.LBE9022:
 12198              	.LBE9021:
 12199              	.LBB9047:
 12200              	.LBI9047:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 12201              		.loc 2 448 7 is_stmt 1 view .LVU3122
 12202              	.LBB9048:
 12203              	.LBB9049:
 12204              	.LBB9050:
 12205              	.LBI9050:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12206              		.loc 2 190 7 view .LVU3123
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 510


 12207              		.loc 2 190 7 is_stmt 0 view .LVU3124
 12208              	.LBE9050:
 12209              	.LBB9051:
 12210              	.LBI9051:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12211              		.loc 2 290 7 is_stmt 1 view .LVU3125
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12212              		.loc 2 290 7 is_stmt 0 view .LVU3126
 12213              	.LBE9051:
 12214              	.LBB9052:
 12215              	.LBI9052:
 12216              		.loc 19 97 19 is_stmt 1 view .LVU3127
 12217              	.LBB9053:
 12218              	.LBI9053:
 12219              		.loc 3 514 7 view .LVU3128
 12220              	.LBB9054:
 12221              	.LBI9054:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12222              		.loc 5 141 7 view .LVU3129
 12223              	.LBB9055:
 12224              	.LBI9055:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12225              		.loc 4 83 7 view .LVU3130
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12226              		.loc 4 83 7 is_stmt 0 view .LVU3131
 12227              	.LBE9055:
 12228              	.LBE9054:
 12229              	.LBE9053:
 12230              	.LBE9052:
 12231              	.LBB9056:
 12232              	.LBI9056:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12233              		.loc 2 159 2 is_stmt 1 view .LVU3132
 12234              	.LBB9057:
 12235              	.LBB9058:
 12236              	.LBB9059:
 12237              	.LBI9059:
 12238              		.loc 9 99 5 view .LVU3133
 12239              		.loc 9 99 5 is_stmt 0 view .LVU3134
 12240              	.LBE9059:
 12241              	.LBB9060:
 12242              	.LBI9060:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12243              		.loc 5 141 7 is_stmt 1 view .LVU3135
 12244              	.LBB9061:
 12245              	.LBI9061:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12246              		.loc 4 83 7 view .LVU3136
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12247              		.loc 4 83 7 is_stmt 0 view .LVU3137
 12248              	.LBE9061:
 12249              	.LBE9060:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12250              		.loc 2 160 46 view .LVU3138
 12251 03b0 0DF5E279 		add	r9, sp, #452
 12252              	.LVL845:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccL95Edz.s 			page 511


 12253              		.loc 2 160 46 view .LVU3139
 12254 03b4 CDF8BC91 		str	r9, [sp, #444]
 12255              	.LVL846:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12256              		.loc 2 160 46 view .LVU3140
 12257              	.LBE9058:
 12258              	.LBE9057:
 12259              	.LBE9056:
 12260              	.LBB9062:
 12261              	.LBI9062:
 12262              		.loc 5 153 7 is_stmt 1 view .LVU3141
 12263              	.LBB9063:
 12264              	.LBI9063:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12265              		.loc 4 89 7 view .LVU3142
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12266              		.loc 4 89 7 is_stmt 0 view .LVU3143
 12267              	.LBE9063:
 12268              	.LBE9062:
 12269              	.LBB9064:
 12270              	.LBI9064:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12271              		.loc 2 186 7 is_stmt 1 view .LVU3144
 12272              	.LBB9065:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12273              		.loc 2 187 28 is_stmt 0 view .LVU3145
 12274 03b8 3A99     		ldr	r1, [sp, #232]
 12275              	.LVL847:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12276              		.loc 2 187 28 view .LVU3146
 12277              	.LBE9065:
 12278              	.LBE9064:
 12279              	.LBB9066:
 12280              	.LBI9066:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12281              		.loc 2 186 7 is_stmt 1 view .LVU3147
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12282              		.loc 2 186 7 is_stmt 0 view .LVU3148
 12283              	.LBE9066:
 12284              	.LBB9067:
 12285              	.LBI9067:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12286              		.loc 2 936 7 is_stmt 1 view .LVU3149
 12287              	.LBB9068:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12288              		.loc 2 937 16 is_stmt 0 view .LVU3150
 12289 03ba 3B9A     		ldr	r2, [sp, #236]
 12290              	.LVL848:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12291              		.loc 2 937 16 view .LVU3151
 12292              	.LBE9068:
 12293              	.LBE9067:
 12294              	.LBB9069:
 12295              	.LBI9069:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 12296              		.loc 2 263 9 is_stmt 1 view .LVU3152
 12297              	.LBB9070:
ARM GAS  /tmp/ccL95Edz.s 			page 512


 12298              	.LBB9071:
 12299              	.LBI9071:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 12300              		.loc 2 243 9 view .LVU3153
 12301              	.LBB9072:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12302              		.loc 2 247 11 is_stmt 0 view .LVU3154
 12303 03bc 4FF00003 		mov	r3, #0
 12304 03c0 0A44     		add	r2, r2, r1
 12305              	.LVL849:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12306              		.loc 2 247 11 view .LVU3155
 12307 03c2 6FA8     		add	r0, sp, #444
 12308              	.LVL850:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12309              		.loc 2 247 11 view .LVU3156
 12310 03c4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 12311              	.LVL851:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12312              		.loc 2 247 11 view .LVU3157
 12313              	.LBE9072:
 12314              	.LBE9071:
 12315              	.LBE9070:
 12316              	.LBE9069:
 12317              	.LBE9049:
 12318              	.LBE9048:
 12319              	.LBE9047:
 12320              		.loc 21 137 31 view .LVU3158
 12321 03c8 4420     		movs	r0, #68
 12322 03ca FFF7FEFF 		bl	_Znwj
 12323              	.LVL852:
 12324 03ce 0546     		mov	r5, r0
 12325              	.LVL853:
 12326              		.loc 21 137 31 view .LVU3159
 12327 03d0 02AF     		add	r7, sp, #8
 12328 03d2 98E80300 		ldm	r8, {r0, r1}
 12329              	.LVL854:
 12330              		.loc 21 137 31 view .LVU3160
 12331 03d6 87E80300 		stm	r7, {r0, r1}
 12332              	.LBB9073:
 12333              	.LBI9073:
  71:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
 12334              		.loc 18 71 5 is_stmt 1 view .LVU3161
 12335              	.LVL855:
 12336              	.LBB9074:
 12337              	.LBB9075:
 12338              	.LBI9075:
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 12339              		.loc 18 16 5 view .LVU3162
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 12340              		.loc 18 16 5 is_stmt 0 view .LVU3163
 12341              	.LBE9075:
  72:alohal/cli/command.hpp ****     {}
 12342              		.loc 18 72 81 view .LVU3164
 12343 03da 2846     		mov	r0, r5
 12344 03dc 2D4B     		ldr	r3, .L275+12
 12345 03de 40F8043B 		str	r3, [r0], #4
ARM GAS  /tmp/ccL95Edz.s 			page 513


 12346              	.LVL856:
 12347              	.LBB9076:
 12348              	.LBI9076:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 12349              		.loc 2 448 7 is_stmt 1 view .LVU3165
 12350              	.LBB9077:
 12351              	.LBB9078:
 12352              	.LBI9078:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12353              		.loc 2 190 7 view .LVU3166
 12354              	.LBB9079:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12355              		.loc 2 193 51 is_stmt 0 view .LVU3167
 12356 03e2 05F10C03 		add	r3, r5, #12
 12357              	.LVL857:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12358              		.loc 2 193 51 view .LVU3168
 12359              	.LBE9079:
 12360              	.LBE9078:
 12361              	.LBB9080:
 12362              	.LBI9080:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12363              		.loc 2 290 7 is_stmt 1 view .LVU3169
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12364              		.loc 2 290 7 is_stmt 0 view .LVU3170
 12365              	.LBE9080:
 12366              	.LBB9081:
 12367              	.LBI9081:
 12368              		.loc 19 97 19 is_stmt 1 view .LVU3171
 12369              	.LBB9082:
 12370              	.LBI9082:
 12371              		.loc 3 514 7 view .LVU3172
 12372              	.LBB9083:
 12373              	.LBI9083:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12374              		.loc 5 141 7 view .LVU3173
 12375              	.LBB9084:
 12376              	.LBI9084:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12377              		.loc 4 83 7 view .LVU3174
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12378              		.loc 4 83 7 is_stmt 0 view .LVU3175
 12379              	.LBE9084:
 12380              	.LBE9083:
 12381              	.LBE9082:
 12382              	.LBE9081:
 12383              	.LBB9085:
 12384              	.LBI9085:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12385              		.loc 2 159 2 is_stmt 1 view .LVU3176
 12386              	.LBB9086:
 12387              	.LBB9087:
 12388              	.LBI9087:
 12389              		.loc 9 99 5 view .LVU3177
 12390              		.loc 9 99 5 is_stmt 0 view .LVU3178
 12391              	.LBE9087:
 12392              	.LBB9088:
ARM GAS  /tmp/ccL95Edz.s 			page 514


 12393              	.LBI9088:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12394              		.loc 5 141 7 is_stmt 1 view .LVU3179
 12395              	.LBB9089:
 12396              	.LBI9089:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12397              		.loc 4 83 7 view .LVU3180
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12398              		.loc 4 83 7 is_stmt 0 view .LVU3181
 12399              	.LBE9089:
 12400              	.LBE9088:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12401              		.loc 2 160 46 view .LVU3182
 12402 03e6 6B60     		str	r3, [r5, #4]
 12403              	.LVL858:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12404              		.loc 2 160 46 view .LVU3183
 12405              	.LBE9086:
 12406              	.LBE9085:
 12407              	.LBB9090:
 12408              	.LBI9090:
 12409              		.loc 5 153 7 is_stmt 1 view .LVU3184
 12410              	.LBB9091:
 12411              	.LBI9091:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12412              		.loc 4 89 7 view .LVU3185
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12413              		.loc 4 89 7 is_stmt 0 view .LVU3186
 12414              	.LBE9091:
 12415              	.LBE9090:
 12416              	.LBB9092:
 12417              	.LBI9092:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12418              		.loc 2 186 7 is_stmt 1 view .LVU3187
 12419              	.LBB9093:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12420              		.loc 2 187 28 is_stmt 0 view .LVU3188
 12421 03e8 7599     		ldr	r1, [sp, #468]
 12422              	.LVL859:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12423              		.loc 2 187 28 view .LVU3189
 12424              	.LBE9093:
 12425              	.LBE9092:
 12426              	.LBB9094:
 12427              	.LBI9094:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12428              		.loc 2 186 7 is_stmt 1 view .LVU3190
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12429              		.loc 2 186 7 is_stmt 0 view .LVU3191
 12430              	.LBE9094:
 12431              	.LBB9095:
 12432              	.LBI9095:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12433              		.loc 2 936 7 is_stmt 1 view .LVU3192
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12434              		.loc 2 936 7 is_stmt 0 view .LVU3193
 12435              	.LBE9095:
ARM GAS  /tmp/ccL95Edz.s 			page 515


 12436              	.LBB9096:
 12437              	.LBI9096:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 12438              		.loc 2 263 9 is_stmt 1 view .LVU3194
 12439              	.LBB9097:
 12440              	.LBB9098:
 12441              	.LBI9098:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 12442              		.loc 2 243 9 view .LVU3195
 12443              	.LBB9099:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12444              		.loc 2 247 11 is_stmt 0 view .LVU3196
 12445 03ea 4FF00003 		mov	r3, #0
 12446 03ee 769A     		ldr	r2, [sp, #472]
 12447 03f0 0A44     		add	r2, r2, r1
 12448              	.LVL860:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12449              		.loc 2 247 11 view .LVU3197
 12450 03f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 12451              	.LVL861:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12452              		.loc 2 247 11 view .LVU3198
 12453              	.LBE9099:
 12454              	.LBE9098:
 12455              	.LBE9097:
 12456              	.LBE9096:
 12457              	.LBE9077:
 12458              	.LBE9076:
 12459              	.LBB9100:
 12460              	.LBI9100:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 12461              		.loc 2 448 7 is_stmt 1 view .LVU3199
 12462              	.LBB9101:
 12463              	.LBB9102:
 12464              	.LBI9102:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12465              		.loc 2 190 7 view .LVU3200
 12466              	.LBB9103:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12467              		.loc 2 193 51 is_stmt 0 view .LVU3201
 12468 03f6 05F12403 		add	r3, r5, #36
 12469              	.LVL862:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12470              		.loc 2 193 51 view .LVU3202
 12471              	.LBE9103:
 12472              	.LBE9102:
 12473              	.LBB9104:
 12474              	.LBI9104:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12475              		.loc 2 290 7 is_stmt 1 view .LVU3203
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12476              		.loc 2 290 7 is_stmt 0 view .LVU3204
 12477              	.LBE9104:
 12478              	.LBB9105:
 12479              	.LBI9105:
 12480              		.loc 19 97 19 is_stmt 1 view .LVU3205
 12481              	.LBB9106:
ARM GAS  /tmp/ccL95Edz.s 			page 516


 12482              	.LBI9106:
 12483              		.loc 3 514 7 view .LVU3206
 12484              	.LBB9107:
 12485              	.LBI9107:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12486              		.loc 5 141 7 view .LVU3207
 12487              	.LBB9108:
 12488              	.LBI9108:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12489              		.loc 4 83 7 view .LVU3208
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12490              		.loc 4 83 7 is_stmt 0 view .LVU3209
 12491              	.LBE9108:
 12492              	.LBE9107:
 12493              	.LBE9106:
 12494              	.LBE9105:
 12495              	.LBB9109:
 12496              	.LBI9109:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12497              		.loc 2 159 2 is_stmt 1 view .LVU3210
 12498              	.LBB9110:
 12499              	.LBB9111:
 12500              	.LBI9111:
 12501              		.loc 9 99 5 view .LVU3211
 12502              		.loc 9 99 5 is_stmt 0 view .LVU3212
 12503              	.LBE9111:
 12504              	.LBB9112:
 12505              	.LBI9112:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12506              		.loc 5 141 7 is_stmt 1 view .LVU3213
 12507              	.LBB9113:
 12508              	.LBI9113:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12509              		.loc 4 83 7 view .LVU3214
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12510              		.loc 4 83 7 is_stmt 0 view .LVU3215
 12511              	.LBE9113:
 12512              	.LBE9112:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12513              		.loc 2 160 46 view .LVU3216
 12514 03fa EB61     		str	r3, [r5, #28]
 12515              	.LVL863:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12516              		.loc 2 160 46 view .LVU3217
 12517              	.LBE9110:
 12518              	.LBE9109:
 12519              	.LBB9114:
 12520              	.LBI9114:
 12521              		.loc 5 153 7 is_stmt 1 view .LVU3218
 12522              	.LBB9115:
 12523              	.LBI9115:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12524              		.loc 4 89 7 view .LVU3219
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12525              		.loc 4 89 7 is_stmt 0 view .LVU3220
 12526              	.LBE9115:
 12527              	.LBE9114:
ARM GAS  /tmp/ccL95Edz.s 			page 517


 12528              	.LBB9116:
 12529              	.LBI9116:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12530              		.loc 2 186 7 is_stmt 1 view .LVU3221
 12531              	.LBB9117:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12532              		.loc 2 187 28 is_stmt 0 view .LVU3222
 12533 03fc 6F99     		ldr	r1, [sp, #444]
 12534              	.LVL864:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12535              		.loc 2 187 28 view .LVU3223
 12536              	.LBE9117:
 12537              	.LBE9116:
 12538              	.LBB9118:
 12539              	.LBI9118:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12540              		.loc 2 186 7 is_stmt 1 view .LVU3224
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12541              		.loc 2 186 7 is_stmt 0 view .LVU3225
 12542              	.LBE9118:
 12543              	.LBB9119:
 12544              	.LBI9119:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12545              		.loc 2 936 7 is_stmt 1 view .LVU3226
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12546              		.loc 2 936 7 is_stmt 0 view .LVU3227
 12547              	.LBE9119:
 12548              	.LBB9120:
 12549              	.LBI9120:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 12550              		.loc 2 263 9 is_stmt 1 view .LVU3228
 12551              	.LBB9121:
 12552              	.LBB9122:
 12553              	.LBI9122:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 12554              		.loc 2 243 9 view .LVU3229
 12555              	.LBB9123:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12556              		.loc 2 247 11 is_stmt 0 view .LVU3230
 12557 03fe 4FF00003 		mov	r3, #0
 12558 0402 709A     		ldr	r2, [sp, #448]
 12559 0404 0A44     		add	r2, r2, r1
 12560              	.LVL865:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12561              		.loc 2 247 11 view .LVU3231
 12562 0406 05F11C00 		add	r0, r5, #28
 12563              	.LVL866:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12564              		.loc 2 247 11 view .LVU3232
 12565 040a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 12566              	.LVL867:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12567              		.loc 2 247 11 view .LVU3233
 12568              	.LBE9123:
 12569              	.LBE9122:
 12570              	.LBE9121:
 12571              	.LBE9120:
ARM GAS  /tmp/ccL95Edz.s 			page 518


 12572              	.LBE9101:
 12573              	.LBE9100:
  72:alohal/cli/command.hpp ****     {}
 12574              		.loc 18 72 81 view .LVU3234
 12575 040e 6C63     		str	r4, [r5, #52]
 12576 0410 05F13803 		add	r3, r5, #56
 12577 0414 97E80300 		ldm	r7, {r0, r1}
 12578 0418 83E80300 		stm	r3, {r0, r1}
 12579 041c C5F840A0 		str	r10, [r5, #64]
 12580              	.LVL868:
  72:alohal/cli/command.hpp ****     {}
 12581              		.loc 18 72 81 view .LVU3235
 12582              	.LBE9074:
 12583              	.LBE9073:
 12584              		.loc 21 137 9 view .LVU3236
 12585 0420 7B95     		str	r5, [sp, #492]
 12586 0422 7BA9     		add	r1, sp, #492
 12587 0424 06F16800 		add	r0, r6, #104
 12588 0428 FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_
 12589              	.LVL869:
 12590              	.LBB9124:
 12591              	.LBI9124:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 12592              		.loc 2 657 7 is_stmt 1 view .LVU3237
 12593              	.LBB9125:
 12594              	.LBI9125:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12595              		.loc 2 229 7 view .LVU3238
 12596              	.LBB9126:
 12597              	.LBB9127:
 12598              	.LBI9127:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12599              		.loc 2 221 7 view .LVU3239
 12600              	.LBB9128:
 12601              	.LBI9128:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12602              		.loc 2 186 7 view .LVU3240
 12603              	.LBB9129:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12604              		.loc 2 187 28 is_stmt 0 view .LVU3241
 12605 042c 6F98     		ldr	r0, [sp, #444]
 12606              	.LVL870:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12607              		.loc 2 187 28 view .LVU3242
 12608              	.LBE9129:
 12609              	.LBE9128:
 12610              	.LBB9130:
 12611              	.LBI9130:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12612              		.loc 2 200 7 is_stmt 1 view .LVU3243
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12613              		.loc 2 200 7 is_stmt 0 view .LVU3244
 12614              	.LBE9130:
 12615              	.LBE9127:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12616              		.loc 2 231 2 view .LVU3245
 12617 042e 4845     		cmp	r0, r9
ARM GAS  /tmp/ccL95Edz.s 			page 519


 12618 0430 01D0     		beq	.L266
 12619              	.LVL871:
 12620              	.LBB9131:
 12621              	.LBI9131:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12622              		.loc 2 236 7 is_stmt 1 view .LVU3246
 12623              	.LBB9132:
 12624              	.LBB9133:
 12625              	.LBI9133:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12626              		.loc 3 469 7 view .LVU3247
 12627              	.LBB9134:
 12628              	.LBI9134:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 12629              		.loc 4 119 7 view .LVU3248
 12630              	.LBB9135:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12631              		.loc 4 128 19 is_stmt 0 view .LVU3249
 12632 0432 FFF7FEFF 		bl	_ZdlPv
 12633              	.LVL872:
 12634              	.L266:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12635              		.loc 4 128 19 view .LVU3250
 12636              	.LBE9135:
 12637              	.LBE9134:
 12638              	.LBE9133:
 12639              	.LBE9132:
 12640              	.LBE9131:
 12641              	.LBE9126:
 12642              	.LBE9125:
 12643              	.LBB9136:
 12644              	.LBI9136:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12645              		.loc 2 150 14 is_stmt 1 view .LVU3251
 12646              	.LBB9137:
 12647              	.LBI9137:
 12648              		.loc 5 153 7 view .LVU3252
 12649              	.LBB9138:
 12650              	.LBI9138:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12651              		.loc 4 89 7 view .LVU3253
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12652              		.loc 4 89 7 is_stmt 0 view .LVU3254
 12653              	.LBE9138:
 12654              	.LBE9137:
 12655              	.LBE9136:
 12656              	.LBE9124:
 12657              	.LBB9139:
 12658              	.LBI9139:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 12659              		.loc 2 657 7 is_stmt 1 view .LVU3255
 12660              	.LBB9140:
 12661              	.LBI9140:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12662              		.loc 2 229 7 view .LVU3256
 12663              	.LBB9141:
 12664              	.LBB9142:
ARM GAS  /tmp/ccL95Edz.s 			page 520


 12665              	.LBI9142:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12666              		.loc 2 221 7 view .LVU3257
 12667              	.LBB9143:
 12668              	.LBI9143:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12669              		.loc 2 186 7 view .LVU3258
 12670              	.LBB9144:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12671              		.loc 2 187 28 is_stmt 0 view .LVU3259
 12672 0436 7598     		ldr	r0, [sp, #468]
 12673              	.LVL873:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12674              		.loc 2 187 28 view .LVU3260
 12675              	.LBE9144:
 12676              	.LBE9143:
 12677              	.LBB9145:
 12678              	.LBI9145:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12679              		.loc 2 200 7 is_stmt 1 view .LVU3261
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12680              		.loc 2 200 7 is_stmt 0 view .LVU3262
 12681              	.LBE9145:
 12682              	.LBE9142:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12683              		.loc 2 231 2 view .LVU3263
 12684 0438 77AB     		add	r3, sp, #476
 12685 043a 9842     		cmp	r0, r3
 12686 043c 01D0     		beq	.L267
 12687              	.LVL874:
 12688              	.LBB9146:
 12689              	.LBI9146:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12690              		.loc 2 236 7 is_stmt 1 view .LVU3264
 12691              	.LBB9147:
 12692              	.LBB9148:
 12693              	.LBI9148:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12694              		.loc 3 469 7 view .LVU3265
 12695              	.LBB9149:
 12696              	.LBI9149:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 12697              		.loc 4 119 7 view .LVU3266
 12698              	.LBB9150:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12699              		.loc 4 128 19 is_stmt 0 view .LVU3267
 12700 043e FFF7FEFF 		bl	_ZdlPv
 12701              	.LVL875:
 12702              	.L267:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12703              		.loc 4 128 19 view .LVU3268
 12704              	.LBE9150:
 12705              	.LBE9149:
 12706              	.LBE9148:
 12707              	.LBE9147:
 12708              	.LBE9146:
 12709              	.LBE9141:
ARM GAS  /tmp/ccL95Edz.s 			page 521


 12710              	.LBE9140:
 12711              	.LBB9151:
 12712              	.LBI9151:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12713              		.loc 2 150 14 is_stmt 1 view .LVU3269
 12714              	.LBB9152:
 12715              	.LBI9152:
 12716              		.loc 5 153 7 view .LVU3270
 12717              	.LBB9153:
 12718              	.LBI9153:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12719              		.loc 4 89 7 view .LVU3271
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12720              		.loc 4 89 7 is_stmt 0 view .LVU3272
 12721              	.LBE9153:
 12722              	.LBE9152:
 12723              	.LBE9151:
 12724              	.LBE9139:
 12725              	.LBE9020:
 12726              	.LBE9019:
 12727              	.LBB9154:
 12728              	.LBI9154:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 12729              		.loc 2 657 7 is_stmt 1 view .LVU3273
 12730              	.LBB9155:
 12731              	.LBI9155:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12732              		.loc 2 229 7 view .LVU3274
 12733              	.LBB9156:
 12734              	.LBB9157:
 12735              	.LBI9157:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12736              		.loc 2 221 7 view .LVU3275
 12737              	.LBB9158:
 12738              	.LBI9158:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12739              		.loc 2 186 7 view .LVU3276
 12740              	.LBB9159:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12741              		.loc 2 187 28 is_stmt 0 view .LVU3277
 12742 0442 3A98     		ldr	r0, [sp, #232]
 12743              	.LVL876:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12744              		.loc 2 187 28 view .LVU3278
 12745              	.LBE9159:
 12746              	.LBE9158:
 12747              	.LBB9160:
 12748              	.LBI9160:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12749              		.loc 2 200 7 is_stmt 1 view .LVU3279
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12750              		.loc 2 200 7 is_stmt 0 view .LVU3280
 12751              	.LBE9160:
 12752              	.LBE9157:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12753              		.loc 2 231 2 view .LVU3281
 12754 0444 3CAB     		add	r3, sp, #240
ARM GAS  /tmp/ccL95Edz.s 			page 522


 12755 0446 9842     		cmp	r0, r3
 12756 0448 01D0     		beq	.L268
 12757              	.LVL877:
 12758              	.LBB9161:
 12759              	.LBI9161:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12760              		.loc 2 236 7 is_stmt 1 view .LVU3282
 12761              	.LBB9162:
 12762              	.LBB9163:
 12763              	.LBI9163:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12764              		.loc 3 469 7 view .LVU3283
 12765              	.LBB9164:
 12766              	.LBI9164:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 12767              		.loc 4 119 7 view .LVU3284
 12768              	.LBB9165:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12769              		.loc 4 128 19 is_stmt 0 view .LVU3285
 12770 044a FFF7FEFF 		bl	_ZdlPv
 12771              	.LVL878:
 12772              	.L268:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12773              		.loc 4 128 19 view .LVU3286
 12774              	.LBE9165:
 12775              	.LBE9164:
 12776              	.LBE9163:
 12777              	.LBE9162:
 12778              	.LBE9161:
 12779              	.LBE9156:
 12780              	.LBE9155:
 12781              	.LBB9166:
 12782              	.LBI9166:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12783              		.loc 2 150 14 is_stmt 1 view .LVU3287
 12784              	.LBB9167:
 12785              	.LBI9167:
 12786              		.loc 5 153 7 view .LVU3288
 12787              	.LBB9168:
 12788              	.LBI9168:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12789              		.loc 4 89 7 view .LVU3289
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12790              		.loc 4 89 7 is_stmt 0 view .LVU3290
 12791              	.LBE9168:
 12792              	.LBE9167:
 12793              	.LBE9166:
 12794              	.LBE9154:
 12795              	.LBB9169:
 12796              	.LBI9169:
 12797              		.loc 5 153 7 is_stmt 1 view .LVU3291
 12798              	.LBB9170:
 12799              	.LBI9170:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12800              		.loc 4 89 7 view .LVU3292
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12801              		.loc 4 89 7 is_stmt 0 view .LVU3293
ARM GAS  /tmp/ccL95Edz.s 			page 523


 12802              	.LBE9170:
 12803              	.LBE9169:
 12804              	.LBB9171:
 12805              	.LBI9171:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 12806              		.loc 2 657 7 is_stmt 1 view .LVU3294
 12807              	.LBB9172:
 12808              	.LBI9172:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12809              		.loc 2 229 7 view .LVU3295
 12810              	.LBB9173:
 12811              	.LBB9174:
 12812              	.LBI9174:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12813              		.loc 2 221 7 view .LVU3296
 12814              	.LBB9175:
 12815              	.LBI9175:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12816              		.loc 2 186 7 view .LVU3297
 12817              	.LBB9176:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12818              		.loc 2 187 28 is_stmt 0 view .LVU3298
 12819 044e 3498     		ldr	r0, [sp, #208]
 12820              	.LVL879:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12821              		.loc 2 187 28 view .LVU3299
 12822              	.LBE9176:
 12823              	.LBE9175:
 12824              	.LBB9177:
 12825              	.LBI9177:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12826              		.loc 2 200 7 is_stmt 1 view .LVU3300
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12827              		.loc 2 200 7 is_stmt 0 view .LVU3301
 12828              	.LBE9177:
 12829              	.LBE9174:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12830              		.loc 2 231 2 view .LVU3302
 12831 0450 36AB     		add	r3, sp, #216
 12832 0452 9842     		cmp	r0, r3
 12833 0454 01D0     		beq	.L269
 12834              	.LVL880:
 12835              	.LBB9178:
 12836              	.LBI9178:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12837              		.loc 2 236 7 is_stmt 1 view .LVU3303
 12838              	.LBB9179:
 12839              	.LBB9180:
 12840              	.LBI9180:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12841              		.loc 3 469 7 view .LVU3304
 12842              	.LBB9181:
 12843              	.LBI9181:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 12844              		.loc 4 119 7 view .LVU3305
 12845              	.LBB9182:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 524


 12846              		.loc 4 128 19 is_stmt 0 view .LVU3306
 12847 0456 FFF7FEFF 		bl	_ZdlPv
 12848              	.LVL881:
 12849              	.L269:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12850              		.loc 4 128 19 view .LVU3307
 12851              	.LBE9182:
 12852              	.LBE9181:
 12853              	.LBE9180:
 12854              	.LBE9179:
 12855              	.LBE9178:
 12856              	.LBE9173:
 12857              	.LBE9172:
 12858              	.LBB9183:
 12859              	.LBI9183:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12860              		.loc 2 150 14 is_stmt 1 view .LVU3308
 12861              	.LBB9184:
 12862              	.LBI9184:
 12863              		.loc 5 153 7 view .LVU3309
 12864              	.LBB9185:
 12865              	.LBI9185:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12866              		.loc 4 89 7 view .LVU3310
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12867              		.loc 4 89 7 is_stmt 0 view .LVU3311
 12868              	.LBE9185:
 12869              	.LBE9184:
 12870              	.LBE9183:
 12871              	.LBE9171:
 12872              	.LBB9186:
 12873              	.LBI9186:
 12874              		.loc 5 153 7 is_stmt 1 view .LVU3312
 12875              	.LBB9187:
 12876              	.LBI9187:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12877              		.loc 4 89 7 view .LVU3313
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12878              		.loc 4 89 7 is_stmt 0 view .LVU3314
 12879              	.LBE9187:
 12880              	.LBE9186:
   9:alohal/filesystem/filesystem.cpp ****     root->Set_parent(root);
 12881              		.loc 17 9 5 is_stmt 1 view .LVU3315
   9:alohal/filesystem/filesystem.cpp ****     root->Set_parent(root);
 12882              		.loc 17 9 53 is_stmt 0 view .LVU3316
 12883 045a 6168     		ldr	r1, [r4, #4]
 12884 045c 42A8     		add	r0, sp, #264
 12885 045e FFF7FEFF 		bl	_ZNK8FS_entry4PathB5cxx11Ev
 12886              	.LVL882:
   9:alohal/filesystem/filesystem.cpp ****     root->Set_parent(root);
 12887              		.loc 17 9 31 view .LVU3317
 12888 0462 42A9     		add	r1, sp, #264
 12889 0464 3046     		mov	r0, r6
 12890 0466 FFF7FEFF 		bl	_ZN3CLI21Set_filesystem_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 12891              	.LVL883:
 12892              	.LBB9188:
 12893              	.LBI9188:
ARM GAS  /tmp/ccL95Edz.s 			page 525


 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 12894              		.loc 2 657 7 is_stmt 1 view .LVU3318
 12895              	.LBB9189:
 12896              	.LBI9189:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12897              		.loc 2 229 7 view .LVU3319
 12898              	.LBB9190:
 12899              	.LBB9191:
 12900              	.LBI9191:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12901              		.loc 2 221 7 view .LVU3320
 12902              	.LBB9192:
 12903              	.LBI9192:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12904              		.loc 2 186 7 view .LVU3321
 12905              	.LBB9193:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12906              		.loc 2 187 28 is_stmt 0 view .LVU3322
 12907 046a 4298     		ldr	r0, [sp, #264]
 12908              	.LVL884:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12909              		.loc 2 187 28 view .LVU3323
 12910              	.LBE9193:
 12911              	.LBE9192:
 12912              	.LBB9194:
 12913              	.LBI9194:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12914              		.loc 2 200 7 is_stmt 1 view .LVU3324
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12915              		.loc 2 200 7 is_stmt 0 view .LVU3325
 12916              	.LBE9194:
 12917              	.LBE9191:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12918              		.loc 2 231 2 view .LVU3326
 12919 046c 44AB     		add	r3, sp, #272
 12920 046e 9842     		cmp	r0, r3
 12921 0470 01D0     		beq	.L270
 12922              	.LVL885:
 12923              	.LBB9195:
 12924              	.LBI9195:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12925              		.loc 2 236 7 is_stmt 1 view .LVU3327
 12926              	.LBB9196:
 12927              	.LBB9197:
 12928              	.LBI9197:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12929              		.loc 3 469 7 view .LVU3328
 12930              	.LBB9198:
 12931              	.LBI9198:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 12932              		.loc 4 119 7 view .LVU3329
 12933              	.LBB9199:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12934              		.loc 4 128 19 is_stmt 0 view .LVU3330
 12935 0472 FFF7FEFF 		bl	_ZdlPv
 12936              	.LVL886:
 12937              	.L270:
ARM GAS  /tmp/ccL95Edz.s 			page 526


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 12938              		.loc 4 128 19 view .LVU3331
 12939              	.LBE9199:
 12940              	.LBE9198:
 12941              	.LBE9197:
 12942              	.LBE9196:
 12943              	.LBE9195:
 12944              	.LBE9190:
 12945              	.LBE9189:
 12946              	.LBB9200:
 12947              	.LBI9200:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12948              		.loc 2 150 14 is_stmt 1 view .LVU3332
 12949              	.LBB9201:
 12950              	.LBI9201:
 12951              		.loc 5 153 7 view .LVU3333
 12952              	.LBB9202:
 12953              	.LBI9202:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12954              		.loc 4 89 7 view .LVU3334
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12955              		.loc 4 89 7 is_stmt 0 view .LVU3335
 12956              	.LBE9202:
 12957              	.LBE9201:
 12958              	.LBE9200:
 12959              	.LBE9188:
  10:alohal/filesystem/filesystem.cpp **** }
 12960              		.loc 17 10 5 is_stmt 1 view .LVU3336
 12961 0476 2068     		ldr	r0, [r4]
  10:alohal/filesystem/filesystem.cpp **** }
 12962              		.loc 17 10 21 is_stmt 0 view .LVU3337
 12963 0478 0146     		mov	r1, r0
 12964 047a FFF7FEFF 		bl	_ZN8FS_entry10Set_parentEPS_
 12965              	.LVL887:
 12966              	.LBE9211:
  11:alohal/filesystem/filesystem.cpp **** 
 12967              		.loc 17 11 1 view .LVU3338
 12968 047e 2046     		mov	r0, r4
 12969 0480 7CB0     		add	sp, sp, #496
 12970              	.LCFI48:
 12971              		.cfi_def_cfa_offset 32
 12972              		@ sp needed
 12973 0482 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 12974              	.LVL888:
 12975              	.L276:
  11:alohal/filesystem/filesystem.cpp **** 
 12976              		.loc 17 11 1 view .LVU3339
 12977 0486 00BF     		.align	2
 12978              	.L275:
 12979 0488 03000000 		.word	.LC15+3
 12980 048c 0F000000 		.word	.LC16+15
 12981 0490 00000000 		.word	_ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES
 12982 0494 08000000 		.word	_ZTV7CommandI10FilesystemE+8
 12983              		.cfi_endproc
 12984              	.LFE3367:
 12986              		.global	_ZN10FilesystemC1EP3CLI
 12987              		.thumb_set _ZN10FilesystemC1EP3CLI,_ZN10FilesystemC2EP3CLI
ARM GAS  /tmp/ccL95Edz.s 			page 527


 12988              		.section	.text._ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_tra
 12989              		.align	1
 12990              		.weak	_ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 12991              		.syntax unified
 12992              		.thumb
 12993              		.thumb_func
 12994              		.fpu fpv4-sp-d16
 12996              	_ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaI
 12997              	.LVL889:
 12998              	.LFB4219:
  92:alohal/cli/command.hpp ****         if (function) {
 12999              		.loc 18 92 15 is_stmt 1 view -0
 13000              		.cfi_startproc
 13001              		@ args = 0, pretend = 0, frame = 24
 13002              		@ frame_needed = 0, uses_anonymous_args = 0
  92:alohal/cli/command.hpp ****         if (function) {
 13003              		.loc 18 92 15 is_stmt 0 view .LVU3341
 13004 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 13005              	.LCFI49:
 13006              		.cfi_def_cfa_offset 24
 13007              		.cfi_offset 4, -24
 13008              		.cfi_offset 5, -20
 13009              		.cfi_offset 6, -16
 13010              		.cfi_offset 7, -12
 13011              		.cfi_offset 8, -8
 13012              		.cfi_offset 14, -4
 13013 0004 86B0     		sub	sp, sp, #24
 13014              	.LCFI50:
 13015              		.cfi_def_cfa_offset 48
 13016 0006 0D46     		mov	r5, r1
  93:alohal/cli/command.hpp ****             return (*(function))(args);
 13017              		.loc 18 93 13 view .LVU3342
 13018 0008 076C     		ldr	r7, [r0, #64]
  93:alohal/cli/command.hpp ****             return (*(function))(args);
 13019              		.loc 18 93 9 view .LVU3343
 13020 000a 002F     		cmp	r7, #0
 13021 000c 48D0     		beq	.L278
 13022              	.LVL890:
 13023              	.LBB9438:
 13024              	.LBI9438:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 13025              		.loc 11 550 7 is_stmt 1 view .LVU3344
 13026              	.LBB9439:
 13027              	.LBB9440:
 13028              	.LBB9441:
 13029              	.LBI9441:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 13030              		.loc 11 915 7 view .LVU3345
 13031              	.LBB9442:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13032              		.loc 11 916 40 is_stmt 0 view .LVU3346
 13033 000e 4E68     		ldr	r6, [r1, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13034              		.loc 11 916 66 view .LVU3347
 13035 0010 0B68     		ldr	r3, [r1]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13036              		.loc 11 916 50 view .LVU3348
ARM GAS  /tmp/ccL95Edz.s 			page 528


 13037 0012 F61A     		subs	r6, r6, r3
 13038 0014 F310     		asrs	r3, r6, #3
 13039 0016 5048     		ldr	r0, .L306
 13040              	.LVL891:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13041              		.loc 11 916 50 view .LVU3349
 13042 0018 00FB03F0 		mul	r0, r0, r3
 13043              	.LVL892:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13044              		.loc 11 916 50 view .LVU3350
 13045              	.LBE9442:
 13046              	.LBE9441:
 13047              	.LBB9443:
 13048              	.LBI9443:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13049              		.loc 11 277 7 is_stmt 1 view .LVU3351
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13050              		.loc 11 277 7 is_stmt 0 view .LVU3352
 13051              	.LBE9443:
 13052              	.LBB9444:
 13053              	.LBI9444:
 13054              		.loc 19 97 19 is_stmt 1 view .LVU3353
 13055              	.LBB9445:
 13056              	.LBI9445:
 13057              		.loc 3 514 7 view .LVU3354
 13058              	.LBB9446:
 13059              	.LBI9446:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13060              		.loc 5 141 7 view .LVU3355
 13061              	.LBB9447:
 13062              	.LBI9447:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13063              		.loc 4 83 7 view .LVU3356
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13064              		.loc 4 83 7 is_stmt 0 view .LVU3357
 13065              	.LBE9447:
 13066              	.LBE9446:
 13067              	.LBE9445:
 13068              	.LBE9444:
 13069              	.LBB9448:
 13070              	.LBI9448:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 13071              		.loc 11 300 7 is_stmt 1 view .LVU3358
 13072              	.LBB9449:
 13073              	.LBI9449:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 13074              		.loc 11 133 2 view .LVU3359
 13075              	.LBB9450:
 13076              	.LBI9450:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13077              		.loc 5 141 7 view .LVU3360
 13078              	.LBB9451:
 13079              	.LBI9451:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13080              		.loc 4 83 7 view .LVU3361
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13081              		.loc 4 83 7 is_stmt 0 view .LVU3362
ARM GAS  /tmp/ccL95Edz.s 			page 529


 13082              	.LBE9451:
 13083              	.LBE9450:
 13084              	.LBB9452:
 13085              	.LBI9452:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 13086              		.loc 11 94 2 is_stmt 1 view .LVU3363
 13087              	.LBB9453:
 13088              	.LBB9454:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 13089              		.loc 11 95 47 is_stmt 0 view .LVU3364
 13090 001c 0023     		movs	r3, #0
 13091 001e 0093     		str	r3, [sp]
 13092 0020 0193     		str	r3, [sp, #4]
 13093 0022 0293     		str	r3, [sp, #8]
 13094              	.LVL893:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 13095              		.loc 11 95 47 view .LVU3365
 13096              	.LBE9454:
 13097              	.LBE9453:
 13098              	.LBE9452:
 13099              	.LBE9449:
 13100              	.LBB9455:
 13101              	.LBI9455:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 13102              		.loc 11 356 7 is_stmt 1 view .LVU3366
 13103              	.LBB9456:
 13104              	.LBB9457:
 13105              	.LBI9457:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 13106              		.loc 11 340 7 view .LVU3367
 13107              	.LBB9458:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13108              		.loc 11 343 18 is_stmt 0 view .LVU3368
 13109 0024 00B3     		cbz	r0, .L298
 13110              	.LVL894:
 13111              	.LBB9459:
 13112              	.LBI9459:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 13113              		.loc 3 443 7 is_stmt 1 view .LVU3369
 13114              	.LBB9460:
 13115              	.LBI9460:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13116              		.loc 4 102 7 view .LVU3370
 13117              	.LBB9461:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 13118              		.loc 4 104 2 is_stmt 0 view .LVU3371
 13119 0026 4D4B     		ldr	r3, .L306+4
 13120 0028 9842     		cmp	r0, r3
 13121 002a 1BD8     		bhi	.L302
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13122              		.loc 4 114 41 view .LVU3372
 13123 002c 00EB4000 		add	r0, r0, r0, lsl #1
 13124              	.LVL895:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13125              		.loc 4 114 41 view .LVU3373
 13126 0030 C000     		lsls	r0, r0, #3
 13127 0032 FFF7FEFF 		bl	_Znwj
ARM GAS  /tmp/ccL95Edz.s 			page 530


 13128              	.LVL896:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13129              		.loc 4 114 41 view .LVU3374
 13130 0036 0446     		mov	r4, r0
 13131              	.LVL897:
 13132              	.L279:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13133              		.loc 4 114 41 view .LVU3375
 13134              	.LBE9461:
 13135              	.LBE9460:
 13136              	.LBE9459:
 13137              	.LBE9458:
 13138              	.LBE9457:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 13139              		.loc 11 358 2 view .LVU3376
 13140 0038 0094     		str	r4, [sp]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 13141              		.loc 11 359 2 view .LVU3377
 13142 003a 0194     		str	r4, [sp, #4]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13143              		.loc 11 360 59 view .LVU3378
 13144 003c 2644     		add	r6, r6, r4
 13145              	.LVL898:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13146              		.loc 11 360 2 view .LVU3379
 13147 003e 0296     		str	r6, [sp, #8]
 13148              	.LVL899:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13149              		.loc 11 360 2 view .LVU3380
 13150              	.LBE9456:
 13151              	.LBE9455:
 13152              	.LBE9448:
 13153              	.LBB9469:
 13154              	.LBI9469:
 13155              		.loc 5 153 7 is_stmt 1 view .LVU3381
 13156              	.LBB9470:
 13157              	.LBI9470:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13158              		.loc 4 89 7 view .LVU3382
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13159              		.loc 4 89 7 is_stmt 0 view .LVU3383
 13160              	.LBE9470:
 13161              	.LBE9469:
 13162              	.LBB9471:
 13163              	.LBI9471:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 13164              		.loc 11 817 7 is_stmt 1 view .LVU3384
 13165              	.LBB9472:
 13166              	.LBB9473:
 13167              	.LBI9473:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13168              		.loc 13 806 7 view .LVU3385
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13169              		.loc 13 806 7 is_stmt 0 view .LVU3386
 13170              	.LBE9473:
 13171              	.LBE9472:
 13172              	.LBE9471:
ARM GAS  /tmp/ccL95Edz.s 			page 531


 13173              	.LBB9474:
 13174              	.LBI9474:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 13175              		.loc 11 835 7 is_stmt 1 view .LVU3387
 13176              	.LBB9475:
 13177              	.LBB9476:
 13178              	.LBI9476:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13179              		.loc 13 806 7 view .LVU3388
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13180              		.loc 13 806 7 is_stmt 0 view .LVU3389
 13181              	.LBE9476:
 13182              	.LBE9475:
 13183              	.LBE9474:
 13184              	.LBB9477:
 13185              	.LBI9477:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13186              		.loc 11 273 7 is_stmt 1 view .LVU3390
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13187              		.loc 11 273 7 is_stmt 0 view .LVU3391
 13188              	.LBE9477:
 13189              	.LBB9478:
 13190              	.LBI9478:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 13191              		.loc 15 305 5 is_stmt 1 view .LVU3392
 13192              	.LBB9479:
 13193              	.LBB9480:
 13194              	.LBI9480:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13195              		.loc 15 115 5 view .LVU3393
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13196              		.loc 15 115 5 is_stmt 0 view .LVU3394
 13197 0040 2E68     		ldr	r6, [r5]
 13198              	.LVL900:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13199              		.loc 15 115 5 view .LVU3395
 13200 0042 6D68     		ldr	r5, [r5, #4]
 13201              	.LVL901:
 13202              	.LBB9481:
 13203              	.LBB9482:
 13204              	.LBI9482:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 13205              		.loc 15 76 9 is_stmt 1 view .LVU3396
 13206              	.L282:
 13207              	.LBB9483:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13208              		.loc 15 82 23 view .LVU3397
 13209              	.LBB9484:
 13210              	.LBI9484:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 13211              		.loc 13 907 5 view .LVU3398
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 13212              		.loc 13 907 5 is_stmt 0 view .LVU3399
 13213              	.LBE9484:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13214              		.loc 15 82 23 view .LVU3400
 13215 0044 AE42     		cmp	r6, r5
ARM GAS  /tmp/ccL95Edz.s 			page 532


 13216 0046 11D0     		beq	.L281
 13217              	.LVL902:
 13218              	.LBB9485:
 13219              	.LBI9485:
 13220              		.file 22 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
ARM GAS  /tmp/ccL95Edz.s 			page 533


  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #include <new>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #include <bits/move.h>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** {
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
 13221              		.loc 22 74 5 is_stmt 1 view .LVU3401
 13222              		.loc 22 74 5 is_stmt 0 view .LVU3402
 13223              	.LBE9485:
 13224              	.LBE9483:
 13225              	.LBE9482:
 13226              	.LBE9481:
 13227              	.LBE9480:
 13228              	.LBE9479:
 13229              	.LBE9478:
 13230              	.LBE9440:
 13231              	.LBE9439:
 13232              	.LBE9438:
 13233              		.loc 14 174 3 is_stmt 1 view .LVU3403
 13234              	.LBB9523:
 13235              	.LBB9522:
 13236              	.LBB9521:
 13237              	.LBB9519:
 13238              	.LBB9518:
 13239              	.LBB9517:
 13240              	.LBB9516:
 13241              	.LBB9515:
 13242              	.LBB9514:
 13243              	.LBB9511:
 13244              	.LBB9486:
 13245              	.LBI9486:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 13246              		.loc 2 448 7 view .LVU3404
 13247              	.LBB9487:
 13248              	.LBB9488:
 13249              	.LBI9488:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13250              		.loc 2 190 7 view .LVU3405
 13251              	.LBB9489:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13252              		.loc 2 193 51 is_stmt 0 view .LVU3406
ARM GAS  /tmp/ccL95Edz.s 			page 534


 13253 0048 04F10803 		add	r3, r4, #8
 13254              	.LVL903:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13255              		.loc 2 193 51 view .LVU3407
 13256              	.LBE9489:
 13257              	.LBE9488:
 13258              	.LBB9490:
 13259              	.LBI9490:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13260              		.loc 2 290 7 is_stmt 1 view .LVU3408
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13261              		.loc 2 290 7 is_stmt 0 view .LVU3409
 13262              	.LBE9490:
 13263              	.LBB9491:
 13264              	.LBI9491:
 13265              		.loc 19 97 19 is_stmt 1 view .LVU3410
 13266              	.LBB9492:
 13267              	.LBI9492:
 13268              		.loc 3 514 7 view .LVU3411
 13269              	.LBB9493:
 13270              	.LBI9493:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13271              		.loc 5 141 7 view .LVU3412
 13272              	.LBB9494:
 13273              	.LBI9494:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13274              		.loc 4 83 7 view .LVU3413
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13275              		.loc 4 83 7 is_stmt 0 view .LVU3414
 13276              	.LBE9494:
 13277              	.LBE9493:
 13278              	.LBE9492:
 13279              	.LBE9491:
 13280              	.LBB9495:
 13281              	.LBI9495:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 13282              		.loc 2 159 2 is_stmt 1 view .LVU3415
 13283              	.LBB9496:
 13284              	.LBB9497:
 13285              	.LBI9497:
 13286              		.loc 9 99 5 view .LVU3416
 13287              		.loc 9 99 5 is_stmt 0 view .LVU3417
 13288              	.LBE9497:
 13289              	.LBB9498:
 13290              	.LBI9498:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13291              		.loc 5 141 7 is_stmt 1 view .LVU3418
 13292              	.LBB9499:
 13293              	.LBI9499:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13294              		.loc 4 83 7 view .LVU3419
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13295              		.loc 4 83 7 is_stmt 0 view .LVU3420
 13296              	.LBE9499:
 13297              	.LBE9498:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13298              		.loc 2 160 46 view .LVU3421
ARM GAS  /tmp/ccL95Edz.s 			page 535


 13299 004c 2360     		str	r3, [r4]
 13300              	.LVL904:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13301              		.loc 2 160 46 view .LVU3422
 13302              	.LBE9496:
 13303              	.LBE9495:
 13304              	.LBB9500:
 13305              	.LBI9500:
 13306              		.loc 5 153 7 is_stmt 1 view .LVU3423
 13307              	.LBB9501:
 13308              	.LBI9501:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13309              		.loc 4 89 7 view .LVU3424
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13310              		.loc 4 89 7 is_stmt 0 view .LVU3425
 13311              	.LBE9501:
 13312              	.LBE9500:
 13313              	.LBB9502:
 13314              	.LBI9502:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13315              		.loc 2 186 7 is_stmt 1 view .LVU3426
 13316              	.LBB9503:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13317              		.loc 2 187 28 is_stmt 0 view .LVU3427
 13318 004e 3168     		ldr	r1, [r6]
 13319              	.LVL905:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13320              		.loc 2 187 28 view .LVU3428
 13321              	.LBE9503:
 13322              	.LBE9502:
 13323              	.LBB9504:
 13324              	.LBI9504:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13325              		.loc 2 186 7 is_stmt 1 view .LVU3429
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13326              		.loc 2 186 7 is_stmt 0 view .LVU3430
 13327              	.LBE9504:
 13328              	.LBB9505:
 13329              	.LBI9505:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13330              		.loc 2 936 7 is_stmt 1 view .LVU3431
 13331              	.LBB9506:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13332              		.loc 2 937 16 is_stmt 0 view .LVU3432
 13333 0050 7268     		ldr	r2, [r6, #4]
 13334              	.LVL906:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13335              		.loc 2 937 16 view .LVU3433
 13336              	.LBE9506:
 13337              	.LBE9505:
 13338              	.LBB9507:
 13339              	.LBI9507:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 13340              		.loc 2 263 9 is_stmt 1 view .LVU3434
 13341              	.LBB9508:
 13342              	.LBB9509:
 13343              	.LBI9509:
ARM GAS  /tmp/ccL95Edz.s 			page 536


 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 13344              		.loc 2 243 9 view .LVU3435
 13345              	.LBB9510:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13346              		.loc 2 247 11 is_stmt 0 view .LVU3436
 13347 0052 4FF00003 		mov	r3, #0
 13348 0056 0A44     		add	r2, r2, r1
 13349              	.LVL907:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13350              		.loc 2 247 11 view .LVU3437
 13351 0058 2046     		mov	r0, r4
 13352 005a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 13353              	.LVL908:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13354              		.loc 2 247 11 view .LVU3438
 13355              	.LBE9510:
 13356              	.LBE9509:
 13357              	.LBE9508:
 13358              	.LBE9507:
 13359              	.LBE9487:
 13360              	.LBE9486:
 13361              	.LBE9511:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13362              		.loc 15 82 8 is_stmt 1 view .LVU3439
 13363              	.LBB9512:
 13364              	.LBI9512:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 13365              		.loc 13 827 7 view .LVU3440
 13366              	.LBB9513:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 13367              		.loc 13 829 2 is_stmt 0 view .LVU3441
 13368 005e 1836     		adds	r6, r6, #24
 13369              	.LVL909:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 13370              		.loc 13 829 2 view .LVU3442
 13371              	.LBE9513:
 13372              	.LBE9512:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13373              		.loc 15 82 8 view .LVU3443
 13374 0060 1834     		adds	r4, r4, #24
 13375              	.LVL910:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13376              		.loc 15 82 8 view .LVU3444
 13377 0062 EFE7     		b	.L282
 13378              	.LVL911:
 13379              	.L302:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13380              		.loc 15 82 8 view .LVU3445
 13381              	.LBE9514:
 13382              	.LBE9515:
 13383              	.LBE9516:
 13384              	.LBE9517:
 13385              	.LBE9518:
 13386              	.LBE9519:
 13387              	.LBB9520:
 13388              	.LBB9468:
 13389              	.LBB9467:
ARM GAS  /tmp/ccL95Edz.s 			page 537


 13390              	.LBB9466:
 13391              	.LBB9465:
 13392              	.LBB9464:
 13393              	.LBB9463:
 13394              	.LBB9462:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13395              		.loc 4 105 26 view .LVU3446
 13396 0064 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 13397              	.LVL912:
 13398              	.L298:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13399              		.loc 4 105 26 view .LVU3447
 13400              	.LBE9462:
 13401              	.LBE9463:
 13402              	.LBE9464:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13403              		.loc 11 343 18 view .LVU3448
 13404 0068 0024     		movs	r4, #0
 13405 006a E5E7     		b	.L279
 13406              	.LVL913:
 13407              	.L281:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13408              		.loc 11 343 18 view .LVU3449
 13409              	.LBE9465:
 13410              	.LBE9466:
 13411              	.LBE9467:
 13412              	.LBE9468:
 13413              	.LBE9520:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 13414              		.loc 11 554 2 view .LVU3450
 13415 006c 0194     		str	r4, [sp, #4]
 13416              	.LVL914:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 13417              		.loc 11 554 2 view .LVU3451
 13418              	.LBE9521:
 13419              	.LBE9522:
 13420              	.LBE9523:
  94:alohal/cli/command.hpp ****         } else if (object_ptr){
 13421              		.loc 18 94 33 view .LVU3452
 13422 006e 6846     		mov	r0, sp
 13423 0070 B847     		blx	r7
 13424              	.LVL915:
 13425 0072 0546     		mov	r5, r0
 13426              	.LVL916:
 13427              	.LBB9524:
 13428              	.LBI9524:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 13429              		.loc 11 675 7 is_stmt 1 view .LVU3453
 13430              	.LBB9525:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 13431              		.loc 11 677 15 is_stmt 0 view .LVU3454
 13432 0074 009C     		ldr	r4, [sp]
 13433 0076 019E     		ldr	r6, [sp, #4]
 13434              	.LVL917:
 13435              	.LBB9526:
 13436              	.LBI9526:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
ARM GAS  /tmp/ccL95Edz.s 			page 538


 13437              		.loc 11 273 7 is_stmt 1 view .LVU3455
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13438              		.loc 11 273 7 is_stmt 0 view .LVU3456
 13439              	.LBE9526:
 13440              	.LBB9527:
 13441              	.LBI9527:
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #else
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #endif
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _T1>
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _Tp>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<bool>
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_aux
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator>
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static void
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	{
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	}
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<>
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_aux<true>
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator>
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static void
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator>
ARM GAS  /tmp/ccL95Edz.s 			page 539


 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****                        _Value_type;
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 		    "value type is destructible");
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #endif
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	__destroy(__first, __last);
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<bool>
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_n_aux
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static _ForwardIterator
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	{
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  for (; __count > 0; (void)++__first, --__count)
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  return __first;
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	}
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<>
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_n_aux<true>
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static _ForwardIterator
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	{
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  std::advance(__first, __count);
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  return __first;
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	}
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Size>
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline _ForwardIterator
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy_n(_ForwardIterator __first, _Size __count)
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****                        _Value_type;
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 		    "value type is destructible");
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #endif
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	__destroy_n(__first, __count);
ARM GAS  /tmp/ccL95Edz.s 			page 540


 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     void
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	     _Allocator& __alloc)
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 13442              		.loc 22 203 5 is_stmt 1 view .LVU3457
 13443 0078 02E0     		b	.L285
 13444              	.LVL918:
 13445              	.L303:
 13446              	.LBB9528:
 13447              	.LBB9529:
 13448              	.LBB9530:
 13449              	.LBB9531:
 13450              	.LBB9532:
 13451              	.LBB9533:
 13452              	.LBB9534:
 13453              	.LBB9535:
 13454              	.LBB9536:
 13455              	.LBI9536:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 13456              		.loc 2 236 7 view .LVU3458
 13457              	.LBB9537:
 13458              	.LBB9538:
 13459              	.LBI9538:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13460              		.loc 3 469 7 view .LVU3459
 13461              	.LBB9539:
 13462              	.LBI9539:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13463              		.loc 4 119 7 view .LVU3460
 13464              	.LBB9540:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13465              		.loc 4 128 19 is_stmt 0 view .LVU3461
 13466 007a FFF7FEFF 		bl	_ZdlPv
 13467              	.LVL919:
 13468              	.L284:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13469              		.loc 4 128 19 view .LVU3462
 13470              	.LBE9540:
 13471              	.LBE9539:
 13472              	.LBE9538:
ARM GAS  /tmp/ccL95Edz.s 			page 541


 13473              	.LBE9537:
 13474              	.LBE9536:
 13475              	.LBE9535:
 13476              	.LBE9534:
 13477              	.LBB9546:
 13478              	.LBI9546:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13479              		.loc 2 150 14 is_stmt 1 view .LVU3463
 13480              	.LBB9547:
 13481              	.LBI9547:
 13482              		.loc 5 153 7 view .LVU3464
 13483              	.LBB9548:
 13484              	.LBI9548:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13485              		.loc 4 89 7 view .LVU3465
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13486              		.loc 4 89 7 is_stmt 0 view .LVU3466
 13487              	.LBE9548:
 13488              	.LBE9547:
 13489              	.LBE9546:
 13490              	.LBE9533:
 13491              	.LBE9532:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 13492              		.loc 22 107 4 is_stmt 1 view .LVU3467
 13493 007e 1834     		adds	r4, r4, #24
 13494              	.LVL920:
 13495              	.L285:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 13496              		.loc 22 107 19 view .LVU3468
 13497 0080 A642     		cmp	r6, r4
 13498 0082 05D0     		beq	.L283
 13499              	.LVL921:
 13500              	.LBB9551:
 13501              	.LBI9532:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 13502              		.loc 22 97 5 view .LVU3469
 13503              	.LBB9550:
 13504              	.LBI9533:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 13505              		.loc 2 657 7 view .LVU3470
 13506              	.LBB9549:
 13507              	.LBI9534:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13508              		.loc 2 229 7 view .LVU3471
 13509              	.LBB9545:
 13510              	.LBB9541:
 13511              	.LBI9541:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13512              		.loc 2 221 7 view .LVU3472
 13513              	.LBB9542:
 13514              	.LBI9542:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13515              		.loc 2 186 7 view .LVU3473
 13516              	.LBB9543:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13517              		.loc 2 187 28 is_stmt 0 view .LVU3474
 13518 0084 2346     		mov	r3, r4
ARM GAS  /tmp/ccL95Edz.s 			page 542


 13519 0086 53F8080B 		ldr	r0, [r3], #8
 13520              	.LVL922:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13521              		.loc 2 187 28 view .LVU3475
 13522              	.LBE9543:
 13523              	.LBE9542:
 13524              	.LBB9544:
 13525              	.LBI9544:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13526              		.loc 2 200 7 is_stmt 1 view .LVU3476
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13527              		.loc 2 200 7 is_stmt 0 view .LVU3477
 13528              	.LBE9544:
 13529              	.LBE9541:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13530              		.loc 2 231 2 view .LVU3478
 13531 008a 9842     		cmp	r0, r3
 13532 008c F5D1     		bne	.L303
 13533 008e F6E7     		b	.L284
 13534              	.LVL923:
 13535              	.L283:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13536              		.loc 2 231 2 view .LVU3479
 13537              	.LBE9545:
 13538              	.LBE9549:
 13539              	.LBE9550:
 13540              	.LBE9551:
 13541              	.LBE9531:
 13542              	.LBE9530:
 13543              	.LBE9529:
 13544              	.LBE9528:
 13545              	.LBE9527:
 13546              	.LBB9552:
 13547              	.LBI9552:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 13548              		.loc 11 330 7 is_stmt 1 view .LVU3480
 13549              	.LBB9553:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 13550              		.loc 11 332 2 is_stmt 0 view .LVU3481
 13551 0090 0098     		ldr	r0, [sp]
 13552              	.LVL924:
 13553              	.LBB9554:
 13554              	.LBI9554:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 13555              		.loc 11 347 7 is_stmt 1 view .LVU3482
 13556              	.LBB9555:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 13557              		.loc 11 350 2 is_stmt 0 view .LVU3483
 13558 0092 08B1     		cbz	r0, .L277
 13559              	.LVL925:
 13560              	.LBB9556:
 13561              	.LBI9556:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13562              		.loc 3 469 7 is_stmt 1 view .LVU3484
 13563              	.LBB9557:
 13564              	.LBB9558:
 13565              	.LBI9558:
ARM GAS  /tmp/ccL95Edz.s 			page 543


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13566              		.loc 4 119 7 view .LVU3485
 13567              	.LBB9559:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13568              		.loc 4 128 19 is_stmt 0 view .LVU3486
 13569 0094 FFF7FEFF 		bl	_ZdlPv
 13570              	.LVL926:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13571              		.loc 4 128 19 view .LVU3487
 13572              	.LBE9559:
 13573              	.LBE9558:
 13574              	.LBE9557:
 13575              	.LBE9556:
 13576              	.LBE9555:
 13577              	.LBE9554:
 13578              	.LBB9560:
 13579              	.LBI9560:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 13580              		.loc 11 125 14 is_stmt 1 view .LVU3488
 13581              	.LBB9561:
 13582              	.LBI9561:
 13583              		.loc 5 153 7 view .LVU3489
 13584              	.LBB9562:
 13585              	.LBI9562:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13586              		.loc 4 89 7 view .LVU3490
 13587              	.L277:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13588              		.loc 4 89 7 is_stmt 0 view .LVU3491
 13589              	.LBE9562:
 13590              	.LBE9561:
 13591              	.LBE9560:
 13592              	.LBE9553:
 13593              	.LBE9552:
 13594              	.LBE9525:
 13595              	.LBE9524:
  99:alohal/cli/command.hpp **** 
 13596              		.loc 18 99 5 view .LVU3492
 13597 0098 2846     		mov	r0, r5
 13598 009a 06B0     		add	sp, sp, #24
 13599              	.LCFI51:
 13600              		.cfi_remember_state
 13601              		.cfi_def_cfa_offset 24
 13602              		@ sp needed
 13603 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13604              	.LVL927:
 13605              	.L278:
 13606              	.LCFI52:
 13607              		.cfi_restore_state
  95:alohal/cli/command.hpp ****             return (*object_ptr.*method_pointer)(args);
 13608              		.loc 18 95 20 view .LVU3493
 13609 00a0 476B     		ldr	r7, [r0, #52]
  95:alohal/cli/command.hpp ****             return (*object_ptr.*method_pointer)(args);
 13610              		.loc 18 95 16 view .LVU3494
 13611 00a2 002F     		cmp	r7, #0
 13612 00a4 55D0     		beq	.L299
  96:alohal/cli/command.hpp ****         }
ARM GAS  /tmp/ccL95Edz.s 			page 544


 13613              		.loc 18 96 49 view .LVU3495
 13614 00a6 C36B     		ldr	r3, [r0, #60]
 13615 00a8 13F0010F 		tst	r3, #1
 13616 00ac 2ED1     		bne	.L288
  96:alohal/cli/command.hpp ****         }
 13617              		.loc 18 96 49 discriminator 1 view .LVU3496
 13618 00ae D0F83880 		ldr	r8, [r0, #56]
 13619              	.LVL928:
 13620              	.L289:
  96:alohal/cli/command.hpp ****         }
 13621              		.loc 18 96 49 discriminator 4 view .LVU3497
 13622 00b2 07EB6307 		add	r7, r7, r3, asr #1
 13623              	.LVL929:
 13624              	.LBB9563:
 13625              	.LBI9563:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 13626              		.loc 11 550 7 is_stmt 1 discriminator 4 view .LVU3498
 13627              	.LBB9564:
 13628              	.LBB9565:
 13629              	.LBB9566:
 13630              	.LBI9566:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 13631              		.loc 11 915 7 discriminator 4 view .LVU3499
 13632              	.LBB9567:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13633              		.loc 11 916 40 is_stmt 0 discriminator 4 view .LVU3500
 13634 00b6 6E68     		ldr	r6, [r5, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13635              		.loc 11 916 66 discriminator 4 view .LVU3501
 13636 00b8 2B68     		ldr	r3, [r5]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13637              		.loc 11 916 50 discriminator 4 view .LVU3502
 13638 00ba F61A     		subs	r6, r6, r3
 13639 00bc F310     		asrs	r3, r6, #3
 13640 00be 2648     		ldr	r0, .L306
 13641              	.LVL930:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13642              		.loc 11 916 50 discriminator 4 view .LVU3503
 13643 00c0 00FB03F0 		mul	r0, r0, r3
 13644              	.LVL931:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 13645              		.loc 11 916 50 discriminator 4 view .LVU3504
 13646              	.LBE9567:
 13647              	.LBE9566:
 13648              	.LBB9568:
 13649              	.LBI9568:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13650              		.loc 11 277 7 is_stmt 1 discriminator 4 view .LVU3505
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13651              		.loc 11 277 7 is_stmt 0 discriminator 4 view .LVU3506
 13652              	.LBE9568:
 13653              	.LBB9569:
 13654              	.LBI9569:
 13655              		.loc 19 97 19 is_stmt 1 discriminator 4 view .LVU3507
 13656              	.LBB9570:
 13657              	.LBI9570:
 13658              		.loc 3 514 7 discriminator 4 view .LVU3508
ARM GAS  /tmp/ccL95Edz.s 			page 545


 13659              	.LBB9571:
 13660              	.LBI9571:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13661              		.loc 5 141 7 discriminator 4 view .LVU3509
 13662              	.LBB9572:
 13663              	.LBI9572:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13664              		.loc 4 83 7 discriminator 4 view .LVU3510
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13665              		.loc 4 83 7 is_stmt 0 discriminator 4 view .LVU3511
 13666              	.LBE9572:
 13667              	.LBE9571:
 13668              	.LBE9570:
 13669              	.LBE9569:
 13670              	.LBB9573:
 13671              	.LBI9573:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 13672              		.loc 11 300 7 is_stmt 1 discriminator 4 view .LVU3512
 13673              	.LBB9574:
 13674              	.LBI9574:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 13675              		.loc 11 133 2 discriminator 4 view .LVU3513
 13676              	.LBB9575:
 13677              	.LBI9575:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13678              		.loc 5 141 7 discriminator 4 view .LVU3514
 13679              	.LBB9576:
 13680              	.LBI9576:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13681              		.loc 4 83 7 discriminator 4 view .LVU3515
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13682              		.loc 4 83 7 is_stmt 0 discriminator 4 view .LVU3516
 13683              	.LBE9576:
 13684              	.LBE9575:
 13685              	.LBB9577:
 13686              	.LBI9577:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 13687              		.loc 11 94 2 is_stmt 1 discriminator 4 view .LVU3517
 13688              	.LBB9578:
 13689              	.LBB9579:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 13690              		.loc 11 95 47 is_stmt 0 discriminator 4 view .LVU3518
 13691 00c4 0023     		movs	r3, #0
 13692 00c6 0393     		str	r3, [sp, #12]
 13693 00c8 0493     		str	r3, [sp, #16]
 13694 00ca 0593     		str	r3, [sp, #20]
 13695              	.LVL932:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 13696              		.loc 11 95 47 discriminator 4 view .LVU3519
 13697              	.LBE9579:
 13698              	.LBE9578:
 13699              	.LBE9577:
 13700              	.LBE9574:
 13701              	.LBB9580:
 13702              	.LBI9580:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 13703              		.loc 11 356 7 is_stmt 1 discriminator 4 view .LVU3520
ARM GAS  /tmp/ccL95Edz.s 			page 546


 13704              	.LBB9581:
 13705              	.LBB9582:
 13706              	.LBI9582:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 13707              		.loc 11 340 7 discriminator 4 view .LVU3521
 13708              	.LBB9583:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13709              		.loc 11 343 18 is_stmt 0 discriminator 4 view .LVU3522
 13710 00cc 30B3     		cbz	r0, .L300
 13711              	.LVL933:
 13712              	.LBB9584:
 13713              	.LBI9584:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 13714              		.loc 3 443 7 is_stmt 1 view .LVU3523
 13715              	.LBB9585:
 13716              	.LBI9585:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13717              		.loc 4 102 7 view .LVU3524
 13718              	.LBB9586:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 13719              		.loc 4 104 2 is_stmt 0 view .LVU3525
 13720 00ce 234B     		ldr	r3, .L306+4
 13721 00d0 9842     		cmp	r0, r3
 13722 00d2 21D8     		bhi	.L304
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13723              		.loc 4 114 41 view .LVU3526
 13724 00d4 00EB4000 		add	r0, r0, r0, lsl #1
 13725              	.LVL934:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13726              		.loc 4 114 41 view .LVU3527
 13727 00d8 C000     		lsls	r0, r0, #3
 13728 00da FFF7FEFF 		bl	_Znwj
 13729              	.LVL935:
 13730 00de 0446     		mov	r4, r0
 13731              	.LVL936:
 13732              	.L290:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13733              		.loc 4 114 41 view .LVU3528
 13734              	.LBE9586:
 13735              	.LBE9585:
 13736              	.LBE9584:
 13737              	.LBE9583:
 13738              	.LBE9582:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 13739              		.loc 11 358 2 view .LVU3529
 13740 00e0 0394     		str	r4, [sp, #12]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 13741              		.loc 11 359 2 view .LVU3530
 13742 00e2 0494     		str	r4, [sp, #16]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13743              		.loc 11 360 59 view .LVU3531
 13744 00e4 2644     		add	r6, r6, r4
 13745              	.LVL937:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13746              		.loc 11 360 2 view .LVU3532
 13747 00e6 0596     		str	r6, [sp, #20]
 13748              	.LVL938:
ARM GAS  /tmp/ccL95Edz.s 			page 547


 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 13749              		.loc 11 360 2 view .LVU3533
 13750              	.LBE9581:
 13751              	.LBE9580:
 13752              	.LBE9573:
 13753              	.LBB9594:
 13754              	.LBI9594:
 13755              		.loc 5 153 7 is_stmt 1 view .LVU3534
 13756              	.LBB9595:
 13757              	.LBI9595:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13758              		.loc 4 89 7 view .LVU3535
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13759              		.loc 4 89 7 is_stmt 0 view .LVU3536
 13760              	.LBE9595:
 13761              	.LBE9594:
 13762              	.LBB9596:
 13763              	.LBI9596:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 13764              		.loc 11 817 7 is_stmt 1 view .LVU3537
 13765              	.LBB9597:
 13766              	.LBB9598:
 13767              	.LBI9598:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13768              		.loc 13 806 7 view .LVU3538
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13769              		.loc 13 806 7 is_stmt 0 view .LVU3539
 13770              	.LBE9598:
 13771              	.LBE9597:
 13772              	.LBE9596:
 13773              	.LBB9599:
 13774              	.LBI9599:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 13775              		.loc 11 835 7 is_stmt 1 view .LVU3540
 13776              	.LBB9600:
 13777              	.LBB9601:
 13778              	.LBI9601:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13779              		.loc 13 806 7 view .LVU3541
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 13780              		.loc 13 806 7 is_stmt 0 view .LVU3542
 13781              	.LBE9601:
 13782              	.LBE9600:
 13783              	.LBE9599:
 13784              	.LBB9602:
 13785              	.LBI9602:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13786              		.loc 11 273 7 is_stmt 1 view .LVU3543
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 13787              		.loc 11 273 7 is_stmt 0 view .LVU3544
 13788              	.LBE9602:
 13789              	.LBB9603:
 13790              	.LBI9603:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 13791              		.loc 15 305 5 is_stmt 1 view .LVU3545
 13792              	.LBB9604:
 13793              	.LBB9605:
ARM GAS  /tmp/ccL95Edz.s 			page 548


 13794              	.LBI9605:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13795              		.loc 15 115 5 view .LVU3546
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13796              		.loc 15 115 5 is_stmt 0 view .LVU3547
 13797 00e8 2E68     		ldr	r6, [r5]
 13798              	.LVL939:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 13799              		.loc 15 115 5 view .LVU3548
 13800 00ea 6D68     		ldr	r5, [r5, #4]
 13801              	.LVL940:
 13802              	.LBB9606:
 13803              	.LBB9607:
 13804              	.LBI9607:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 13805              		.loc 15 76 9 is_stmt 1 view .LVU3549
 13806              	.L293:
 13807              	.LBB9608:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13808              		.loc 15 82 23 view .LVU3550
 13809              	.LBB9609:
 13810              	.LBI9609:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 13811              		.loc 13 907 5 view .LVU3551
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 13812              		.loc 13 907 5 is_stmt 0 view .LVU3552
 13813              	.LBE9609:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13814              		.loc 15 82 23 view .LVU3553
 13815 00ec AE42     		cmp	r6, r5
 13816 00ee 17D0     		beq	.L292
 13817              	.LVL941:
 13818              	.LBB9610:
 13819              	.LBI9610:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 13820              		.loc 22 74 5 is_stmt 1 view .LVU3554
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 13821              		.loc 22 74 5 is_stmt 0 view .LVU3555
 13822              	.LBE9610:
 13823              	.LBE9608:
 13824              	.LBE9607:
 13825              	.LBE9606:
 13826              	.LBE9605:
 13827              	.LBE9604:
 13828              	.LBE9603:
 13829              	.LBE9565:
 13830              	.LBE9564:
 13831              	.LBE9563:
 13832              		.loc 14 174 3 is_stmt 1 view .LVU3556
 13833              	.LBB9650:
 13834              	.LBB9648:
 13835              	.LBB9646:
 13836              	.LBB9644:
 13837              	.LBB9643:
 13838              	.LBB9642:
 13839              	.LBB9641:
 13840              	.LBB9640:
ARM GAS  /tmp/ccL95Edz.s 			page 549


 13841              	.LBB9639:
 13842              	.LBB9636:
 13843              	.LBB9611:
 13844              	.LBI9611:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 13845              		.loc 2 448 7 view .LVU3557
 13846              	.LBB9612:
 13847              	.LBB9613:
 13848              	.LBI9613:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13849              		.loc 2 190 7 view .LVU3558
 13850              	.LBB9614:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13851              		.loc 2 193 51 is_stmt 0 view .LVU3559
 13852 00f0 04F10803 		add	r3, r4, #8
 13853              	.LVL942:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13854              		.loc 2 193 51 view .LVU3560
 13855              	.LBE9614:
 13856              	.LBE9613:
 13857              	.LBB9615:
 13858              	.LBI9615:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13859              		.loc 2 290 7 is_stmt 1 view .LVU3561
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13860              		.loc 2 290 7 is_stmt 0 view .LVU3562
 13861              	.LBE9615:
 13862              	.LBB9616:
 13863              	.LBI9616:
 13864              		.loc 19 97 19 is_stmt 1 view .LVU3563
 13865              	.LBB9617:
 13866              	.LBI9617:
 13867              		.loc 3 514 7 view .LVU3564
 13868              	.LBB9618:
 13869              	.LBI9618:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13870              		.loc 5 141 7 view .LVU3565
 13871              	.LBB9619:
 13872              	.LBI9619:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13873              		.loc 4 83 7 view .LVU3566
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13874              		.loc 4 83 7 is_stmt 0 view .LVU3567
 13875              	.LBE9619:
 13876              	.LBE9618:
 13877              	.LBE9617:
 13878              	.LBE9616:
 13879              	.LBB9620:
 13880              	.LBI9620:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 13881              		.loc 2 159 2 is_stmt 1 view .LVU3568
 13882              	.LBB9621:
 13883              	.LBB9622:
 13884              	.LBI9622:
 13885              		.loc 9 99 5 view .LVU3569
 13886              		.loc 9 99 5 is_stmt 0 view .LVU3570
 13887              	.LBE9622:
ARM GAS  /tmp/ccL95Edz.s 			page 550


 13888              	.LBB9623:
 13889              	.LBI9623:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13890              		.loc 5 141 7 is_stmt 1 view .LVU3571
 13891              	.LBB9624:
 13892              	.LBI9624:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13893              		.loc 4 83 7 view .LVU3572
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13894              		.loc 4 83 7 is_stmt 0 view .LVU3573
 13895              	.LBE9624:
 13896              	.LBE9623:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13897              		.loc 2 160 46 view .LVU3574
 13898 00f4 2360     		str	r3, [r4]
 13899              	.LVL943:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13900              		.loc 2 160 46 view .LVU3575
 13901              	.LBE9621:
 13902              	.LBE9620:
 13903              	.LBB9625:
 13904              	.LBI9625:
 13905              		.loc 5 153 7 is_stmt 1 view .LVU3576
 13906              	.LBB9626:
 13907              	.LBI9626:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13908              		.loc 4 89 7 view .LVU3577
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13909              		.loc 4 89 7 is_stmt 0 view .LVU3578
 13910              	.LBE9626:
 13911              	.LBE9625:
 13912              	.LBB9627:
 13913              	.LBI9627:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13914              		.loc 2 186 7 is_stmt 1 view .LVU3579
 13915              	.LBB9628:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13916              		.loc 2 187 28 is_stmt 0 view .LVU3580
 13917 00f6 3168     		ldr	r1, [r6]
 13918              	.LVL944:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13919              		.loc 2 187 28 view .LVU3581
 13920              	.LBE9628:
 13921              	.LBE9627:
 13922              	.LBB9629:
 13923              	.LBI9629:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13924              		.loc 2 186 7 is_stmt 1 view .LVU3582
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13925              		.loc 2 186 7 is_stmt 0 view .LVU3583
 13926              	.LBE9629:
 13927              	.LBB9630:
 13928              	.LBI9630:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13929              		.loc 2 936 7 is_stmt 1 view .LVU3584
 13930              	.LBB9631:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 551


 13931              		.loc 2 937 16 is_stmt 0 view .LVU3585
 13932 00f8 7268     		ldr	r2, [r6, #4]
 13933              	.LVL945:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13934              		.loc 2 937 16 view .LVU3586
 13935              	.LBE9631:
 13936              	.LBE9630:
 13937              	.LBB9632:
 13938              	.LBI9632:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 13939              		.loc 2 263 9 is_stmt 1 view .LVU3587
 13940              	.LBB9633:
 13941              	.LBB9634:
 13942              	.LBI9634:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 13943              		.loc 2 243 9 view .LVU3588
 13944              	.LBB9635:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13945              		.loc 2 247 11 is_stmt 0 view .LVU3589
 13946 00fa 4FF00003 		mov	r3, #0
 13947 00fe 0A44     		add	r2, r2, r1
 13948              	.LVL946:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13949              		.loc 2 247 11 view .LVU3590
 13950 0100 2046     		mov	r0, r4
 13951 0102 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 13952              	.LVL947:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13953              		.loc 2 247 11 view .LVU3591
 13954              	.LBE9635:
 13955              	.LBE9634:
 13956              	.LBE9633:
 13957              	.LBE9632:
 13958              	.LBE9612:
 13959              	.LBE9611:
 13960              	.LBE9636:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13961              		.loc 15 82 8 is_stmt 1 view .LVU3592
 13962              	.LBB9637:
 13963              	.LBI9637:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 13964              		.loc 13 827 7 view .LVU3593
 13965              	.LBB9638:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 13966              		.loc 13 829 2 is_stmt 0 view .LVU3594
 13967 0106 1836     		adds	r6, r6, #24
 13968              	.LVL948:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 13969              		.loc 13 829 2 view .LVU3595
 13970              	.LBE9638:
 13971              	.LBE9637:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13972              		.loc 15 82 8 view .LVU3596
 13973 0108 1834     		adds	r4, r4, #24
 13974              	.LVL949:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13975              		.loc 15 82 8 view .LVU3597
ARM GAS  /tmp/ccL95Edz.s 			page 552


 13976 010a EFE7     		b	.L293
 13977              	.LVL950:
 13978              	.L288:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13979              		.loc 15 82 8 view .LVU3598
 13980              	.LBE9639:
 13981              	.LBE9640:
 13982              	.LBE9641:
 13983              	.LBE9642:
 13984              	.LBE9643:
 13985              	.LBE9644:
 13986              	.LBE9646:
 13987              	.LBE9648:
 13988              	.LBE9650:
  96:alohal/cli/command.hpp ****         }
 13989              		.loc 18 96 49 discriminator 2 view .LVU3599
 13990 010c 5A10     		asrs	r2, r3, #1
 13991 010e B958     		ldr	r1, [r7, r2]
 13992              	.LVL951:
  96:alohal/cli/command.hpp ****         }
 13993              		.loc 18 96 49 discriminator 2 view .LVU3600
 13994 0110 826B     		ldr	r2, [r0, #56]
 13995 0112 51F80280 		ldr	r8, [r1, r2]
 13996 0116 CCE7     		b	.L289
 13997              	.LVL952:
 13998              	.L304:
 13999              	.LBB9651:
 14000              	.LBB9649:
 14001              	.LBB9647:
 14002              	.LBB9645:
 14003              	.LBB9593:
 14004              	.LBB9592:
 14005              	.LBB9591:
 14006              	.LBB9590:
 14007              	.LBB9589:
 14008              	.LBB9588:
 14009              	.LBB9587:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14010              		.loc 4 105 26 view .LVU3601
 14011 0118 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 14012              	.LVL953:
 14013              	.L300:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14014              		.loc 4 105 26 view .LVU3602
 14015              	.LBE9587:
 14016              	.LBE9588:
 14017              	.LBE9589:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 14018              		.loc 11 343 18 view .LVU3603
 14019 011c 0024     		movs	r4, #0
 14020 011e DFE7     		b	.L290
 14021              	.LVL954:
 14022              	.L292:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 14023              		.loc 11 343 18 view .LVU3604
 14024              	.LBE9590:
 14025              	.LBE9591:
ARM GAS  /tmp/ccL95Edz.s 			page 553


 14026              	.LBE9592:
 14027              	.LBE9593:
 14028              	.LBE9645:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 14029              		.loc 11 554 2 view .LVU3605
 14030 0120 0494     		str	r4, [sp, #16]
 14031              	.LVL955:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 14032              		.loc 11 554 2 view .LVU3606
 14033              	.LBE9647:
 14034              	.LBE9649:
 14035              	.LBE9651:
  96:alohal/cli/command.hpp ****         }
 14036              		.loc 18 96 49 view .LVU3607
 14037 0122 03A9     		add	r1, sp, #12
 14038 0124 3846     		mov	r0, r7
 14039 0126 C047     		blx	r8
 14040              	.LVL956:
 14041 0128 0546     		mov	r5, r0
 14042              	.LVL957:
 14043              	.LBB9652:
 14044              	.LBI9652:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 14045              		.loc 11 675 7 is_stmt 1 view .LVU3608
 14046              	.LBB9653:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 14047              		.loc 11 677 15 is_stmt 0 view .LVU3609
 14048 012a 039C     		ldr	r4, [sp, #12]
 14049 012c 049E     		ldr	r6, [sp, #16]
 14050              	.LVL958:
 14051              	.LBB9654:
 14052              	.LBI9654:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 14053              		.loc 11 273 7 is_stmt 1 view .LVU3610
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 14054              		.loc 11 273 7 is_stmt 0 view .LVU3611
 14055              	.LBE9654:
 14056              	.LBB9655:
 14057              	.LBI9655:
 14058              		.loc 22 203 5 is_stmt 1 view .LVU3612
 14059 012e 02E0     		b	.L296
 14060              	.LVL959:
 14061              	.L305:
 14062              	.LBB9656:
 14063              	.LBB9657:
 14064              	.LBB9658:
 14065              	.LBB9659:
 14066              	.LBB9660:
 14067              	.LBB9661:
 14068              	.LBB9662:
 14069              	.LBB9663:
 14070              	.LBB9664:
 14071              	.LBI9664:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 14072              		.loc 2 236 7 view .LVU3613
 14073              	.LBB9665:
 14074              	.LBB9666:
ARM GAS  /tmp/ccL95Edz.s 			page 554


 14075              	.LBI9666:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14076              		.loc 3 469 7 view .LVU3614
 14077              	.LBB9667:
 14078              	.LBI9667:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 14079              		.loc 4 119 7 view .LVU3615
 14080              	.LBB9668:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14081              		.loc 4 128 19 is_stmt 0 view .LVU3616
 14082 0130 FFF7FEFF 		bl	_ZdlPv
 14083              	.LVL960:
 14084              	.L295:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14085              		.loc 4 128 19 view .LVU3617
 14086              	.LBE9668:
 14087              	.LBE9667:
 14088              	.LBE9666:
 14089              	.LBE9665:
 14090              	.LBE9664:
 14091              	.LBE9663:
 14092              	.LBE9662:
 14093              	.LBB9674:
 14094              	.LBI9674:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14095              		.loc 2 150 14 is_stmt 1 view .LVU3618
 14096              	.LBB9675:
 14097              	.LBI9675:
 14098              		.loc 5 153 7 view .LVU3619
 14099              	.LBB9676:
 14100              	.LBI9676:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14101              		.loc 4 89 7 view .LVU3620
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14102              		.loc 4 89 7 is_stmt 0 view .LVU3621
 14103              	.LBE9676:
 14104              	.LBE9675:
 14105              	.LBE9674:
 14106              	.LBE9661:
 14107              	.LBE9660:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 14108              		.loc 22 107 4 is_stmt 1 view .LVU3622
 14109 0134 1834     		adds	r4, r4, #24
 14110              	.LVL961:
 14111              	.L296:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 14112              		.loc 22 107 19 view .LVU3623
 14113 0136 A642     		cmp	r6, r4
 14114 0138 05D0     		beq	.L294
 14115              	.LVL962:
 14116              	.LBB9679:
 14117              	.LBI9660:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 14118              		.loc 22 97 5 view .LVU3624
 14119              	.LBB9678:
 14120              	.LBI9661:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
ARM GAS  /tmp/ccL95Edz.s 			page 555


 14121              		.loc 2 657 7 view .LVU3625
 14122              	.LBB9677:
 14123              	.LBI9662:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14124              		.loc 2 229 7 view .LVU3626
 14125              	.LBB9673:
 14126              	.LBB9669:
 14127              	.LBI9669:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14128              		.loc 2 221 7 view .LVU3627
 14129              	.LBB9670:
 14130              	.LBI9670:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14131              		.loc 2 186 7 view .LVU3628
 14132              	.LBB9671:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14133              		.loc 2 187 28 is_stmt 0 view .LVU3629
 14134 013a 2346     		mov	r3, r4
 14135 013c 53F8080B 		ldr	r0, [r3], #8
 14136              	.LVL963:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14137              		.loc 2 187 28 view .LVU3630
 14138              	.LBE9671:
 14139              	.LBE9670:
 14140              	.LBB9672:
 14141              	.LBI9672:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14142              		.loc 2 200 7 is_stmt 1 view .LVU3631
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14143              		.loc 2 200 7 is_stmt 0 view .LVU3632
 14144              	.LBE9672:
 14145              	.LBE9669:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14146              		.loc 2 231 2 view .LVU3633
 14147 0140 9842     		cmp	r0, r3
 14148 0142 F5D1     		bne	.L305
 14149 0144 F6E7     		b	.L295
 14150              	.LVL964:
 14151              	.L294:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14152              		.loc 2 231 2 view .LVU3634
 14153              	.LBE9673:
 14154              	.LBE9677:
 14155              	.LBE9678:
 14156              	.LBE9679:
 14157              	.LBE9659:
 14158              	.LBE9658:
 14159              	.LBE9657:
 14160              	.LBE9656:
 14161              	.LBE9655:
 14162              	.LBB9680:
 14163              	.LBI9680:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 14164              		.loc 11 330 7 is_stmt 1 view .LVU3635
 14165              	.LBB9681:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 14166              		.loc 11 332 2 is_stmt 0 view .LVU3636
ARM GAS  /tmp/ccL95Edz.s 			page 556


 14167 0146 0398     		ldr	r0, [sp, #12]
 14168              	.LVL965:
 14169              	.LBB9682:
 14170              	.LBI9682:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 14171              		.loc 11 347 7 is_stmt 1 view .LVU3637
 14172              	.LBB9683:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 14173              		.loc 11 350 2 is_stmt 0 view .LVU3638
 14174 0148 0028     		cmp	r0, #0
 14175 014a A5D0     		beq	.L277
 14176              	.LVL966:
 14177              	.LBB9684:
 14178              	.LBI9684:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14179              		.loc 3 469 7 is_stmt 1 view .LVU3639
 14180              	.LBB9685:
 14181              	.LBB9686:
 14182              	.LBI9686:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 14183              		.loc 4 119 7 view .LVU3640
 14184              	.LBB9687:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14185              		.loc 4 128 19 is_stmt 0 view .LVU3641
 14186 014c FFF7FEFF 		bl	_ZdlPv
 14187              	.LVL967:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14188              		.loc 4 128 19 view .LVU3642
 14189              	.LBE9687:
 14190              	.LBE9686:
 14191              	.LBE9685:
 14192              	.LBE9684:
 14193              	.LBE9683:
 14194              	.LBE9682:
 14195              	.LBB9691:
 14196              	.LBI9691:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 14197              		.loc 11 125 14 is_stmt 1 view .LVU3643
 14198              	.LBB9692:
 14199              	.LBI9692:
 14200              		.loc 5 153 7 view .LVU3644
 14201              	.LBB9693:
 14202              	.LBI9693:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14203              		.loc 4 89 7 view .LVU3645
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14204              		.loc 4 89 7 is_stmt 0 view .LVU3646
 14205              	.LBE9693:
 14206              	.LBE9692:
 14207              	.LBE9691:
 14208              	.LBB9694:
 14209              	.LBB9690:
 14210              	.LBB9689:
 14211              	.LBB9688:
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 14212              		.loc 3 470 35 view .LVU3647
 14213 0150 A2E7     		b	.L277
ARM GAS  /tmp/ccL95Edz.s 			page 557


 14214              	.LVL968:
 14215              	.L299:
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 14216              		.loc 3 470 35 view .LVU3648
 14217              	.LBE9688:
 14218              	.LBE9689:
 14219              	.LBE9690:
 14220              	.LBE9694:
 14221              	.LBE9681:
 14222              	.LBE9680:
 14223              	.LBE9653:
 14224              	.LBE9652:
  98:alohal/cli/command.hpp ****     }
 14225              		.loc 18 98 17 view .LVU3649
 14226 0152 4FF0FF35 		mov	r5, #-1
 14227 0156 9FE7     		b	.L277
 14228              	.L307:
 14229              		.align	2
 14230              	.L306:
 14231 0158 ABAAAAAA 		.word	-1431655765
 14232 015c 55555505 		.word	89478485
 14233              		.cfi_endproc
 14234              	.LFE4219:
 14236              		.section	.text._ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS
 14237              		.align	1
 14238              		.weak	_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_E
 14239              		.syntax unified
 14240              		.thumb
 14241              		.thumb_func
 14242              		.fpu fpv4-sp-d16
 14244              	_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9_
 14245              	.LVL969:
 14246              	.LFB4163:
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline __normal_iterator<_Iterator, _Container>
 996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
 997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      __n, const __normal_iterator<_Iterator, _Container>& __i)
 998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
1000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
1001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
1002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** } // namespace
1003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
1004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
1005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** {
1006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
1007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
1008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
1009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _Iterator
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 14247              		.loc 13 1010 5 is_stmt 1 view -0
 14248              		.cfi_startproc
 14249              		@ args = 0, pretend = 0, frame = 0
 14250              		@ frame_needed = 0, uses_anonymous_args = 0
 14251              		@ link register save eliminated.
 14252              	.LVL970:
ARM GAS  /tmp/ccL95Edz.s 			page 558


1011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
1012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __it.base(); }
 14253              		.loc 13 1012 27 is_stmt 0 view .LVU3651
 14254 0000 7047     		bx	lr
 14255              		.cfi_endproc
 14256              	.LFE4163:
 14258              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseE
 14259              		.align	1
 14260              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_c
 14261              		.syntax unified
 14262              		.thumb
 14263              		.thumb_func
 14264              		.fpu fpv4-sp-d16
 14266              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx17__n
 14267              	.LVL971:
 14268              	.LFB3918:
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_erase(iterator __position)
 14269              		.loc 10 171 5 is_stmt 1 view -0
 14270              		.cfi_startproc
 14271              		@ args = 0, pretend = 0, frame = 0
 14272              		@ frame_needed = 0, uses_anonymous_args = 0
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_erase(iterator __position)
 14273              		.loc 10 171 5 is_stmt 0 view .LVU3653
 14274 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 14275              	.LCFI53:
 14276              		.cfi_def_cfa_offset 32
 14277              		.cfi_offset 3, -32
 14278              		.cfi_offset 4, -28
 14279              		.cfi_offset 5, -24
 14280              		.cfi_offset 6, -20
 14281              		.cfi_offset 7, -16
 14282              		.cfi_offset 8, -12
 14283              		.cfi_offset 9, -8
 14284              		.cfi_offset 14, -4
 14285 0004 0646     		mov	r6, r0
 14286 0006 0F46     		mov	r7, r1
 14287              	.LVL972:
 14288              	.LBB9804:
 14289              	.LBI9804:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 14290              		.loc 13 859 7 is_stmt 1 view .LVU3654
 14291              	.LBB9805:
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 14292              		.loc 13 860 45 is_stmt 0 view .LVU3655
 14293 0008 01F11800 		add	r0, r1, #24
 14294              	.LVL973:
 14295              	.LBB9806:
 14296              	.LBI9806:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14297              		.loc 13 806 7 is_stmt 1 view .LVU3656
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14298              		.loc 13 806 7 is_stmt 0 view .LVU3657
 14299              	.LBE9806:
 14300              	.LBE9805:
 14301              	.LBE9804:
 14302              	.LBB9807:
 14303              	.LBI9807:
ARM GAS  /tmp/ccL95Edz.s 			page 559


 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 14304              		.loc 11 826 7 is_stmt 1 view .LVU3658
 14305              	.LBB9808:
 14306              	.LBI9808:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14307              		.loc 13 806 7 view .LVU3659
 14308              	.LBB9809:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 14309              		.loc 13 807 23 is_stmt 0 view .LVU3660
 14310 000c 7568     		ldr	r5, [r6, #4]
 14311              	.LVL974:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 14312              		.loc 13 807 23 view .LVU3661
 14313              	.LBE9809:
 14314              	.LBE9808:
 14315              	.LBE9807:
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 14316              		.loc 10 174 7 view .LVU3662
 14317 000e 8542     		cmp	r5, r0
 14318 0010 45D0     		beq	.L310
 14319              	.LVL975:
 14320              	.LBB9810:
 14321              	.LBI9810:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 14322              		.loc 13 859 7 is_stmt 1 view .LVU3663
 14323              	.LBB9811:
 14324              	.LBB9812:
 14325              	.LBI9812:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14326              		.loc 13 806 7 view .LVU3664
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14327              		.loc 13 806 7 is_stmt 0 view .LVU3665
 14328              	.LBE9812:
 14329              	.LBE9811:
 14330              	.LBE9810:
 14331              	.LBB9813:
 14332              	.LBI9813:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 14333              		.loc 11 826 7 is_stmt 1 view .LVU3666
 14334              	.LBB9814:
 14335              	.LBB9815:
 14336              	.LBI9815:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14337              		.loc 13 806 7 view .LVU3667
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14338              		.loc 13 806 7 is_stmt 0 view .LVU3668
 14339              	.LBE9815:
 14340              	.LBE9814:
 14341              	.LBE9813:
 14342              	.LBB9816:
 14343              	.LBI9816:
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
ARM GAS  /tmp/ccL95Edz.s 			page 560


 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _Iterator
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     { return __it; }
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _From
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
ARM GAS  /tmp/ccL95Edz.s 			page 561


 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _Iterator
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     { return __res; }
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Category>
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__first;
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__result;
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    }
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 562


 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__first;
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__result;
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    }
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _Tp*
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  if (_Num)
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __is_pointer<_II>::__value
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __is_pointer<_OI>::__value
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 563


 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct char_traits;
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					    std::__niter_base(__last),
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					    std::__niter_base(__result)));
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  within [first,last).
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
ARM GAS  /tmp/ccL95Edz.s 			page 564


 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__copy_move_a2<__is_move_iterator<_II>::__value>
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  within [first,last).
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 14344              		.loc 12 497 5 is_stmt 1 view .LVU3669
 14345              	.LBB9817:
 14346              	.LBB9818:
 14347              	.LBI9818:
 14348              		.file 23 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // The  -*- C++ -*- type traits classes for internal use in libstdc++
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Copyright (C) 2000-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // 3.1, as published by the Free Software Foundation.
ARM GAS  /tmp/ccL95Edz.s 			page 565


  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** /** @file bits/cpp_type_traits.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****  *  Do not attempt to use it directly. @headername{ext/type_traits}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Written by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #ifndef _CPP_TYPE_TRAITS_H
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #define _CPP_TYPE_TRAITS_H 1
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #pragma GCC system_header
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #include <bits/c++config.h>
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** //
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // This file provides some compile-time information about various types.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // These representations were designed, on purpose, to be constant-expressions
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // and not types as found in <bits/type_traits.h>.  In particular, they
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // can be used in control structures and the optimizer hopefully will do
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // the obvious thing.
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** //
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Why integral expressions, and not functions nor types?
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Firstly, these compile-time entities are used as template-arguments
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // so function return values won't work:  We need compile-time entities.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // We're left with types and constant  integral expressions.
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Secondly, from the point of view of ease of use, type-based compile-time
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // information is -not- *that* convenient.  One has to write lots of
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // overloaded functions and to hope that the compiler will select the right
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // one. As a net effect, the overall structure isn't very clear at first
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // glance.
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Thirdly, partial ordering and overload resolution (of function templates)
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // is highly costly in terms of compiler-resource.  It is a Good Thing to
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // keep these resource consumption as least as possible.
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** //
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // See valarray_array.h for a case use.
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** //
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // -- Gaby (dosreis@cmla.ens-cachan.fr) 2000-03-06.
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** //
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // Update 2005: types are also provided and <bits/type_traits.h> has been
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** // removed.
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** //
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** extern "C++" {
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** {
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   struct __true_type { };
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   struct __false_type { };
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 566


  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<bool>
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __truth_type
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     { typedef __false_type __type; };
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __truth_type<true>
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     { typedef __true_type __type; };
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // N.B. The conversions to bool are needed due to the issue
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // explained in c++/19404.
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<class _Sp, class _Tp>
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __traitor
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef typename __truth_type<__value>::__type __type;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Compare for equality of types.
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename, typename>
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __are_same
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __are_same<_Tp, _Tp>
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Holds if the template-argument is a void type.
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_void
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_void<void>
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Integer types
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 567


 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Thirteen specializations (yes there are eleven standard integer
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // types; <em>long long</em> and <em>unsigned long long</em> are
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // supported as extensions).  Up to four target-specific __int<N>
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // types are supported as well.
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<bool>
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<char>
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<signed char>
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<unsigned char>
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** # ifdef _GLIBCXX_USE_WCHAR_T
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<wchar_t>
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** # endif
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #ifdef _GLIBCXX_USE_CHAR8_T
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<char8_t>
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #if __cplusplus >= 201103L
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<char16_t>
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
ARM GAS  /tmp/ccL95Edz.s 			page 568


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<char32_t>
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<short>
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<unsigned short>
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<int>
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<unsigned int>
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<long>
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<unsigned long>
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<long long>
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
ARM GAS  /tmp/ccL95Edz.s 			page 569


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<unsigned long long>
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #define __INT_N(TYPE) 			\
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>				\
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<TYPE>		\
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {					\
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };		\
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;	\
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };					\
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>				\
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_integer<unsigned TYPE>	\
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {					\
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };		\
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;	\
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_0
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_0)
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_1
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_1)
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_2
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_2)
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_3
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_3)
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #undef __INT_N
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Floating point types
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_floating
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // three specializations (float, double and 'long double')
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_floating<float>
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_floating<double>
ARM GAS  /tmp/ccL95Edz.s 			page 570


 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_floating<long double>
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Pointer types
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_pointer
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_pointer<_Tp*>
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // An arithmetic type is an integer type or a floating point type
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_arithmetic
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     { };
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // A scalar type is an arithmetic type or a pointer type
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // 
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_scalar
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     { };
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // For use in std::copy and std::find overloads for streambuf iterators.
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_char
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_char<char>
ARM GAS  /tmp/ccL95Edz.s 			page 571


 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #ifdef _GLIBCXX_USE_WCHAR_T
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_char<wchar_t>
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_byte
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_byte<char>
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_byte<signed char>
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_byte<unsigned char>
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #if __cplusplus >= 201703L
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   enum class byte : unsigned char;
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<>
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_byte<byte>
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 1 };
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __true_type __type;
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** #endif // C++17
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Move iterator type
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   //
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Tp>
ARM GAS  /tmp/ccL95Edz.s 			page 572


 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     struct __is_move_iterator
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     {
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       enum { __value = 0 };
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****       typedef __false_type __type;
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     };
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h **** 
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   // remove the move_iterator wrapper.
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****   template<typename _Iterator>
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     inline _Iterator
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h ****     __miter_base(_Iterator __it)
 14349              		.loc 23 428 5 view .LVU3670
 14350              	.LBE9818:
 14351              	.LBB9819:
 14352              	.LBI9819:
 14353              		.loc 23 428 5 view .LVU3671
 14354              	.LBE9819:
 14355              	.LBB9820:
 14356              	.LBI9820:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 14357              		.loc 12 438 5 view .LVU3672
 14358              	.LBB9821:
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 14359              		.loc 12 440 31 is_stmt 0 view .LVU3673
 14360 0012 FFF7FEFF 		bl	_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET
 14361              	.LVL976:
 14362 0016 0446     		mov	r4, r0
 14363 0018 2846     		mov	r0, r5
 14364 001a FFF7FEFF 		bl	_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET
 14365              	.LVL977:
 14366 001e 8046     		mov	r8, r0
 14367 0020 3846     		mov	r0, r7
 14368 0022 FFF7FEFF 		bl	_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET
 14369              	.LVL978:
 14370 0026 0546     		mov	r5, r0
 14371              	.LVL979:
 14372              	.LBB9822:
 14373              	.LBI9822:
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 14374              		.loc 12 393 5 is_stmt 1 view .LVU3674
 14375              	.LBB9823:
 14376              	.LBB9824:
 14377              	.LBI9824:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 14378              		.loc 12 356 2 view .LVU3675
 14379              	.LBB9825:
 14380              	.LBB9826:
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 14381              		.loc 12 359 31 is_stmt 0 view .LVU3676
 14382 0028 A8EB0408 		sub	r8, r8, r4
 14383              	.LVL980:
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 14384              		.loc 12 359 18 view .LVU3677
 14385 002c 4FEAE808 		asr	r8, r8, #3
 14386 0030 224B     		ldr	r3, .L324
 14387 0032 03FB08F8 		mul	r8, r3, r8
 14388              	.LVL981:
ARM GAS  /tmp/ccL95Edz.s 			page 573


 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 14389              		.loc 12 359 18 view .LVU3678
 14390 0036 12E0     		b	.L318
 14391              	.LVL982:
 14392              	.L323:
 14393              	.LBB9827:
 14394              	.LBB9828:
 14395              	.LBB9829:
 14396              	.LBI9829:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14397              		.loc 2 930 7 is_stmt 1 view .LVU3679
 14398              	.LBB9830:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14399              		.loc 2 931 16 is_stmt 0 view .LVU3680
 14400 0038 6268     		ldr	r2, [r4, #4]
 14401              	.LVL983:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14402              		.loc 2 931 16 view .LVU3681
 14403              	.LBE9830:
 14404              	.LBE9829:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 14405              		.loc 2 750 6 view .LVU3682
 14406 003a 1AB1     		cbz	r2, .L313
 14407              	.LVL984:
 14408              	.LBB9831:
 14409              	.LBI9831:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14410              		.loc 2 346 7 is_stmt 1 view .LVU3683
 14411              	.LBB9832:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 14412              		.loc 2 348 2 is_stmt 0 view .LVU3684
 14413 003c 012A     		cmp	r2, #1
 14414 003e 27D0     		beq	.L322
 14415              	.LVL985:
 14416              	.LBB9833:
 14417              	.LBI9833:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 14418              		.loc 8 361 7 is_stmt 1 view .LVU3685
 14419              	.LBB9834:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 14420              		.loc 8 363 2 view .LVU3686
 14421              		.loc 8 365 2 view .LVU3687
 14422              		.loc 8 365 49 is_stmt 0 view .LVU3688
 14423 0040 FFF7FEFF 		bl	memcpy
 14424              	.LVL986:
 14425              	.L313:
 14426              		.loc 8 365 49 view .LVU3689
 14427              	.LBE9834:
 14428              	.LBE9833:
 14429              	.LBE9832:
 14430              	.LBE9831:
 14431              	.LBB9838:
 14432              	.LBI9838:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14433              		.loc 2 930 7 is_stmt 1 view .LVU3690
 14434              	.LBB9839:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 574


 14435              		.loc 2 931 16 is_stmt 0 view .LVU3691
 14436 0044 6368     		ldr	r3, [r4, #4]
 14437              	.LVL987:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14438              		.loc 2 931 16 view .LVU3692
 14439              	.LBE9839:
 14440              	.LBE9838:
 14441              	.LBB9840:
 14442              	.LBI9840:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14443              		.loc 2 214 7 is_stmt 1 view .LVU3693
 14444              	.LBB9841:
 14445              	.LBB9842:
 14446              	.LBI9842:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14447              		.loc 2 182 7 view .LVU3694
 14448              	.LBB9843:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14449              		.loc 2 183 9 is_stmt 0 view .LVU3695
 14450 0046 6B60     		str	r3, [r5, #4]
 14451              	.LVL988:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14452              		.loc 2 183 9 view .LVU3696
 14453              	.LBE9843:
 14454              	.LBE9842:
 14455              	.LBB9844:
 14456              	.LBI9844:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14457              		.loc 2 186 7 is_stmt 1 view .LVU3697
 14458              	.LBB9845:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14459              		.loc 2 187 28 is_stmt 0 view .LVU3698
 14460 0048 2A68     		ldr	r2, [r5]
 14461              	.LVL989:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14462              		.loc 2 187 28 view .LVU3699
 14463              	.LBE9845:
 14464              	.LBE9844:
 14465              	.LBB9846:
 14466              	.LBI9846:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 14467              		.loc 8 299 7 is_stmt 1 view .LVU3700
 14468              	.LBB9847:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14469              		.loc 8 300 9 view .LVU3701
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14470              		.loc 8 300 14 is_stmt 0 view .LVU3702
 14471 004a 0021     		movs	r1, #0
 14472 004c D154     		strb	r1, [r2, r3]
 14473              	.LVL990:
 14474              	.L315:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14475              		.loc 8 300 14 view .LVU3703
 14476              	.LBE9847:
 14477              	.LBE9846:
 14478              	.LBE9841:
 14479              	.LBE9840:
ARM GAS  /tmp/ccL95Edz.s 			page 575


 14480              	.LBE9828:
 14481              	.LBB9869:
 14482              	.LBI9869:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 14483              		.loc 2 1023 7 is_stmt 1 view .LVU3704
 14484              	.LBB9870:
 14485              	.LBI9870:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14486              		.loc 2 214 7 view .LVU3705
 14487              	.LBB9871:
 14488              	.LBI9871:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14489              		.loc 2 182 7 view .LVU3706
 14490              	.LBB9872:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14491              		.loc 2 183 9 is_stmt 0 view .LVU3707
 14492 004e 0023     		movs	r3, #0
 14493 0050 6360     		str	r3, [r4, #4]
 14494              	.LVL991:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14495              		.loc 2 183 9 view .LVU3708
 14496              	.LBE9872:
 14497              	.LBE9871:
 14498              	.LBB9873:
 14499              	.LBI9873:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14500              		.loc 2 186 7 is_stmt 1 view .LVU3709
 14501              	.LBB9874:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14502              		.loc 2 187 28 is_stmt 0 view .LVU3710
 14503 0052 54F8182B 		ldr	r2, [r4], #24
 14504              	.LVL992:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14505              		.loc 2 187 28 view .LVU3711
 14506              	.LBE9874:
 14507              	.LBE9873:
 14508              	.LBB9875:
 14509              	.LBI9875:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 14510              		.loc 8 299 7 is_stmt 1 view .LVU3712
 14511              	.LBB9876:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14512              		.loc 8 300 9 view .LVU3713
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14513              		.loc 8 300 14 is_stmt 0 view .LVU3714
 14514 0056 1370     		strb	r3, [r2]
 14515              	.LVL993:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14516              		.loc 8 300 14 view .LVU3715
 14517              	.LBE9876:
 14518              	.LBE9875:
 14519              	.LBE9870:
 14520              	.LBE9869:
 14521              	.LBE9827:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    }
 14522              		.loc 12 363 8 view .LVU3716
 14523 0058 1835     		adds	r5, r5, #24
ARM GAS  /tmp/ccL95Edz.s 			page 576


 14524              	.LVL994:
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 14525              		.loc 12 359 4 is_stmt 1 view .LVU3717
 14526 005a 08F1FF38 		add	r8, r8, #-1
 14527              	.LVL995:
 14528              	.L318:
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 14529              		.loc 12 359 46 view .LVU3718
 14530 005e B8F1000F 		cmp	r8, #0
 14531 0062 1CDD     		ble	.L310
 14532              	.LVL996:
 14533              	.LBB9882:
 14534              	.LBI9827:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 14535              		.loc 2 732 7 view .LVU3719
 14536              	.LBB9877:
 14537              	.LBI9877:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14538              		.loc 2 221 7 view .LVU3720
 14539              	.LBB9878:
 14540              	.LBI9878:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14541              		.loc 2 186 7 view .LVU3721
 14542              	.LBB9879:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14543              		.loc 2 187 28 is_stmt 0 view .LVU3722
 14544 0064 2A46     		mov	r2, r5
 14545 0066 52F8080B 		ldr	r0, [r2], #8
 14546              	.LVL997:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14547              		.loc 2 187 28 view .LVU3723
 14548              	.LBE9879:
 14549              	.LBE9878:
 14550              	.LBB9880:
 14551              	.LBI9880:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14552              		.loc 2 200 7 is_stmt 1 view .LVU3724
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14553              		.loc 2 200 7 is_stmt 0 view .LVU3725
 14554              	.LBE9880:
 14555              	.LBE9877:
 14556              	.LBB9881:
 14557              	.LBB9848:
 14558              	.LBI9848:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14559              		.loc 2 221 7 is_stmt 1 view .LVU3726
 14560              	.LBB9849:
 14561              	.LBI9849:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14562              		.loc 2 186 7 view .LVU3727
 14563              	.LBB9850:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14564              		.loc 2 187 28 is_stmt 0 view .LVU3728
 14565 006a 2346     		mov	r3, r4
 14566 006c 53F8081B 		ldr	r1, [r3], #8
 14567              	.LVL998:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 577


 14568              		.loc 2 187 28 view .LVU3729
 14569              	.LBE9850:
 14570              	.LBE9849:
 14571              	.LBB9851:
 14572              	.LBI9851:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14573              		.loc 2 200 7 is_stmt 1 view .LVU3730
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14574              		.loc 2 200 7 is_stmt 0 view .LVU3731
 14575              	.LBE9851:
 14576              	.LBE9848:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 14577              		.loc 2 747 2 view .LVU3732
 14578 0070 9942     		cmp	r1, r3
 14579 0072 E1D0     		beq	.L323
 14580              	.LVL999:
 14581              	.LBB9852:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 14582              		.loc 2 761 6 view .LVU3733
 14583 0074 9042     		cmp	r0, r2
 14584 0076 0ED0     		beq	.L320
 14585              	.LVL1000:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 14586              		.loc 2 767 7 view .LVU3734
 14587 0078 D5F80890 		ldr	r9, [r5, #8]
 14588              	.LVL1001:
 14589              	.L316:
 14590              	.LBB9853:
 14591              	.LBI9853:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14592              		.loc 2 178 7 is_stmt 1 view .LVU3735
 14593              	.LBB9854:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14594              		.loc 2 179 9 is_stmt 0 view .LVU3736
 14595 007c 2960     		str	r1, [r5]
 14596              	.LVL1002:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14597              		.loc 2 179 9 view .LVU3737
 14598              	.LBE9854:
 14599              	.LBE9853:
 14600              	.LBB9855:
 14601              	.LBI9855:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14602              		.loc 2 936 7 is_stmt 1 view .LVU3738
 14603              	.LBB9856:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14604              		.loc 2 937 16 is_stmt 0 view .LVU3739
 14605 007e 6268     		ldr	r2, [r4, #4]
 14606              	.LVL1003:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14607              		.loc 2 937 16 view .LVU3740
 14608              	.LBE9856:
 14609              	.LBE9855:
 14610              	.LBB9857:
 14611              	.LBI9857:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14612              		.loc 2 182 7 is_stmt 1 view .LVU3741
ARM GAS  /tmp/ccL95Edz.s 			page 578


 14613              	.LBB9858:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14614              		.loc 2 183 9 is_stmt 0 view .LVU3742
 14615 0080 6A60     		str	r2, [r5, #4]
 14616              	.LVL1004:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14617              		.loc 2 183 9 view .LVU3743
 14618              	.LBE9858:
 14619              	.LBE9857:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 14620              		.loc 2 775 6 view .LVU3744
 14621 0082 A268     		ldr	r2, [r4, #8]
 14622              	.LVL1005:
 14623              	.LBB9859:
 14624              	.LBI9859:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14625              		.loc 2 210 7 is_stmt 1 view .LVU3745
 14626              	.LBB9860:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14627              		.loc 2 211 9 is_stmt 0 view .LVU3746
 14628 0084 AA60     		str	r2, [r5, #8]
 14629              	.LVL1006:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14630              		.loc 2 211 9 view .LVU3747
 14631              	.LBE9860:
 14632              	.LBE9859:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 14633              		.loc 2 776 6 view .LVU3748
 14634 0086 40B1     		cbz	r0, .L317
 14635              	.LVL1007:
 14636              	.LBB9861:
 14637              	.LBI9861:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14638              		.loc 2 178 7 is_stmt 1 view .LVU3749
 14639              	.LBB9862:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14640              		.loc 2 179 9 is_stmt 0 view .LVU3750
 14641 0088 2060     		str	r0, [r4]
 14642              	.LVL1008:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14643              		.loc 2 179 9 view .LVU3751
 14644              	.LBE9862:
 14645              	.LBE9861:
 14646              	.LBB9863:
 14647              	.LBI9863:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14648              		.loc 2 210 7 is_stmt 1 view .LVU3752
 14649              	.LBB9864:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14650              		.loc 2 211 9 is_stmt 0 view .LVU3753
 14651 008a C4F80890 		str	r9, [r4, #8]
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14652              		.loc 2 211 45 view .LVU3754
 14653 008e DEE7     		b	.L315
 14654              	.LVL1009:
 14655              	.L322:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 579


 14656              		.loc 2 211 45 view .LVU3755
 14657              	.LBE9864:
 14658              	.LBE9863:
 14659              	.LBE9852:
 14660              	.LBB9867:
 14661              	.LBB9837:
 14662              	.LBB9835:
 14663              	.LBI9835:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 14664              		.loc 8 299 7 is_stmt 1 view .LVU3756
 14665              	.LBB9836:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14666              		.loc 8 300 9 view .LVU3757
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14667              		.loc 8 300 16 is_stmt 0 view .LVU3758
 14668 0090 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14669              		.loc 8 300 14 view .LVU3759
 14670 0092 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14671              		.loc 8 300 22 view .LVU3760
 14672 0094 D6E7     		b	.L313
 14673              	.LVL1010:
 14674              	.L320:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14675              		.loc 8 300 22 view .LVU3761
 14676              	.LBE9836:
 14677              	.LBE9835:
 14678              	.LBE9837:
 14679              	.LBE9867:
 14680              	.LBB9868:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 14681              		.loc 2 759 14 view .LVU3762
 14682 0096 0020     		movs	r0, #0
 14683 0098 F0E7     		b	.L316
 14684              	.LVL1011:
 14685              	.L317:
 14686              	.LBB9865:
 14687              	.LBI9865:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14688              		.loc 2 178 7 is_stmt 1 view .LVU3763
 14689              	.LBB9866:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14690              		.loc 2 179 9 is_stmt 0 view .LVU3764
 14691 009a 2360     		str	r3, [r4]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14692              		.loc 2 179 33 view .LVU3765
 14693 009c D7E7     		b	.L315
 14694              	.LVL1012:
 14695              	.L310:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14696              		.loc 2 179 33 view .LVU3766
 14697              	.LBE9866:
 14698              	.LBE9865:
 14699              	.LBE9868:
 14700              	.LBE9881:
 14701              	.LBE9882:
ARM GAS  /tmp/ccL95Edz.s 			page 580


 14702              	.LBE9826:
 14703              	.LBE9825:
 14704              	.LBE9824:
 14705              	.LBE9823:
 14706              	.LBE9822:
 14707              	.LBE9821:
 14708              	.LBE9820:
 14709              	.LBE9817:
 14710              	.LBE9816:
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 14711              		.loc 10 176 23 view .LVU3767
 14712 009e 7368     		ldr	r3, [r6, #4]
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 14713              		.loc 10 176 7 view .LVU3768
 14714 00a0 A3F11802 		sub	r2, r3, #24
 14715 00a4 7260     		str	r2, [r6, #4]
 14716              	.LVL1013:
 14717              	.LBB9883:
 14718              	.LBI9883:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 14719              		.loc 3 495 2 is_stmt 1 view .LVU3769
 14720              	.LBB9884:
 14721              	.LBI9884:
 14722              		.loc 4 151 2 view .LVU3770
 14723              	.LBB9885:
 14724              	.LBI9885:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 14725              		.loc 2 657 7 view .LVU3771
 14726              	.LBB9886:
 14727              	.LBI9886:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14728              		.loc 2 229 7 view .LVU3772
 14729              	.LBB9887:
 14730              	.LBB9888:
 14731              	.LBI9888:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14732              		.loc 2 221 7 view .LVU3773
 14733              	.LBB9889:
 14734              	.LBI9889:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14735              		.loc 2 186 7 view .LVU3774
 14736              	.LBB9890:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14737              		.loc 2 187 28 is_stmt 0 view .LVU3775
 14738 00a6 53F8180C 		ldr	r0, [r3, #-24]
 14739              	.LVL1014:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14740              		.loc 2 187 28 view .LVU3776
 14741              	.LBE9890:
 14742              	.LBE9889:
 14743              	.LBB9891:
 14744              	.LBI9891:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14745              		.loc 2 200 7 is_stmt 1 view .LVU3777
 14746              	.LBB9892:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14747              		.loc 2 203 57 is_stmt 0 view .LVU3778
ARM GAS  /tmp/ccL95Edz.s 			page 581


 14748 00aa 103B     		subs	r3, r3, #16
 14749              	.LVL1015:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14750              		.loc 2 203 57 view .LVU3779
 14751              	.LBE9892:
 14752              	.LBE9891:
 14753              	.LBE9888:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14754              		.loc 2 231 2 view .LVU3780
 14755 00ac 9842     		cmp	r0, r3
 14756 00ae 01D0     		beq	.L319
 14757              	.LVL1016:
 14758              	.LBB9893:
 14759              	.LBI9893:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 14760              		.loc 2 236 7 is_stmt 1 view .LVU3781
 14761              	.LBB9894:
 14762              	.LBB9895:
 14763              	.LBI9895:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14764              		.loc 3 469 7 view .LVU3782
 14765              	.LBB9896:
 14766              	.LBI9896:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 14767              		.loc 4 119 7 view .LVU3783
 14768              	.LBB9897:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14769              		.loc 4 128 19 is_stmt 0 view .LVU3784
 14770 00b0 FFF7FEFF 		bl	_ZdlPv
 14771              	.LVL1017:
 14772              	.L319:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14773              		.loc 4 128 19 view .LVU3785
 14774              	.LBE9897:
 14775              	.LBE9896:
 14776              	.LBE9895:
 14777              	.LBE9894:
 14778              	.LBE9893:
 14779              	.LBE9887:
 14780              	.LBE9886:
 14781              	.LBB9898:
 14782              	.LBI9898:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14783              		.loc 2 150 14 is_stmt 1 view .LVU3786
 14784              	.LBB9899:
 14785              	.LBI9899:
 14786              		.loc 5 153 7 view .LVU3787
 14787              	.LBB9900:
 14788              	.LBI9900:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14789              		.loc 4 89 7 view .LVU3788
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14790              		.loc 4 89 7 is_stmt 0 view .LVU3789
 14791              	.LBE9900:
 14792              	.LBE9899:
 14793              	.LBE9898:
 14794              	.LBE9885:
ARM GAS  /tmp/ccL95Edz.s 			page 582


 14795              	.LBE9884:
 14796              	.LBE9883:
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 14797              		.loc 10 180 5 view .LVU3790
 14798 00b4 3846     		mov	r0, r7
 14799 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 14800              	.LVL1018:
 14801              	.L325:
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 14802              		.loc 10 180 5 view .LVU3791
 14803 00ba 00BF     		.align	2
 14804              	.L324:
 14805 00bc ABAAAAAA 		.word	-1431655765
 14806              		.cfi_endproc
 14807              	.LFE3918:
 14809              		.section	.text._ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcES
 14810              		.align	1
 14811              		.global	_ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES
 14812              		.syntax unified
 14813              		.thumb
 14814              		.thumb_func
 14815              		.fpu fpv4-sp-d16
 14817              	_ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:
 14818              	.LVL1019:
 14819              	.LFB3398:
 139:alohal/filesystem/filesystem.cpp **** 
 140:alohal/filesystem/filesystem.cpp **** vector<string> Filesystem::Create_entry_path(string filename) const {
 141:alohal/filesystem/filesystem.cpp ****     vector<string> path;
 142:alohal/filesystem/filesystem.cpp ****     filename = Absolute_path(filename);
 143:alohal/filesystem/filesystem.cpp ****     path.emplace_back("/");
 144:alohal/filesystem/filesystem.cpp ****     filename.erase(0, 1);
 145:alohal/filesystem/filesystem.cpp ****     unsigned int position = filename.find("/");
 146:alohal/filesystem/filesystem.cpp ****     // Break string to part divided by /
 147:alohal/filesystem/filesystem.cpp ****     while (position != string::npos) {
 148:alohal/filesystem/filesystem.cpp ****         path.emplace_back(filename.substr(0, position));
 149:alohal/filesystem/filesystem.cpp ****         filename.erase(0, position + 1);
 150:alohal/filesystem/filesystem.cpp ****         if (filename.length() > 0) {
 151:alohal/filesystem/filesystem.cpp ****             position = filename.find("/");
 152:alohal/filesystem/filesystem.cpp ****         } else {
 153:alohal/filesystem/filesystem.cpp ****             break;
 154:alohal/filesystem/filesystem.cpp ****         }
 155:alohal/filesystem/filesystem.cpp ****     }
 156:alohal/filesystem/filesystem.cpp ****     // Add filename to end
 157:alohal/filesystem/filesystem.cpp ****     if (filename.length() > 0) {
 158:alohal/filesystem/filesystem.cpp ****         path.emplace_back(filename);
 159:alohal/filesystem/filesystem.cpp ****     }
 160:alohal/filesystem/filesystem.cpp **** 
 161:alohal/filesystem/filesystem.cpp ****     // Post procesing of path, remove ., when used .. go back one layer
 162:alohal/filesystem/filesystem.cpp ****     for (uint i = 0; i < path.size(); i++) {
 163:alohal/filesystem/filesystem.cpp ****         if (path[i] == ".") { // case: /test/. -> /test
 164:alohal/filesystem/filesystem.cpp ****             path.erase(path.begin() + i);
 165:alohal/filesystem/filesystem.cpp ****             i--;
 166:alohal/filesystem/filesystem.cpp ****         } else if (path[i] == "..") {
 167:alohal/filesystem/filesystem.cpp ****             if (i > 1) { // case: /test/.. -> /
 168:alohal/filesystem/filesystem.cpp ****                 path.erase(path.begin() + i - 1);
 169:alohal/filesystem/filesystem.cpp ****                 path.erase(path.begin() + i);
 170:alohal/filesystem/filesystem.cpp ****                 i -= 2;
ARM GAS  /tmp/ccL95Edz.s 			page 583


 171:alohal/filesystem/filesystem.cpp ****             } else { // case: /.. -> /
 172:alohal/filesystem/filesystem.cpp ****                 path.erase(path.begin() + i);
 173:alohal/filesystem/filesystem.cpp ****                 i--;
 174:alohal/filesystem/filesystem.cpp ****             }
 175:alohal/filesystem/filesystem.cpp ****         }
 176:alohal/filesystem/filesystem.cpp ****     }
 177:alohal/filesystem/filesystem.cpp **** 
 178:alohal/filesystem/filesystem.cpp ****     return path;
 179:alohal/filesystem/filesystem.cpp **** } // Filesystem::Create_entry_path
 180:alohal/filesystem/filesystem.cpp **** 
 181:alohal/filesystem/filesystem.cpp **** bool Filesystem::Entry_exists(string filename) const {
 182:alohal/filesystem/filesystem.cpp ****     return Entry_exists(Create_entry_path(filename));
 183:alohal/filesystem/filesystem.cpp **** }
 184:alohal/filesystem/filesystem.cpp **** 
 185:alohal/filesystem/filesystem.cpp **** bool Filesystem::Entry_exists(vector<string> path) const {
 186:alohal/filesystem/filesystem.cpp ****     FS_entry *target = Get_entry(path);
 187:alohal/filesystem/filesystem.cpp ****     if (target != nullptr) {
 188:alohal/filesystem/filesystem.cpp ****         return true;
 189:alohal/filesystem/filesystem.cpp ****     }
 190:alohal/filesystem/filesystem.cpp ****     return false;
 191:alohal/filesystem/filesystem.cpp **** }
 192:alohal/filesystem/filesystem.cpp **** 
 193:alohal/filesystem/filesystem.cpp **** FS_entry * Filesystem::Get_entry(string filename) const {
 194:alohal/filesystem/filesystem.cpp ****     return Get_entry(Create_entry_path(filename));
 195:alohal/filesystem/filesystem.cpp **** }
 196:alohal/filesystem/filesystem.cpp **** 
 197:alohal/filesystem/filesystem.cpp **** FS_entry * Filesystem::Get_entry(vector<string> path) const {
 14820              		.loc 17 197 61 is_stmt 1 view -0
 14821              		.cfi_startproc
 14822              		@ args = 0, pretend = 0, frame = 96
 14823              		@ frame_needed = 0, uses_anonymous_args = 0
 14824              		.loc 17 197 61 is_stmt 0 view .LVU3793
 14825 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 14826              	.LCFI54:
 14827              		.cfi_def_cfa_offset 32
 14828              		.cfi_offset 4, -32
 14829              		.cfi_offset 5, -28
 14830              		.cfi_offset 6, -24
 14831              		.cfi_offset 7, -20
 14832              		.cfi_offset 8, -16
 14833              		.cfi_offset 9, -12
 14834              		.cfi_offset 10, -8
 14835              		.cfi_offset 14, -4
 14836 0004 98B0     		sub	sp, sp, #96
 14837              	.LCFI55:
 14838              		.cfi_def_cfa_offset 128
 14839 0006 0446     		mov	r4, r0
 14840 0008 0D46     		mov	r5, r1
 198:alohal/filesystem/filesystem.cpp ****     if (path.front() == "/" and root != nullptr and path.size() == 1) {
 14841              		.loc 17 198 5 is_stmt 1 view .LVU3794
 14842              	.LVL1020:
 14843              	.LBB10124:
 14844              	.LBI10124:
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 14845              		.loc 11 1118 7 view .LVU3795
 14846              	.LBB10125:
 14847              	.LBI10125:
ARM GAS  /tmp/ccL95Edz.s 			page 584


 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 14848              		.loc 11 808 7 view .LVU3796
 14849              	.LBB10126:
 14850              	.LBI10126:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14851              		.loc 13 806 7 view .LVU3797
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14852              		.loc 13 806 7 is_stmt 0 view .LVU3798
 14853              	.LBE10126:
 14854              	.LBE10125:
 14855              	.LBE10124:
 14856              	.LBB10127:
 14857              	.LBI10127:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 14858              		.loc 2 6175 5 is_stmt 1 view .LVU3799
 14859              	.LBB10128:
 14860              		.loc 2 6177 35 is_stmt 0 view .LVU3800
 14861 000a 5849     		ldr	r1, .L345
 14862              	.LVL1021:
 14863              		.loc 2 6177 35 view .LVU3801
 14864 000c 2868     		ldr	r0, [r5]
 14865              	.LVL1022:
 14866              		.loc 2 6177 35 view .LVU3802
 14867 000e FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 14868              	.LVL1023:
 14869              		.loc 2 6177 35 view .LVU3803
 14870              	.LBE10128:
 14871              	.LBE10127:
 14872              		.loc 17 198 49 view .LVU3804
 14873 0012 38B9     		cbnz	r0, .L327
 14874              		.loc 17 198 33 discriminator 1 view .LVU3805
 14875 0014 2668     		ldr	r6, [r4]
 14876              		.loc 17 198 29 discriminator 1 view .LVU3806
 14877 0016 2EB1     		cbz	r6, .L327
 14878              	.LVL1024:
 14879              	.LBB10129:
 14880              	.LBI10129:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 14881              		.loc 11 915 7 is_stmt 1 view .LVU3807
 14882              	.LBB10130:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 14883              		.loc 11 916 40 is_stmt 0 view .LVU3808
 14884 0018 6B68     		ldr	r3, [r5, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 14885              		.loc 11 916 66 view .LVU3809
 14886 001a 2A68     		ldr	r2, [r5]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 14887              		.loc 11 916 50 view .LVU3810
 14888 001c 9B1A     		subs	r3, r3, r2
 14889              	.LVL1025:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 14890              		.loc 11 916 50 view .LVU3811
 14891              	.LBE10130:
 14892              	.LBE10129:
 14893              		.loc 17 198 49 view .LVU3812
 14894 001e 182B     		cmp	r3, #24
 14895 0020 00F09E80 		beq	.L326
ARM GAS  /tmp/ccL95Edz.s 			page 585


 14896              	.L327:
 199:alohal/filesystem/filesystem.cpp ****         // Root handling
 200:alohal/filesystem/filesystem.cpp ****         return root;
 201:alohal/filesystem/filesystem.cpp ****     }
 202:alohal/filesystem/filesystem.cpp ****     path.erase(path.begin()); // Remove /
 14897              		.loc 17 202 5 is_stmt 1 discriminator 6 view .LVU3813
 14898              	.LVL1026:
 14899              	.LBB10131:
 14900              	.LBI10131:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 14901              		.loc 11 808 7 discriminator 6 view .LVU3814
 14902              	.LBB10132:
 14903              	.LBI10132:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14904              		.loc 13 806 7 discriminator 6 view .LVU3815
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14905              		.loc 13 806 7 is_stmt 0 discriminator 6 view .LVU3816
 14906              	.LBE10132:
 14907              	.LBE10131:
 14908              	.LBB10133:
 14909              	.LBI10133:
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
 14910              		.loc 13 811 9 is_stmt 1 discriminator 6 view .LVU3817
 14911              	.LBB10134:
 14912              	.LBI10134:
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 14913              		.loc 13 871 7 discriminator 6 view .LVU3818
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 14914              		.loc 13 871 7 is_stmt 0 discriminator 6 view .LVU3819
 14915              	.LBE10134:
 14916              	.LBE10133:
 14917              	.LBB10135:
 14918              	.LBI10135:
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
 14919              		.loc 11 1427 7 is_stmt 1 discriminator 6 view .LVU3820
 14920              	.LBB10136:
 14921              	.LBB10137:
 14922              	.LBI10137:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 14923              		.loc 11 808 7 discriminator 6 view .LVU3821
 14924              	.LBB10138:
 14925              	.LBI10138:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14926              		.loc 13 806 7 discriminator 6 view .LVU3822
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14927              		.loc 13 806 7 is_stmt 0 discriminator 6 view .LVU3823
 14928              	.LBE10138:
 14929              	.LBE10137:
 14930              	.LBB10139:
 14931              	.LBI10139:
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 14932              		.loc 11 881 7 is_stmt 1 discriminator 6 view .LVU3824
 14933              	.LBB10140:
 14934              	.LBI10140:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14935              		.loc 13 806 7 discriminator 6 view .LVU3825
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  /tmp/ccL95Edz.s 			page 586


 14936              		.loc 13 806 7 is_stmt 0 discriminator 6 view .LVU3826
 14937              	.LBE10140:
 14938              	.LBE10139:
 14939              	.LBB10141:
 14940              	.LBI10141:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 14941              		.loc 13 859 7 is_stmt 1 discriminator 6 view .LVU3827
 14942              	.LBB10142:
 14943              	.LBB10143:
 14944              	.LBI10143:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14945              		.loc 13 806 7 discriminator 6 view .LVU3828
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 14946              		.loc 13 806 7 is_stmt 0 discriminator 6 view .LVU3829
 14947              	.LBE10143:
 14948              	.LBE10142:
 14949              	.LBE10141:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 14950              		.loc 11 1428 58 discriminator 6 view .LVU3830
 14951 0024 2968     		ldr	r1, [r5]
 14952 0026 2846     		mov	r0, r5
 14953 0028 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx1
 14954              	.LVL1027:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 14955              		.loc 11 1428 58 discriminator 6 view .LVU3831
 14956              	.LBE10136:
 14957              	.LBE10135:
 203:alohal/filesystem/filesystem.cpp ****     Directory *actual = root;
 14958              		.loc 17 203 5 is_stmt 1 discriminator 6 view .LVU3832
 14959              		.loc 17 203 16 is_stmt 0 discriminator 6 view .LVU3833
 14960 002c 2668     		ldr	r6, [r4]
 14961              	.LVL1028:
 204:alohal/filesystem/filesystem.cpp ****     for (uint i = 0; i < path.size(); i++) {
 14962              		.loc 17 204 5 is_stmt 1 discriminator 6 view .LVU3834
 14963              	.LBB10144:
 14964              		.loc 17 204 15 is_stmt 0 discriminator 6 view .LVU3835
 14965 002e 0024     		movs	r4, #0
 14966              	.LVL1029:
 14967              		.loc 17 204 15 discriminator 6 view .LVU3836
 14968 0030 3EE0     		b	.L338
 14969              	.LVL1030:
 14970              	.L344:
 14971              	.LBB10145:
 14972              	.LBB10146:
 14973              	.LBB10147:
 14974              	.LBI10147:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 14975              		.loc 2 2312 7 is_stmt 1 view .LVU3837
 14976              	.LBB10148:
 14977              	.LBI10148:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14978              		.loc 2 186 7 view .LVU3838
 14979              	.LBB10149:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14980              		.loc 2 187 28 is_stmt 0 view .LVU3839
 14981 0032 59F80800 		ldr	r0, [r9, r8]
 14982              	.LVL1031:
ARM GAS  /tmp/ccL95Edz.s 			page 587


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14983              		.loc 2 187 28 view .LVU3840
 14984              	.LBE10149:
 14985              	.LBE10148:
 14986              	.LBE10147:
 14987              	.LBB10150:
 14988              	.LBI10150:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 14989              		.loc 2 2312 7 is_stmt 1 view .LVU3841
 14990              	.LBB10151:
 14991              	.LBI10151:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14992              		.loc 2 186 7 view .LVU3842
 14993              	.LBB10152:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14994              		.loc 2 187 28 is_stmt 0 view .LVU3843
 14995 0036 51F8181C 		ldr	r1, [r1, #-24]
 14996              	.LVL1032:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14997              		.loc 2 187 28 view .LVU3844
 14998              	.LBE10152:
 14999              	.LBE10151:
 15000              	.LBE10150:
 15001              	.LBB10153:
 15002              	.LBI10153:
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15003              		.loc 8 315 7 is_stmt 1 view .LVU3845
 15004              	.LBB10154:
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 15005              		.loc 8 317 2 view .LVU3846
 15006 003a 1AB1     		cbz	r2, .L332
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 15007              		.loc 8 320 2 view .LVU3847
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 15008              		.loc 8 325 2 view .LVU3848
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 15009              		.loc 8 325 25 is_stmt 0 view .LVU3849
 15010 003c FFF7FEFF 		bl	memcmp
 15011              	.LVL1033:
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 15012              		.loc 8 325 25 view .LVU3850
 15013              	.LBE10154:
 15014              	.LBE10153:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 15015              		.loc 2 6152 8 view .LVU3851
 15016 0040 0028     		cmp	r0, #0
 15017 0042 73D1     		bne	.L341
 15018              	.L332:
 15019              	.LVL1034:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 15020              		.loc 2 6152 8 view .LVU3852
 15021              	.LBE10146:
 15022              	.LBE10145:
 205:alohal/filesystem/filesystem.cpp ****         if (actual->Exists(path[i])) {
 206:alohal/filesystem/filesystem.cpp ****             if ((i == (path.size() - 1)) && (path[i] == path.back())) {
 15023              		.loc 17 206 42 view .LVU3853
 15024 0044 002F     		cmp	r7, #0
ARM GAS  /tmp/ccL95Edz.s 			page 588


 15025 0046 73D1     		bne	.L333
 15026              	.L331:
 207:alohal/filesystem/filesystem.cpp ****                 // Entry found
 208:alohal/filesystem/filesystem.cpp ****                 return actual->Get_entry(path[i]);
 209:alohal/filesystem/filesystem.cpp ****             } else if (actual->Get_entry(path[i])->Type_of() == FS_entry::Type::Directory) {
 15027              		.loc 17 209 20 is_stmt 1 discriminator 4 view .LVU3854
 15028              	.LVL1035:
 15029              	.LBB10160:
 15030              	.LBI10160:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 15031              		.loc 11 1040 7 discriminator 4 view .LVU3855
 15032              	.LBB10161:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15033              		.loc 11 1043 39 is_stmt 0 discriminator 4 view .LVU3856
 15034 0048 09EB0803 		add	r3, r9, r8
 15035              	.LVL1036:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15036              		.loc 11 1043 39 discriminator 4 view .LVU3857
 15037              	.LBE10161:
 15038              	.LBE10160:
 15039              	.LBB10162:
 15040              	.LBI10162:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 15041              		.loc 2 448 7 is_stmt 1 discriminator 4 view .LVU3858
 15042              	.LBB10163:
 15043              	.LBB10164:
 15044              	.LBB10165:
 15045              	.LBI10165:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15046              		.loc 2 190 7 discriminator 4 view .LVU3859
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15047              		.loc 2 190 7 is_stmt 0 discriminator 4 view .LVU3860
 15048              	.LBE10165:
 15049              	.LBB10166:
 15050              	.LBI10166:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15051              		.loc 2 290 7 is_stmt 1 discriminator 4 view .LVU3861
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15052              		.loc 2 290 7 is_stmt 0 discriminator 4 view .LVU3862
 15053              	.LBE10166:
 15054              	.LBB10167:
 15055              	.LBI10167:
 15056              		.loc 19 97 19 is_stmt 1 discriminator 4 view .LVU3863
 15057              	.LBB10168:
 15058              	.LBI10168:
 15059              		.loc 3 514 7 discriminator 4 view .LVU3864
 15060              	.LBB10169:
 15061              	.LBI10169:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15062              		.loc 5 141 7 discriminator 4 view .LVU3865
 15063              	.LBB10170:
 15064              	.LBI10170:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15065              		.loc 4 83 7 discriminator 4 view .LVU3866
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15066              		.loc 4 83 7 is_stmt 0 discriminator 4 view .LVU3867
 15067              	.LBE10170:
ARM GAS  /tmp/ccL95Edz.s 			page 589


 15068              	.LBE10169:
 15069              	.LBE10168:
 15070              	.LBE10167:
 15071              	.LBB10171:
 15072              	.LBI10171:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 15073              		.loc 2 159 2 is_stmt 1 discriminator 4 view .LVU3868
 15074              	.LBB10172:
 15075              	.LBB10173:
 15076              	.LBB10174:
 15077              	.LBI10174:
 15078              		.loc 9 99 5 discriminator 4 view .LVU3869
 15079              		.loc 9 99 5 is_stmt 0 discriminator 4 view .LVU3870
 15080              	.LBE10174:
 15081              	.LBB10175:
 15082              	.LBI10175:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15083              		.loc 5 141 7 is_stmt 1 discriminator 4 view .LVU3871
 15084              	.LBB10176:
 15085              	.LBI10176:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15086              		.loc 4 83 7 discriminator 4 view .LVU3872
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15087              		.loc 4 83 7 is_stmt 0 discriminator 4 view .LVU3873
 15088              	.LBE10176:
 15089              	.LBE10175:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15090              		.loc 2 160 46 discriminator 4 view .LVU3874
 15091 004c 0EAF     		add	r7, sp, #56
 15092              	.LVL1037:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15093              		.loc 2 160 46 discriminator 4 view .LVU3875
 15094 004e 0C97     		str	r7, [sp, #48]
 15095              	.LVL1038:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15096              		.loc 2 160 46 discriminator 4 view .LVU3876
 15097              	.LBE10173:
 15098              	.LBE10172:
 15099              	.LBE10171:
 15100              	.LBB10177:
 15101              	.LBI10177:
 15102              		.loc 5 153 7 is_stmt 1 discriminator 4 view .LVU3877
 15103              	.LBB10178:
 15104              	.LBI10178:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15105              		.loc 4 89 7 discriminator 4 view .LVU3878
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15106              		.loc 4 89 7 is_stmt 0 discriminator 4 view .LVU3879
 15107              	.LBE10178:
 15108              	.LBE10177:
 15109              	.LBB10179:
 15110              	.LBI10179:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15111              		.loc 2 186 7 is_stmt 1 discriminator 4 view .LVU3880
 15112              	.LBB10180:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15113              		.loc 2 187 28 is_stmt 0 discriminator 4 view .LVU3881
ARM GAS  /tmp/ccL95Edz.s 			page 590


 15114 0050 59F80810 		ldr	r1, [r9, r8]
 15115              	.LVL1039:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15116              		.loc 2 187 28 discriminator 4 view .LVU3882
 15117              	.LBE10180:
 15118              	.LBE10179:
 15119              	.LBB10181:
 15120              	.LBI10181:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15121              		.loc 2 186 7 is_stmt 1 discriminator 4 view .LVU3883
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15122              		.loc 2 186 7 is_stmt 0 discriminator 4 view .LVU3884
 15123              	.LBE10181:
 15124              	.LBB10182:
 15125              	.LBI10182:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15126              		.loc 2 936 7 is_stmt 1 discriminator 4 view .LVU3885
 15127              	.LBB10183:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15128              		.loc 2 937 16 is_stmt 0 discriminator 4 view .LVU3886
 15129 0054 5A68     		ldr	r2, [r3, #4]
 15130              	.LVL1040:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15131              		.loc 2 937 16 discriminator 4 view .LVU3887
 15132              	.LBE10183:
 15133              	.LBE10182:
 15134              	.LBB10184:
 15135              	.LBI10184:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 15136              		.loc 2 263 9 is_stmt 1 discriminator 4 view .LVU3888
 15137              	.LBB10185:
 15138              	.LBB10186:
 15139              	.LBI10186:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 15140              		.loc 2 243 9 discriminator 4 view .LVU3889
 15141              	.LBB10187:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15142              		.loc 2 247 11 is_stmt 0 discriminator 4 view .LVU3890
 15143 0056 4FF00003 		mov	r3, #0
 15144              	.LVL1041:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15145              		.loc 2 247 11 discriminator 4 view .LVU3891
 15146 005a 0A44     		add	r2, r2, r1
 15147              	.LVL1042:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15148              		.loc 2 247 11 discriminator 4 view .LVU3892
 15149 005c 0CA8     		add	r0, sp, #48
 15150              	.LVL1043:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15151              		.loc 2 247 11 discriminator 4 view .LVU3893
 15152 005e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 15153              	.LVL1044:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15154              		.loc 2 247 11 discriminator 4 view .LVU3894
 15155              	.LBE10187:
 15156              	.LBE10186:
 15157              	.LBE10185:
ARM GAS  /tmp/ccL95Edz.s 			page 591


 15158              	.LBE10184:
 15159              	.LBE10164:
 15160              	.LBE10163:
 15161              	.LBE10162:
 15162              		.loc 17 209 59 discriminator 4 view .LVU3895
 15163 0062 0CA9     		add	r1, sp, #48
 15164 0064 3046     		mov	r0, r6
 15165 0066 FFF7FEFF 		bl	_ZNK9Directory9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 15166              	.LVL1045:
 15167              	.LBB10188:
 15168              	.LBI10188:
  66:alohal/filesystem/entry.hpp **** 
 15169              		.loc 1 66 23 is_stmt 1 discriminator 4 view .LVU3896
 15170              	.LBB10189:
  66:alohal/filesystem/entry.hpp **** 
 15171              		.loc 1 66 34 discriminator 4 view .LVU3897
  66:alohal/filesystem/entry.hpp **** 
 15172              		.loc 1 66 41 is_stmt 0 discriminator 4 view .LVU3898
 15173 006a D0F80490 		ldr	r9, [r0, #4]
 15174              	.LVL1046:
  66:alohal/filesystem/entry.hpp **** 
 15175              		.loc 1 66 41 discriminator 4 view .LVU3899
 15176              	.LBE10189:
 15177              	.LBE10188:
 15178              	.LBB10190:
 15179              	.LBI10190:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 15180              		.loc 2 657 7 is_stmt 1 discriminator 4 view .LVU3900
 15181              	.LBB10191:
 15182              	.LBI10191:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15183              		.loc 2 229 7 discriminator 4 view .LVU3901
 15184              	.LBB10192:
 15185              	.LBB10193:
 15186              	.LBI10193:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 15187              		.loc 2 221 7 discriminator 4 view .LVU3902
 15188              	.LBB10194:
 15189              	.LBI10194:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15190              		.loc 2 186 7 discriminator 4 view .LVU3903
 15191              	.LBB10195:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15192              		.loc 2 187 28 is_stmt 0 discriminator 4 view .LVU3904
 15193 006e 0C98     		ldr	r0, [sp, #48]
 15194              	.LVL1047:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15195              		.loc 2 187 28 discriminator 4 view .LVU3905
 15196              	.LBE10195:
 15197              	.LBE10194:
 15198              	.LBB10196:
 15199              	.LBI10196:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15200              		.loc 2 200 7 is_stmt 1 discriminator 4 view .LVU3906
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15201              		.loc 2 200 7 is_stmt 0 discriminator 4 view .LVU3907
 15202              	.LBE10196:
ARM GAS  /tmp/ccL95Edz.s 			page 592


 15203              	.LBE10193:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15204              		.loc 2 231 2 discriminator 4 view .LVU3908
 15205 0070 B842     		cmp	r0, r7
 15206 0072 01D0     		beq	.L335
 15207              	.LVL1048:
 15208              	.LBB10197:
 15209              	.LBI10197:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15210              		.loc 2 236 7 is_stmt 1 view .LVU3909
 15211              	.LBB10198:
 15212              	.LBB10199:
 15213              	.LBI10199:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15214              		.loc 3 469 7 view .LVU3910
 15215              	.LBB10200:
 15216              	.LBI10200:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15217              		.loc 4 119 7 view .LVU3911
 15218              	.LBB10201:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15219              		.loc 4 128 19 is_stmt 0 view .LVU3912
 15220 0074 FFF7FEFF 		bl	_ZdlPv
 15221              	.LVL1049:
 15222              	.L335:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15223              		.loc 4 128 19 view .LVU3913
 15224              	.LBE10201:
 15225              	.LBE10200:
 15226              	.LBE10199:
 15227              	.LBE10198:
 15228              	.LBE10197:
 15229              	.LBE10192:
 15230              	.LBE10191:
 15231              	.LBB10202:
 15232              	.LBI10202:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15233              		.loc 2 150 14 is_stmt 1 view .LVU3914
 15234              	.LBB10203:
 15235              	.LBI10203:
 15236              		.loc 5 153 7 view .LVU3915
 15237              	.LBB10204:
 15238              	.LBI10204:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15239              		.loc 4 89 7 view .LVU3916
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15240              		.loc 4 89 7 is_stmt 0 view .LVU3917
 15241              	.LBE10204:
 15242              	.LBE10203:
 15243              	.LBE10202:
 15244              	.LBE10190:
 15245              		.loc 17 209 20 view .LVU3918
 15246 0078 B9F1010F 		cmp	r9, #1
 15247 007c 74D1     		bne	.L342
 210:alohal/filesystem/filesystem.cpp ****                 // Continue deepper
 211:alohal/filesystem/filesystem.cpp ****                 actual = static_cast<Directory *>(actual->Get_entry(path[i]));
 15248              		.loc 17 211 17 is_stmt 1 view .LVU3919
ARM GAS  /tmp/ccL95Edz.s 			page 593


 15249              	.LVL1050:
 15250              	.LBB10205:
 15251              	.LBI10205:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 15252              		.loc 11 1040 7 view .LVU3920
 15253              	.LBB10206:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15254              		.loc 11 1043 25 is_stmt 0 view .LVU3921
 15255 007e 2B68     		ldr	r3, [r5]
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15256              		.loc 11 1043 39 view .LVU3922
 15257 0080 03EB0802 		add	r2, r3, r8
 15258              	.LVL1051:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15259              		.loc 11 1043 39 view .LVU3923
 15260              	.LBE10206:
 15261              	.LBE10205:
 15262              	.LBB10207:
 15263              	.LBI10207:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 15264              		.loc 2 448 7 is_stmt 1 view .LVU3924
 15265              	.LBB10208:
 15266              	.LBB10209:
 15267              	.LBB10210:
 15268              	.LBI10210:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15269              		.loc 2 190 7 view .LVU3925
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15270              		.loc 2 190 7 is_stmt 0 view .LVU3926
 15271              	.LBE10210:
 15272              	.LBB10211:
 15273              	.LBI10211:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15274              		.loc 2 290 7 is_stmt 1 view .LVU3927
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15275              		.loc 2 290 7 is_stmt 0 view .LVU3928
 15276              	.LBE10211:
 15277              	.LBB10212:
 15278              	.LBI10212:
 15279              		.loc 19 97 19 is_stmt 1 view .LVU3929
 15280              	.LBB10213:
 15281              	.LBI10213:
 15282              		.loc 3 514 7 view .LVU3930
 15283              	.LBB10214:
 15284              	.LBI10214:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15285              		.loc 5 141 7 view .LVU3931
 15286              	.LBB10215:
 15287              	.LBI10215:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15288              		.loc 4 83 7 view .LVU3932
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15289              		.loc 4 83 7 is_stmt 0 view .LVU3933
 15290              	.LBE10215:
 15291              	.LBE10214:
 15292              	.LBE10213:
 15293              	.LBE10212:
ARM GAS  /tmp/ccL95Edz.s 			page 594


 15294              	.LBB10216:
 15295              	.LBI10216:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 15296              		.loc 2 159 2 is_stmt 1 view .LVU3934
 15297              	.LBB10217:
 15298              	.LBB10218:
 15299              	.LBB10219:
 15300              	.LBI10219:
 15301              		.loc 9 99 5 view .LVU3935
 15302              		.loc 9 99 5 is_stmt 0 view .LVU3936
 15303              	.LBE10219:
 15304              	.LBB10220:
 15305              	.LBI10220:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15306              		.loc 5 141 7 is_stmt 1 view .LVU3937
 15307              	.LBB10221:
 15308              	.LBI10221:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15309              		.loc 4 83 7 view .LVU3938
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15310              		.loc 4 83 7 is_stmt 0 view .LVU3939
 15311              	.LBE10221:
 15312              	.LBE10220:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15313              		.loc 2 160 46 view .LVU3940
 15314 0084 14AF     		add	r7, sp, #80
 15315              	.LVL1052:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15316              		.loc 2 160 46 view .LVU3941
 15317 0086 1297     		str	r7, [sp, #72]
 15318              	.LVL1053:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15319              		.loc 2 160 46 view .LVU3942
 15320              	.LBE10218:
 15321              	.LBE10217:
 15322              	.LBE10216:
 15323              	.LBB10222:
 15324              	.LBI10222:
 15325              		.loc 5 153 7 is_stmt 1 view .LVU3943
 15326              	.LBB10223:
 15327              	.LBI10223:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15328              		.loc 4 89 7 view .LVU3944
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15329              		.loc 4 89 7 is_stmt 0 view .LVU3945
 15330              	.LBE10223:
 15331              	.LBE10222:
 15332              	.LBB10224:
 15333              	.LBI10224:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15334              		.loc 2 186 7 is_stmt 1 view .LVU3946
 15335              	.LBB10225:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15336              		.loc 2 187 28 is_stmt 0 view .LVU3947
 15337 0088 53F80810 		ldr	r1, [r3, r8]
 15338              	.LVL1054:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 595


 15339              		.loc 2 187 28 view .LVU3948
 15340              	.LBE10225:
 15341              	.LBE10224:
 15342              	.LBB10226:
 15343              	.LBI10226:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15344              		.loc 2 186 7 is_stmt 1 view .LVU3949
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15345              		.loc 2 186 7 is_stmt 0 view .LVU3950
 15346              	.LBE10226:
 15347              	.LBB10227:
 15348              	.LBI10227:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15349              		.loc 2 936 7 is_stmt 1 view .LVU3951
 15350              	.LBB10228:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15351              		.loc 2 937 16 is_stmt 0 view .LVU3952
 15352 008c 5268     		ldr	r2, [r2, #4]
 15353              	.LVL1055:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15354              		.loc 2 937 16 view .LVU3953
 15355              	.LBE10228:
 15356              	.LBE10227:
 15357              	.LBB10229:
 15358              	.LBI10229:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 15359              		.loc 2 263 9 is_stmt 1 view .LVU3954
 15360              	.LBB10230:
 15361              	.LBB10231:
 15362              	.LBI10231:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 15363              		.loc 2 243 9 view .LVU3955
 15364              	.LBB10232:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15365              		.loc 2 247 11 is_stmt 0 view .LVU3956
 15366 008e 4FF00003 		mov	r3, #0
 15367              	.LVL1056:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15368              		.loc 2 247 11 view .LVU3957
 15369 0092 0A44     		add	r2, r2, r1
 15370              	.LVL1057:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15371              		.loc 2 247 11 view .LVU3958
 15372 0094 12A8     		add	r0, sp, #72
 15373              	.LVL1058:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15374              		.loc 2 247 11 view .LVU3959
 15375 0096 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 15376              	.LVL1059:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15377              		.loc 2 247 11 view .LVU3960
 15378              	.LBE10232:
 15379              	.LBE10231:
 15380              	.LBE10230:
 15381              	.LBE10229:
 15382              	.LBE10209:
 15383              	.LBE10208:
ARM GAS  /tmp/ccL95Edz.s 			page 596


 15384              	.LBE10207:
 15385              		.loc 17 211 68 view .LVU3961
 15386 009a 12A9     		add	r1, sp, #72
 15387 009c 3046     		mov	r0, r6
 15388 009e FFF7FEFF 		bl	_ZNK9Directory9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 15389              	.LVL1060:
 15390 00a2 0646     		mov	r6, r0
 15391              	.LVL1061:
 15392              	.LBB10233:
 15393              	.LBI10233:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 15394              		.loc 2 657 7 is_stmt 1 view .LVU3962
 15395              	.LBB10234:
 15396              	.LBI10234:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15397              		.loc 2 229 7 view .LVU3963
 15398              	.LBB10235:
 15399              	.LBB10236:
 15400              	.LBI10236:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 15401              		.loc 2 221 7 view .LVU3964
 15402              	.LBB10237:
 15403              	.LBI10237:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15404              		.loc 2 186 7 view .LVU3965
 15405              	.LBB10238:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15406              		.loc 2 187 28 is_stmt 0 view .LVU3966
 15407 00a4 1298     		ldr	r0, [sp, #72]
 15408              	.LVL1062:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15409              		.loc 2 187 28 view .LVU3967
 15410              	.LBE10238:
 15411              	.LBE10237:
 15412              	.LBB10239:
 15413              	.LBI10239:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15414              		.loc 2 200 7 is_stmt 1 view .LVU3968
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15415              		.loc 2 200 7 is_stmt 0 view .LVU3969
 15416              	.LBE10239:
 15417              	.LBE10236:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15418              		.loc 2 231 2 view .LVU3970
 15419 00a6 B842     		cmp	r0, r7
 15420 00a8 01D0     		beq	.L330
 15421              	.LVL1063:
 15422              	.LBB10240:
 15423              	.LBI10240:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15424              		.loc 2 236 7 is_stmt 1 view .LVU3971
 15425              	.LBB10241:
 15426              	.LBB10242:
 15427              	.LBI10242:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15428              		.loc 3 469 7 view .LVU3972
 15429              	.LBB10243:
ARM GAS  /tmp/ccL95Edz.s 			page 597


 15430              	.LBI10243:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15431              		.loc 4 119 7 view .LVU3973
 15432              	.LBB10244:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15433              		.loc 4 128 19 is_stmt 0 view .LVU3974
 15434 00aa FFF7FEFF 		bl	_ZdlPv
 15435              	.LVL1064:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15436              		.loc 4 128 19 view .LVU3975
 15437              	.LBE10244:
 15438              	.LBE10243:
 15439              	.LBE10242:
 15440              	.LBE10241:
 15441              	.LBE10240:
 15442              	.LBE10235:
 15443              	.LBE10234:
 15444              	.LBB10245:
 15445              	.LBI10245:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15446              		.loc 2 150 14 is_stmt 1 view .LVU3976
 15447              	.LBB10246:
 15448              	.LBI10246:
 15449              		.loc 5 153 7 view .LVU3977
 15450              	.LBB10247:
 15451              	.LBI10247:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15452              		.loc 4 89 7 view .LVU3978
 15453              	.L330:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15454              		.loc 4 89 7 is_stmt 0 view .LVU3979
 15455              	.LBE10247:
 15456              	.LBE10246:
 15457              	.LBE10245:
 15458              	.LBE10233:
 204:alohal/filesystem/filesystem.cpp ****         if (actual->Exists(path[i])) {
 15459              		.loc 17 204 5 is_stmt 1 discriminator 2 view .LVU3980
 15460 00ae 0134     		adds	r4, r4, #1
 15461              	.LVL1065:
 15462              	.L338:
 204:alohal/filesystem/filesystem.cpp ****         if (actual->Exists(path[i])) {
 15463              		.loc 17 204 24 discriminator 1 view .LVU3981
 15464              	.LBB10248:
 15465              	.LBI10248:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15466              		.loc 11 915 7 discriminator 1 view .LVU3982
 15467              	.LBB10249:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15468              		.loc 11 916 40 is_stmt 0 discriminator 1 view .LVU3983
 15469 00b0 6B68     		ldr	r3, [r5, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15470              		.loc 11 916 66 discriminator 1 view .LVU3984
 15471 00b2 2968     		ldr	r1, [r5]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15472              		.loc 11 916 50 discriminator 1 view .LVU3985
 15473 00b4 5B1A     		subs	r3, r3, r1
 15474 00b6 DB10     		asrs	r3, r3, #3
ARM GAS  /tmp/ccL95Edz.s 			page 598


 15475 00b8 2D4A     		ldr	r2, .L345+4
 15476 00ba 02FB03F3 		mul	r3, r2, r3
 15477              	.LVL1066:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15478              		.loc 11 916 50 discriminator 1 view .LVU3986
 15479              	.LBE10249:
 15480              	.LBE10248:
 204:alohal/filesystem/filesystem.cpp ****         if (actual->Exists(path[i])) {
 15481              		.loc 17 204 24 discriminator 1 view .LVU3987
 15482 00be 9C42     		cmp	r4, r3
 15483 00c0 4DD2     		bcs	.L339
 205:alohal/filesystem/filesystem.cpp ****             if ((i == (path.size() - 1)) && (path[i] == path.back())) {
 15484              		.loc 17 205 9 is_stmt 1 view .LVU3988
 15485              	.LVL1067:
 15486              	.LBB10250:
 15487              	.LBI10250:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 15488              		.loc 11 1040 7 view .LVU3989
 15489              	.LBB10251:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15490              		.loc 11 1043 34 is_stmt 0 view .LVU3990
 15491 00c2 04EB4403 		add	r3, r4, r4, lsl #1
 15492 00c6 4FEAC308 		lsl	r8, r3, #3
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15493              		.loc 11 1043 39 view .LVU3991
 15494 00ca 01EBC303 		add	r3, r1, r3, lsl #3
 15495              	.LVL1068:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15496              		.loc 11 1043 39 view .LVU3992
 15497              	.LBE10251:
 15498              	.LBE10250:
 15499              	.LBB10252:
 15500              	.LBI10252:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 15501              		.loc 2 448 7 is_stmt 1 view .LVU3993
 15502              	.LBB10253:
 15503              	.LBB10254:
 15504              	.LBB10255:
 15505              	.LBI10255:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15506              		.loc 2 190 7 view .LVU3994
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15507              		.loc 2 190 7 is_stmt 0 view .LVU3995
 15508              	.LBE10255:
 15509              	.LBB10256:
 15510              	.LBI10256:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15511              		.loc 2 290 7 is_stmt 1 view .LVU3996
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15512              		.loc 2 290 7 is_stmt 0 view .LVU3997
 15513              	.LBE10256:
 15514              	.LBB10257:
 15515              	.LBI10257:
 15516              		.loc 19 97 19 is_stmt 1 view .LVU3998
 15517              	.LBB10258:
 15518              	.LBI10258:
 15519              		.loc 3 514 7 view .LVU3999
ARM GAS  /tmp/ccL95Edz.s 			page 599


 15520              	.LBB10259:
 15521              	.LBI10259:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15522              		.loc 5 141 7 view .LVU4000
 15523              	.LBB10260:
 15524              	.LBI10260:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15525              		.loc 4 83 7 view .LVU4001
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15526              		.loc 4 83 7 is_stmt 0 view .LVU4002
 15527              	.LBE10260:
 15528              	.LBE10259:
 15529              	.LBE10258:
 15530              	.LBE10257:
 15531              	.LBB10261:
 15532              	.LBI10261:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 15533              		.loc 2 159 2 is_stmt 1 view .LVU4003
 15534              	.LBB10262:
 15535              	.LBB10263:
 15536              	.LBB10264:
 15537              	.LBI10264:
 15538              		.loc 9 99 5 view .LVU4004
 15539              		.loc 9 99 5 is_stmt 0 view .LVU4005
 15540              	.LBE10264:
 15541              	.LBB10265:
 15542              	.LBI10265:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15543              		.loc 5 141 7 is_stmt 1 view .LVU4006
 15544              	.LBB10266:
 15545              	.LBI10266:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15546              		.loc 4 83 7 view .LVU4007
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15547              		.loc 4 83 7 is_stmt 0 view .LVU4008
 15548              	.LBE10266:
 15549              	.LBE10265:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15550              		.loc 2 160 46 view .LVU4009
 15551 00ce 0DF10809 		add	r9, sp, #8
 15552              	.LVL1069:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15553              		.loc 2 160 46 view .LVU4010
 15554 00d2 CDF80090 		str	r9, [sp]
 15555              	.LVL1070:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15556              		.loc 2 160 46 view .LVU4011
 15557              	.LBE10263:
 15558              	.LBE10262:
 15559              	.LBE10261:
 15560              	.LBB10267:
 15561              	.LBI10267:
 15562              		.loc 5 153 7 is_stmt 1 view .LVU4012
 15563              	.LBB10268:
 15564              	.LBI10268:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15565              		.loc 4 89 7 view .LVU4013
ARM GAS  /tmp/ccL95Edz.s 			page 600


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15566              		.loc 4 89 7 is_stmt 0 view .LVU4014
 15567              	.LBE10268:
 15568              	.LBE10267:
 15569              	.LBB10269:
 15570              	.LBI10269:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15571              		.loc 2 186 7 is_stmt 1 view .LVU4015
 15572              	.LBB10270:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15573              		.loc 2 187 28 is_stmt 0 view .LVU4016
 15574 00d6 51F80810 		ldr	r1, [r1, r8]
 15575              	.LVL1071:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15576              		.loc 2 187 28 view .LVU4017
 15577              	.LBE10270:
 15578              	.LBE10269:
 15579              	.LBB10271:
 15580              	.LBI10271:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15581              		.loc 2 186 7 is_stmt 1 view .LVU4018
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15582              		.loc 2 186 7 is_stmt 0 view .LVU4019
 15583              	.LBE10271:
 15584              	.LBB10272:
 15585              	.LBI10272:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15586              		.loc 2 936 7 is_stmt 1 view .LVU4020
 15587              	.LBB10273:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15588              		.loc 2 937 16 is_stmt 0 view .LVU4021
 15589 00da 5A68     		ldr	r2, [r3, #4]
 15590              	.LVL1072:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15591              		.loc 2 937 16 view .LVU4022
 15592              	.LBE10273:
 15593              	.LBE10272:
 15594              	.LBB10274:
 15595              	.LBI10274:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 15596              		.loc 2 263 9 is_stmt 1 view .LVU4023
 15597              	.LBB10275:
 15598              	.LBB10276:
 15599              	.LBI10276:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 15600              		.loc 2 243 9 view .LVU4024
 15601              	.LBB10277:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15602              		.loc 2 247 11 is_stmt 0 view .LVU4025
 15603 00dc 4FF00003 		mov	r3, #0
 15604              	.LVL1073:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15605              		.loc 2 247 11 view .LVU4026
 15606 00e0 0A44     		add	r2, r2, r1
 15607              	.LVL1074:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15608              		.loc 2 247 11 view .LVU4027
ARM GAS  /tmp/ccL95Edz.s 			page 601


 15609 00e2 6846     		mov	r0, sp
 15610 00e4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 15611              	.LVL1075:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15612              		.loc 2 247 11 view .LVU4028
 15613              	.LBE10277:
 15614              	.LBE10276:
 15615              	.LBE10275:
 15616              	.LBE10274:
 15617              	.LBE10254:
 15618              	.LBE10253:
 15619              	.LBE10252:
 205:alohal/filesystem/filesystem.cpp ****             if ((i == (path.size() - 1)) && (path[i] == path.back())) {
 15620              		.loc 17 205 27 view .LVU4029
 15621 00e8 6946     		mov	r1, sp
 15622 00ea 3046     		mov	r0, r6
 15623 00ec FFF7FEFF 		bl	_ZN9Directory6ExistsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 15624              	.LVL1076:
 15625 00f0 0746     		mov	r7, r0
 15626              	.LVL1077:
 15627              	.LBB10278:
 15628              	.LBI10278:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 15629              		.loc 2 657 7 is_stmt 1 view .LVU4030
 15630              	.LBB10279:
 15631              	.LBI10279:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15632              		.loc 2 229 7 view .LVU4031
 15633              	.LBB10280:
 15634              	.LBB10281:
 15635              	.LBI10281:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 15636              		.loc 2 221 7 view .LVU4032
 15637              	.LBB10282:
 15638              	.LBI10282:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15639              		.loc 2 186 7 view .LVU4033
 15640              	.LBB10283:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15641              		.loc 2 187 28 is_stmt 0 view .LVU4034
 15642 00f2 0098     		ldr	r0, [sp]
 15643              	.LVL1078:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15644              		.loc 2 187 28 view .LVU4035
 15645              	.LBE10283:
 15646              	.LBE10282:
 15647              	.LBB10284:
 15648              	.LBI10284:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15649              		.loc 2 200 7 is_stmt 1 view .LVU4036
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15650              		.loc 2 200 7 is_stmt 0 view .LVU4037
 15651              	.LBE10284:
 15652              	.LBE10281:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15653              		.loc 2 231 2 view .LVU4038
 15654 00f4 4845     		cmp	r0, r9
ARM GAS  /tmp/ccL95Edz.s 			page 602


 15655 00f6 01D0     		beq	.L329
 15656              	.LVL1079:
 15657              	.LBB10285:
 15658              	.LBI10285:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15659              		.loc 2 236 7 is_stmt 1 view .LVU4039
 15660              	.LBB10286:
 15661              	.LBB10287:
 15662              	.LBI10287:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15663              		.loc 3 469 7 view .LVU4040
 15664              	.LBB10288:
 15665              	.LBI10288:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15666              		.loc 4 119 7 view .LVU4041
 15667              	.LBB10289:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15668              		.loc 4 128 19 is_stmt 0 view .LVU4042
 15669 00f8 FFF7FEFF 		bl	_ZdlPv
 15670              	.LVL1080:
 15671              	.L329:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15672              		.loc 4 128 19 view .LVU4043
 15673              	.LBE10289:
 15674              	.LBE10288:
 15675              	.LBE10287:
 15676              	.LBE10286:
 15677              	.LBE10285:
 15678              	.LBE10280:
 15679              	.LBE10279:
 15680              	.LBB10290:
 15681              	.LBI10290:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15682              		.loc 2 150 14 is_stmt 1 view .LVU4044
 15683              	.LBB10291:
 15684              	.LBI10291:
 15685              		.loc 5 153 7 view .LVU4045
 15686              	.LBB10292:
 15687              	.LBI10292:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15688              		.loc 4 89 7 view .LVU4046
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15689              		.loc 4 89 7 is_stmt 0 view .LVU4047
 15690              	.LBE10292:
 15691              	.LBE10291:
 15692              	.LBE10290:
 15693              	.LBE10278:
 205:alohal/filesystem/filesystem.cpp ****             if ((i == (path.size() - 1)) && (path[i] == path.back())) {
 15694              		.loc 17 205 9 view .LVU4048
 15695 00fc 002F     		cmp	r7, #0
 15696 00fe D6D0     		beq	.L330
 206:alohal/filesystem/filesystem.cpp ****                 // Entry found
 15697              		.loc 17 206 13 is_stmt 1 view .LVU4049
 15698              	.LVL1081:
 15699              	.LBB10293:
 15700              	.LBI10293:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
ARM GAS  /tmp/ccL95Edz.s 			page 603


 15701              		.loc 11 915 7 view .LVU4050
 15702              	.LBB10294:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15703              		.loc 11 916 40 is_stmt 0 view .LVU4051
 15704 0100 6968     		ldr	r1, [r5, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15705              		.loc 11 916 66 view .LVU4052
 15706 0102 D5F80090 		ldr	r9, [r5]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15707              		.loc 11 916 50 view .LVU4053
 15708 0106 A1EB0903 		sub	r3, r1, r9
 15709 010a DA10     		asrs	r2, r3, #3
 15710 010c 184B     		ldr	r3, .L345+4
 15711 010e 03FB02F3 		mul	r3, r3, r2
 15712              	.LVL1082:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15713              		.loc 11 916 50 view .LVU4054
 15714              	.LBE10294:
 15715              	.LBE10293:
 206:alohal/filesystem/filesystem.cpp ****                 // Entry found
 15716              		.loc 17 206 36 view .LVU4055
 15717 0112 013B     		subs	r3, r3, #1
 206:alohal/filesystem/filesystem.cpp ****                 // Entry found
 15718              		.loc 17 206 42 view .LVU4056
 15719 0114 A342     		cmp	r3, r4
 15720 0116 97D1     		bne	.L331
 15721              	.LVL1083:
 15722              	.LBB10295:
 15723              	.LBI10295:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 15724              		.loc 11 1040 7 is_stmt 1 view .LVU4057
 15725              	.LBB10296:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15726              		.loc 11 1043 39 is_stmt 0 view .LVU4058
 15727 0118 09EB080A 		add	r10, r9, r8
 15728              	.LVL1084:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15729              		.loc 11 1043 39 view .LVU4059
 15730              	.LBE10296:
 15731              	.LBE10295:
 15732              	.LBB10297:
 15733              	.LBI10297:
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 15734              		.loc 11 1140 7 is_stmt 1 view .LVU4060
 15735              	.LBB10298:
 15736              	.LBI10298:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 15737              		.loc 11 826 7 view .LVU4061
 15738              	.LBB10299:
 15739              	.LBI10299:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 15740              		.loc 13 806 7 view .LVU4062
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 15741              		.loc 13 806 7 is_stmt 0 view .LVU4063
 15742              	.LBE10299:
 15743              	.LBE10298:
 15744              	.LBB10300:
ARM GAS  /tmp/ccL95Edz.s 			page 604


 15745              	.LBI10300:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 15746              		.loc 13 867 7 is_stmt 1 view .LVU4064
 15747              	.LBB10301:
 15748              	.LBB10302:
 15749              	.LBI10302:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 15750              		.loc 13 806 7 view .LVU4065
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 15751              		.loc 13 806 7 is_stmt 0 view .LVU4066
 15752              	.LBE10302:
 15753              	.LBE10301:
 15754              	.LBE10300:
 15755              	.LBE10297:
 15756              	.LBB10303:
 15757              	.LBI10145:
6149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 15758              		.loc 2 6149 5 is_stmt 1 view .LVU4067
 15759              	.LBB10159:
 15760              	.LBB10155:
 15761              	.LBI10155:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15762              		.loc 2 930 7 view .LVU4068
 15763              	.LBB10156:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15764              		.loc 2 931 16 is_stmt 0 view .LVU4069
 15765 011c DAF80420 		ldr	r2, [r10, #4]
 15766              	.LVL1085:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15767              		.loc 2 931 16 view .LVU4070
 15768              	.LBE10156:
 15769              	.LBE10155:
 15770              	.LBB10157:
 15771              	.LBI10157:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15772              		.loc 2 930 7 is_stmt 1 view .LVU4071
 15773              	.LBB10158:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15774              		.loc 2 931 16 is_stmt 0 view .LVU4072
 15775 0120 51F8143C 		ldr	r3, [r1, #-20]
 15776              	.LVL1086:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15777              		.loc 2 931 16 view .LVU4073
 15778              	.LBE10158:
 15779              	.LBE10157:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 15780              		.loc 2 6152 8 view .LVU4074
 15781 0124 9A42     		cmp	r2, r3
 15782 0126 84D0     		beq	.L344
 15783 0128 0027     		movs	r7, #0
 15784 012a 8BE7     		b	.L332
 15785              	.LVL1087:
 15786              	.L341:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 15787              		.loc 2 6152 8 view .LVU4075
 15788 012c 0027     		movs	r7, #0
 15789 012e 89E7     		b	.L332
ARM GAS  /tmp/ccL95Edz.s 			page 605


 15790              	.LVL1088:
 15791              	.L333:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 15792              		.loc 2 6152 8 view .LVU4076
 15793              	.LBE10159:
 15794              	.LBE10303:
 208:alohal/filesystem/filesystem.cpp ****             } else if (actual->Get_entry(path[i])->Type_of() == FS_entry::Type::Directory) {
 15795              		.loc 17 208 17 is_stmt 1 view .LVU4077
 15796              	.LBB10304:
 15797              	.LBI10304:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 15798              		.loc 2 448 7 view .LVU4078
 15799              	.LBB10305:
 15800              	.LBB10306:
 15801              	.LBB10307:
 15802              	.LBI10307:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15803              		.loc 2 190 7 view .LVU4079
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15804              		.loc 2 190 7 is_stmt 0 view .LVU4080
 15805              	.LBE10307:
 15806              	.LBB10308:
 15807              	.LBI10308:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15808              		.loc 2 290 7 is_stmt 1 view .LVU4081
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15809              		.loc 2 290 7 is_stmt 0 view .LVU4082
 15810              	.LBE10308:
 15811              	.LBB10309:
 15812              	.LBI10309:
 15813              		.loc 19 97 19 is_stmt 1 view .LVU4083
 15814              	.LBB10310:
 15815              	.LBI10310:
 15816              		.loc 3 514 7 view .LVU4084
 15817              	.LBB10311:
 15818              	.LBI10311:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15819              		.loc 5 141 7 view .LVU4085
 15820              	.LBB10312:
 15821              	.LBI10312:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15822              		.loc 4 83 7 view .LVU4086
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15823              		.loc 4 83 7 is_stmt 0 view .LVU4087
 15824              	.LBE10312:
 15825              	.LBE10311:
 15826              	.LBE10310:
 15827              	.LBE10309:
 15828              	.LBB10313:
 15829              	.LBI10313:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 15830              		.loc 2 159 2 is_stmt 1 view .LVU4088
 15831              	.LBB10314:
 15832              	.LBB10315:
 15833              	.LBB10316:
 15834              	.LBI10316:
 15835              		.loc 9 99 5 view .LVU4089
ARM GAS  /tmp/ccL95Edz.s 			page 606


 15836              		.loc 9 99 5 is_stmt 0 view .LVU4090
 15837              	.LBE10316:
 15838              	.LBB10317:
 15839              	.LBI10317:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15840              		.loc 5 141 7 is_stmt 1 view .LVU4091
 15841              	.LBB10318:
 15842              	.LBI10318:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15843              		.loc 4 83 7 view .LVU4092
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15844              		.loc 4 83 7 is_stmt 0 view .LVU4093
 15845              	.LBE10318:
 15846              	.LBE10317:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15847              		.loc 2 160 46 view .LVU4094
 15848 0130 08AC     		add	r4, sp, #32
 15849              	.LVL1089:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15850              		.loc 2 160 46 view .LVU4095
 15851 0132 0694     		str	r4, [sp, #24]
 15852              	.LVL1090:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15853              		.loc 2 160 46 view .LVU4096
 15854              	.LBE10315:
 15855              	.LBE10314:
 15856              	.LBE10313:
 15857              	.LBB10319:
 15858              	.LBI10319:
 15859              		.loc 5 153 7 is_stmt 1 view .LVU4097
 15860              	.LBB10320:
 15861              	.LBI10320:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15862              		.loc 4 89 7 view .LVU4098
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15863              		.loc 4 89 7 is_stmt 0 view .LVU4099
 15864              	.LBE10320:
 15865              	.LBE10319:
 15866              	.LBB10321:
 15867              	.LBI10321:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15868              		.loc 2 186 7 is_stmt 1 view .LVU4100
 15869              	.LBB10322:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15870              		.loc 2 187 28 is_stmt 0 view .LVU4101
 15871 0134 DAF80010 		ldr	r1, [r10]
 15872              	.LVL1091:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15873              		.loc 2 187 28 view .LVU4102
 15874              	.LBE10322:
 15875              	.LBE10321:
 15876              	.LBB10323:
 15877              	.LBI10323:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15878              		.loc 2 186 7 is_stmt 1 view .LVU4103
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15879              		.loc 2 186 7 is_stmt 0 view .LVU4104
ARM GAS  /tmp/ccL95Edz.s 			page 607


 15880              	.LBE10323:
 15881              	.LBB10324:
 15882              	.LBI10324:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15883              		.loc 2 936 7 is_stmt 1 view .LVU4105
 15884              	.LBB10325:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15885              		.loc 2 937 16 is_stmt 0 view .LVU4106
 15886 0138 DAF80420 		ldr	r2, [r10, #4]
 15887              	.LVL1092:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15888              		.loc 2 937 16 view .LVU4107
 15889              	.LBE10325:
 15890              	.LBE10324:
 15891              	.LBB10326:
 15892              	.LBI10326:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 15893              		.loc 2 263 9 is_stmt 1 view .LVU4108
 15894              	.LBB10327:
 15895              	.LBB10328:
 15896              	.LBI10328:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 15897              		.loc 2 243 9 view .LVU4109
 15898              	.LBB10329:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15899              		.loc 2 247 11 is_stmt 0 view .LVU4110
 15900 013c 4FF00003 		mov	r3, #0
 15901 0140 0A44     		add	r2, r2, r1
 15902              	.LVL1093:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15903              		.loc 2 247 11 view .LVU4111
 15904 0142 06A8     		add	r0, sp, #24
 15905              	.LVL1094:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15906              		.loc 2 247 11 view .LVU4112
 15907 0144 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 15908              	.LVL1095:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15909              		.loc 2 247 11 view .LVU4113
 15910              	.LBE10329:
 15911              	.LBE10328:
 15912              	.LBE10327:
 15913              	.LBE10326:
 15914              	.LBE10306:
 15915              	.LBE10305:
 15916              	.LBE10304:
 208:alohal/filesystem/filesystem.cpp ****             } else if (actual->Get_entry(path[i])->Type_of() == FS_entry::Type::Directory) {
 15917              		.loc 17 208 41 view .LVU4114
 15918 0148 06A9     		add	r1, sp, #24
 15919 014a 3046     		mov	r0, r6
 15920 014c FFF7FEFF 		bl	_ZNK9Directory9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 15921              	.LVL1096:
 15922 0150 0646     		mov	r6, r0
 15923              	.LVL1097:
 15924              	.LBB10330:
 15925              	.LBI10330:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
ARM GAS  /tmp/ccL95Edz.s 			page 608


 15926              		.loc 2 657 7 is_stmt 1 view .LVU4115
 15927              	.LBB10331:
 15928              	.LBI10331:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15929              		.loc 2 229 7 view .LVU4116
 15930              	.LBB10332:
 15931              	.LBB10333:
 15932              	.LBI10333:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 15933              		.loc 2 221 7 view .LVU4117
 15934              	.LBB10334:
 15935              	.LBI10334:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15936              		.loc 2 186 7 view .LVU4118
 15937              	.LBB10335:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15938              		.loc 2 187 28 is_stmt 0 view .LVU4119
 15939 0152 0698     		ldr	r0, [sp, #24]
 15940              	.LVL1098:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15941              		.loc 2 187 28 view .LVU4120
 15942              	.LBE10335:
 15943              	.LBE10334:
 15944              	.LBB10336:
 15945              	.LBI10336:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15946              		.loc 2 200 7 is_stmt 1 view .LVU4121
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15947              		.loc 2 200 7 is_stmt 0 view .LVU4122
 15948              	.LBE10336:
 15949              	.LBE10333:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15950              		.loc 2 231 2 view .LVU4123
 15951 0154 A042     		cmp	r0, r4
 15952 0156 03D0     		beq	.L326
 15953              	.LVL1099:
 15954              	.LBB10337:
 15955              	.LBI10337:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15956              		.loc 2 236 7 is_stmt 1 view .LVU4124
 15957              	.LBB10338:
 15958              	.LBB10339:
 15959              	.LBI10339:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15960              		.loc 3 469 7 view .LVU4125
 15961              	.LBB10340:
 15962              	.LBI10340:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15963              		.loc 4 119 7 view .LVU4126
 15964              	.LBB10341:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15965              		.loc 4 128 19 is_stmt 0 view .LVU4127
 15966 0158 FFF7FEFF 		bl	_ZdlPv
 15967              	.LVL1100:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15968              		.loc 4 128 19 view .LVU4128
 15969              	.LBE10341:
ARM GAS  /tmp/ccL95Edz.s 			page 609


 15970              	.LBE10340:
 15971              	.LBE10339:
 15972              	.LBE10338:
 15973              	.LBE10337:
 15974              	.LBE10332:
 15975              	.LBE10331:
 15976              	.LBB10345:
 15977              	.LBI10345:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15978              		.loc 2 150 14 is_stmt 1 view .LVU4129
 15979              	.LBB10346:
 15980              	.LBI10346:
 15981              		.loc 5 153 7 view .LVU4130
 15982              	.LBB10347:
 15983              	.LBI10347:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15984              		.loc 4 89 7 view .LVU4131
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15985              		.loc 4 89 7 is_stmt 0 view .LVU4132
 15986              	.LBE10347:
 15987              	.LBE10346:
 15988              	.LBE10345:
 15989              	.LBB10348:
 15990              	.LBB10344:
 15991              	.LBB10343:
 15992              	.LBB10342:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15993              		.loc 2 237 79 view .LVU4133
 15994 015c 00E0     		b	.L326
 15995              	.LVL1101:
 15996              	.L339:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15997              		.loc 2 237 79 view .LVU4134
 15998              	.LBE10342:
 15999              	.LBE10343:
 16000              	.LBE10344:
 16001              	.LBE10348:
 16002              	.LBE10330:
 16003              	.LBE10144:
 212:alohal/filesystem/filesystem.cpp ****             } else {
 213:alohal/filesystem/filesystem.cpp ****                 // Cannot go further
 214:alohal/filesystem/filesystem.cpp ****                 return nullptr;
 215:alohal/filesystem/filesystem.cpp ****             }
 216:alohal/filesystem/filesystem.cpp ****         }
 217:alohal/filesystem/filesystem.cpp ****     }
 218:alohal/filesystem/filesystem.cpp ****     return nullptr;
 16004              		.loc 17 218 12 view .LVU4135
 16005 015e 0026     		movs	r6, #0
 16006              	.LVL1102:
 16007              	.L326:
 219:alohal/filesystem/filesystem.cpp **** }
 16008              		.loc 17 219 1 view .LVU4136
 16009 0160 3046     		mov	r0, r6
 16010 0162 18B0     		add	sp, sp, #96
 16011              	.LCFI56:
 16012              		.cfi_remember_state
 16013              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccL95Edz.s 			page 610


 16014              		@ sp needed
 16015 0164 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 16016              	.LVL1103:
 16017              	.L342:
 16018              	.LCFI57:
 16019              		.cfi_restore_state
 16020              	.LBB10349:
 214:alohal/filesystem/filesystem.cpp ****             }
 16021              		.loc 17 214 24 view .LVU4137
 16022 0168 0026     		movs	r6, #0
 16023              	.LVL1104:
 214:alohal/filesystem/filesystem.cpp ****             }
 16024              		.loc 17 214 24 view .LVU4138
 16025 016a F9E7     		b	.L326
 16026              	.L346:
 16027              		.align	2
 16028              	.L345:
 16029 016c 04000000 		.word	.LC6
 16030 0170 ABAAAAAA 		.word	-1431655765
 16031              	.LBE10349:
 16032              		.cfi_endproc
 16033              	.LFE3398:
 16035              		.section	.text._ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traits
 16036              		.align	1
 16037              		.global	_ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 16038              		.syntax unified
 16039              		.thumb
 16040              		.thumb_func
 16041              		.fpu fpv4-sp-d16
 16043              	_ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_
 16044              	.LVL1105:
 16045              	.LFB3396:
 185:alohal/filesystem/filesystem.cpp ****     FS_entry *target = Get_entry(path);
 16046              		.loc 17 185 58 is_stmt 1 view -0
 16047              		.cfi_startproc
 16048              		@ args = 0, pretend = 0, frame = 16
 16049              		@ frame_needed = 0, uses_anonymous_args = 0
 185:alohal/filesystem/filesystem.cpp ****     FS_entry *target = Get_entry(path);
 16050              		.loc 17 185 58 is_stmt 0 view .LVU4140
 16051 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 16052              	.LCFI58:
 16053              		.cfi_def_cfa_offset 20
 16054              		.cfi_offset 4, -20
 16055              		.cfi_offset 5, -16
 16056              		.cfi_offset 6, -12
 16057              		.cfi_offset 7, -8
 16058              		.cfi_offset 14, -4
 16059 0002 85B0     		sub	sp, sp, #20
 16060              	.LCFI59:
 16061              		.cfi_def_cfa_offset 40
 16062 0004 0746     		mov	r7, r0
 16063 0006 0D46     		mov	r5, r1
 186:alohal/filesystem/filesystem.cpp ****     if (target != nullptr) {
 16064              		.loc 17 186 5 is_stmt 1 view .LVU4141
 16065              	.LVL1106:
 16066              	.LBB10463:
 16067              	.LBI10463:
ARM GAS  /tmp/ccL95Edz.s 			page 611


 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 16068              		.loc 11 550 7 view .LVU4142
 16069              	.LBB10464:
 16070              	.LBB10465:
 16071              	.LBB10466:
 16072              	.LBI10466:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16073              		.loc 11 915 7 view .LVU4143
 16074              	.LBB10467:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 16075              		.loc 11 916 40 is_stmt 0 view .LVU4144
 16076 0008 4E68     		ldr	r6, [r1, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 16077              		.loc 11 916 66 view .LVU4145
 16078 000a 0B68     		ldr	r3, [r1]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 16079              		.loc 11 916 50 view .LVU4146
 16080 000c F61A     		subs	r6, r6, r3
 16081 000e F010     		asrs	r0, r6, #3
 16082              	.LVL1107:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 16083              		.loc 11 916 50 view .LVU4147
 16084 0010 244B     		ldr	r3, .L364
 16085 0012 03FB00F3 		mul	r3, r3, r0
 16086              	.LVL1108:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 16087              		.loc 11 916 50 view .LVU4148
 16088              	.LBE10467:
 16089              	.LBE10466:
 16090              	.LBB10468:
 16091              	.LBI10468:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 16092              		.loc 11 277 7 is_stmt 1 view .LVU4149
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 16093              		.loc 11 277 7 is_stmt 0 view .LVU4150
 16094              	.LBE10468:
 16095              	.LBB10469:
 16096              	.LBI10469:
 16097              		.loc 19 97 19 is_stmt 1 view .LVU4151
 16098              	.LBB10470:
 16099              	.LBI10470:
 16100              		.loc 3 514 7 view .LVU4152
 16101              	.LBB10471:
 16102              	.LBI10471:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16103              		.loc 5 141 7 view .LVU4153
 16104              	.LBB10472:
 16105              	.LBI10472:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16106              		.loc 4 83 7 view .LVU4154
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16107              		.loc 4 83 7 is_stmt 0 view .LVU4155
 16108              	.LBE10472:
 16109              	.LBE10471:
 16110              	.LBE10470:
 16111              	.LBE10469:
 16112              	.LBB10473:
ARM GAS  /tmp/ccL95Edz.s 			page 612


 16113              	.LBI10473:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 16114              		.loc 11 300 7 is_stmt 1 view .LVU4156
 16115              	.LBB10474:
 16116              	.LBI10474:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 16117              		.loc 11 133 2 view .LVU4157
 16118              	.LBB10475:
 16119              	.LBI10475:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16120              		.loc 5 141 7 view .LVU4158
 16121              	.LBB10476:
 16122              	.LBI10476:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16123              		.loc 4 83 7 view .LVU4159
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16124              		.loc 4 83 7 is_stmt 0 view .LVU4160
 16125              	.LBE10476:
 16126              	.LBE10475:
 16127              	.LBB10477:
 16128              	.LBI10477:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 16129              		.loc 11 94 2 is_stmt 1 view .LVU4161
 16130              	.LBB10478:
 16131              	.LBB10479:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 16132              		.loc 11 95 47 is_stmt 0 view .LVU4162
 16133 0016 0022     		movs	r2, #0
 16134 0018 0192     		str	r2, [sp, #4]
 16135 001a 0292     		str	r2, [sp, #8]
 16136 001c 0392     		str	r2, [sp, #12]
 16137              	.LVL1109:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 16138              		.loc 11 95 47 view .LVU4163
 16139              	.LBE10479:
 16140              	.LBE10478:
 16141              	.LBE10477:
 16142              	.LBE10474:
 16143              	.LBB10480:
 16144              	.LBI10480:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 16145              		.loc 11 356 7 is_stmt 1 view .LVU4164
 16146              	.LBB10481:
 16147              	.LBB10482:
 16148              	.LBI10482:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 16149              		.loc 11 340 7 view .LVU4165
 16150              	.LBB10483:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16151              		.loc 11 343 18 is_stmt 0 view .LVU4166
 16152 001e 8BB1     		cbz	r3, .L357
 16153              	.LVL1110:
 16154              	.LBB10484:
 16155              	.LBI10484:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 16156              		.loc 3 443 7 is_stmt 1 view .LVU4167
 16157              	.LBB10485:
ARM GAS  /tmp/ccL95Edz.s 			page 613


 16158              	.LBI10485:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 16159              		.loc 4 102 7 view .LVU4168
 16160              	.LBB10486:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 16161              		.loc 4 104 2 is_stmt 0 view .LVU4169
 16162 0020 214A     		ldr	r2, .L364+4
 16163 0022 9342     		cmp	r3, r2
 16164 0024 0CD8     		bhi	.L360
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16165              		.loc 4 114 41 view .LVU4170
 16166 0026 03EB4303 		add	r3, r3, r3, lsl #1
 16167              	.LVL1111:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16168              		.loc 4 114 41 view .LVU4171
 16169 002a D800     		lsls	r0, r3, #3
 16170              	.LVL1112:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16171              		.loc 4 114 41 view .LVU4172
 16172 002c FFF7FEFF 		bl	_Znwj
 16173              	.LVL1113:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16174              		.loc 4 114 41 view .LVU4173
 16175 0030 0446     		mov	r4, r0
 16176              	.LVL1114:
 16177              	.L348:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16178              		.loc 4 114 41 view .LVU4174
 16179              	.LBE10486:
 16180              	.LBE10485:
 16181              	.LBE10484:
 16182              	.LBE10483:
 16183              	.LBE10482:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 16184              		.loc 11 358 2 view .LVU4175
 16185 0032 0194     		str	r4, [sp, #4]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 16186              		.loc 11 359 2 view .LVU4176
 16187 0034 0294     		str	r4, [sp, #8]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16188              		.loc 11 360 59 view .LVU4177
 16189 0036 2644     		add	r6, r6, r4
 16190              	.LVL1115:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16191              		.loc 11 360 2 view .LVU4178
 16192 0038 0396     		str	r6, [sp, #12]
 16193              	.LVL1116:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16194              		.loc 11 360 2 view .LVU4179
 16195              	.LBE10481:
 16196              	.LBE10480:
 16197              	.LBE10473:
 16198              	.LBB10494:
 16199              	.LBI10494:
 16200              		.loc 5 153 7 is_stmt 1 view .LVU4180
 16201              	.LBB10495:
 16202              	.LBI10495:
ARM GAS  /tmp/ccL95Edz.s 			page 614


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16203              		.loc 4 89 7 view .LVU4181
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16204              		.loc 4 89 7 is_stmt 0 view .LVU4182
 16205              	.LBE10495:
 16206              	.LBE10494:
 16207              	.LBB10496:
 16208              	.LBI10496:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 16209              		.loc 11 817 7 is_stmt 1 view .LVU4183
 16210              	.LBB10497:
 16211              	.LBB10498:
 16212              	.LBI10498:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 16213              		.loc 13 806 7 view .LVU4184
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 16214              		.loc 13 806 7 is_stmt 0 view .LVU4185
 16215              	.LBE10498:
 16216              	.LBE10497:
 16217              	.LBE10496:
 16218              	.LBB10499:
 16219              	.LBI10499:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 16220              		.loc 11 835 7 is_stmt 1 view .LVU4186
 16221              	.LBB10500:
 16222              	.LBB10501:
 16223              	.LBI10501:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 16224              		.loc 13 806 7 view .LVU4187
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 16225              		.loc 13 806 7 is_stmt 0 view .LVU4188
 16226              	.LBE10501:
 16227              	.LBE10500:
 16228              	.LBE10499:
 16229              	.LBB10502:
 16230              	.LBI10502:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 16231              		.loc 11 273 7 is_stmt 1 view .LVU4189
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 16232              		.loc 11 273 7 is_stmt 0 view .LVU4190
 16233              	.LBE10502:
 16234              	.LBB10503:
 16235              	.LBI10503:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 16236              		.loc 15 305 5 is_stmt 1 view .LVU4191
 16237              	.LBB10504:
 16238              	.LBB10505:
 16239              	.LBI10505:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 16240              		.loc 15 115 5 view .LVU4192
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 16241              		.loc 15 115 5 is_stmt 0 view .LVU4193
 16242 003a 2E68     		ldr	r6, [r5]
 16243              	.LVL1117:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 16244              		.loc 15 115 5 view .LVU4194
 16245 003c 6D68     		ldr	r5, [r5, #4]
ARM GAS  /tmp/ccL95Edz.s 			page 615


 16246              	.LVL1118:
 16247              	.LBB10506:
 16248              	.LBB10507:
 16249              	.LBI10507:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 16250              		.loc 15 76 9 is_stmt 1 view .LVU4195
 16251 003e 10E0     		b	.L351
 16252              	.LVL1119:
 16253              	.L360:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 16254              		.loc 15 76 9 is_stmt 0 view .LVU4196
 16255              	.LBE10507:
 16256              	.LBE10506:
 16257              	.LBE10505:
 16258              	.LBE10504:
 16259              	.LBE10503:
 16260              	.LBB10548:
 16261              	.LBB10493:
 16262              	.LBB10492:
 16263              	.LBB10491:
 16264              	.LBB10490:
 16265              	.LBB10489:
 16266              	.LBB10488:
 16267              	.LBB10487:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16268              		.loc 4 105 26 view .LVU4197
 16269 0040 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 16270              	.LVL1120:
 16271              	.L357:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16272              		.loc 4 105 26 view .LVU4198
 16273              	.LBE10487:
 16274              	.LBE10488:
 16275              	.LBE10489:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16276              		.loc 11 343 18 view .LVU4199
 16277 0044 0024     		movs	r4, #0
 16278 0046 F4E7     		b	.L348
 16279              	.LVL1121:
 16280              	.L361:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16281              		.loc 11 343 18 view .LVU4200
 16282              	.LBE10490:
 16283              	.LBE10491:
 16284              	.LBE10492:
 16285              	.LBE10493:
 16286              	.LBE10548:
 16287              	.LBB10549:
 16288              	.LBB10546:
 16289              	.LBB10544:
 16290              	.LBB10542:
 16291              	.LBB10540:
 16292              	.LBB10508:
 16293              	.LBB10509:
 16294              	.LBI10509:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 16295              		.loc 22 74 5 is_stmt 1 view .LVU4201
ARM GAS  /tmp/ccL95Edz.s 			page 616


  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 16296              		.loc 22 74 5 is_stmt 0 view .LVU4202
 16297              	.LBE10509:
 16298              	.LBE10508:
 16299              	.LBE10540:
 16300              	.LBE10542:
 16301              	.LBE10544:
 16302              	.LBE10546:
 16303              	.LBE10549:
 16304              	.LBE10465:
 16305              	.LBE10464:
 16306              	.LBE10463:
 16307              		.loc 14 174 3 is_stmt 1 view .LVU4203
 16308              	.LBB10553:
 16309              	.LBB10552:
 16310              	.LBB10551:
 16311              	.LBB10550:
 16312              	.LBB10547:
 16313              	.LBB10545:
 16314              	.LBB10543:
 16315              	.LBB10541:
 16316              	.LBB10539:
 16317              	.LBB10535:
 16318              	.LBB10510:
 16319              	.LBI10510:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 16320              		.loc 2 448 7 view .LVU4204
 16321              	.LBB10511:
 16322              	.LBB10512:
 16323              	.LBI10512:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16324              		.loc 2 190 7 view .LVU4205
 16325              	.LBB10513:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16326              		.loc 2 193 51 is_stmt 0 view .LVU4206
 16327 0048 04F10803 		add	r3, r4, #8
 16328              	.LVL1122:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16329              		.loc 2 193 51 view .LVU4207
 16330              	.LBE10513:
 16331              	.LBE10512:
 16332              	.LBB10514:
 16333              	.LBI10514:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16334              		.loc 2 290 7 is_stmt 1 view .LVU4208
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16335              		.loc 2 290 7 is_stmt 0 view .LVU4209
 16336              	.LBE10514:
 16337              	.LBB10515:
 16338              	.LBI10515:
 16339              		.loc 19 97 19 is_stmt 1 view .LVU4210
 16340              	.LBB10516:
 16341              	.LBI10516:
 16342              		.loc 3 514 7 view .LVU4211
 16343              	.LBB10517:
 16344              	.LBI10517:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccL95Edz.s 			page 617


 16345              		.loc 5 141 7 view .LVU4212
 16346              	.LBB10518:
 16347              	.LBI10518:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16348              		.loc 4 83 7 view .LVU4213
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16349              		.loc 4 83 7 is_stmt 0 view .LVU4214
 16350              	.LBE10518:
 16351              	.LBE10517:
 16352              	.LBE10516:
 16353              	.LBE10515:
 16354              	.LBB10519:
 16355              	.LBI10519:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 16356              		.loc 2 159 2 is_stmt 1 view .LVU4215
 16357              	.LBB10520:
 16358              	.LBB10521:
 16359              	.LBI10521:
 16360              		.loc 9 99 5 view .LVU4216
 16361              		.loc 9 99 5 is_stmt 0 view .LVU4217
 16362              	.LBE10521:
 16363              	.LBB10522:
 16364              	.LBI10522:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16365              		.loc 5 141 7 is_stmt 1 view .LVU4218
 16366              	.LBB10523:
 16367              	.LBI10523:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16368              		.loc 4 83 7 view .LVU4219
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16369              		.loc 4 83 7 is_stmt 0 view .LVU4220
 16370              	.LBE10523:
 16371              	.LBE10522:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16372              		.loc 2 160 46 view .LVU4221
 16373 004c 2360     		str	r3, [r4]
 16374              	.LVL1123:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16375              		.loc 2 160 46 view .LVU4222
 16376              	.LBE10520:
 16377              	.LBE10519:
 16378              	.LBB10524:
 16379              	.LBI10524:
 16380              		.loc 5 153 7 is_stmt 1 view .LVU4223
 16381              	.LBB10525:
 16382              	.LBI10525:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16383              		.loc 4 89 7 view .LVU4224
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16384              		.loc 4 89 7 is_stmt 0 view .LVU4225
 16385              	.LBE10525:
 16386              	.LBE10524:
 16387              	.LBB10526:
 16388              	.LBI10526:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16389              		.loc 2 186 7 is_stmt 1 view .LVU4226
 16390              	.LBB10527:
ARM GAS  /tmp/ccL95Edz.s 			page 618


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16391              		.loc 2 187 28 is_stmt 0 view .LVU4227
 16392 004e 3168     		ldr	r1, [r6]
 16393              	.LVL1124:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16394              		.loc 2 187 28 view .LVU4228
 16395              	.LBE10527:
 16396              	.LBE10526:
 16397              	.LBB10528:
 16398              	.LBI10528:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16399              		.loc 2 186 7 is_stmt 1 view .LVU4229
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16400              		.loc 2 186 7 is_stmt 0 view .LVU4230
 16401              	.LBE10528:
 16402              	.LBB10529:
 16403              	.LBI10529:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16404              		.loc 2 936 7 is_stmt 1 view .LVU4231
 16405              	.LBB10530:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16406              		.loc 2 937 16 is_stmt 0 view .LVU4232
 16407 0050 7268     		ldr	r2, [r6, #4]
 16408              	.LVL1125:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16409              		.loc 2 937 16 view .LVU4233
 16410              	.LBE10530:
 16411              	.LBE10529:
 16412              	.LBB10531:
 16413              	.LBI10531:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 16414              		.loc 2 263 9 is_stmt 1 view .LVU4234
 16415              	.LBB10532:
 16416              	.LBB10533:
 16417              	.LBI10533:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 16418              		.loc 2 243 9 view .LVU4235
 16419              	.LBB10534:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16420              		.loc 2 247 11 is_stmt 0 view .LVU4236
 16421 0052 4FF00003 		mov	r3, #0
 16422 0056 0A44     		add	r2, r2, r1
 16423              	.LVL1126:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16424              		.loc 2 247 11 view .LVU4237
 16425 0058 2046     		mov	r0, r4
 16426 005a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 16427              	.LVL1127:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16428              		.loc 2 247 11 view .LVU4238
 16429              	.LBE10534:
 16430              	.LBE10533:
 16431              	.LBE10532:
 16432              	.LBE10531:
 16433              	.LBE10511:
 16434              	.LBE10510:
 16435              	.LBE10535:
ARM GAS  /tmp/ccL95Edz.s 			page 619


  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 16436              		.loc 15 82 8 is_stmt 1 view .LVU4239
 16437              	.LBB10536:
 16438              	.LBI10536:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 16439              		.loc 13 827 7 view .LVU4240
 16440              	.LBB10537:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 16441              		.loc 13 829 2 is_stmt 0 view .LVU4241
 16442 005e 1836     		adds	r6, r6, #24
 16443              	.LVL1128:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 16444              		.loc 13 829 2 view .LVU4242
 16445              	.LBE10537:
 16446              	.LBE10536:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 16447              		.loc 15 82 8 view .LVU4243
 16448 0060 1834     		adds	r4, r4, #24
 16449              	.LVL1129:
 16450              	.L351:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 16451              		.loc 15 82 23 is_stmt 1 view .LVU4244
 16452              	.LBB10538:
 16453              	.LBI10538:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 16454              		.loc 13 907 5 view .LVU4245
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 16455              		.loc 13 907 5 is_stmt 0 view .LVU4246
 16456              	.LBE10538:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 16457              		.loc 15 82 23 view .LVU4247
 16458 0062 AE42     		cmp	r6, r5
 16459 0064 F0D1     		bne	.L361
 16460              	.LVL1130:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 16461              		.loc 15 82 23 view .LVU4248
 16462              	.LBE10539:
 16463              	.LBE10541:
 16464              	.LBE10543:
 16465              	.LBE10545:
 16466              	.LBE10547:
 16467              	.LBE10550:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 16468              		.loc 11 554 2 view .LVU4249
 16469 0066 0294     		str	r4, [sp, #8]
 16470              	.LVL1131:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 16471              		.loc 11 554 2 view .LVU4250
 16472              	.LBE10551:
 16473              	.LBE10552:
 16474              	.LBE10553:
 186:alohal/filesystem/filesystem.cpp ****     if (target != nullptr) {
 16475              		.loc 17 186 33 view .LVU4251
 16476 0068 01A9     		add	r1, sp, #4
 16477 006a 3846     		mov	r0, r7
 16478 006c FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_
 16479              	.LVL1132:
ARM GAS  /tmp/ccL95Edz.s 			page 620


 16480 0070 0546     		mov	r5, r0
 16481              	.LVL1133:
 16482              	.LBB10554:
 16483              	.LBI10554:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 16484              		.loc 11 675 7 is_stmt 1 view .LVU4252
 16485              	.LBB10555:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 16486              		.loc 11 677 15 is_stmt 0 view .LVU4253
 16487 0072 019C     		ldr	r4, [sp, #4]
 16488 0074 029E     		ldr	r6, [sp, #8]
 16489              	.LVL1134:
 16490              	.LBB10556:
 16491              	.LBI10556:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 16492              		.loc 11 273 7 is_stmt 1 view .LVU4254
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 16493              		.loc 11 273 7 is_stmt 0 view .LVU4255
 16494              	.LBE10556:
 16495              	.LBB10557:
 16496              	.LBI10557:
 16497              		.loc 22 203 5 is_stmt 1 view .LVU4256
 16498 0076 02E0     		b	.L354
 16499              	.LVL1135:
 16500              	.L362:
 16501              	.LBB10558:
 16502              	.LBB10559:
 16503              	.LBB10560:
 16504              	.LBB10561:
 16505              	.LBB10562:
 16506              	.LBB10563:
 16507              	.LBB10564:
 16508              	.LBB10565:
 16509              	.LBB10566:
 16510              	.LBI10566:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 16511              		.loc 2 236 7 view .LVU4257
 16512              	.LBB10567:
 16513              	.LBB10568:
 16514              	.LBI10568:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 16515              		.loc 3 469 7 view .LVU4258
 16516              	.LBB10569:
 16517              	.LBI10569:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 16518              		.loc 4 119 7 view .LVU4259
 16519              	.LBB10570:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16520              		.loc 4 128 19 is_stmt 0 view .LVU4260
 16521 0078 FFF7FEFF 		bl	_ZdlPv
 16522              	.LVL1136:
 16523              	.L353:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16524              		.loc 4 128 19 view .LVU4261
 16525              	.LBE10570:
 16526              	.LBE10569:
 16527              	.LBE10568:
ARM GAS  /tmp/ccL95Edz.s 			page 621


 16528              	.LBE10567:
 16529              	.LBE10566:
 16530              	.LBE10565:
 16531              	.LBE10564:
 16532              	.LBB10576:
 16533              	.LBI10576:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16534              		.loc 2 150 14 is_stmt 1 view .LVU4262
 16535              	.LBB10577:
 16536              	.LBI10577:
 16537              		.loc 5 153 7 view .LVU4263
 16538              	.LBB10578:
 16539              	.LBI10578:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16540              		.loc 4 89 7 view .LVU4264
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16541              		.loc 4 89 7 is_stmt 0 view .LVU4265
 16542              	.LBE10578:
 16543              	.LBE10577:
 16544              	.LBE10576:
 16545              	.LBE10563:
 16546              	.LBE10562:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 16547              		.loc 22 107 4 is_stmt 1 view .LVU4266
 16548 007c 1834     		adds	r4, r4, #24
 16549              	.LVL1137:
 16550              	.L354:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 16551              		.loc 22 107 19 view .LVU4267
 16552 007e A642     		cmp	r6, r4
 16553 0080 05D0     		beq	.L352
 16554              	.LVL1138:
 16555              	.LBB10581:
 16556              	.LBI10562:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 16557              		.loc 22 97 5 view .LVU4268
 16558              	.LBB10580:
 16559              	.LBI10563:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 16560              		.loc 2 657 7 view .LVU4269
 16561              	.LBB10579:
 16562              	.LBI10564:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16563              		.loc 2 229 7 view .LVU4270
 16564              	.LBB10575:
 16565              	.LBB10571:
 16566              	.LBI10571:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 16567              		.loc 2 221 7 view .LVU4271
 16568              	.LBB10572:
 16569              	.LBI10572:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16570              		.loc 2 186 7 view .LVU4272
 16571              	.LBB10573:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16572              		.loc 2 187 28 is_stmt 0 view .LVU4273
 16573 0082 2346     		mov	r3, r4
ARM GAS  /tmp/ccL95Edz.s 			page 622


 16574 0084 53F8080B 		ldr	r0, [r3], #8
 16575              	.LVL1139:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16576              		.loc 2 187 28 view .LVU4274
 16577              	.LBE10573:
 16578              	.LBE10572:
 16579              	.LBB10574:
 16580              	.LBI10574:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16581              		.loc 2 200 7 is_stmt 1 view .LVU4275
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16582              		.loc 2 200 7 is_stmt 0 view .LVU4276
 16583              	.LBE10574:
 16584              	.LBE10571:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 16585              		.loc 2 231 2 view .LVU4277
 16586 0088 9842     		cmp	r0, r3
 16587 008a F5D1     		bne	.L362
 16588 008c F6E7     		b	.L353
 16589              	.LVL1140:
 16590              	.L352:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 16591              		.loc 2 231 2 view .LVU4278
 16592              	.LBE10575:
 16593              	.LBE10579:
 16594              	.LBE10580:
 16595              	.LBE10581:
 16596              	.LBE10561:
 16597              	.LBE10560:
 16598              	.LBE10559:
 16599              	.LBE10558:
 16600              	.LBE10557:
 16601              	.LBB10582:
 16602              	.LBI10582:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 16603              		.loc 11 330 7 is_stmt 1 view .LVU4279
 16604              	.LBB10583:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 16605              		.loc 11 332 2 is_stmt 0 view .LVU4280
 16606 008e 0198     		ldr	r0, [sp, #4]
 16607              	.LVL1141:
 16608              	.LBB10584:
 16609              	.LBI10584:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 16610              		.loc 11 347 7 is_stmt 1 view .LVU4281
 16611              	.LBB10585:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 16612              		.loc 11 350 2 is_stmt 0 view .LVU4282
 16613 0090 08B1     		cbz	r0, .L355
 16614              	.LVL1142:
 16615              	.LBB10586:
 16616              	.LBI10586:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 16617              		.loc 3 469 7 is_stmt 1 view .LVU4283
 16618              	.LBB10587:
 16619              	.LBB10588:
 16620              	.LBI10588:
ARM GAS  /tmp/ccL95Edz.s 			page 623


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 16621              		.loc 4 119 7 view .LVU4284
 16622              	.LBB10589:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16623              		.loc 4 128 19 is_stmt 0 view .LVU4285
 16624 0092 FFF7FEFF 		bl	_ZdlPv
 16625              	.LVL1143:
 16626              	.L355:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16627              		.loc 4 128 19 view .LVU4286
 16628              	.LBE10589:
 16629              	.LBE10588:
 16630              	.LBE10587:
 16631              	.LBE10586:
 16632              	.LBE10585:
 16633              	.LBE10584:
 16634              	.LBB10590:
 16635              	.LBI10590:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 16636              		.loc 11 125 14 is_stmt 1 view .LVU4287
 16637              	.LBB10591:
 16638              	.LBI10591:
 16639              		.loc 5 153 7 view .LVU4288
 16640              	.LBB10592:
 16641              	.LBI10592:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16642              		.loc 4 89 7 view .LVU4289
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16643              		.loc 4 89 7 is_stmt 0 view .LVU4290
 16644              	.LBE10592:
 16645              	.LBE10591:
 16646              	.LBE10590:
 16647              	.LBE10583:
 16648              	.LBE10582:
 16649              	.LBE10555:
 16650              	.LBE10554:
 187:alohal/filesystem/filesystem.cpp ****         return true;
 16651              		.loc 17 187 5 is_stmt 1 view .LVU4291
 16652 0096 15B1     		cbz	r5, .L363
 188:alohal/filesystem/filesystem.cpp ****     }
 16653              		.loc 17 188 16 is_stmt 0 view .LVU4292
 16654 0098 0120     		movs	r0, #1
 16655              	.L356:
 191:alohal/filesystem/filesystem.cpp **** 
 16656              		.loc 17 191 1 view .LVU4293
 16657 009a 05B0     		add	sp, sp, #20
 16658              	.LCFI60:
 16659              		.cfi_remember_state
 16660              		.cfi_def_cfa_offset 20
 16661              		@ sp needed
 16662 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 16663              	.LVL1144:
 16664              	.L363:
 16665              	.LCFI61:
 16666              		.cfi_restore_state
 190:alohal/filesystem/filesystem.cpp **** }
 16667              		.loc 17 190 12 view .LVU4294
ARM GAS  /tmp/ccL95Edz.s 			page 624


 16668 009e 0020     		movs	r0, #0
 16669 00a0 FBE7     		b	.L356
 16670              	.L365:
 16671 00a2 00BF     		.align	2
 16672              	.L364:
 16673 00a4 ABAAAAAA 		.word	-1431655765
 16674 00a8 55555505 		.word	89478485
 16675              		.cfi_endproc
 16676              	.LFE3396:
 16678              		.section	.rodata._ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcE
 16679              		.align	2
 16680              	.LC17:
 16681 0000 2E2E00   		.ascii	"..\000"
 16682              		.section	.text._ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 16683              		.align	1
 16684              		.global	_ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 16685              		.syntax unified
 16686              		.thumb
 16687              		.thumb_func
 16688              		.fpu fpv4-sp-d16
 16690              	_ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 16691              	.LVL1145:
 16692              	.LFB3379:
 140:alohal/filesystem/filesystem.cpp ****     vector<string> path;
 16693              		.loc 17 140 69 is_stmt 1 view -0
 16694              		.cfi_startproc
 16695              		@ args = 0, pretend = 0, frame = 72
 16696              		@ frame_needed = 0, uses_anonymous_args = 0
 140:alohal/filesystem/filesystem.cpp ****     vector<string> path;
 16697              		.loc 17 140 69 is_stmt 0 view .LVU4296
 16698 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 16699              	.LCFI62:
 16700              		.cfi_def_cfa_offset 20
 16701              		.cfi_offset 4, -20
 16702              		.cfi_offset 5, -16
 16703              		.cfi_offset 6, -12
 16704              		.cfi_offset 7, -8
 16705              		.cfi_offset 14, -4
 16706 0002 93B0     		sub	sp, sp, #76
 16707              	.LCFI63:
 16708              		.cfi_def_cfa_offset 96
 16709 0004 0646     		mov	r6, r0
 16710 0006 0C46     		mov	r4, r1
 16711 0008 1546     		mov	r5, r2
 141:alohal/filesystem/filesystem.cpp ****     filename = Absolute_path(filename);
 16712              		.loc 17 141 5 is_stmt 1 view .LVU4297
 16713              	.LVL1146:
 16714              	.LBB10888:
 16715              	.LBI10888:
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 16716              		.loc 11 484 7 view .LVU4298
 16717              	.LBB10889:
 16718              	.LBI10889:
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 16719              		.loc 11 285 7 view .LVU4299
 16720              	.LBB10890:
 16721              	.LBI10890:
ARM GAS  /tmp/ccL95Edz.s 			page 625


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 16722              		.loc 11 128 2 view .LVU4300
 16723              	.LBB10891:
 16724              	.LBI10891:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 16725              		.loc 5 138 7 view .LVU4301
 16726              	.LBB10892:
 16727              	.LBI10892:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16728              		.loc 4 80 7 view .LVU4302
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16729              		.loc 4 80 7 is_stmt 0 view .LVU4303
 16730              	.LBE10892:
 16731              	.LBE10891:
 16732              	.LBB10893:
 16733              	.LBI10893:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 16734              		.loc 11 94 2 is_stmt 1 view .LVU4304
 16735              	.LBB10894:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 16736              		.loc 11 95 47 is_stmt 0 view .LVU4305
 16737 000a 0023     		movs	r3, #0
 16738 000c 0360     		str	r3, [r0]
 16739 000e 4360     		str	r3, [r0, #4]
 16740 0010 8360     		str	r3, [r0, #8]
 16741              	.LVL1147:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 16742              		.loc 11 95 47 view .LVU4306
 16743              	.LBE10894:
 16744              	.LBE10893:
 16745              	.LBE10890:
 16746              	.LBE10889:
 16747              	.LBE10888:
 142:alohal/filesystem/filesystem.cpp ****     path.emplace_back("/");
 16748              		.loc 17 142 5 is_stmt 1 view .LVU4307
 16749              	.LBB10895:
 16750              	.LBI10895:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 16751              		.loc 2 448 7 view .LVU4308
 16752              	.LBB10896:
 16753              	.LBB10897:
 16754              	.LBB10898:
 16755              	.LBI10898:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16756              		.loc 2 190 7 view .LVU4309
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16757              		.loc 2 190 7 is_stmt 0 view .LVU4310
 16758              	.LBE10898:
 16759              	.LBB10899:
 16760              	.LBI10899:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16761              		.loc 2 290 7 is_stmt 1 view .LVU4311
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16762              		.loc 2 290 7 is_stmt 0 view .LVU4312
 16763              	.LBE10899:
 16764              	.LBB10900:
 16765              	.LBI10900:
ARM GAS  /tmp/ccL95Edz.s 			page 626


 16766              		.loc 19 97 19 is_stmt 1 view .LVU4313
 16767              	.LBB10901:
 16768              	.LBI10901:
 16769              		.loc 3 514 7 view .LVU4314
 16770              	.LBB10902:
 16771              	.LBI10902:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16772              		.loc 5 141 7 view .LVU4315
 16773              	.LBB10903:
 16774              	.LBI10903:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16775              		.loc 4 83 7 view .LVU4316
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16776              		.loc 4 83 7 is_stmt 0 view .LVU4317
 16777              	.LBE10903:
 16778              	.LBE10902:
 16779              	.LBE10901:
 16780              	.LBE10900:
 16781              	.LBB10904:
 16782              	.LBI10904:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 16783              		.loc 2 159 2 is_stmt 1 view .LVU4318
 16784              	.LBB10905:
 16785              	.LBB10906:
 16786              	.LBB10907:
 16787              	.LBI10907:
 16788              		.loc 9 99 5 view .LVU4319
 16789              		.loc 9 99 5 is_stmt 0 view .LVU4320
 16790              	.LBE10907:
 16791              	.LBB10908:
 16792              	.LBI10908:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16793              		.loc 5 141 7 is_stmt 1 view .LVU4321
 16794              	.LBB10909:
 16795              	.LBI10909:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16796              		.loc 4 83 7 view .LVU4322
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16797              		.loc 4 83 7 is_stmt 0 view .LVU4323
 16798              	.LBE10909:
 16799              	.LBE10908:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16800              		.loc 2 160 46 view .LVU4324
 16801 0012 08AB     		add	r3, sp, #32
 16802              	.LVL1148:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16803              		.loc 2 160 46 view .LVU4325
 16804 0014 0693     		str	r3, [sp, #24]
 16805              	.LVL1149:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16806              		.loc 2 160 46 view .LVU4326
 16807              	.LBE10906:
 16808              	.LBE10905:
 16809              	.LBE10904:
 16810              	.LBB10910:
 16811              	.LBI10910:
 16812              		.loc 5 153 7 is_stmt 1 view .LVU4327
ARM GAS  /tmp/ccL95Edz.s 			page 627


 16813              	.LBB10911:
 16814              	.LBI10911:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16815              		.loc 4 89 7 view .LVU4328
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16816              		.loc 4 89 7 is_stmt 0 view .LVU4329
 16817              	.LBE10911:
 16818              	.LBE10910:
 16819              	.LBB10912:
 16820              	.LBI10912:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16821              		.loc 2 186 7 is_stmt 1 view .LVU4330
 16822              	.LBB10913:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16823              		.loc 2 187 28 is_stmt 0 view .LVU4331
 16824 0016 1168     		ldr	r1, [r2]
 16825              	.LVL1150:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16826              		.loc 2 187 28 view .LVU4332
 16827              	.LBE10913:
 16828              	.LBE10912:
 16829              	.LBB10914:
 16830              	.LBI10914:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16831              		.loc 2 186 7 is_stmt 1 view .LVU4333
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16832              		.loc 2 186 7 is_stmt 0 view .LVU4334
 16833              	.LBE10914:
 16834              	.LBB10915:
 16835              	.LBI10915:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16836              		.loc 2 936 7 is_stmt 1 view .LVU4335
 16837              	.LBB10916:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16838              		.loc 2 937 16 is_stmt 0 view .LVU4336
 16839 0018 5268     		ldr	r2, [r2, #4]
 16840              	.LVL1151:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16841              		.loc 2 937 16 view .LVU4337
 16842              	.LBE10916:
 16843              	.LBE10915:
 16844              	.LBB10917:
 16845              	.LBI10917:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 16846              		.loc 2 263 9 is_stmt 1 view .LVU4338
 16847              	.LBB10918:
 16848              	.LBB10919:
 16849              	.LBI10919:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 16850              		.loc 2 243 9 view .LVU4339
 16851              	.LBB10920:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16852              		.loc 2 247 11 is_stmt 0 view .LVU4340
 16853 001a 4FF00003 		mov	r3, #0
 16854 001e 0A44     		add	r2, r2, r1
 16855              	.LVL1152:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccL95Edz.s 			page 628


 16856              		.loc 2 247 11 view .LVU4341
 16857 0020 06A8     		add	r0, sp, #24
 16858              	.LVL1153:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16859              		.loc 2 247 11 view .LVU4342
 16860 0022 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 16861              	.LVL1154:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16862              		.loc 2 247 11 view .LVU4343
 16863              	.LBE10920:
 16864              	.LBE10919:
 16865              	.LBE10918:
 16866              	.LBE10917:
 16867              	.LBE10897:
 16868              	.LBE10896:
 16869              	.LBE10895:
 142:alohal/filesystem/filesystem.cpp ****     path.emplace_back("/");
 16870              		.loc 17 142 29 view .LVU4344
 16871 0026 06AA     		add	r2, sp, #24
 16872 0028 2146     		mov	r1, r4
 16873 002a 6846     		mov	r0, sp
 16874 002c FFF7FEFF 		bl	_ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 16875              	.LVL1155:
 16876              	.LBB10921:
 16877              	.LBI10921:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 16878              		.loc 2 732 7 is_stmt 1 view .LVU4345
 16879              	.LBB10922:
 16880              	.LBI10922:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 16881              		.loc 2 221 7 view .LVU4346
 16882              	.LBB10923:
 16883              	.LBI10923:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16884              		.loc 2 186 7 view .LVU4347
 16885              	.LBB10924:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16886              		.loc 2 187 28 is_stmt 0 view .LVU4348
 16887 0030 2B46     		mov	r3, r5
 16888 0032 53F8080B 		ldr	r0, [r3], #8
 16889              	.LVL1156:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16890              		.loc 2 187 28 view .LVU4349
 16891              	.LBE10924:
 16892              	.LBE10923:
 16893              	.LBB10925:
 16894              	.LBI10925:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16895              		.loc 2 200 7 is_stmt 1 view .LVU4350
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16896              		.loc 2 200 7 is_stmt 0 view .LVU4351
 16897              	.LBE10925:
 16898              	.LBE10922:
 16899              	.LBB10926:
 16900              	.LBB10927:
 16901              	.LBI10927:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
ARM GAS  /tmp/ccL95Edz.s 			page 629


 16902              		.loc 2 221 7 is_stmt 1 view .LVU4352
 16903              	.LBB10928:
 16904              	.LBI10928:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16905              		.loc 2 186 7 view .LVU4353
 16906              	.LBB10929:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16907              		.loc 2 187 28 is_stmt 0 view .LVU4354
 16908 0036 0099     		ldr	r1, [sp]
 16909              	.LVL1157:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16910              		.loc 2 187 28 view .LVU4355
 16911              	.LBE10929:
 16912              	.LBE10928:
 16913              	.LBB10930:
 16914              	.LBI10930:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16915              		.loc 2 200 7 is_stmt 1 view .LVU4356
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16916              		.loc 2 200 7 is_stmt 0 view .LVU4357
 16917              	.LBE10930:
 16918              	.LBE10927:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 16919              		.loc 2 747 2 view .LVU4358
 16920 0038 02AA     		add	r2, sp, #8
 16921 003a 9142     		cmp	r1, r2
 16922 003c 2FD0     		beq	.L391
 16923              	.LVL1158:
 16924              	.LBB10931:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 16925              		.loc 2 761 6 view .LVU4359
 16926 003e 9842     		cmp	r0, r3
 16927 0040 3CD0     		beq	.L389
 16928              	.LVL1159:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 16929              		.loc 2 767 7 view .LVU4360
 16930 0042 AF68     		ldr	r7, [r5, #8]
 16931              	.LVL1160:
 16932              	.L371:
 16933              	.LBB10932:
 16934              	.LBI10932:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 16935              		.loc 2 178 7 is_stmt 1 view .LVU4361
 16936              	.LBB10933:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16937              		.loc 2 179 9 is_stmt 0 view .LVU4362
 16938 0044 2960     		str	r1, [r5]
 16939              	.LVL1161:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16940              		.loc 2 179 9 view .LVU4363
 16941              	.LBE10933:
 16942              	.LBE10932:
 16943              	.LBB10934:
 16944              	.LBI10934:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16945              		.loc 2 936 7 is_stmt 1 view .LVU4364
 16946              	.LBB10935:
ARM GAS  /tmp/ccL95Edz.s 			page 630


 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16947              		.loc 2 937 16 is_stmt 0 view .LVU4365
 16948 0046 019B     		ldr	r3, [sp, #4]
 16949              	.LVL1162:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16950              		.loc 2 937 16 view .LVU4366
 16951              	.LBE10935:
 16952              	.LBE10934:
 16953              	.LBB10936:
 16954              	.LBI10936:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 16955              		.loc 2 182 7 is_stmt 1 view .LVU4367
 16956              	.LBB10937:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16957              		.loc 2 183 9 is_stmt 0 view .LVU4368
 16958 0048 6B60     		str	r3, [r5, #4]
 16959              	.LVL1163:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16960              		.loc 2 183 9 view .LVU4369
 16961              	.LBE10937:
 16962              	.LBE10936:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 16963              		.loc 2 775 6 view .LVU4370
 16964 004a 029B     		ldr	r3, [sp, #8]
 16965              	.LVL1164:
 16966              	.LBB10938:
 16967              	.LBI10938:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16968              		.loc 2 210 7 is_stmt 1 view .LVU4371
 16969              	.LBB10939:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16970              		.loc 2 211 9 is_stmt 0 view .LVU4372
 16971 004c AB60     		str	r3, [r5, #8]
 16972              	.LVL1165:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16973              		.loc 2 211 9 view .LVU4373
 16974              	.LBE10939:
 16975              	.LBE10938:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 16976              		.loc 2 776 6 view .LVU4374
 16977 004e 0028     		cmp	r0, #0
 16978 0050 36D0     		beq	.L372
 16979              	.LVL1166:
 16980              	.LBB10940:
 16981              	.LBI10940:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 16982              		.loc 2 178 7 is_stmt 1 view .LVU4375
 16983              	.LBB10941:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16984              		.loc 2 179 9 is_stmt 0 view .LVU4376
 16985 0052 0090     		str	r0, [sp]
 16986              	.LVL1167:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16987              		.loc 2 179 9 view .LVU4377
 16988              	.LBE10941:
 16989              	.LBE10940:
 16990              	.LBB10942:
ARM GAS  /tmp/ccL95Edz.s 			page 631


 16991              	.LBI10942:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16992              		.loc 2 210 7 is_stmt 1 view .LVU4378
 16993              	.LBB10943:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16994              		.loc 2 211 9 is_stmt 0 view .LVU4379
 16995 0054 0297     		str	r7, [sp, #8]
 16996              	.LVL1168:
 16997              	.L370:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16998              		.loc 2 211 9 view .LVU4380
 16999              	.LBE10943:
 17000              	.LBE10942:
 17001              	.LBE10931:
 17002              	.LBE10926:
 17003              	.LBB10967:
 17004              	.LBI10967:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 17005              		.loc 2 1023 7 is_stmt 1 view .LVU4381
 17006              	.LBB10968:
 17007              	.LBI10968:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17008              		.loc 2 214 7 view .LVU4382
 17009              	.LBB10969:
 17010              	.LBI10969:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 17011              		.loc 2 182 7 view .LVU4383
 17012              	.LBB10970:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17013              		.loc 2 183 9 is_stmt 0 view .LVU4384
 17014 0056 0023     		movs	r3, #0
 17015 0058 0193     		str	r3, [sp, #4]
 17016              	.LVL1169:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17017              		.loc 2 183 9 view .LVU4385
 17018              	.LBE10970:
 17019              	.LBE10969:
 17020              	.LBB10971:
 17021              	.LBI10971:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17022              		.loc 2 186 7 is_stmt 1 view .LVU4386
 17023              	.LBB10972:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17024              		.loc 2 187 28 is_stmt 0 view .LVU4387
 17025 005a 009A     		ldr	r2, [sp]
 17026              	.LVL1170:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17027              		.loc 2 187 28 view .LVU4388
 17028              	.LBE10972:
 17029              	.LBE10971:
 17030              	.LBB10973:
 17031              	.LBI10973:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 17032              		.loc 8 299 7 is_stmt 1 view .LVU4389
 17033              	.LBB10974:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17034              		.loc 8 300 9 view .LVU4390
ARM GAS  /tmp/ccL95Edz.s 			page 632


 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17035              		.loc 8 300 14 is_stmt 0 view .LVU4391
 17036 005c 1370     		strb	r3, [r2]
 17037              	.LVL1171:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17038              		.loc 8 300 14 view .LVU4392
 17039              	.LBE10974:
 17040              	.LBE10973:
 17041              	.LBE10968:
 17042              	.LBE10967:
 17043              	.LBE10921:
 17044              	.LBB10976:
 17045              	.LBI10976:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 17046              		.loc 2 657 7 is_stmt 1 view .LVU4393
 17047              	.LBB10977:
 17048              	.LBI10977:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17049              		.loc 2 229 7 view .LVU4394
 17050              	.LBB10978:
 17051              	.LBB10979:
 17052              	.LBI10979:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 17053              		.loc 2 221 7 view .LVU4395
 17054              	.LBB10980:
 17055              	.LBI10980:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17056              		.loc 2 186 7 view .LVU4396
 17057              	.LBB10981:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17058              		.loc 2 187 28 is_stmt 0 view .LVU4397
 17059 005e 0098     		ldr	r0, [sp]
 17060              	.LVL1172:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17061              		.loc 2 187 28 view .LVU4398
 17062              	.LBE10981:
 17063              	.LBE10980:
 17064              	.LBB10982:
 17065              	.LBI10982:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17066              		.loc 2 200 7 is_stmt 1 view .LVU4399
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17067              		.loc 2 200 7 is_stmt 0 view .LVU4400
 17068              	.LBE10982:
 17069              	.LBE10979:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 17070              		.loc 2 231 2 view .LVU4401
 17071 0060 02AB     		add	r3, sp, #8
 17072 0062 9842     		cmp	r0, r3
 17073 0064 01D0     		beq	.L373
 17074              	.LVL1173:
 17075              	.LBB10983:
 17076              	.LBI10983:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 17077              		.loc 2 236 7 is_stmt 1 view .LVU4402
 17078              	.LBB10984:
 17079              	.LBB10985:
ARM GAS  /tmp/ccL95Edz.s 			page 633


 17080              	.LBI10985:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 17081              		.loc 3 469 7 view .LVU4403
 17082              	.LBB10986:
 17083              	.LBI10986:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 17084              		.loc 4 119 7 view .LVU4404
 17085              	.LBB10987:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17086              		.loc 4 128 19 is_stmt 0 view .LVU4405
 17087 0066 FFF7FEFF 		bl	_ZdlPv
 17088              	.LVL1174:
 17089              	.L373:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17090              		.loc 4 128 19 view .LVU4406
 17091              	.LBE10987:
 17092              	.LBE10986:
 17093              	.LBE10985:
 17094              	.LBE10984:
 17095              	.LBE10983:
 17096              	.LBE10978:
 17097              	.LBE10977:
 17098              	.LBB10988:
 17099              	.LBI10988:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17100              		.loc 2 150 14 is_stmt 1 view .LVU4407
 17101              	.LBB10989:
 17102              	.LBI10989:
 17103              		.loc 5 153 7 view .LVU4408
 17104              	.LBB10990:
 17105              	.LBI10990:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17106              		.loc 4 89 7 view .LVU4409
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17107              		.loc 4 89 7 is_stmt 0 view .LVU4410
 17108              	.LBE10990:
 17109              	.LBE10989:
 17110              	.LBE10988:
 17111              	.LBE10976:
 17112              	.LBB10991:
 17113              	.LBI10991:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 17114              		.loc 2 657 7 is_stmt 1 view .LVU4411
 17115              	.LBB10992:
 17116              	.LBI10992:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17117              		.loc 2 229 7 view .LVU4412
 17118              	.LBB10993:
 17119              	.LBB10994:
 17120              	.LBI10994:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 17121              		.loc 2 221 7 view .LVU4413
 17122              	.LBB10995:
 17123              	.LBI10995:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17124              		.loc 2 186 7 view .LVU4414
 17125              	.LBB10996:
ARM GAS  /tmp/ccL95Edz.s 			page 634


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17126              		.loc 2 187 28 is_stmt 0 view .LVU4415
 17127 006a 0698     		ldr	r0, [sp, #24]
 17128              	.LVL1175:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17129              		.loc 2 187 28 view .LVU4416
 17130              	.LBE10996:
 17131              	.LBE10995:
 17132              	.LBB10997:
 17133              	.LBI10997:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17134              		.loc 2 200 7 is_stmt 1 view .LVU4417
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17135              		.loc 2 200 7 is_stmt 0 view .LVU4418
 17136              	.LBE10997:
 17137              	.LBE10994:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 17138              		.loc 2 231 2 view .LVU4419
 17139 006c 08AB     		add	r3, sp, #32
 17140 006e 9842     		cmp	r0, r3
 17141 0070 01D0     		beq	.L374
 17142              	.LVL1176:
 17143              	.LBB10998:
 17144              	.LBI10998:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 17145              		.loc 2 236 7 is_stmt 1 view .LVU4420
 17146              	.LBB10999:
 17147              	.LBB11000:
 17148              	.LBI11000:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 17149              		.loc 3 469 7 view .LVU4421
 17150              	.LBB11001:
 17151              	.LBI11001:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 17152              		.loc 4 119 7 view .LVU4422
 17153              	.LBB11002:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17154              		.loc 4 128 19 is_stmt 0 view .LVU4423
 17155 0072 FFF7FEFF 		bl	_ZdlPv
 17156              	.LVL1177:
 17157              	.L374:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17158              		.loc 4 128 19 view .LVU4424
 17159              	.LBE11002:
 17160              	.LBE11001:
 17161              	.LBE11000:
 17162              	.LBE10999:
 17163              	.LBE10998:
 17164              	.LBE10993:
 17165              	.LBE10992:
 17166              	.LBB11003:
 17167              	.LBI11003:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17168              		.loc 2 150 14 is_stmt 1 view .LVU4425
 17169              	.LBB11004:
 17170              	.LBI11004:
 17171              		.loc 5 153 7 view .LVU4426
ARM GAS  /tmp/ccL95Edz.s 			page 635


 17172              	.LBB11005:
 17173              	.LBI11005:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17174              		.loc 4 89 7 view .LVU4427
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17175              		.loc 4 89 7 is_stmt 0 view .LVU4428
 17176              	.LBE11005:
 17177              	.LBE11004:
 17178              	.LBE11003:
 17179              	.LBE10991:
 143:alohal/filesystem/filesystem.cpp ****     filename.erase(0, 1);
 17180              		.loc 17 143 5 is_stmt 1 view .LVU4429
 143:alohal/filesystem/filesystem.cpp ****     filename.erase(0, 1);
 17181              		.loc 17 143 26 is_stmt 0 view .LVU4430
 17182 0076 5049     		ldr	r1, .L395
 17183 0078 3046     		mov	r0, r6
 17184 007a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRA2_Kc
 17185              	.LVL1178:
 144:alohal/filesystem/filesystem.cpp ****     unsigned int position = filename.find("/");
 17186              		.loc 17 144 5 is_stmt 1 view .LVU4431
 17187              	.LBB11006:
 17188              	.LBI11006:
1807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17189              		.loc 2 1807 7 view .LVU4432
 17190              	.LBB11007:
 17191              	.LBB11008:
 17192              	.LBI11008:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17193              		.loc 2 310 7 view .LVU4433
 17194              	.LBB11009:
 17195              	.LBI11009:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17196              		.loc 2 930 7 view .LVU4434
 17197              	.LBB11010:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17198              		.loc 2 931 16 is_stmt 0 view .LVU4435
 17199 007e 6A68     		ldr	r2, [r5, #4]
 17200              	.LVL1179:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17201              		.loc 2 931 16 view .LVU4436
 17202              	.LBE11010:
 17203              	.LBE11009:
 17204              	.LBE11008:
 17205              	.LBB11011:
 17206              	.LBI11011:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17207              		.loc 2 329 7 is_stmt 1 view .LVU4437
 17208              	.LBB11012:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17209              		.loc 2 332 19 is_stmt 0 view .LVU4438
 17210 0080 012A     		cmp	r2, #1
 17211 0082 00D9     		bls	.L375
 17212 0084 0122     		movs	r2, #1
 17213              	.LVL1180:
 17214              	.L375:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17215              		.loc 2 332 19 view .LVU4439
ARM GAS  /tmp/ccL95Edz.s 			page 636


 17216              	.LBE11012:
 17217              	.LBE11011:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 17218              		.loc 2 1813 4 view .LVU4440
 17219 0086 0021     		movs	r1, #0
 17220 0088 2846     		mov	r0, r5
 17221 008a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
 17222              	.LVL1181:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 17223              		.loc 2 1813 4 view .LVU4441
 17224              	.LBE11007:
 17225              	.LBE11006:
 145:alohal/filesystem/filesystem.cpp ****     // Break string to part divided by /
 17226              		.loc 17 145 5 is_stmt 1 view .LVU4442
 17227              	.LBB11013:
 17228              	.LBI11013:
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17229              		.loc 2 2393 7 view .LVU4443
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17230              		.loc 2 2393 7 is_stmt 0 view .LVU4444
 17231              	.LBE11013:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 17232              		.loc 8 332 2 is_stmt 1 view .LVU4445
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 17233              		.loc 8 335 2 view .LVU4446
 17234              	.LBB11015:
 17235              	.LBB11014:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17236              		.loc 2 2396 56 is_stmt 0 view .LVU4447
 17237 008e 0123     		movs	r3, #1
 17238 0090 0022     		movs	r2, #0
 17239 0092 4949     		ldr	r1, .L395
 17240 0094 2846     		mov	r0, r5
 17241 0096 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
 17242              	.LVL1182:
 17243 009a 0446     		mov	r4, r0
 17244              	.LVL1183:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17245              		.loc 2 2396 56 view .LVU4448
 17246 009c 20E0     		b	.L382
 17247              	.LVL1184:
 17248              	.L391:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17249              		.loc 2 2396 56 view .LVU4449
 17250              	.LBE11014:
 17251              	.LBE11015:
 17252              	.LBB11016:
 17253              	.LBB10975:
 17254              	.LBB10946:
 17255              	.LBI10946:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17256              		.loc 2 930 7 is_stmt 1 view .LVU4450
 17257              	.LBB10947:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17258              		.loc 2 931 16 is_stmt 0 view .LVU4451
 17259 009e 019A     		ldr	r2, [sp, #4]
 17260              	.LVL1185:
ARM GAS  /tmp/ccL95Edz.s 			page 637


 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17261              		.loc 2 931 16 view .LVU4452
 17262              	.LBE10947:
 17263              	.LBE10946:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 17264              		.loc 2 750 6 view .LVU4453
 17265 00a0 1AB1     		cbz	r2, .L368
 17266              	.LVL1186:
 17267              	.LBB10948:
 17268              	.LBI10948:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17269              		.loc 2 346 7 is_stmt 1 view .LVU4454
 17270              	.LBB10949:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 17271              		.loc 2 348 2 is_stmt 0 view .LVU4455
 17272 00a2 012A     		cmp	r2, #1
 17273 00a4 07D0     		beq	.L392
 17274              	.LVL1187:
 17275              	.LBB10950:
 17276              	.LBI10950:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 17277              		.loc 8 361 7 is_stmt 1 view .LVU4456
 17278              	.LBB10951:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 17279              		.loc 8 363 2 view .LVU4457
 17280              		.loc 8 365 2 view .LVU4458
 17281              		.loc 8 365 49 is_stmt 0 view .LVU4459
 17282 00a6 FFF7FEFF 		bl	memcpy
 17283              	.LVL1188:
 17284              	.L368:
 17285              		.loc 8 365 49 view .LVU4460
 17286              	.LBE10951:
 17287              	.LBE10950:
 17288              	.LBE10949:
 17289              	.LBE10948:
 17290              	.LBB10955:
 17291              	.LBI10955:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17292              		.loc 2 930 7 is_stmt 1 view .LVU4461
 17293              	.LBB10956:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17294              		.loc 2 931 16 is_stmt 0 view .LVU4462
 17295 00aa 019B     		ldr	r3, [sp, #4]
 17296              	.LVL1189:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17297              		.loc 2 931 16 view .LVU4463
 17298              	.LBE10956:
 17299              	.LBE10955:
 17300              	.LBB10957:
 17301              	.LBI10957:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17302              		.loc 2 214 7 is_stmt 1 view .LVU4464
 17303              	.LBB10958:
 17304              	.LBB10959:
 17305              	.LBI10959:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 17306              		.loc 2 182 7 view .LVU4465
ARM GAS  /tmp/ccL95Edz.s 			page 638


 17307              	.LBB10960:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17308              		.loc 2 183 9 is_stmt 0 view .LVU4466
 17309 00ac 6B60     		str	r3, [r5, #4]
 17310              	.LVL1190:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17311              		.loc 2 183 9 view .LVU4467
 17312              	.LBE10960:
 17313              	.LBE10959:
 17314              	.LBB10961:
 17315              	.LBI10961:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17316              		.loc 2 186 7 is_stmt 1 view .LVU4468
 17317              	.LBB10962:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17318              		.loc 2 187 28 is_stmt 0 view .LVU4469
 17319 00ae 2A68     		ldr	r2, [r5]
 17320              	.LVL1191:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17321              		.loc 2 187 28 view .LVU4470
 17322              	.LBE10962:
 17323              	.LBE10961:
 17324              	.LBB10963:
 17325              	.LBI10963:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 17326              		.loc 8 299 7 is_stmt 1 view .LVU4471
 17327              	.LBB10964:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17328              		.loc 8 300 9 view .LVU4472
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17329              		.loc 8 300 14 is_stmt 0 view .LVU4473
 17330 00b0 0021     		movs	r1, #0
 17331 00b2 D154     		strb	r1, [r2, r3]
 17332              	.LVL1192:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17333              		.loc 8 300 14 view .LVU4474
 17334              	.LBE10964:
 17335              	.LBE10963:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17336              		.loc 2 218 7 view .LVU4475
 17337 00b4 CFE7     		b	.L370
 17338              	.LVL1193:
 17339              	.L392:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17340              		.loc 2 218 7 view .LVU4476
 17341              	.LBE10958:
 17342              	.LBE10957:
 17343              	.LBB10965:
 17344              	.LBB10954:
 17345              	.LBB10952:
 17346              	.LBI10952:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 17347              		.loc 8 299 7 is_stmt 1 view .LVU4477
 17348              	.LBB10953:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17349              		.loc 8 300 9 view .LVU4478
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 639


 17350              		.loc 8 300 16 is_stmt 0 view .LVU4479
 17351 00b6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17352              		.loc 8 300 14 view .LVU4480
 17353 00b8 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17354              		.loc 8 300 22 view .LVU4481
 17355 00ba F6E7     		b	.L368
 17356              	.LVL1194:
 17357              	.L389:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17358              		.loc 8 300 22 view .LVU4482
 17359              	.LBE10953:
 17360              	.LBE10952:
 17361              	.LBE10954:
 17362              	.LBE10965:
 17363              	.LBB10966:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 17364              		.loc 2 759 14 view .LVU4483
 17365 00bc 0020     		movs	r0, #0
 17366 00be C1E7     		b	.L371
 17367              	.LVL1195:
 17368              	.L372:
 17369              	.LBB10944:
 17370              	.LBI10944:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 17371              		.loc 2 178 7 is_stmt 1 view .LVU4484
 17372              	.LBB10945:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17373              		.loc 2 179 9 is_stmt 0 view .LVU4485
 17374 00c0 02AB     		add	r3, sp, #8
 17375 00c2 0093     		str	r3, [sp]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17376              		.loc 2 179 33 view .LVU4486
 17377 00c4 C7E7     		b	.L370
 17378              	.LVL1196:
 17379              	.L393:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17380              		.loc 2 179 33 view .LVU4487
 17381              	.LBE10945:
 17382              	.LBE10944:
 17383              	.LBE10966:
 17384              	.LBE10975:
 17385              	.LBE11016:
 17386              	.LBB11017:
 17387              	.LBB11018:
 17388              	.LBB11019:
 17389              	.LBI11019:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17390              		.loc 2 214 7 is_stmt 1 view .LVU4488
 17391              	.LBB11020:
 17392              	.LBB11021:
 17393              	.LBI11021:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 17394              		.loc 2 182 7 view .LVU4489
 17395              	.LBB11022:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 640


 17396              		.loc 2 183 9 is_stmt 0 view .LVU4490
 17397 00c6 0023     		movs	r3, #0
 17398              	.LVL1197:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17399              		.loc 2 183 9 view .LVU4491
 17400 00c8 6B60     		str	r3, [r5, #4]
 17401              	.LVL1198:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17402              		.loc 2 183 9 view .LVU4492
 17403              	.LBE11022:
 17404              	.LBE11021:
 17405              	.LBB11023:
 17406              	.LBI11023:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17407              		.loc 2 186 7 is_stmt 1 view .LVU4493
 17408              	.LBB11024:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17409              		.loc 2 187 28 is_stmt 0 view .LVU4494
 17410 00ca 2A68     		ldr	r2, [r5]
 17411              	.LVL1199:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17412              		.loc 2 187 28 view .LVU4495
 17413              	.LBE11024:
 17414              	.LBE11023:
 17415              	.LBB11025:
 17416              	.LBI11025:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 17417              		.loc 8 299 7 is_stmt 1 view .LVU4496
 17418              	.LBB11026:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17419              		.loc 8 300 9 view .LVU4497
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17420              		.loc 8 300 14 is_stmt 0 view .LVU4498
 17421 00cc 1370     		strb	r3, [r2]
 17422              	.LVL1200:
 17423              	.L380:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17424              		.loc 8 300 14 view .LVU4499
 17425              	.LBE11026:
 17426              	.LBE11025:
 17427              	.LBE11020:
 17428              	.LBE11019:
 17429              	.LBE11018:
 17430              	.LBE11017:
 150:alohal/filesystem/filesystem.cpp ****             position = filename.find("/");
 17431              		.loc 17 150 9 is_stmt 1 view .LVU4500
 17432              	.LBB11036:
 17433              	.LBI11036:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17434              		.loc 2 936 7 view .LVU4501
 17435              	.LBB11037:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17436              		.loc 2 937 16 is_stmt 0 view .LVU4502
 17437 00ce 6B68     		ldr	r3, [r5, #4]
 17438              	.LVL1201:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17439              		.loc 2 937 16 view .LVU4503
ARM GAS  /tmp/ccL95Edz.s 			page 641


 17440              	.LBE11037:
 17441              	.LBE11036:
 150:alohal/filesystem/filesystem.cpp ****             position = filename.find("/");
 17442              		.loc 17 150 9 view .LVU4504
 17443 00d0 7BB3     		cbz	r3, .L376
 151:alohal/filesystem/filesystem.cpp ****         } else {
 17444              		.loc 17 151 13 is_stmt 1 view .LVU4505
 17445              	.LVL1202:
 17446              	.LBB11038:
 17447              	.LBI11038:
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17448              		.loc 2 2393 7 view .LVU4506
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17449              		.loc 2 2393 7 is_stmt 0 view .LVU4507
 17450              	.LBE11038:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 17451              		.loc 8 332 2 is_stmt 1 view .LVU4508
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 17452              		.loc 8 335 2 view .LVU4509
 17453              	.LBB11040:
 17454              	.LBB11039:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17455              		.loc 2 2396 56 is_stmt 0 view .LVU4510
 17456 00d2 0123     		movs	r3, #1
 17457 00d4 0022     		movs	r2, #0
 17458 00d6 3849     		ldr	r1, .L395
 17459 00d8 2846     		mov	r0, r5
 17460 00da FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
 17461              	.LVL1203:
 17462 00de 0446     		mov	r4, r0
 17463              	.LVL1204:
 17464              	.L382:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17465              		.loc 2 2396 56 view .LVU4511
 17466              	.LBE11039:
 17467              	.LBE11040:
 147:alohal/filesystem/filesystem.cpp ****         path.emplace_back(filename.substr(0, position));
 17468              		.loc 17 147 5 is_stmt 1 view .LVU4512
 147:alohal/filesystem/filesystem.cpp ****         path.emplace_back(filename.substr(0, position));
 17469              		.loc 17 147 21 view .LVU4513
 17470 00e0 B4F1FF3F 		cmp	r4, #-1
 17471 00e4 25D0     		beq	.L376
 148:alohal/filesystem/filesystem.cpp ****         filename.erase(0, position + 1);
 17472              		.loc 17 148 9 view .LVU4514
 17473              	.LVL1205:
 17474              	.LBB11041:
 17475              	.LBI11041:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 17476              		.loc 2 2834 7 view .LVU4515
 17477              	.LBB11042:
 17478              	.LBI11042:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 17479              		.loc 2 476 7 view .LVU4516
 17480              	.LBB11043:
 17481              	.LBB11044:
 17482              	.LBI11044:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 642


 17483              		.loc 2 190 7 view .LVU4517
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17484              		.loc 2 190 7 is_stmt 0 view .LVU4518
 17485              	.LBE11044:
 17486              	.LBB11045:
 17487              	.LBI11045:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 17488              		.loc 5 138 7 is_stmt 1 view .LVU4519
 17489              	.LBB11046:
 17490              	.LBI11046:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17491              		.loc 4 80 7 view .LVU4520
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17492              		.loc 4 80 7 is_stmt 0 view .LVU4521
 17493              	.LBE11046:
 17494              	.LBE11045:
 17495              	.LBB11047:
 17496              	.LBI11047:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 17497              		.loc 2 159 2 is_stmt 1 view .LVU4522
 17498              	.LBB11048:
 17499              	.LBB11049:
 17500              	.LBB11050:
 17501              	.LBI11050:
 17502              		.loc 9 99 5 view .LVU4523
 17503              		.loc 9 99 5 is_stmt 0 view .LVU4524
 17504              	.LBE11050:
 17505              	.LBB11051:
 17506              	.LBI11051:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 17507              		.loc 5 141 7 is_stmt 1 view .LVU4525
 17508              	.LBB11052:
 17509              	.LBI11052:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17510              		.loc 4 83 7 view .LVU4526
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17511              		.loc 4 83 7 is_stmt 0 view .LVU4527
 17512              	.LBE11052:
 17513              	.LBE11051:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17514              		.loc 2 160 46 view .LVU4528
 17515 00e6 0EAB     		add	r3, sp, #56
 17516              	.LVL1206:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17517              		.loc 2 160 46 view .LVU4529
 17518 00e8 0C93     		str	r3, [sp, #48]
 17519              	.LVL1207:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17520              		.loc 2 160 46 view .LVU4530
 17521              	.LBE11049:
 17522              	.LBE11048:
 17523              	.LBE11047:
 17524              	.LBB11053:
 17525              	.LBI11053:
 17526              		.loc 5 153 7 is_stmt 1 view .LVU4531
 17527              	.LBB11054:
 17528              	.LBI11054:
ARM GAS  /tmp/ccL95Edz.s 			page 643


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17529              		.loc 4 89 7 view .LVU4532
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17530              		.loc 4 89 7 is_stmt 0 view .LVU4533
 17531              	.LBE11054:
 17532              	.LBE11053:
 17533              	.LBB11055:
 17534              	.LBB11056:
 17535              	.LBI11056:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17536              		.loc 2 186 7 is_stmt 1 view .LVU4534
 17537              	.LBB11057:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17538              		.loc 2 187 28 is_stmt 0 view .LVU4535
 17539 00ea 2968     		ldr	r1, [r5]
 17540              	.LVL1208:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17541              		.loc 2 187 28 view .LVU4536
 17542              	.LBE11057:
 17543              	.LBE11056:
 17544              	.LBB11058:
 17545              	.LBI11058:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17546              		.loc 2 310 7 is_stmt 1 view .LVU4537
 17547              	.LBB11059:
 17548              	.LBI11059:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17549              		.loc 2 930 7 view .LVU4538
 17550              	.LBB11060:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17551              		.loc 2 931 16 is_stmt 0 view .LVU4539
 17552 00ec 6A68     		ldr	r2, [r5, #4]
 17553              	.LVL1209:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17554              		.loc 2 931 16 view .LVU4540
 17555              	.LBE11060:
 17556              	.LBE11059:
 17557              	.LBE11058:
 17558              	.LBB11061:
 17559              	.LBI11061:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17560              		.loc 2 329 7 is_stmt 1 view .LVU4541
 17561              	.LBB11062:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17562              		.loc 2 332 19 is_stmt 0 view .LVU4542
 17563 00ee 9442     		cmp	r4, r2
 17564 00f0 00D2     		bcs	.L377
 17565 00f2 2246     		mov	r2, r4
 17566              	.LVL1210:
 17567              	.L377:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17568              		.loc 2 332 19 view .LVU4543
 17569              	.LBE11062:
 17570              	.LBE11061:
 17571              	.LBB11063:
 17572              	.LBI11063:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
ARM GAS  /tmp/ccL95Edz.s 			page 644


 17573              		.loc 2 263 9 is_stmt 1 view .LVU4544
 17574              	.LBB11064:
 17575              	.LBB11065:
 17576              	.LBI11065:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 17577              		.loc 2 243 9 view .LVU4545
 17578              	.LBB11066:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17579              		.loc 2 247 11 is_stmt 0 view .LVU4546
 17580 00f4 4FF00003 		mov	r3, #0
 17581 00f8 0A44     		add	r2, r2, r1
 17582              	.LVL1211:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17583              		.loc 2 247 11 view .LVU4547
 17584 00fa 0CA8     		add	r0, sp, #48
 17585              	.LVL1212:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17586              		.loc 2 247 11 view .LVU4548
 17587 00fc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 17588              	.LVL1213:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17589              		.loc 2 247 11 view .LVU4549
 17590              	.LBE11066:
 17591              	.LBE11065:
 17592              	.LBE11064:
 17593              	.LBE11063:
 17594              	.LBE11055:
 17595              	.LBE11043:
 17596              	.LBE11042:
 17597              	.LBE11041:
 148:alohal/filesystem/filesystem.cpp ****         filename.erase(0, position + 1);
 17598              		.loc 17 148 55 view .LVU4550
 17599 0100 0CA9     		add	r1, sp, #48
 17600 0102 3046     		mov	r0, r6
 17601 0104 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEE
 17602              	.LVL1214:
 17603              	.LBB11067:
 17604              	.LBI11067:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 17605              		.loc 2 657 7 is_stmt 1 view .LVU4551
 17606              	.LBB11068:
 17607              	.LBI11068:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17608              		.loc 2 229 7 view .LVU4552
 17609              	.LBB11069:
 17610              	.LBB11070:
 17611              	.LBI11070:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 17612              		.loc 2 221 7 view .LVU4553
 17613              	.LBB11071:
 17614              	.LBI11071:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17615              		.loc 2 186 7 view .LVU4554
 17616              	.LBB11072:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17617              		.loc 2 187 28 is_stmt 0 view .LVU4555
 17618 0108 0C98     		ldr	r0, [sp, #48]
ARM GAS  /tmp/ccL95Edz.s 			page 645


 17619              	.LVL1215:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17620              		.loc 2 187 28 view .LVU4556
 17621              	.LBE11072:
 17622              	.LBE11071:
 17623              	.LBB11073:
 17624              	.LBI11073:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17625              		.loc 2 200 7 is_stmt 1 view .LVU4557
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17626              		.loc 2 200 7 is_stmt 0 view .LVU4558
 17627              	.LBE11073:
 17628              	.LBE11070:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 17629              		.loc 2 231 2 view .LVU4559
 17630 010a 0EAB     		add	r3, sp, #56
 17631 010c 9842     		cmp	r0, r3
 17632 010e 01D0     		beq	.L378
 17633              	.LVL1216:
 17634              	.LBB11074:
 17635              	.LBI11074:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 17636              		.loc 2 236 7 is_stmt 1 view .LVU4560
 17637              	.LBB11075:
 17638              	.LBB11076:
 17639              	.LBI11076:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 17640              		.loc 3 469 7 view .LVU4561
 17641              	.LBB11077:
 17642              	.LBI11077:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 17643              		.loc 4 119 7 view .LVU4562
 17644              	.LBB11078:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17645              		.loc 4 128 19 is_stmt 0 view .LVU4563
 17646 0110 FFF7FEFF 		bl	_ZdlPv
 17647              	.LVL1217:
 17648              	.L378:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17649              		.loc 4 128 19 view .LVU4564
 17650              	.LBE11078:
 17651              	.LBE11077:
 17652              	.LBE11076:
 17653              	.LBE11075:
 17654              	.LBE11074:
 17655              	.LBE11069:
 17656              	.LBE11068:
 17657              	.LBB11079:
 17658              	.LBI11079:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17659              		.loc 2 150 14 is_stmt 1 view .LVU4565
 17660              	.LBB11080:
 17661              	.LBI11080:
 17662              		.loc 5 153 7 view .LVU4566
 17663              	.LBB11081:
 17664              	.LBI11081:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 646


 17665              		.loc 4 89 7 view .LVU4567
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17666              		.loc 4 89 7 is_stmt 0 view .LVU4568
 17667              	.LBE11081:
 17668              	.LBE11080:
 17669              	.LBE11079:
 17670              	.LBE11067:
 149:alohal/filesystem/filesystem.cpp ****         if (filename.length() > 0) {
 17671              		.loc 17 149 9 is_stmt 1 view .LVU4569
 149:alohal/filesystem/filesystem.cpp ****         if (filename.length() > 0) {
 17672              		.loc 17 149 39 is_stmt 0 view .LVU4570
 17673 0114 631C     		adds	r3, r4, #1
 17674              	.LVL1218:
 17675              	.LBB11082:
 17676              	.LBI11017:
1807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17677              		.loc 2 1807 7 is_stmt 1 view .LVU4571
 17678              	.LBB11034:
 17679              	.LBB11027:
 17680              	.LBI11027:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17681              		.loc 2 310 7 view .LVU4572
 17682              	.LBB11028:
 17683              	.LBI11028:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17684              		.loc 2 930 7 view .LVU4573
 17685              	.LBB11029:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17686              		.loc 2 931 16 is_stmt 0 view .LVU4574
 17687 0116 6A68     		ldr	r2, [r5, #4]
 17688              	.LVL1219:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17689              		.loc 2 931 16 view .LVU4575
 17690              	.LBE11029:
 17691              	.LBE11028:
 17692              	.LBE11027:
1810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
 17693              		.loc 2 1810 2 view .LVU4576
 17694 0118 14F1020F 		cmn	r4, #2
 17695 011c D3D0     		beq	.L393
1812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
 17696              		.loc 2 1812 7 view .LVU4577
 17697 011e 002B     		cmp	r3, #0
 17698 0120 D5D0     		beq	.L380
 17699              	.LVL1220:
 17700              	.LBB11030:
 17701              	.LBI11030:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17702              		.loc 2 329 7 is_stmt 1 view .LVU4578
 17703              	.LBB11031:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17704              		.loc 2 332 19 is_stmt 0 view .LVU4579
 17705 0122 9342     		cmp	r3, r2
 17706 0124 00D2     		bcs	.L381
 17707 0126 1A46     		mov	r2, r3
 17708              	.LVL1221:
 17709              	.L381:
ARM GAS  /tmp/ccL95Edz.s 			page 647


 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17710              		.loc 2 332 19 view .LVU4580
 17711              	.LBE11031:
 17712              	.LBE11030:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 17713              		.loc 2 1813 4 view .LVU4581
 17714 0128 0021     		movs	r1, #0
 17715 012a 2846     		mov	r0, r5
 17716 012c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
 17717              	.LVL1222:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 17718              		.loc 2 1813 4 view .LVU4582
 17719 0130 CDE7     		b	.L380
 17720              	.LVL1223:
 17721              	.L376:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 17722              		.loc 2 1813 4 view .LVU4583
 17723              	.LBE11034:
 17724              	.LBE11082:
 157:alohal/filesystem/filesystem.cpp ****         path.emplace_back(filename);
 17725              		.loc 17 157 5 is_stmt 1 view .LVU4584
 17726              	.LBB11083:
 17727              	.LBI11083:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17728              		.loc 2 936 7 view .LVU4585
 17729              	.LBB11084:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17730              		.loc 2 937 16 is_stmt 0 view .LVU4586
 17731 0132 6B68     		ldr	r3, [r5, #4]
 17732              	.LVL1224:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17733              		.loc 2 937 16 view .LVU4587
 17734              	.LBE11084:
 17735              	.LBE11083:
 157:alohal/filesystem/filesystem.cpp ****         path.emplace_back(filename);
 17736              		.loc 17 157 5 view .LVU4588
 17737 0134 0BB9     		cbnz	r3, .L394
 17738              	.L383:
 17739              	.LBB11085:
 17740              	.LBB11035:
 17741              	.LBB11033:
 17742              	.LBB11032:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17743              		.loc 2 332 19 discriminator 1 view .LVU4589
 17744 0136 0024     		movs	r4, #0
 17745              	.LVL1225:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17746              		.loc 2 332 19 discriminator 1 view .LVU4590
 17747 0138 19E0     		b	.L388
 17748              	.LVL1226:
 17749              	.L394:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 17750              		.loc 2 332 19 discriminator 1 view .LVU4591
 17751              	.LBE11032:
 17752              	.LBE11033:
 17753              	.LBE11035:
 17754              	.LBE11085:
ARM GAS  /tmp/ccL95Edz.s 			page 648


 158:alohal/filesystem/filesystem.cpp ****     }
 17755              		.loc 17 158 9 is_stmt 1 view .LVU4592
 158:alohal/filesystem/filesystem.cpp ****     }
 17756              		.loc 17 158 35 is_stmt 0 view .LVU4593
 17757 013a 2946     		mov	r1, r5
 17758 013c 3046     		mov	r0, r6
 17759 013e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EE
 17760              	.LVL1227:
 17761 0142 F8E7     		b	.L383
 17762              	.LVL1228:
 17763              	.L385:
 17764              	.LBB11086:
 166:alohal/filesystem/filesystem.cpp ****             if (i > 1) { // case: /test/.. -> /
 17765              		.loc 17 166 16 is_stmt 1 view .LVU4594
 17766              	.LBB11087:
 17767              	.LBI11087:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 17768              		.loc 11 1040 7 view .LVU4595
 17769              	.LBB11088:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 17770              		.loc 11 1043 25 is_stmt 0 view .LVU4596
 17771 0144 3068     		ldr	r0, [r6]
 17772              	.LVL1229:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 17773              		.loc 11 1043 25 view .LVU4597
 17774              	.LBE11088:
 17775              	.LBE11087:
 17776              	.LBB11089:
 17777              	.LBI11089:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 17778              		.loc 2 6175 5 is_stmt 1 view .LVU4598
 17779              	.LBB11090:
 17780              		.loc 2 6177 35 is_stmt 0 view .LVU4599
 17781 0146 1D49     		ldr	r1, .L395+4
 17782 0148 2844     		add	r0, r0, r5
 17783              	.LVL1230:
 17784              		.loc 2 6177 35 view .LVU4600
 17785 014a FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 17786              	.LVL1231:
 17787              		.loc 2 6177 35 view .LVU4601
 17788              	.LBE11090:
 17789              	.LBE11089:
 166:alohal/filesystem/filesystem.cpp ****             if (i > 1) { // case: /test/.. -> /
 17790              		.loc 17 166 16 view .LVU4602
 17791 014e 68B9     		cbnz	r0, .L386
 167:alohal/filesystem/filesystem.cpp ****                 path.erase(path.begin() + i - 1);
 17792              		.loc 17 167 13 is_stmt 1 view .LVU4603
 17793 0150 012C     		cmp	r4, #1
 17794 0152 26D9     		bls	.L387
 168:alohal/filesystem/filesystem.cpp ****                 path.erase(path.begin() + i);
 17795              		.loc 17 168 17 view .LVU4604
 17796              	.LVL1232:
 17797              	.LBB11091:
 17798              	.LBI11091:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 17799              		.loc 11 808 7 view .LVU4605
 17800              	.LBB11092:
ARM GAS  /tmp/ccL95Edz.s 			page 649


 17801              	.LBI11092:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17802              		.loc 13 806 7 view .LVU4606
 17803              	.LBB11093:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17804              		.loc 13 807 23 is_stmt 0 view .LVU4607
 17805 0154 3168     		ldr	r1, [r6]
 17806              	.LVL1233:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17807              		.loc 13 807 23 view .LVU4608
 17808              	.LBE11093:
 17809              	.LBE11092:
 17810              	.LBE11091:
 17811              	.LBB11094:
 17812              	.LBI11094:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 17813              		.loc 13 859 7 is_stmt 1 view .LVU4609
 17814              	.LBB11095:
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17815              		.loc 13 860 45 is_stmt 0 view .LVU4610
 17816 0156 2944     		add	r1, r1, r5
 17817              	.LVL1234:
 17818              	.LBB11096:
 17819              	.LBI11096:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17820              		.loc 13 806 7 is_stmt 1 view .LVU4611
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17821              		.loc 13 806 7 is_stmt 0 view .LVU4612
 17822              	.LBE11096:
 17823              	.LBE11095:
 17824              	.LBE11094:
 17825              	.LBB11097:
 17826              	.LBI11097:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 17827              		.loc 13 867 7 is_stmt 1 view .LVU4613
 17828              	.LBB11098:
 17829              	.LBB11099:
 17830              	.LBI11099:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17831              		.loc 13 806 7 view .LVU4614
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17832              		.loc 13 806 7 is_stmt 0 view .LVU4615
 17833              	.LBE11099:
 17834              	.LBE11098:
 17835              	.LBE11097:
 17836              	.LBB11100:
 17837              	.LBI11100:
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
 17838              		.loc 13 811 9 is_stmt 1 view .LVU4616
 17839              	.LBB11101:
 17840              	.LBI11101:
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 17841              		.loc 13 871 7 view .LVU4617
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 17842              		.loc 13 871 7 is_stmt 0 view .LVU4618
 17843              	.LBE11101:
 17844              	.LBE11100:
ARM GAS  /tmp/ccL95Edz.s 			page 650


 17845              	.LBB11102:
 17846              	.LBI11102:
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
 17847              		.loc 11 1427 7 is_stmt 1 view .LVU4619
 17848              	.LBB11103:
 17849              	.LBB11104:
 17850              	.LBI11104:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 17851              		.loc 11 808 7 view .LVU4620
 17852              	.LBB11105:
 17853              	.LBI11105:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17854              		.loc 13 806 7 view .LVU4621
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17855              		.loc 13 806 7 is_stmt 0 view .LVU4622
 17856              	.LBE11105:
 17857              	.LBE11104:
 17858              	.LBB11106:
 17859              	.LBI11106:
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 17860              		.loc 11 881 7 is_stmt 1 view .LVU4623
 17861              	.LBB11107:
 17862              	.LBI11107:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17863              		.loc 13 806 7 view .LVU4624
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17864              		.loc 13 806 7 is_stmt 0 view .LVU4625
 17865              	.LBE11107:
 17866              	.LBE11106:
 17867              	.LBB11108:
 17868              	.LBI11108:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 17869              		.loc 13 859 7 is_stmt 1 view .LVU4626
 17870              	.LBB11109:
 17871              	.LBB11110:
 17872              	.LBI11110:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17873              		.loc 13 806 7 view .LVU4627
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17874              		.loc 13 806 7 is_stmt 0 view .LVU4628
 17875              	.LBE11110:
 17876              	.LBE11109:
 17877              	.LBE11108:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 17878              		.loc 11 1428 58 view .LVU4629
 17879 0158 1839     		subs	r1, r1, #24
 17880 015a 3046     		mov	r0, r6
 17881 015c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx1
 17882              	.LVL1235:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 17883              		.loc 11 1428 58 view .LVU4630
 17884              	.LBE11103:
 17885              	.LBE11102:
 169:alohal/filesystem/filesystem.cpp ****                 i -= 2;
 17886              		.loc 17 169 17 is_stmt 1 view .LVU4631
 17887              	.LBB11111:
 17888              	.LBI11111:
ARM GAS  /tmp/ccL95Edz.s 			page 651


 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 17889              		.loc 11 808 7 view .LVU4632
 17890              	.LBB11112:
 17891              	.LBI11112:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17892              		.loc 13 806 7 view .LVU4633
 17893              	.LBB11113:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17894              		.loc 13 807 23 is_stmt 0 view .LVU4634
 17895 0160 3168     		ldr	r1, [r6]
 17896              	.LVL1236:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17897              		.loc 13 807 23 view .LVU4635
 17898              	.LBE11113:
 17899              	.LBE11112:
 17900              	.LBE11111:
 17901              	.LBB11114:
 17902              	.LBI11114:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 17903              		.loc 13 859 7 is_stmt 1 view .LVU4636
 17904              	.LBB11115:
 17905              	.LBB11116:
 17906              	.LBI11116:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17907              		.loc 13 806 7 view .LVU4637
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17908              		.loc 13 806 7 is_stmt 0 view .LVU4638
 17909              	.LBE11116:
 17910              	.LBE11115:
 17911              	.LBE11114:
 17912              	.LBB11117:
 17913              	.LBI11117:
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
 17914              		.loc 13 811 9 is_stmt 1 view .LVU4639
 17915              	.LBB11118:
 17916              	.LBI11118:
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 17917              		.loc 13 871 7 view .LVU4640
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 17918              		.loc 13 871 7 is_stmt 0 view .LVU4641
 17919              	.LBE11118:
 17920              	.LBE11117:
 17921              	.LBB11119:
 17922              	.LBI11119:
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
 17923              		.loc 11 1427 7 is_stmt 1 view .LVU4642
 17924              	.LBB11120:
 17925              	.LBB11121:
 17926              	.LBI11121:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 17927              		.loc 11 808 7 view .LVU4643
 17928              	.LBB11122:
 17929              	.LBI11122:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17930              		.loc 13 806 7 view .LVU4644
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17931              		.loc 13 806 7 is_stmt 0 view .LVU4645
ARM GAS  /tmp/ccL95Edz.s 			page 652


 17932              	.LBE11122:
 17933              	.LBE11121:
 17934              	.LBB11123:
 17935              	.LBI11123:
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 17936              		.loc 11 881 7 is_stmt 1 view .LVU4646
 17937              	.LBB11124:
 17938              	.LBI11124:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17939              		.loc 13 806 7 view .LVU4647
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17940              		.loc 13 806 7 is_stmt 0 view .LVU4648
 17941              	.LBE11124:
 17942              	.LBE11123:
 17943              	.LBB11125:
 17944              	.LBI11125:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 17945              		.loc 13 859 7 is_stmt 1 view .LVU4649
 17946              	.LBB11126:
 17947              	.LBB11127:
 17948              	.LBI11127:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17949              		.loc 13 806 7 view .LVU4650
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17950              		.loc 13 806 7 is_stmt 0 view .LVU4651
 17951              	.LBE11127:
 17952              	.LBE11126:
 17953              	.LBE11125:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 17954              		.loc 11 1428 58 view .LVU4652
 17955 0162 2944     		add	r1, r1, r5
 17956 0164 3046     		mov	r0, r6
 17957 0166 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx1
 17958              	.LVL1237:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 17959              		.loc 11 1428 58 view .LVU4653
 17960              	.LBE11120:
 17961              	.LBE11119:
 170:alohal/filesystem/filesystem.cpp ****             } else { // case: /.. -> /
 17962              		.loc 17 170 17 is_stmt 1 view .LVU4654
 170:alohal/filesystem/filesystem.cpp ****             } else { // case: /.. -> /
 17963              		.loc 17 170 19 is_stmt 0 view .LVU4655
 17964 016a 023C     		subs	r4, r4, #2
 17965              	.LVL1238:
 17966              	.L386:
 162:alohal/filesystem/filesystem.cpp ****         if (path[i] == ".") { // case: /test/. -> /test
 17967              		.loc 17 162 5 is_stmt 1 discriminator 2 view .LVU4656
 17968 016c 0134     		adds	r4, r4, #1
 17969              	.LVL1239:
 17970              	.L388:
 162:alohal/filesystem/filesystem.cpp ****         if (path[i] == ".") { // case: /test/. -> /test
 17971              		.loc 17 162 24 discriminator 1 view .LVU4657
 17972              	.LBB11128:
 17973              	.LBI11128:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 17974              		.loc 11 915 7 discriminator 1 view .LVU4658
 17975              	.LBB11129:
ARM GAS  /tmp/ccL95Edz.s 			page 653


 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17976              		.loc 11 916 40 is_stmt 0 discriminator 1 view .LVU4659
 17977 016e 7368     		ldr	r3, [r6, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17978              		.loc 11 916 66 discriminator 1 view .LVU4660
 17979 0170 3068     		ldr	r0, [r6]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17980              		.loc 11 916 50 discriminator 1 view .LVU4661
 17981 0172 1B1A     		subs	r3, r3, r0
 17982 0174 DB10     		asrs	r3, r3, #3
 17983 0176 124A     		ldr	r2, .L395+8
 17984 0178 02FB03F3 		mul	r3, r2, r3
 17985              	.LVL1240:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17986              		.loc 11 916 50 discriminator 1 view .LVU4662
 17987              	.LBE11129:
 17988              	.LBE11128:
 162:alohal/filesystem/filesystem.cpp ****         if (path[i] == ".") { // case: /test/. -> /test
 17989              		.loc 17 162 24 discriminator 1 view .LVU4663
 17990 017c 9C42     		cmp	r4, r3
 17991 017e 17D2     		bcs	.L366
 163:alohal/filesystem/filesystem.cpp ****             path.erase(path.begin() + i);
 17992              		.loc 17 163 9 is_stmt 1 view .LVU4664
 17993              	.LVL1241:
 17994              	.LBB11130:
 17995              	.LBI11130:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 17996              		.loc 11 1040 7 view .LVU4665
 17997              	.LBB11131:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 17998              		.loc 11 1043 34 is_stmt 0 view .LVU4666
 17999 0180 04EB4403 		add	r3, r4, r4, lsl #1
 18000 0184 DD00     		lsls	r5, r3, #3
 18001              	.LVL1242:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 18002              		.loc 11 1043 34 view .LVU4667
 18003              	.LBE11131:
 18004              	.LBE11130:
 18005              	.LBB11132:
 18006              	.LBI11132:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 18007              		.loc 2 6175 5 is_stmt 1 view .LVU4668
 18008              	.LBB11133:
 18009              		.loc 2 6177 35 is_stmt 0 view .LVU4669
 18010 0186 0F49     		ldr	r1, .L395+12
 18011 0188 00EBC300 		add	r0, r0, r3, lsl #3
 18012              	.LVL1243:
 18013              		.loc 2 6177 35 view .LVU4670
 18014 018c FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 18015              	.LVL1244:
 18016              		.loc 2 6177 35 view .LVU4671
 18017              	.LBE11133:
 18018              	.LBE11132:
 163:alohal/filesystem/filesystem.cpp ****             path.erase(path.begin() + i);
 18019              		.loc 17 163 9 view .LVU4672
 18020 0190 0028     		cmp	r0, #0
 18021 0192 D7D1     		bne	.L385
ARM GAS  /tmp/ccL95Edz.s 			page 654


 164:alohal/filesystem/filesystem.cpp ****             i--;
 18022              		.loc 17 164 13 is_stmt 1 view .LVU4673
 18023              	.LVL1245:
 18024              	.LBB11134:
 18025              	.LBI11134:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 18026              		.loc 11 808 7 view .LVU4674
 18027              	.LBB11135:
 18028              	.LBI11135:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18029              		.loc 13 806 7 view .LVU4675
 18030              	.LBB11136:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 18031              		.loc 13 807 23 is_stmt 0 view .LVU4676
 18032 0194 3168     		ldr	r1, [r6]
 18033              	.LVL1246:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 18034              		.loc 13 807 23 view .LVU4677
 18035              	.LBE11136:
 18036              	.LBE11135:
 18037              	.LBE11134:
 18038              	.LBB11137:
 18039              	.LBI11137:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 18040              		.loc 13 859 7 is_stmt 1 view .LVU4678
 18041              	.LBB11138:
 18042              	.LBB11139:
 18043              	.LBI11139:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18044              		.loc 13 806 7 view .LVU4679
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18045              		.loc 13 806 7 is_stmt 0 view .LVU4680
 18046              	.LBE11139:
 18047              	.LBE11138:
 18048              	.LBE11137:
 18049              	.LBB11140:
 18050              	.LBI11140:
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
 18051              		.loc 13 811 9 is_stmt 1 view .LVU4681
 18052              	.LBB11141:
 18053              	.LBI11141:
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 18054              		.loc 13 871 7 view .LVU4682
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 18055              		.loc 13 871 7 is_stmt 0 view .LVU4683
 18056              	.LBE11141:
 18057              	.LBE11140:
 18058              	.LBB11142:
 18059              	.LBI11142:
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
 18060              		.loc 11 1427 7 is_stmt 1 view .LVU4684
 18061              	.LBB11143:
 18062              	.LBB11144:
 18063              	.LBI11144:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 18064              		.loc 11 808 7 view .LVU4685
 18065              	.LBB11145:
ARM GAS  /tmp/ccL95Edz.s 			page 655


 18066              	.LBI11145:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18067              		.loc 13 806 7 view .LVU4686
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18068              		.loc 13 806 7 is_stmt 0 view .LVU4687
 18069              	.LBE11145:
 18070              	.LBE11144:
 18071              	.LBB11146:
 18072              	.LBI11146:
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 18073              		.loc 11 881 7 is_stmt 1 view .LVU4688
 18074              	.LBB11147:
 18075              	.LBI11147:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18076              		.loc 13 806 7 view .LVU4689
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18077              		.loc 13 806 7 is_stmt 0 view .LVU4690
 18078              	.LBE11147:
 18079              	.LBE11146:
 18080              	.LBB11148:
 18081              	.LBI11148:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 18082              		.loc 13 859 7 is_stmt 1 view .LVU4691
 18083              	.LBB11149:
 18084              	.LBB11150:
 18085              	.LBI11150:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18086              		.loc 13 806 7 view .LVU4692
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18087              		.loc 13 806 7 is_stmt 0 view .LVU4693
 18088              	.LBE11150:
 18089              	.LBE11149:
 18090              	.LBE11148:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 18091              		.loc 11 1428 58 view .LVU4694
 18092 0196 2944     		add	r1, r1, r5
 18093 0198 3046     		mov	r0, r6
 18094 019a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx1
 18095              	.LVL1247:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 18096              		.loc 11 1428 58 view .LVU4695
 18097              	.LBE11143:
 18098              	.LBE11142:
 165:alohal/filesystem/filesystem.cpp ****         } else if (path[i] == "..") {
 18099              		.loc 17 165 13 is_stmt 1 view .LVU4696
 165:alohal/filesystem/filesystem.cpp ****         } else if (path[i] == "..") {
 18100              		.loc 17 165 14 is_stmt 0 view .LVU4697
 18101 019e 013C     		subs	r4, r4, #1
 18102              	.LVL1248:
 165:alohal/filesystem/filesystem.cpp ****         } else if (path[i] == "..") {
 18103              		.loc 17 165 14 view .LVU4698
 18104 01a0 E4E7     		b	.L386
 18105              	.L387:
 172:alohal/filesystem/filesystem.cpp ****                 i--;
 18106              		.loc 17 172 17 is_stmt 1 view .LVU4699
 18107              	.LVL1249:
 18108              	.LBB11151:
ARM GAS  /tmp/ccL95Edz.s 			page 656


 18109              	.LBI11151:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 18110              		.loc 11 808 7 view .LVU4700
 18111              	.LBB11152:
 18112              	.LBI11152:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18113              		.loc 13 806 7 view .LVU4701
 18114              	.LBB11153:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 18115              		.loc 13 807 23 is_stmt 0 view .LVU4702
 18116 01a2 3168     		ldr	r1, [r6]
 18117              	.LVL1250:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 18118              		.loc 13 807 23 view .LVU4703
 18119              	.LBE11153:
 18120              	.LBE11152:
 18121              	.LBE11151:
 18122              	.LBB11154:
 18123              	.LBI11154:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 18124              		.loc 13 859 7 is_stmt 1 view .LVU4704
 18125              	.LBB11155:
 18126              	.LBB11156:
 18127              	.LBI11156:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18128              		.loc 13 806 7 view .LVU4705
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18129              		.loc 13 806 7 is_stmt 0 view .LVU4706
 18130              	.LBE11156:
 18131              	.LBE11155:
 18132              	.LBE11154:
 18133              	.LBB11157:
 18134              	.LBI11157:
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
 18135              		.loc 13 811 9 is_stmt 1 view .LVU4707
 18136              	.LBB11158:
 18137              	.LBI11158:
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 18138              		.loc 13 871 7 view .LVU4708
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 18139              		.loc 13 871 7 is_stmt 0 view .LVU4709
 18140              	.LBE11158:
 18141              	.LBE11157:
 18142              	.LBB11159:
 18143              	.LBI11159:
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
 18144              		.loc 11 1427 7 is_stmt 1 view .LVU4710
 18145              	.LBB11160:
 18146              	.LBB11161:
 18147              	.LBI11161:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 18148              		.loc 11 808 7 view .LVU4711
 18149              	.LBB11162:
 18150              	.LBI11162:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18151              		.loc 13 806 7 view .LVU4712
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  /tmp/ccL95Edz.s 			page 657


 18152              		.loc 13 806 7 is_stmt 0 view .LVU4713
 18153              	.LBE11162:
 18154              	.LBE11161:
 18155              	.LBB11163:
 18156              	.LBI11163:
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 18157              		.loc 11 881 7 is_stmt 1 view .LVU4714
 18158              	.LBB11164:
 18159              	.LBI11164:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18160              		.loc 13 806 7 view .LVU4715
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18161              		.loc 13 806 7 is_stmt 0 view .LVU4716
 18162              	.LBE11164:
 18163              	.LBE11163:
 18164              	.LBB11165:
 18165              	.LBI11165:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 18166              		.loc 13 859 7 is_stmt 1 view .LVU4717
 18167              	.LBB11166:
 18168              	.LBB11167:
 18169              	.LBI11167:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18170              		.loc 13 806 7 view .LVU4718
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18171              		.loc 13 806 7 is_stmt 0 view .LVU4719
 18172              	.LBE11167:
 18173              	.LBE11166:
 18174              	.LBE11165:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 18175              		.loc 11 1428 58 view .LVU4720
 18176 01a4 2944     		add	r1, r1, r5
 18177 01a6 3046     		mov	r0, r6
 18178 01a8 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx1
 18179              	.LVL1251:
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 18180              		.loc 11 1428 58 view .LVU4721
 18181              	.LBE11160:
 18182              	.LBE11159:
 173:alohal/filesystem/filesystem.cpp ****             }
 18183              		.loc 17 173 17 is_stmt 1 view .LVU4722
 173:alohal/filesystem/filesystem.cpp ****             }
 18184              		.loc 17 173 18 is_stmt 0 view .LVU4723
 18185 01ac 013C     		subs	r4, r4, #1
 18186              	.LVL1252:
 173:alohal/filesystem/filesystem.cpp ****             }
 18187              		.loc 17 173 18 view .LVU4724
 18188 01ae DDE7     		b	.L386
 18189              	.L366:
 173:alohal/filesystem/filesystem.cpp ****             }
 18190              		.loc 17 173 18 view .LVU4725
 18191              	.LBE11086:
 179:alohal/filesystem/filesystem.cpp **** 
 18192              		.loc 17 179 1 view .LVU4726
 18193 01b0 3046     		mov	r0, r6
 18194 01b2 13B0     		add	sp, sp, #76
 18195              	.LCFI64:
ARM GAS  /tmp/ccL95Edz.s 			page 658


 18196              		.cfi_def_cfa_offset 20
 18197              		@ sp needed
 18198 01b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 18199              	.LVL1253:
 18200              	.L396:
 179:alohal/filesystem/filesystem.cpp **** 
 18201              		.loc 17 179 1 view .LVU4727
 18202 01b6 00BF     		.align	2
 18203              	.L395:
 18204 01b8 04000000 		.word	.LC6
 18205 01bc 00000000 		.word	.LC17
 18206 01c0 ABAAAAAA 		.word	-1431655765
 18207 01c4 00000000 		.word	.LC5
 18208              		.cfi_endproc
 18209              	.LFE3379:
 18211              		.section	.text._ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 18212              		.align	1
 18213              		.global	_ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 18214              		.syntax unified
 18215              		.thumb
 18216              		.thumb_func
 18217              		.fpu fpv4-sp-d16
 18219              	_ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 18220              	.LVL1254:
 18221              	.LFB3395:
 181:alohal/filesystem/filesystem.cpp ****     return Entry_exists(Create_entry_path(filename));
 18222              		.loc 17 181 54 is_stmt 1 view -0
 18223              		.cfi_startproc
 18224              		@ args = 0, pretend = 0, frame = 40
 18225              		@ frame_needed = 0, uses_anonymous_args = 0
 181:alohal/filesystem/filesystem.cpp ****     return Entry_exists(Create_entry_path(filename));
 18226              		.loc 17 181 54 is_stmt 0 view .LVU4729
 18227 0000 70B5     		push	{r4, r5, r6, lr}
 18228              	.LCFI65:
 18229              		.cfi_def_cfa_offset 16
 18230              		.cfi_offset 4, -16
 18231              		.cfi_offset 5, -12
 18232              		.cfi_offset 6, -8
 18233              		.cfi_offset 14, -4
 18234 0002 8AB0     		sub	sp, sp, #40
 18235              	.LCFI66:
 18236              		.cfi_def_cfa_offset 56
 18237 0004 0446     		mov	r4, r0
 18238 0006 0B46     		mov	r3, r1
 182:alohal/filesystem/filesystem.cpp **** }
 18239              		.loc 17 182 5 is_stmt 1 view .LVU4730
 18240              	.LVL1255:
 18241              	.LBB11247:
 18242              	.LBI11247:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 18243              		.loc 2 448 7 view .LVU4731
 18244              	.LBB11248:
 18245              	.LBB11249:
 18246              	.LBB11250:
 18247              	.LBI11250:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18248              		.loc 2 190 7 view .LVU4732
ARM GAS  /tmp/ccL95Edz.s 			page 659


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18249              		.loc 2 190 7 is_stmt 0 view .LVU4733
 18250              	.LBE11250:
 18251              	.LBB11251:
 18252              	.LBI11251:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18253              		.loc 2 290 7 is_stmt 1 view .LVU4734
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18254              		.loc 2 290 7 is_stmt 0 view .LVU4735
 18255              	.LBE11251:
 18256              	.LBB11252:
 18257              	.LBI11252:
 18258              		.loc 19 97 19 is_stmt 1 view .LVU4736
 18259              	.LBB11253:
 18260              	.LBI11253:
 18261              		.loc 3 514 7 view .LVU4737
 18262              	.LBB11254:
 18263              	.LBI11254:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18264              		.loc 5 141 7 view .LVU4738
 18265              	.LBB11255:
 18266              	.LBI11255:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18267              		.loc 4 83 7 view .LVU4739
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18268              		.loc 4 83 7 is_stmt 0 view .LVU4740
 18269              	.LBE11255:
 18270              	.LBE11254:
 18271              	.LBE11253:
 18272              	.LBE11252:
 18273              	.LBB11256:
 18274              	.LBI11256:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 18275              		.loc 2 159 2 is_stmt 1 view .LVU4741
 18276              	.LBB11257:
 18277              	.LBB11258:
 18278              	.LBB11259:
 18279              	.LBI11259:
 18280              		.loc 9 99 5 view .LVU4742
 18281              		.loc 9 99 5 is_stmt 0 view .LVU4743
 18282              	.LBE11259:
 18283              	.LBB11260:
 18284              	.LBI11260:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18285              		.loc 5 141 7 is_stmt 1 view .LVU4744
 18286              	.LBB11261:
 18287              	.LBI11261:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18288              		.loc 4 83 7 view .LVU4745
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18289              		.loc 4 83 7 is_stmt 0 view .LVU4746
 18290              	.LBE11261:
 18291              	.LBE11260:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18292              		.loc 2 160 46 view .LVU4747
 18293 0008 06AA     		add	r2, sp, #24
 18294              	.LVL1256:
ARM GAS  /tmp/ccL95Edz.s 			page 660


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18295              		.loc 2 160 46 view .LVU4748
 18296 000a 0492     		str	r2, [sp, #16]
 18297              	.LVL1257:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18298              		.loc 2 160 46 view .LVU4749
 18299              	.LBE11258:
 18300              	.LBE11257:
 18301              	.LBE11256:
 18302              	.LBB11262:
 18303              	.LBI11262:
 18304              		.loc 5 153 7 is_stmt 1 view .LVU4750
 18305              	.LBB11263:
 18306              	.LBI11263:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18307              		.loc 4 89 7 view .LVU4751
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18308              		.loc 4 89 7 is_stmt 0 view .LVU4752
 18309              	.LBE11263:
 18310              	.LBE11262:
 18311              	.LBB11264:
 18312              	.LBI11264:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18313              		.loc 2 186 7 is_stmt 1 view .LVU4753
 18314              	.LBB11265:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18315              		.loc 2 187 28 is_stmt 0 view .LVU4754
 18316 000c 0968     		ldr	r1, [r1]
 18317              	.LVL1258:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18318              		.loc 2 187 28 view .LVU4755
 18319              	.LBE11265:
 18320              	.LBE11264:
 18321              	.LBB11266:
 18322              	.LBI11266:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18323              		.loc 2 186 7 is_stmt 1 view .LVU4756
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18324              		.loc 2 186 7 is_stmt 0 view .LVU4757
 18325              	.LBE11266:
 18326              	.LBB11267:
 18327              	.LBI11267:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 18328              		.loc 2 936 7 is_stmt 1 view .LVU4758
 18329              	.LBB11268:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18330              		.loc 2 937 16 is_stmt 0 view .LVU4759
 18331 000e 5A68     		ldr	r2, [r3, #4]
 18332              	.LVL1259:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18333              		.loc 2 937 16 view .LVU4760
 18334              	.LBE11268:
 18335              	.LBE11267:
 18336              	.LBB11269:
 18337              	.LBI11269:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 18338              		.loc 2 263 9 is_stmt 1 view .LVU4761
ARM GAS  /tmp/ccL95Edz.s 			page 661


 18339              	.LBB11270:
 18340              	.LBB11271:
 18341              	.LBI11271:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 18342              		.loc 2 243 9 view .LVU4762
 18343              	.LBB11272:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18344              		.loc 2 247 11 is_stmt 0 view .LVU4763
 18345 0010 4FF00003 		mov	r3, #0
 18346              	.LVL1260:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18347              		.loc 2 247 11 view .LVU4764
 18348 0014 0A44     		add	r2, r2, r1
 18349              	.LVL1261:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18350              		.loc 2 247 11 view .LVU4765
 18351 0016 04A8     		add	r0, sp, #16
 18352              	.LVL1262:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18353              		.loc 2 247 11 view .LVU4766
 18354 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 18355              	.LVL1263:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18356              		.loc 2 247 11 view .LVU4767
 18357              	.LBE11272:
 18358              	.LBE11271:
 18359              	.LBE11270:
 18360              	.LBE11269:
 18361              	.LBE11249:
 18362              	.LBE11248:
 18363              	.LBE11247:
 182:alohal/filesystem/filesystem.cpp **** }
 18364              		.loc 17 182 42 view .LVU4768
 18365 001c 04AA     		add	r2, sp, #16
 18366 001e 2146     		mov	r1, r4
 18367 0020 01A8     		add	r0, sp, #4
 18368 0022 FFF7FEFF 		bl	_ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 18369              	.LVL1264:
 182:alohal/filesystem/filesystem.cpp **** }
 18370              		.loc 17 182 24 view .LVU4769
 18371 0026 01A9     		add	r1, sp, #4
 18372 0028 2046     		mov	r0, r4
 18373 002a FFF7FEFF 		bl	_ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESa
 18374              	.LVL1265:
 18375 002e 0546     		mov	r5, r0
 18376              	.LVL1266:
 18377              	.LBB11273:
 18378              	.LBI11273:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 18379              		.loc 11 675 7 is_stmt 1 view .LVU4770
 18380              	.LBB11274:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 18381              		.loc 11 677 15 is_stmt 0 view .LVU4771
 18382 0030 019C     		ldr	r4, [sp, #4]
 18383              	.LVL1267:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 18384              		.loc 11 677 15 view .LVU4772
ARM GAS  /tmp/ccL95Edz.s 			page 662


 18385 0032 029E     		ldr	r6, [sp, #8]
 18386              	.LVL1268:
 18387              	.LBB11275:
 18388              	.LBI11275:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 18389              		.loc 11 273 7 is_stmt 1 view .LVU4773
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 18390              		.loc 11 273 7 is_stmt 0 view .LVU4774
 18391              	.LBE11275:
 18392              	.LBB11276:
 18393              	.LBI11276:
 18394              		.loc 22 203 5 is_stmt 1 view .LVU4775
 18395 0034 02E0     		b	.L400
 18396              	.LVL1269:
 18397              	.L404:
 18398              	.LBB11277:
 18399              	.LBB11278:
 18400              	.LBB11279:
 18401              	.LBB11280:
 18402              	.LBB11281:
 18403              	.LBB11282:
 18404              	.LBB11283:
 18405              	.LBB11284:
 18406              	.LBB11285:
 18407              	.LBI11285:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 18408              		.loc 2 236 7 view .LVU4776
 18409              	.LBB11286:
 18410              	.LBB11287:
 18411              	.LBI11287:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 18412              		.loc 3 469 7 view .LVU4777
 18413              	.LBB11288:
 18414              	.LBI11288:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 18415              		.loc 4 119 7 view .LVU4778
 18416              	.LBB11289:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18417              		.loc 4 128 19 is_stmt 0 view .LVU4779
 18418 0036 FFF7FEFF 		bl	_ZdlPv
 18419              	.LVL1270:
 18420              	.L399:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18421              		.loc 4 128 19 view .LVU4780
 18422              	.LBE11289:
 18423              	.LBE11288:
 18424              	.LBE11287:
 18425              	.LBE11286:
 18426              	.LBE11285:
 18427              	.LBE11284:
 18428              	.LBE11283:
 18429              	.LBB11295:
 18430              	.LBI11295:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18431              		.loc 2 150 14 is_stmt 1 view .LVU4781
 18432              	.LBB11296:
 18433              	.LBI11296:
ARM GAS  /tmp/ccL95Edz.s 			page 663


 18434              		.loc 5 153 7 view .LVU4782
 18435              	.LBB11297:
 18436              	.LBI11297:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18437              		.loc 4 89 7 view .LVU4783
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18438              		.loc 4 89 7 is_stmt 0 view .LVU4784
 18439              	.LBE11297:
 18440              	.LBE11296:
 18441              	.LBE11295:
 18442              	.LBE11282:
 18443              	.LBE11281:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 18444              		.loc 22 107 4 is_stmt 1 view .LVU4785
 18445 003a 1834     		adds	r4, r4, #24
 18446              	.LVL1271:
 18447              	.L400:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 18448              		.loc 22 107 19 view .LVU4786
 18449 003c A642     		cmp	r6, r4
 18450 003e 05D0     		beq	.L398
 18451              	.LVL1272:
 18452              	.LBB11300:
 18453              	.LBI11281:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 18454              		.loc 22 97 5 view .LVU4787
 18455              	.LBB11299:
 18456              	.LBI11282:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 18457              		.loc 2 657 7 view .LVU4788
 18458              	.LBB11298:
 18459              	.LBI11283:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18460              		.loc 2 229 7 view .LVU4789
 18461              	.LBB11294:
 18462              	.LBB11290:
 18463              	.LBI11290:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18464              		.loc 2 221 7 view .LVU4790
 18465              	.LBB11291:
 18466              	.LBI11291:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18467              		.loc 2 186 7 view .LVU4791
 18468              	.LBB11292:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18469              		.loc 2 187 28 is_stmt 0 view .LVU4792
 18470 0040 2346     		mov	r3, r4
 18471 0042 53F8080B 		ldr	r0, [r3], #8
 18472              	.LVL1273:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18473              		.loc 2 187 28 view .LVU4793
 18474              	.LBE11292:
 18475              	.LBE11291:
 18476              	.LBB11293:
 18477              	.LBI11293:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18478              		.loc 2 200 7 is_stmt 1 view .LVU4794
ARM GAS  /tmp/ccL95Edz.s 			page 664


 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18479              		.loc 2 200 7 is_stmt 0 view .LVU4795
 18480              	.LBE11293:
 18481              	.LBE11290:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18482              		.loc 2 231 2 view .LVU4796
 18483 0046 9842     		cmp	r0, r3
 18484 0048 F5D1     		bne	.L404
 18485 004a F6E7     		b	.L399
 18486              	.LVL1274:
 18487              	.L398:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18488              		.loc 2 231 2 view .LVU4797
 18489              	.LBE11294:
 18490              	.LBE11298:
 18491              	.LBE11299:
 18492              	.LBE11300:
 18493              	.LBE11280:
 18494              	.LBE11279:
 18495              	.LBE11278:
 18496              	.LBE11277:
 18497              	.LBE11276:
 18498              	.LBB11301:
 18499              	.LBI11301:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 18500              		.loc 11 330 7 is_stmt 1 view .LVU4798
 18501              	.LBB11302:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 18502              		.loc 11 332 2 is_stmt 0 view .LVU4799
 18503 004c 0198     		ldr	r0, [sp, #4]
 18504              	.LVL1275:
 18505              	.LBB11303:
 18506              	.LBI11303:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 18507              		.loc 11 347 7 is_stmt 1 view .LVU4800
 18508              	.LBB11304:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 18509              		.loc 11 350 2 is_stmt 0 view .LVU4801
 18510 004e 08B1     		cbz	r0, .L401
 18511              	.LVL1276:
 18512              	.LBB11305:
 18513              	.LBI11305:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 18514              		.loc 3 469 7 is_stmt 1 view .LVU4802
 18515              	.LBB11306:
 18516              	.LBB11307:
 18517              	.LBI11307:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 18518              		.loc 4 119 7 view .LVU4803
 18519              	.LBB11308:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18520              		.loc 4 128 19 is_stmt 0 view .LVU4804
 18521 0050 FFF7FEFF 		bl	_ZdlPv
 18522              	.LVL1277:
 18523              	.L401:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18524              		.loc 4 128 19 view .LVU4805
ARM GAS  /tmp/ccL95Edz.s 			page 665


 18525              	.LBE11308:
 18526              	.LBE11307:
 18527              	.LBE11306:
 18528              	.LBE11305:
 18529              	.LBE11304:
 18530              	.LBE11303:
 18531              	.LBB11309:
 18532              	.LBI11309:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 18533              		.loc 11 125 14 is_stmt 1 view .LVU4806
 18534              	.LBB11310:
 18535              	.LBI11310:
 18536              		.loc 5 153 7 view .LVU4807
 18537              	.LBB11311:
 18538              	.LBI11311:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18539              		.loc 4 89 7 view .LVU4808
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18540              		.loc 4 89 7 is_stmt 0 view .LVU4809
 18541              	.LBE11311:
 18542              	.LBE11310:
 18543              	.LBE11309:
 18544              	.LBE11302:
 18545              	.LBE11301:
 18546              	.LBE11274:
 18547              	.LBE11273:
 18548              	.LBB11312:
 18549              	.LBI11312:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 18550              		.loc 2 657 7 is_stmt 1 view .LVU4810
 18551              	.LBB11313:
 18552              	.LBI11313:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18553              		.loc 2 229 7 view .LVU4811
 18554              	.LBB11314:
 18555              	.LBB11315:
 18556              	.LBI11315:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18557              		.loc 2 221 7 view .LVU4812
 18558              	.LBB11316:
 18559              	.LBI11316:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18560              		.loc 2 186 7 view .LVU4813
 18561              	.LBB11317:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18562              		.loc 2 187 28 is_stmt 0 view .LVU4814
 18563 0054 0498     		ldr	r0, [sp, #16]
 18564              	.LVL1278:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18565              		.loc 2 187 28 view .LVU4815
 18566              	.LBE11317:
 18567              	.LBE11316:
 18568              	.LBB11318:
 18569              	.LBI11318:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18570              		.loc 2 200 7 is_stmt 1 view .LVU4816
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 666


 18571              		.loc 2 200 7 is_stmt 0 view .LVU4817
 18572              	.LBE11318:
 18573              	.LBE11315:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18574              		.loc 2 231 2 view .LVU4818
 18575 0056 06AB     		add	r3, sp, #24
 18576 0058 9842     		cmp	r0, r3
 18577 005a 01D0     		beq	.L402
 18578              	.LVL1279:
 18579              	.LBB11319:
 18580              	.LBI11319:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 18581              		.loc 2 236 7 is_stmt 1 view .LVU4819
 18582              	.LBB11320:
 18583              	.LBB11321:
 18584              	.LBI11321:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 18585              		.loc 3 469 7 view .LVU4820
 18586              	.LBB11322:
 18587              	.LBI11322:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 18588              		.loc 4 119 7 view .LVU4821
 18589              	.LBB11323:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18590              		.loc 4 128 19 is_stmt 0 view .LVU4822
 18591 005c FFF7FEFF 		bl	_ZdlPv
 18592              	.LVL1280:
 18593              	.L402:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18594              		.loc 4 128 19 view .LVU4823
 18595              	.LBE11323:
 18596              	.LBE11322:
 18597              	.LBE11321:
 18598              	.LBE11320:
 18599              	.LBE11319:
 18600              	.LBE11314:
 18601              	.LBE11313:
 18602              	.LBB11324:
 18603              	.LBI11324:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18604              		.loc 2 150 14 is_stmt 1 view .LVU4824
 18605              	.LBB11325:
 18606              	.LBI11325:
 18607              		.loc 5 153 7 view .LVU4825
 18608              	.LBB11326:
 18609              	.LBI11326:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18610              		.loc 4 89 7 view .LVU4826
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18611              		.loc 4 89 7 is_stmt 0 view .LVU4827
 18612              	.LBE11326:
 18613              	.LBE11325:
 18614              	.LBE11324:
 18615              	.LBE11312:
 183:alohal/filesystem/filesystem.cpp **** 
 18616              		.loc 17 183 1 view .LVU4828
 18617 0060 2846     		mov	r0, r5
ARM GAS  /tmp/ccL95Edz.s 			page 667


 18618 0062 0AB0     		add	sp, sp, #40
 18619              	.LCFI67:
 18620              		.cfi_def_cfa_offset 16
 18621              		@ sp needed
 18622 0064 70BD     		pop	{r4, r5, r6, pc}
 18623              		.cfi_endproc
 18624              	.LFE3395:
 18626              		.section	.rodata._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_tra
 18627              		.align	2
 18628              	.LC18:
 18629 0000 496E7661 		.ascii	"Invalid parameters \015\012\000"
 18629      6C696420 
 18629      70617261 
 18629      6D657465 
 18629      7273200D 
 18630 0016 0000     		.align	2
 18631              	.LC19:
 18632 0018 00       		.ascii	"\000"
 18633 0019 000000   		.align	2
 18634              	.LC20:
 18635 001c 54617267 		.ascii	"Target location does not exists \015\012\000"
 18635      6574206C 
 18635      6F636174 
 18635      696F6E20 
 18635      646F6573 
 18636              		.section	.text._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_trait
 18637              		.align	1
 18638              		.global	_ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 18639              		.syntax unified
 18640              		.thumb
 18641              		.thumb_func
 18642              		.fpu fpv4-sp-d16
 18644              	_ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6
 18645              	.LVL1281:
 18646              	.LFB3374:
 104:alohal/filesystem/filesystem.cpp ****     if (args.size() > 2) {
 18647              		.loc 17 104 61 is_stmt 1 view -0
 18648              		.cfi_startproc
 18649              		@ args = 0, pretend = 0, frame = 192
 18650              		@ frame_needed = 0, uses_anonymous_args = 0
 104:alohal/filesystem/filesystem.cpp ****     if (args.size() > 2) {
 18651              		.loc 17 104 61 is_stmt 0 view .LVU4830
 18652 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18653              	.LCFI68:
 18654              		.cfi_def_cfa_offset 20
 18655              		.cfi_offset 4, -20
 18656              		.cfi_offset 5, -16
 18657              		.cfi_offset 6, -12
 18658              		.cfi_offset 7, -8
 18659              		.cfi_offset 14, -4
 18660 0002 B1B0     		sub	sp, sp, #196
 18661              	.LCFI69:
 18662              		.cfi_def_cfa_offset 216
 18663 0004 0446     		mov	r4, r0
 18664 0006 0D46     		mov	r5, r1
 105:alohal/filesystem/filesystem.cpp ****         cli->Print("Invalid parameters \r\n");
 18665              		.loc 17 105 5 is_stmt 1 view .LVU4831
ARM GAS  /tmp/ccL95Edz.s 			page 668


 18666              	.LVL1282:
 18667              	.LBB11767:
 18668              	.LBI11767:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 18669              		.loc 11 915 7 view .LVU4832
 18670              	.LBB11768:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18671              		.loc 11 916 40 is_stmt 0 view .LVU4833
 18672 0008 5368     		ldr	r3, [r2, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18673              		.loc 11 916 66 view .LVU4834
 18674 000a 1168     		ldr	r1, [r2]
 18675              	.LVL1283:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18676              		.loc 11 916 50 view .LVU4835
 18677 000c 5B1A     		subs	r3, r3, r1
 18678 000e DB10     		asrs	r3, r3, #3
 18679 0010 8A49     		ldr	r1, .L444
 18680 0012 01FB03F3 		mul	r3, r1, r3
 18681              	.LVL1284:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18682              		.loc 11 916 50 view .LVU4836
 18683              	.LBE11768:
 18684              	.LBE11767:
 105:alohal/filesystem/filesystem.cpp ****         cli->Print("Invalid parameters \r\n");
 18685              		.loc 17 105 5 view .LVU4837
 18686 0016 022B     		cmp	r3, #2
 18687 0018 7DD8     		bhi	.L437
 109:alohal/filesystem/filesystem.cpp ****     if (args.size() == 1) {
 18688              		.loc 17 109 5 is_stmt 1 view .LVU4838
 18689              	.LVL1285:
 18690              	.LBB11769:
 18691              	.LBI11769:
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 18692              		.loc 2 431 7 view .LVU4839
 18693              	.LBB11770:
 18694              	.LBB11771:
 18695              	.LBI11771:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18696              		.loc 2 190 7 view .LVU4840
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18697              		.loc 2 190 7 is_stmt 0 view .LVU4841
 18698              	.LBE11771:
 18699              	.LBB11772:
 18700              	.LBI11772:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 18701              		.loc 5 138 7 is_stmt 1 view .LVU4842
 18702              	.LBB11773:
 18703              	.LBI11773:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18704              		.loc 4 80 7 view .LVU4843
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18705              		.loc 4 80 7 is_stmt 0 view .LVU4844
 18706              	.LBE11773:
 18707              	.LBE11772:
 18708              	.LBB11774:
 18709              	.LBI11774:
ARM GAS  /tmp/ccL95Edz.s 			page 669


 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 18710              		.loc 2 159 2 is_stmt 1 view .LVU4845
 18711              	.LBB11775:
 18712              	.LBB11776:
 18713              	.LBB11777:
 18714              	.LBI11777:
 18715              		.loc 9 99 5 view .LVU4846
 18716              		.loc 9 99 5 is_stmt 0 view .LVU4847
 18717              	.LBE11777:
 18718              	.LBB11778:
 18719              	.LBI11778:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18720              		.loc 5 141 7 is_stmt 1 view .LVU4848
 18721              	.LBB11779:
 18722              	.LBI11779:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18723              		.loc 4 83 7 view .LVU4849
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18724              		.loc 4 83 7 is_stmt 0 view .LVU4850
 18725              	.LBE11779:
 18726              	.LBE11778:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18727              		.loc 2 160 46 view .LVU4851
 18728 001a 02AB     		add	r3, sp, #8
 18729              	.LVL1286:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18730              		.loc 2 160 46 view .LVU4852
 18731 001c 0093     		str	r3, [sp]
 18732              	.LVL1287:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18733              		.loc 2 160 46 view .LVU4853
 18734              	.LBE11776:
 18735              	.LBE11775:
 18736              	.LBE11774:
 18737              	.LBB11780:
 18738              	.LBI11780:
 18739              		.loc 5 153 7 is_stmt 1 view .LVU4854
 18740              	.LBB11781:
 18741              	.LBI11781:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18742              		.loc 4 89 7 view .LVU4855
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18743              		.loc 4 89 7 is_stmt 0 view .LVU4856
 18744              	.LBE11781:
 18745              	.LBE11780:
 18746              	.LBB11782:
 18747              	.LBI11782:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18748              		.loc 2 214 7 is_stmt 1 view .LVU4857
 18749              	.LBB11783:
 18750              	.LBI11783:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 18751              		.loc 2 182 7 view .LVU4858
 18752              	.LBB11784:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18753              		.loc 2 183 9 is_stmt 0 view .LVU4859
 18754 001e 0023     		movs	r3, #0
ARM GAS  /tmp/ccL95Edz.s 			page 670


 18755 0020 0193     		str	r3, [sp, #4]
 18756              	.LVL1288:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18757              		.loc 2 183 9 view .LVU4860
 18758              	.LBE11784:
 18759              	.LBE11783:
 18760              	.LBB11785:
 18761              	.LBI11785:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 18762              		.loc 8 299 7 is_stmt 1 view .LVU4861
 18763              	.LBB11786:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 18764              		.loc 8 300 9 view .LVU4862
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 18765              		.loc 8 300 14 is_stmt 0 view .LVU4863
 18766 0022 8DF80830 		strb	r3, [sp, #8]
 18767              	.LVL1289:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 18768              		.loc 8 300 14 view .LVU4864
 18769              	.LBE11786:
 18770              	.LBE11785:
 18771              	.LBE11782:
 18772              	.LBE11770:
 18773              	.LBE11769:
 110:alohal/filesystem/filesystem.cpp ****         directory_name = Absolute_path(".");
 18774              		.loc 17 110 5 is_stmt 1 view .LVU4865
 18775              	.LBB11787:
 18776              	.LBI11787:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 18777              		.loc 11 915 7 view .LVU4866
 18778              	.LBB11788:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18779              		.loc 11 916 40 is_stmt 0 view .LVU4867
 18780 0026 5368     		ldr	r3, [r2, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18781              		.loc 11 916 66 view .LVU4868
 18782 0028 1268     		ldr	r2, [r2]
 18783              	.LVL1290:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18784              		.loc 11 916 50 view .LVU4869
 18785 002a 9B1A     		subs	r3, r3, r2
 18786              	.LVL1291:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18787              		.loc 11 916 50 view .LVU4870
 18788              	.LBE11788:
 18789              	.LBE11787:
 110:alohal/filesystem/filesystem.cpp ****         directory_name = Absolute_path(".");
 18790              		.loc 17 110 5 view .LVU4871
 18791 002c 182B     		cmp	r3, #24
 18792 002e 00F09180 		beq	.L438
 113:alohal/filesystem/filesystem.cpp ****     }
 18793              		.loc 17 113 9 is_stmt 1 view .LVU4872
 18794              	.LVL1292:
 18795              	.LBB11789:
 18796              	.LBI11789:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 18797              		.loc 2 448 7 view .LVU4873
ARM GAS  /tmp/ccL95Edz.s 			page 671


 18798              	.LBB11790:
 18799              	.LBB11791:
 18800              	.LBB11792:
 18801              	.LBI11792:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18802              		.loc 2 190 7 view .LVU4874
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18803              		.loc 2 190 7 is_stmt 0 view .LVU4875
 18804              	.LBE11792:
 18805              	.LBB11793:
 18806              	.LBI11793:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18807              		.loc 2 290 7 is_stmt 1 view .LVU4876
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18808              		.loc 2 290 7 is_stmt 0 view .LVU4877
 18809              	.LBE11793:
 18810              	.LBB11794:
 18811              	.LBI11794:
 18812              		.loc 19 97 19 is_stmt 1 view .LVU4878
 18813              	.LBB11795:
 18814              	.LBI11795:
 18815              		.loc 3 514 7 view .LVU4879
 18816              	.LBB11796:
 18817              	.LBI11796:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18818              		.loc 5 141 7 view .LVU4880
 18819              	.LBB11797:
 18820              	.LBI11797:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18821              		.loc 4 83 7 view .LVU4881
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18822              		.loc 4 83 7 is_stmt 0 view .LVU4882
 18823              	.LBE11797:
 18824              	.LBE11796:
 18825              	.LBE11795:
 18826              	.LBE11794:
 18827              	.LBB11798:
 18828              	.LBI11798:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 18829              		.loc 2 159 2 is_stmt 1 view .LVU4883
 18830              	.LBB11799:
 18831              	.LBB11800:
 18832              	.LBB11801:
 18833              	.LBI11801:
 18834              		.loc 9 99 5 view .LVU4884
 18835              		.loc 9 99 5 is_stmt 0 view .LVU4885
 18836              	.LBE11801:
 18837              	.LBB11802:
 18838              	.LBI11802:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18839              		.loc 5 141 7 is_stmt 1 view .LVU4886
 18840              	.LBB11803:
 18841              	.LBI11803:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18842              		.loc 4 83 7 view .LVU4887
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18843              		.loc 4 83 7 is_stmt 0 view .LVU4888
ARM GAS  /tmp/ccL95Edz.s 			page 672


 18844              	.LBE11803:
 18845              	.LBE11802:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18846              		.loc 2 160 46 view .LVU4889
 18847 0032 20AB     		add	r3, sp, #128
 18848              	.LVL1293:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18849              		.loc 2 160 46 view .LVU4890
 18850 0034 1E93     		str	r3, [sp, #120]
 18851              	.LVL1294:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18852              		.loc 2 160 46 view .LVU4891
 18853              	.LBE11800:
 18854              	.LBE11799:
 18855              	.LBE11798:
 18856              	.LBB11804:
 18857              	.LBI11804:
 18858              		.loc 5 153 7 is_stmt 1 view .LVU4892
 18859              	.LBB11805:
 18860              	.LBI11805:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18861              		.loc 4 89 7 view .LVU4893
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18862              		.loc 4 89 7 is_stmt 0 view .LVU4894
 18863              	.LBE11805:
 18864              	.LBE11804:
 18865              	.LBB11806:
 18866              	.LBI11806:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18867              		.loc 2 186 7 is_stmt 1 view .LVU4895
 18868              	.LBB11807:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18869              		.loc 2 187 28 is_stmt 0 view .LVU4896
 18870 0036 9169     		ldr	r1, [r2, #24]
 18871              	.LVL1295:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18872              		.loc 2 187 28 view .LVU4897
 18873              	.LBE11807:
 18874              	.LBE11806:
 18875              	.LBB11808:
 18876              	.LBI11808:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18877              		.loc 2 186 7 is_stmt 1 view .LVU4898
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18878              		.loc 2 186 7 is_stmt 0 view .LVU4899
 18879              	.LBE11808:
 18880              	.LBB11809:
 18881              	.LBI11809:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 18882              		.loc 2 936 7 is_stmt 1 view .LVU4900
 18883              	.LBB11810:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18884              		.loc 2 937 16 is_stmt 0 view .LVU4901
 18885 0038 D269     		ldr	r2, [r2, #28]
 18886              	.LVL1296:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18887              		.loc 2 937 16 view .LVU4902
ARM GAS  /tmp/ccL95Edz.s 			page 673


 18888              	.LBE11810:
 18889              	.LBE11809:
 18890              	.LBB11811:
 18891              	.LBI11811:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 18892              		.loc 2 263 9 is_stmt 1 view .LVU4903
 18893              	.LBB11812:
 18894              	.LBB11813:
 18895              	.LBI11813:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 18896              		.loc 2 243 9 view .LVU4904
 18897              	.LBB11814:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18898              		.loc 2 247 11 is_stmt 0 view .LVU4905
 18899 003a 4FF00003 		mov	r3, #0
 18900 003e 0A44     		add	r2, r2, r1
 18901              	.LVL1297:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18902              		.loc 2 247 11 view .LVU4906
 18903 0040 1EA8     		add	r0, sp, #120
 18904              	.LVL1298:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18905              		.loc 2 247 11 view .LVU4907
 18906 0042 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 18907              	.LVL1299:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18908              		.loc 2 247 11 view .LVU4908
 18909              	.LBE11814:
 18910              	.LBE11813:
 18911              	.LBE11812:
 18912              	.LBE11811:
 18913              	.LBE11791:
 18914              	.LBE11790:
 18915              	.LBE11789:
 113:alohal/filesystem/filesystem.cpp ****     }
 18916              		.loc 17 113 39 view .LVU4909
 18917 0046 1EAA     		add	r2, sp, #120
 18918 0048 2946     		mov	r1, r5
 18919 004a 18A8     		add	r0, sp, #96
 18920 004c FFF7FEFF 		bl	_ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 18921              	.LVL1300:
 18922              	.LBB11815:
 18923              	.LBI11815:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 18924              		.loc 2 732 7 is_stmt 1 view .LVU4910
 18925              	.LBB11816:
 18926              	.LBI11816:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18927              		.loc 2 221 7 view .LVU4911
 18928              	.LBB11817:
 18929              	.LBI11817:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18930              		.loc 2 186 7 view .LVU4912
 18931              	.LBB11818:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18932              		.loc 2 187 28 is_stmt 0 view .LVU4913
 18933 0050 0098     		ldr	r0, [sp]
ARM GAS  /tmp/ccL95Edz.s 			page 674


 18934              	.LVL1301:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18935              		.loc 2 187 28 view .LVU4914
 18936              	.LBE11818:
 18937              	.LBE11817:
 18938              	.LBB11819:
 18939              	.LBI11819:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18940              		.loc 2 200 7 is_stmt 1 view .LVU4915
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18941              		.loc 2 200 7 is_stmt 0 view .LVU4916
 18942              	.LBE11819:
 18943              	.LBE11816:
 18944              	.LBB11820:
 18945              	.LBB11821:
 18946              	.LBI11821:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18947              		.loc 2 221 7 is_stmt 1 view .LVU4917
 18948              	.LBB11822:
 18949              	.LBI11822:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18950              		.loc 2 186 7 view .LVU4918
 18951              	.LBB11823:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18952              		.loc 2 187 28 is_stmt 0 view .LVU4919
 18953 0052 1899     		ldr	r1, [sp, #96]
 18954              	.LVL1302:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18955              		.loc 2 187 28 view .LVU4920
 18956              	.LBE11823:
 18957              	.LBE11822:
 18958              	.LBB11824:
 18959              	.LBI11824:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18960              		.loc 2 200 7 is_stmt 1 view .LVU4921
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18961              		.loc 2 200 7 is_stmt 0 view .LVU4922
 18962              	.LBE11824:
 18963              	.LBE11821:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 18964              		.loc 2 747 2 view .LVU4923
 18965 0054 1AAB     		add	r3, sp, #104
 18966 0056 9942     		cmp	r1, r3
 18967 0058 00F0C180 		beq	.L439
 18968              	.LVL1303:
 18969              	.LBB11825:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 18970              		.loc 2 761 6 view .LVU4924
 18971 005c 02AB     		add	r3, sp, #8
 18972 005e 9842     		cmp	r0, r3
 18973 0060 00F0CC80 		beq	.L435
 18974              	.LVL1304:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 18975              		.loc 2 767 7 view .LVU4925
 18976 0064 029E     		ldr	r6, [sp, #8]
 18977              	.LVL1305:
 18978              	.L423:
ARM GAS  /tmp/ccL95Edz.s 			page 675


 18979              	.LBB11826:
 18980              	.LBI11826:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 18981              		.loc 2 178 7 is_stmt 1 view .LVU4926
 18982              	.LBB11827:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18983              		.loc 2 179 9 is_stmt 0 view .LVU4927
 18984 0066 0091     		str	r1, [sp]
 18985              	.LVL1306:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18986              		.loc 2 179 9 view .LVU4928
 18987              	.LBE11827:
 18988              	.LBE11826:
 18989              	.LBB11828:
 18990              	.LBI11828:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 18991              		.loc 2 936 7 is_stmt 1 view .LVU4929
 18992              	.LBB11829:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18993              		.loc 2 937 16 is_stmt 0 view .LVU4930
 18994 0068 199B     		ldr	r3, [sp, #100]
 18995              	.LVL1307:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18996              		.loc 2 937 16 view .LVU4931
 18997              	.LBE11829:
 18998              	.LBE11828:
 18999              	.LBB11830:
 19000              	.LBI11830:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 19001              		.loc 2 182 7 is_stmt 1 view .LVU4932
 19002              	.LBB11831:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19003              		.loc 2 183 9 is_stmt 0 view .LVU4933
 19004 006a 0193     		str	r3, [sp, #4]
 19005              	.LVL1308:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19006              		.loc 2 183 9 view .LVU4934
 19007              	.LBE11831:
 19008              	.LBE11830:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 19009              		.loc 2 775 6 view .LVU4935
 19010 006c 1A9B     		ldr	r3, [sp, #104]
 19011              	.LVL1309:
 19012              	.LBB11832:
 19013              	.LBI11832:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 19014              		.loc 2 210 7 is_stmt 1 view .LVU4936
 19015              	.LBB11833:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19016              		.loc 2 211 9 is_stmt 0 view .LVU4937
 19017 006e 0293     		str	r3, [sp, #8]
 19018              	.LVL1310:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19019              		.loc 2 211 9 view .LVU4938
 19020              	.LBE11833:
 19021              	.LBE11832:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
ARM GAS  /tmp/ccL95Edz.s 			page 676


 19022              		.loc 2 776 6 view .LVU4939
 19023 0070 0028     		cmp	r0, #0
 19024 0072 00F0C580 		beq	.L424
 19025              	.LVL1311:
 19026              	.LBB11834:
 19027              	.LBI11834:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 19028              		.loc 2 178 7 is_stmt 1 view .LVU4940
 19029              	.LBB11835:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19030              		.loc 2 179 9 is_stmt 0 view .LVU4941
 19031 0076 1890     		str	r0, [sp, #96]
 19032              	.LVL1312:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19033              		.loc 2 179 9 view .LVU4942
 19034              	.LBE11835:
 19035              	.LBE11834:
 19036              	.LBB11836:
 19037              	.LBI11836:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 19038              		.loc 2 210 7 is_stmt 1 view .LVU4943
 19039              	.LBB11837:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19040              		.loc 2 211 9 is_stmt 0 view .LVU4944
 19041 0078 1A96     		str	r6, [sp, #104]
 19042              	.LVL1313:
 19043              	.L422:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19044              		.loc 2 211 9 view .LVU4945
 19045              	.LBE11837:
 19046              	.LBE11836:
 19047              	.LBE11825:
 19048              	.LBE11820:
 19049              	.LBB11860:
 19050              	.LBI11860:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 19051              		.loc 2 1023 7 is_stmt 1 view .LVU4946
 19052              	.LBB11861:
 19053              	.LBI11861:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19054              		.loc 2 214 7 view .LVU4947
 19055              	.LBB11862:
 19056              	.LBI11862:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 19057              		.loc 2 182 7 view .LVU4948
 19058              	.LBB11863:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19059              		.loc 2 183 9 is_stmt 0 view .LVU4949
 19060 007a 0023     		movs	r3, #0
 19061 007c 1993     		str	r3, [sp, #100]
 19062              	.LVL1314:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19063              		.loc 2 183 9 view .LVU4950
 19064              	.LBE11863:
 19065              	.LBE11862:
 19066              	.LBB11864:
 19067              	.LBI11864:
ARM GAS  /tmp/ccL95Edz.s 			page 677


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19068              		.loc 2 186 7 is_stmt 1 view .LVU4951
 19069              	.LBB11865:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19070              		.loc 2 187 28 is_stmt 0 view .LVU4952
 19071 007e 189A     		ldr	r2, [sp, #96]
 19072              	.LVL1315:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19073              		.loc 2 187 28 view .LVU4953
 19074              	.LBE11865:
 19075              	.LBE11864:
 19076              	.LBB11866:
 19077              	.LBI11866:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 19078              		.loc 8 299 7 is_stmt 1 view .LVU4954
 19079              	.LBB11867:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 19080              		.loc 8 300 9 view .LVU4955
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 19081              		.loc 8 300 14 is_stmt 0 view .LVU4956
 19082 0080 1370     		strb	r3, [r2]
 19083              	.LVL1316:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 19084              		.loc 8 300 14 view .LVU4957
 19085              	.LBE11867:
 19086              	.LBE11866:
 19087              	.LBE11861:
 19088              	.LBE11860:
 19089              	.LBE11815:
 19090              	.LBB11869:
 19091              	.LBI11869:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19092              		.loc 2 657 7 is_stmt 1 view .LVU4958
 19093              	.LBB11870:
 19094              	.LBI11870:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19095              		.loc 2 229 7 view .LVU4959
 19096              	.LBB11871:
 19097              	.LBB11872:
 19098              	.LBI11872:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 19099              		.loc 2 221 7 view .LVU4960
 19100              	.LBB11873:
 19101              	.LBI11873:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19102              		.loc 2 186 7 view .LVU4961
 19103              	.LBB11874:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19104              		.loc 2 187 28 is_stmt 0 view .LVU4962
 19105 0082 1898     		ldr	r0, [sp, #96]
 19106              	.LVL1317:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19107              		.loc 2 187 28 view .LVU4963
 19108              	.LBE11874:
 19109              	.LBE11873:
 19110              	.LBB11875:
 19111              	.LBI11875:
ARM GAS  /tmp/ccL95Edz.s 			page 678


 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19112              		.loc 2 200 7 is_stmt 1 view .LVU4964
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19113              		.loc 2 200 7 is_stmt 0 view .LVU4965
 19114              	.LBE11875:
 19115              	.LBE11872:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19116              		.loc 2 231 2 view .LVU4966
 19117 0084 1AAB     		add	r3, sp, #104
 19118 0086 9842     		cmp	r0, r3
 19119 0088 01D0     		beq	.L425
 19120              	.LVL1318:
 19121              	.LBB11876:
 19122              	.LBI11876:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19123              		.loc 2 236 7 is_stmt 1 view .LVU4967
 19124              	.LBB11877:
 19125              	.LBB11878:
 19126              	.LBI11878:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19127              		.loc 3 469 7 view .LVU4968
 19128              	.LBB11879:
 19129              	.LBI11879:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19130              		.loc 4 119 7 view .LVU4969
 19131              	.LBB11880:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19132              		.loc 4 128 19 is_stmt 0 view .LVU4970
 19133 008a FFF7FEFF 		bl	_ZdlPv
 19134              	.LVL1319:
 19135              	.L425:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19136              		.loc 4 128 19 view .LVU4971
 19137              	.LBE11880:
 19138              	.LBE11879:
 19139              	.LBE11878:
 19140              	.LBE11877:
 19141              	.LBE11876:
 19142              	.LBE11871:
 19143              	.LBE11870:
 19144              	.LBB11881:
 19145              	.LBI11881:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19146              		.loc 2 150 14 is_stmt 1 view .LVU4972
 19147              	.LBB11882:
 19148              	.LBI11882:
 19149              		.loc 5 153 7 view .LVU4973
 19150              	.LBB11883:
 19151              	.LBI11883:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19152              		.loc 4 89 7 view .LVU4974
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19153              		.loc 4 89 7 is_stmt 0 view .LVU4975
 19154              	.LBE11883:
 19155              	.LBE11882:
 19156              	.LBE11881:
 19157              	.LBE11869:
ARM GAS  /tmp/ccL95Edz.s 			page 679


 19158              	.LBB11884:
 19159              	.LBI11884:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19160              		.loc 2 657 7 is_stmt 1 view .LVU4976
 19161              	.LBB11885:
 19162              	.LBI11885:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19163              		.loc 2 229 7 view .LVU4977
 19164              	.LBB11886:
 19165              	.LBB11887:
 19166              	.LBI11887:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 19167              		.loc 2 221 7 view .LVU4978
 19168              	.LBB11888:
 19169              	.LBI11888:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19170              		.loc 2 186 7 view .LVU4979
 19171              	.LBB11889:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19172              		.loc 2 187 28 is_stmt 0 view .LVU4980
 19173 008e 1E98     		ldr	r0, [sp, #120]
 19174              	.LVL1320:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19175              		.loc 2 187 28 view .LVU4981
 19176              	.LBE11889:
 19177              	.LBE11888:
 19178              	.LBB11890:
 19179              	.LBI11890:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19180              		.loc 2 200 7 is_stmt 1 view .LVU4982
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19181              		.loc 2 200 7 is_stmt 0 view .LVU4983
 19182              	.LBE11890:
 19183              	.LBE11887:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19184              		.loc 2 231 2 view .LVU4984
 19185 0090 20AB     		add	r3, sp, #128
 19186 0092 9842     		cmp	r0, r3
 19187 0094 01D0     		beq	.L418
 19188              	.LVL1321:
 19189              	.LBB11891:
 19190              	.LBI11891:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19191              		.loc 2 236 7 is_stmt 1 view .LVU4985
 19192              	.LBB11892:
 19193              	.LBB11893:
 19194              	.LBI11893:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19195              		.loc 3 469 7 view .LVU4986
 19196              	.LBB11894:
 19197              	.LBI11894:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19198              		.loc 4 119 7 view .LVU4987
 19199              	.LBB11895:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19200              		.loc 4 128 19 is_stmt 0 view .LVU4988
 19201 0096 FFF7FEFF 		bl	_ZdlPv
ARM GAS  /tmp/ccL95Edz.s 			page 680


 19202              	.LVL1322:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19203              		.loc 4 128 19 view .LVU4989
 19204              	.LBE11895:
 19205              	.LBE11894:
 19206              	.LBE11893:
 19207              	.LBE11892:
 19208              	.LBE11891:
 19209              	.LBE11886:
 19210              	.LBE11885:
 19211              	.LBB11896:
 19212              	.LBI11896:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19213              		.loc 2 150 14 is_stmt 1 view .LVU4990
 19214              	.LBB11897:
 19215              	.LBI11897:
 19216              		.loc 5 153 7 view .LVU4991
 19217              	.LBB11898:
 19218              	.LBI11898:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19219              		.loc 4 89 7 view .LVU4992
 19220              	.L418:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19221              		.loc 4 89 7 is_stmt 0 view .LVU4993
 19222              	.LBE11898:
 19223              	.LBE11897:
 19224              	.LBE11896:
 19225              	.LBE11884:
 115:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location does not exists \r\n");
 19226              		.loc 17 115 5 is_stmt 1 view .LVU4994
 19227              	.LBB11899:
 19228              	.LBI11899:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 19229              		.loc 2 448 7 view .LVU4995
 19230              	.LBB11900:
 19231              	.LBB11901:
 19232              	.LBB11902:
 19233              	.LBI11902:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19234              		.loc 2 190 7 view .LVU4996
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19235              		.loc 2 190 7 is_stmt 0 view .LVU4997
 19236              	.LBE11902:
 19237              	.LBB11903:
 19238              	.LBI11903:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 19239              		.loc 2 290 7 is_stmt 1 view .LVU4998
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 19240              		.loc 2 290 7 is_stmt 0 view .LVU4999
 19241              	.LBE11903:
 19242              	.LBB11904:
 19243              	.LBI11904:
 19244              		.loc 19 97 19 is_stmt 1 view .LVU5000
 19245              	.LBB11905:
 19246              	.LBI11905:
 19247              		.loc 3 514 7 view .LVU5001
 19248              	.LBB11906:
ARM GAS  /tmp/ccL95Edz.s 			page 681


 19249              	.LBI11906:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19250              		.loc 5 141 7 view .LVU5002
 19251              	.LBB11907:
 19252              	.LBI11907:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19253              		.loc 4 83 7 view .LVU5003
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19254              		.loc 4 83 7 is_stmt 0 view .LVU5004
 19255              	.LBE11907:
 19256              	.LBE11906:
 19257              	.LBE11905:
 19258              	.LBE11904:
 19259              	.LBB11908:
 19260              	.LBI11908:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 19261              		.loc 2 159 2 is_stmt 1 view .LVU5005
 19262              	.LBB11909:
 19263              	.LBB11910:
 19264              	.LBB11911:
 19265              	.LBI11911:
 19266              		.loc 9 99 5 view .LVU5006
 19267              		.loc 9 99 5 is_stmt 0 view .LVU5007
 19268              	.LBE11911:
 19269              	.LBB11912:
 19270              	.LBI11912:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19271              		.loc 5 141 7 is_stmt 1 view .LVU5008
 19272              	.LBB11913:
 19273              	.LBI11913:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19274              		.loc 4 83 7 view .LVU5009
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19275              		.loc 4 83 7 is_stmt 0 view .LVU5010
 19276              	.LBE11913:
 19277              	.LBE11912:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19278              		.loc 2 160 46 view .LVU5011
 19279 009a 26AF     		add	r7, sp, #152
 19280              	.LVL1323:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19281              		.loc 2 160 46 view .LVU5012
 19282 009c 2497     		str	r7, [sp, #144]
 19283              	.LVL1324:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19284              		.loc 2 160 46 view .LVU5013
 19285              	.LBE11910:
 19286              	.LBE11909:
 19287              	.LBE11908:
 19288              	.LBB11914:
 19289              	.LBI11914:
 19290              		.loc 5 153 7 is_stmt 1 view .LVU5014
 19291              	.LBB11915:
 19292              	.LBI11915:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19293              		.loc 4 89 7 view .LVU5015
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 682


 19294              		.loc 4 89 7 is_stmt 0 view .LVU5016
 19295              	.LBE11915:
 19296              	.LBE11914:
 19297              	.LBB11916:
 19298              	.LBI11916:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19299              		.loc 2 186 7 is_stmt 1 view .LVU5017
 19300              	.LBB11917:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19301              		.loc 2 187 28 is_stmt 0 view .LVU5018
 19302 009e 0099     		ldr	r1, [sp]
 19303              	.LVL1325:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19304              		.loc 2 187 28 view .LVU5019
 19305              	.LBE11917:
 19306              	.LBE11916:
 19307              	.LBB11918:
 19308              	.LBI11918:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19309              		.loc 2 186 7 is_stmt 1 view .LVU5020
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19310              		.loc 2 186 7 is_stmt 0 view .LVU5021
 19311              	.LBE11918:
 19312              	.LBB11919:
 19313              	.LBI11919:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19314              		.loc 2 936 7 is_stmt 1 view .LVU5022
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19315              		.loc 2 936 7 is_stmt 0 view .LVU5023
 19316              	.LBE11919:
 19317              	.LBB11920:
 19318              	.LBI11920:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19319              		.loc 2 263 9 is_stmt 1 view .LVU5024
 19320              	.LBB11921:
 19321              	.LBB11922:
 19322              	.LBI11922:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19323              		.loc 2 243 9 view .LVU5025
 19324              	.LBB11923:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19325              		.loc 2 247 11 is_stmt 0 view .LVU5026
 19326 00a0 4FF00003 		mov	r3, #0
 19327 00a4 019A     		ldr	r2, [sp, #4]
 19328 00a6 0A44     		add	r2, r2, r1
 19329              	.LVL1326:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19330              		.loc 2 247 11 view .LVU5027
 19331 00a8 24A8     		add	r0, sp, #144
 19332              	.LVL1327:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19333              		.loc 2 247 11 view .LVU5028
 19334 00aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 19335              	.LVL1328:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19336              		.loc 2 247 11 view .LVU5029
 19337              	.LBE11923:
ARM GAS  /tmp/ccL95Edz.s 			page 683


 19338              	.LBE11922:
 19339              	.LBE11921:
 19340              	.LBE11920:
 19341              	.LBE11901:
 19342              	.LBE11900:
 19343              	.LBE11899:
 115:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location does not exists \r\n");
 19344              		.loc 17 115 22 view .LVU5030
 19345 00ae 24A9     		add	r1, sp, #144
 19346 00b0 2846     		mov	r0, r5
 19347 00b2 FFF7FEFF 		bl	_ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19348              	.LVL1329:
 19349 00b6 0646     		mov	r6, r0
 19350              	.LVL1330:
 19351              	.LBB11924:
 19352              	.LBI11924:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19353              		.loc 2 657 7 is_stmt 1 view .LVU5031
 19354              	.LBB11925:
 19355              	.LBI11925:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19356              		.loc 2 229 7 view .LVU5032
 19357              	.LBB11926:
 19358              	.LBB11927:
 19359              	.LBI11927:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 19360              		.loc 2 221 7 view .LVU5033
 19361              	.LBB11928:
 19362              	.LBI11928:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19363              		.loc 2 186 7 view .LVU5034
 19364              	.LBB11929:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19365              		.loc 2 187 28 is_stmt 0 view .LVU5035
 19366 00b8 2498     		ldr	r0, [sp, #144]
 19367              	.LVL1331:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19368              		.loc 2 187 28 view .LVU5036
 19369              	.LBE11929:
 19370              	.LBE11928:
 19371              	.LBB11930:
 19372              	.LBI11930:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19373              		.loc 2 200 7 is_stmt 1 view .LVU5037
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19374              		.loc 2 200 7 is_stmt 0 view .LVU5038
 19375              	.LBE11930:
 19376              	.LBE11927:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19377              		.loc 2 231 2 view .LVU5039
 19378 00ba B842     		cmp	r0, r7
 19379 00bc 01D0     		beq	.L427
 19380              	.LVL1332:
 19381              	.LBB11931:
 19382              	.LBI11931:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19383              		.loc 2 236 7 is_stmt 1 view .LVU5040
ARM GAS  /tmp/ccL95Edz.s 			page 684


 19384              	.LBB11932:
 19385              	.LBB11933:
 19386              	.LBI11933:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19387              		.loc 3 469 7 view .LVU5041
 19388              	.LBB11934:
 19389              	.LBI11934:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19390              		.loc 4 119 7 view .LVU5042
 19391              	.LBB11935:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19392              		.loc 4 128 19 is_stmt 0 view .LVU5043
 19393 00be FFF7FEFF 		bl	_ZdlPv
 19394              	.LVL1333:
 19395              	.L427:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19396              		.loc 4 128 19 view .LVU5044
 19397              	.LBE11935:
 19398              	.LBE11934:
 19399              	.LBE11933:
 19400              	.LBE11932:
 19401              	.LBE11931:
 19402              	.LBE11926:
 19403              	.LBE11925:
 19404              	.LBB11936:
 19405              	.LBI11936:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19406              		.loc 2 150 14 is_stmt 1 view .LVU5045
 19407              	.LBB11937:
 19408              	.LBI11937:
 19409              		.loc 5 153 7 view .LVU5046
 19410              	.LBB11938:
 19411              	.LBI11938:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19412              		.loc 4 89 7 view .LVU5047
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19413              		.loc 4 89 7 is_stmt 0 view .LVU5048
 19414              	.LBE11938:
 19415              	.LBE11937:
 19416              	.LBE11936:
 19417              	.LBE11924:
 115:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location does not exists \r\n");
 19418              		.loc 17 115 5 view .LVU5049
 19419 00c2 002E     		cmp	r6, #0
 19420 00c4 40F09F80 		bne	.L428
 116:alohal/filesystem/filesystem.cpp ****         return "";
 19421              		.loc 17 116 9 is_stmt 1 view .LVU5050
 19422 00c8 AE68     		ldr	r6, [r5, #8]
 19423              	.LVL1334:
 19424              	.LBB11939:
 19425              	.LBI11939:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19426              		.loc 5 138 7 view .LVU5051
 19427              	.LBB11940:
 19428              	.LBI11940:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19429              		.loc 4 80 7 view .LVU5052
ARM GAS  /tmp/ccL95Edz.s 			page 685


  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19430              		.loc 4 80 7 is_stmt 0 view .LVU5053
 19431              	.LBE11940:
 19432              	.LBE11939:
 19433              	.LBB11941:
 19434              	.LBI11941:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 19435              		.loc 2 525 7 is_stmt 1 view .LVU5054
 19436              	.LBB11942:
 19437              	.LBB11943:
 19438              	.LBB11944:
 19439              	.LBI11944:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19440              		.loc 2 190 7 view .LVU5055
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19441              		.loc 2 190 7 is_stmt 0 view .LVU5056
 19442              	.LBE11944:
 19443              	.LBB11945:
 19444              	.LBI11945:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 19445              		.loc 2 156 2 is_stmt 1 view .LVU5057
 19446              	.LBB11946:
 19447              	.LBB11947:
 19448              	.LBB11948:
 19449              	.LBI11948:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19450              		.loc 5 141 7 view .LVU5058
 19451              	.LBB11949:
 19452              	.LBI11949:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19453              		.loc 4 83 7 view .LVU5059
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19454              		.loc 4 83 7 is_stmt 0 view .LVU5060
 19455              	.LBE11949:
 19456              	.LBE11948:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19457              		.loc 2 157 35 view .LVU5061
 19458 00ca 2CAD     		add	r5, sp, #176
 19459              	.LVL1335:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19460              		.loc 2 157 35 view .LVU5062
 19461 00cc 2A95     		str	r5, [sp, #168]
 19462              	.LVL1336:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19463              		.loc 2 157 35 view .LVU5063
 19464              	.LBE11947:
 19465              	.LBE11946:
 19466              	.LBE11945:
 19467              	.LBB11950:
 19468              	.LBI11950:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 19469              		.loc 8 329 7 is_stmt 1 view .LVU5064
 19470              	.LBE11950:
 19471              	.LBE11943:
 19472              	.LBE11942:
 19473              	.LBE11941:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
ARM GAS  /tmp/ccL95Edz.s 			page 686


 19474              		.loc 8 332 2 view .LVU5065
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 19475              		.loc 8 335 2 view .LVU5066
 19476              	.LBB11957:
 19477              	.LBB11956:
 19478              	.LBB11955:
 19479              	.LBB11951:
 19480              	.LBI11951:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19481              		.loc 2 263 9 view .LVU5067
 19482              	.LBB11952:
 19483              	.LBB11953:
 19484              	.LBI11953:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19485              		.loc 2 243 9 view .LVU5068
 19486              	.LBB11954:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19487              		.loc 2 247 11 is_stmt 0 view .LVU5069
 19488 00ce 5C4A     		ldr	r2, .L444+4
 19489              	.LVL1337:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19490              		.loc 2 247 11 view .LVU5070
 19491 00d0 4FF00003 		mov	r3, #0
 19492 00d4 A2F12201 		sub	r1, r2, #34
 19493 00d8 2AA8     		add	r0, sp, #168
 19494              	.LVL1338:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19495              		.loc 2 247 11 view .LVU5071
 19496 00da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 19497              	.LVL1339:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19498              		.loc 2 247 11 view .LVU5072
 19499              	.LBE11954:
 19500              	.LBE11953:
 19501              	.LBE11952:
 19502              	.LBE11951:
 19503              	.LBE11955:
 19504              	.LBE11956:
 19505              	.LBE11957:
 116:alohal/filesystem/filesystem.cpp ****         return "";
 19506              		.loc 17 116 19 view .LVU5073
 19507 00de 2AA9     		add	r1, sp, #168
 19508 00e0 3046     		mov	r0, r6
 19509 00e2 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19510              	.LVL1340:
 19511              	.LBB11958:
 19512              	.LBI11958:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19513              		.loc 2 657 7 is_stmt 1 view .LVU5074
 19514              	.LBB11959:
 19515              	.LBI11959:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19516              		.loc 2 229 7 view .LVU5075
 19517              	.LBB11960:
 19518              	.LBB11961:
 19519              	.LBI11961:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
ARM GAS  /tmp/ccL95Edz.s 			page 687


 19520              		.loc 2 221 7 view .LVU5076
 19521              	.LBB11962:
 19522              	.LBI11962:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19523              		.loc 2 186 7 view .LVU5077
 19524              	.LBB11963:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19525              		.loc 2 187 28 is_stmt 0 view .LVU5078
 19526 00e6 2A98     		ldr	r0, [sp, #168]
 19527              	.LVL1341:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19528              		.loc 2 187 28 view .LVU5079
 19529              	.LBE11963:
 19530              	.LBE11962:
 19531              	.LBB11964:
 19532              	.LBI11964:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19533              		.loc 2 200 7 is_stmt 1 view .LVU5080
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19534              		.loc 2 200 7 is_stmt 0 view .LVU5081
 19535              	.LBE11964:
 19536              	.LBE11961:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19537              		.loc 2 231 2 view .LVU5082
 19538 00e8 A842     		cmp	r0, r5
 19539 00ea 01D0     		beq	.L429
 19540              	.LVL1342:
 19541              	.LBB11965:
 19542              	.LBI11965:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19543              		.loc 2 236 7 is_stmt 1 view .LVU5083
 19544              	.LBB11966:
 19545              	.LBB11967:
 19546              	.LBI11967:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19547              		.loc 3 469 7 view .LVU5084
 19548              	.LBB11968:
 19549              	.LBI11968:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19550              		.loc 4 119 7 view .LVU5085
 19551              	.LBB11969:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19552              		.loc 4 128 19 is_stmt 0 view .LVU5086
 19553 00ec FFF7FEFF 		bl	_ZdlPv
 19554              	.LVL1343:
 19555              	.L429:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19556              		.loc 4 128 19 view .LVU5087
 19557              	.LBE11969:
 19558              	.LBE11968:
 19559              	.LBE11967:
 19560              	.LBE11966:
 19561              	.LBE11965:
 19562              	.LBE11960:
 19563              	.LBE11959:
 19564              	.LBB11970:
 19565              	.LBI11970:
ARM GAS  /tmp/ccL95Edz.s 			page 688


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19566              		.loc 2 150 14 is_stmt 1 view .LVU5088
 19567              	.LBB11971:
 19568              	.LBI11971:
 19569              		.loc 5 153 7 view .LVU5089
 19570              	.LBB11972:
 19571              	.LBI11972:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19572              		.loc 4 89 7 view .LVU5090
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19573              		.loc 4 89 7 is_stmt 0 view .LVU5091
 19574              	.LBE11972:
 19575              	.LBE11971:
 19576              	.LBE11970:
 19577              	.LBE11958:
 19578              	.LBB11973:
 19579              	.LBI11973:
 19580              		.loc 5 153 7 is_stmt 1 view .LVU5092
 19581              	.LBB11974:
 19582              	.LBI11974:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19583              		.loc 4 89 7 view .LVU5093
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19584              		.loc 4 89 7 is_stmt 0 view .LVU5094
 19585              	.LBE11974:
 19586              	.LBE11973:
 117:alohal/filesystem/filesystem.cpp ****     }
 19587              		.loc 17 117 9 is_stmt 1 view .LVU5095
 19588              	.LBB11975:
 19589              	.LBI11975:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19590              		.loc 5 138 7 view .LVU5096
 19591              	.LBB11976:
 19592              	.LBI11976:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19593              		.loc 4 80 7 view .LVU5097
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19594              		.loc 4 80 7 is_stmt 0 view .LVU5098
 19595              	.LBE11976:
 19596              	.LBE11975:
 19597              	.LBB11977:
 19598              	.LBI11977:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 19599              		.loc 2 525 7 is_stmt 1 view .LVU5099
 19600              	.LBB11978:
 19601              	.LBI11978:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19602              		.loc 2 190 7 view .LVU5100
 19603              	.LBB11979:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 19604              		.loc 2 193 51 is_stmt 0 view .LVU5101
 19605 00f0 04F10803 		add	r3, r4, #8
 19606              	.LVL1344:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 19607              		.loc 2 193 51 view .LVU5102
 19608              	.LBE11979:
 19609              	.LBE11978:
ARM GAS  /tmp/ccL95Edz.s 			page 689


 19610              	.LBB11980:
 19611              	.LBI11980:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 19612              		.loc 2 156 2 is_stmt 1 view .LVU5103
 19613              	.LBB11981:
 19614              	.LBB11982:
 19615              	.LBI11982:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19616              		.loc 5 141 7 view .LVU5104
 19617              	.LBB11983:
 19618              	.LBI11983:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19619              		.loc 4 83 7 view .LVU5105
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19620              		.loc 4 83 7 is_stmt 0 view .LVU5106
 19621              	.LBE11983:
 19622              	.LBE11982:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19623              		.loc 2 157 35 view .LVU5107
 19624 00f4 2360     		str	r3, [r4]
 19625              	.LVL1345:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19626              		.loc 2 157 35 view .LVU5108
 19627              	.LBE11981:
 19628              	.LBE11980:
 19629              	.LBB11984:
 19630              	.LBI11984:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 19631              		.loc 8 329 7 is_stmt 1 view .LVU5109
 19632              	.LBE11984:
 19633              	.LBE11977:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 19634              		.loc 8 332 2 view .LVU5110
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 19635              		.loc 8 335 2 view .LVU5111
 19636              	.LBB11989:
 19637              	.LBB11985:
 19638              	.LBI11985:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19639              		.loc 2 263 9 view .LVU5112
 19640              	.LBB11986:
 19641              	.LBB11987:
 19642              	.LBI11987:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19643              		.loc 2 243 9 view .LVU5113
 19644              	.LBB11988:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19645              		.loc 2 247 11 is_stmt 0 view .LVU5114
 19646 00f6 5349     		ldr	r1, .L444+8
 19647 00f8 4FF00003 		mov	r3, #0
 19648 00fc 0A46     		mov	r2, r1
 19649 00fe 2046     		mov	r0, r4
 19650 0100 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 19651              	.LVL1346:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19652              		.loc 2 247 11 view .LVU5115
 19653              	.LBE11988:
ARM GAS  /tmp/ccL95Edz.s 			page 690


 19654              	.LBE11987:
 19655              	.LBE11986:
 19656              	.LBE11985:
 19657              	.LBE11989:
 19658              	.LBB11990:
 19659              	.LBI11990:
 19660              		.loc 5 153 7 is_stmt 1 view .LVU5116
 19661              	.LBB11991:
 19662              	.LBI11991:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19663              		.loc 4 89 7 view .LVU5117
 19664              	.L430:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19665              		.loc 4 89 7 is_stmt 0 view .LVU5118
 19666              	.LBE11991:
 19667              	.LBE11990:
 19668              	.LBB11992:
 19669              	.LBI11992:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19670              		.loc 2 657 7 is_stmt 1 view .LVU5119
 19671              	.LBB11993:
 19672              	.LBB11994:
 19673              	.LBI11994:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19674              		.loc 2 229 7 view .LVU5120
 19675              	.LBB11995:
 19676              	.LBB11996:
 19677              	.LBI11996:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 19678              		.loc 2 221 7 view .LVU5121
 19679              	.LBB11997:
 19680              	.LBI11997:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19681              		.loc 2 186 7 view .LVU5122
 19682              	.LBB11998:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19683              		.loc 2 187 28 is_stmt 0 view .LVU5123
 19684 0104 0098     		ldr	r0, [sp]
 19685              	.LVL1347:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19686              		.loc 2 187 28 view .LVU5124
 19687              	.LBE11998:
 19688              	.LBE11997:
 19689              	.LBB11999:
 19690              	.LBI11999:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19691              		.loc 2 200 7 is_stmt 1 view .LVU5125
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19692              		.loc 2 200 7 is_stmt 0 view .LVU5126
 19693              	.LBE11999:
 19694              	.LBE11996:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19695              		.loc 2 231 2 view .LVU5127
 19696 0106 02AB     		add	r3, sp, #8
 19697 0108 9842     		cmp	r0, r3
 19698 010a 01D0     		beq	.L405
 19699              	.LVL1348:
ARM GAS  /tmp/ccL95Edz.s 			page 691


 19700              	.LBB12000:
 19701              	.LBI12000:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19702              		.loc 2 236 7 is_stmt 1 view .LVU5128
 19703              	.LBB12001:
 19704              	.LBB12002:
 19705              	.LBI12002:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19706              		.loc 3 469 7 view .LVU5129
 19707              	.LBB12003:
 19708              	.LBI12003:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19709              		.loc 4 119 7 view .LVU5130
 19710              	.LBB12004:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19711              		.loc 4 128 19 is_stmt 0 view .LVU5131
 19712 010c FFF7FEFF 		bl	_ZdlPv
 19713              	.LVL1349:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19714              		.loc 4 128 19 view .LVU5132
 19715              	.LBE12004:
 19716              	.LBE12003:
 19717              	.LBE12002:
 19718              	.LBE12001:
 19719              	.LBE12000:
 19720              	.LBE11995:
 19721              	.LBE11994:
 19722              	.LBB12005:
 19723              	.LBI12005:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19724              		.loc 2 150 14 is_stmt 1 view .LVU5133
 19725              	.LBB12006:
 19726              	.LBI12006:
 19727              		.loc 5 153 7 view .LVU5134
 19728              	.LBB12007:
 19729              	.LBI12007:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19730              		.loc 4 89 7 view .LVU5135
 19731              	.L405:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19732              		.loc 4 89 7 is_stmt 0 view .LVU5136
 19733              	.LBE12007:
 19734              	.LBE12006:
 19735              	.LBE12005:
 19736              	.LBE11993:
 19737              	.LBE11992:
 120:alohal/filesystem/filesystem.cpp **** 
 19738              		.loc 17 120 1 view .LVU5137
 19739 0110 2046     		mov	r0, r4
 19740 0112 31B0     		add	sp, sp, #196
 19741              	.LCFI70:
 19742              		.cfi_remember_state
 19743              		.cfi_def_cfa_offset 20
 19744              		@ sp needed
 19745 0114 F0BD     		pop	{r4, r5, r6, r7, pc}
 19746              	.LVL1350:
 19747              	.L437:
ARM GAS  /tmp/ccL95Edz.s 			page 692


 19748              	.LCFI71:
 19749              		.cfi_restore_state
 106:alohal/filesystem/filesystem.cpp ****         return "";
 19750              		.loc 17 106 9 is_stmt 1 view .LVU5138
 19751 0116 AE68     		ldr	r6, [r5, #8]
 19752              	.LVL1351:
 19753              	.LBB12008:
 19754              	.LBI12008:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19755              		.loc 5 138 7 view .LVU5139
 19756              	.LBB12009:
 19757              	.LBI12009:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19758              		.loc 4 80 7 view .LVU5140
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19759              		.loc 4 80 7 is_stmt 0 view .LVU5141
 19760              	.LBE12009:
 19761              	.LBE12008:
 19762              	.LBB12010:
 19763              	.LBI12010:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 19764              		.loc 2 525 7 is_stmt 1 view .LVU5142
 19765              	.LBB12011:
 19766              	.LBB12012:
 19767              	.LBB12013:
 19768              	.LBI12013:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19769              		.loc 2 190 7 view .LVU5143
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19770              		.loc 2 190 7 is_stmt 0 view .LVU5144
 19771              	.LBE12013:
 19772              	.LBB12014:
 19773              	.LBI12014:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 19774              		.loc 2 156 2 is_stmt 1 view .LVU5145
 19775              	.LBB12015:
 19776              	.LBB12016:
 19777              	.LBB12017:
 19778              	.LBI12017:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19779              		.loc 5 141 7 view .LVU5146
 19780              	.LBB12018:
 19781              	.LBI12018:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19782              		.loc 4 83 7 view .LVU5147
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19783              		.loc 4 83 7 is_stmt 0 view .LVU5148
 19784              	.LBE12018:
 19785              	.LBE12017:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19786              		.loc 2 157 35 view .LVU5149
 19787 0118 08AD     		add	r5, sp, #32
 19788              	.LVL1352:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19789              		.loc 2 157 35 view .LVU5150
 19790 011a 0695     		str	r5, [sp, #24]
 19791              	.LVL1353:
ARM GAS  /tmp/ccL95Edz.s 			page 693


 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19792              		.loc 2 157 35 view .LVU5151
 19793              	.LBE12016:
 19794              	.LBE12015:
 19795              	.LBE12014:
 19796              	.LBB12019:
 19797              	.LBI12019:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 19798              		.loc 8 329 7 is_stmt 1 view .LVU5152
 19799              	.LBE12019:
 19800              	.LBE12012:
 19801              	.LBE12011:
 19802              	.LBE12010:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 19803              		.loc 8 332 2 view .LVU5153
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 19804              		.loc 8 335 2 view .LVU5154
 19805              	.LBB12026:
 19806              	.LBB12025:
 19807              	.LBB12024:
 19808              	.LBB12020:
 19809              	.LBI12020:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19810              		.loc 2 263 9 view .LVU5155
 19811              	.LBB12021:
 19812              	.LBB12022:
 19813              	.LBI12022:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19814              		.loc 2 243 9 view .LVU5156
 19815              	.LBB12023:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19816              		.loc 2 247 11 is_stmt 0 view .LVU5157
 19817 011c 4A4A     		ldr	r2, .L444+12
 19818              	.LVL1354:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19819              		.loc 2 247 11 view .LVU5158
 19820 011e 4FF00003 		mov	r3, #0
 19821 0122 A2F11501 		sub	r1, r2, #21
 19822 0126 06A8     		add	r0, sp, #24
 19823              	.LVL1355:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19824              		.loc 2 247 11 view .LVU5159
 19825 0128 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 19826              	.LVL1356:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19827              		.loc 2 247 11 view .LVU5160
 19828              	.LBE12023:
 19829              	.LBE12022:
 19830              	.LBE12021:
 19831              	.LBE12020:
 19832              	.LBE12024:
 19833              	.LBE12025:
 19834              	.LBE12026:
 106:alohal/filesystem/filesystem.cpp ****         return "";
 19835              		.loc 17 106 19 view .LVU5161
 19836 012c 06A9     		add	r1, sp, #24
 19837 012e 3046     		mov	r0, r6
ARM GAS  /tmp/ccL95Edz.s 			page 694


 19838 0130 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19839              	.LVL1357:
 19840              	.LBB12027:
 19841              	.LBI12027:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19842              		.loc 2 657 7 is_stmt 1 view .LVU5162
 19843              	.LBB12028:
 19844              	.LBI12028:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19845              		.loc 2 229 7 view .LVU5163
 19846              	.LBB12029:
 19847              	.LBB12030:
 19848              	.LBI12030:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 19849              		.loc 2 221 7 view .LVU5164
 19850              	.LBB12031:
 19851              	.LBI12031:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19852              		.loc 2 186 7 view .LVU5165
 19853              	.LBB12032:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19854              		.loc 2 187 28 is_stmt 0 view .LVU5166
 19855 0134 0698     		ldr	r0, [sp, #24]
 19856              	.LVL1358:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19857              		.loc 2 187 28 view .LVU5167
 19858              	.LBE12032:
 19859              	.LBE12031:
 19860              	.LBB12033:
 19861              	.LBI12033:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19862              		.loc 2 200 7 is_stmt 1 view .LVU5168
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19863              		.loc 2 200 7 is_stmt 0 view .LVU5169
 19864              	.LBE12033:
 19865              	.LBE12030:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19866              		.loc 2 231 2 view .LVU5170
 19867 0136 A842     		cmp	r0, r5
 19868 0138 01D0     		beq	.L407
 19869              	.LVL1359:
 19870              	.LBB12034:
 19871              	.LBI12034:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19872              		.loc 2 236 7 is_stmt 1 view .LVU5171
 19873              	.LBB12035:
 19874              	.LBB12036:
 19875              	.LBI12036:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19876              		.loc 3 469 7 view .LVU5172
 19877              	.LBB12037:
 19878              	.LBI12037:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19879              		.loc 4 119 7 view .LVU5173
 19880              	.LBB12038:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19881              		.loc 4 128 19 is_stmt 0 view .LVU5174
ARM GAS  /tmp/ccL95Edz.s 			page 695


 19882 013a FFF7FEFF 		bl	_ZdlPv
 19883              	.LVL1360:
 19884              	.L407:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19885              		.loc 4 128 19 view .LVU5175
 19886              	.LBE12038:
 19887              	.LBE12037:
 19888              	.LBE12036:
 19889              	.LBE12035:
 19890              	.LBE12034:
 19891              	.LBE12029:
 19892              	.LBE12028:
 19893              	.LBB12039:
 19894              	.LBI12039:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19895              		.loc 2 150 14 is_stmt 1 view .LVU5176
 19896              	.LBB12040:
 19897              	.LBI12040:
 19898              		.loc 5 153 7 view .LVU5177
 19899              	.LBB12041:
 19900              	.LBI12041:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19901              		.loc 4 89 7 view .LVU5178
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19902              		.loc 4 89 7 is_stmt 0 view .LVU5179
 19903              	.LBE12041:
 19904              	.LBE12040:
 19905              	.LBE12039:
 19906              	.LBE12027:
 19907              	.LBB12042:
 19908              	.LBI12042:
 19909              		.loc 5 153 7 is_stmt 1 view .LVU5180
 19910              	.LBB12043:
 19911              	.LBI12043:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19912              		.loc 4 89 7 view .LVU5181
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19913              		.loc 4 89 7 is_stmt 0 view .LVU5182
 19914              	.LBE12043:
 19915              	.LBE12042:
 107:alohal/filesystem/filesystem.cpp ****     }
 19916              		.loc 17 107 9 is_stmt 1 view .LVU5183
 19917              	.LBB12044:
 19918              	.LBI12044:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19919              		.loc 5 138 7 view .LVU5184
 19920              	.LBB12045:
 19921              	.LBI12045:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19922              		.loc 4 80 7 view .LVU5185
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19923              		.loc 4 80 7 is_stmt 0 view .LVU5186
 19924              	.LBE12045:
 19925              	.LBE12044:
 19926              	.LBB12046:
 19927              	.LBI12046:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
ARM GAS  /tmp/ccL95Edz.s 			page 696


 19928              		.loc 2 525 7 is_stmt 1 view .LVU5187
 19929              	.LBB12047:
 19930              	.LBI12047:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19931              		.loc 2 190 7 view .LVU5188
 19932              	.LBB12048:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 19933              		.loc 2 193 51 is_stmt 0 view .LVU5189
 19934 013e 04F10803 		add	r3, r4, #8
 19935              	.LVL1361:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 19936              		.loc 2 193 51 view .LVU5190
 19937              	.LBE12048:
 19938              	.LBE12047:
 19939              	.LBB12049:
 19940              	.LBI12049:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 19941              		.loc 2 156 2 is_stmt 1 view .LVU5191
 19942              	.LBB12050:
 19943              	.LBB12051:
 19944              	.LBI12051:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19945              		.loc 5 141 7 view .LVU5192
 19946              	.LBB12052:
 19947              	.LBI12052:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19948              		.loc 4 83 7 view .LVU5193
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19949              		.loc 4 83 7 is_stmt 0 view .LVU5194
 19950              	.LBE12052:
 19951              	.LBE12051:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19952              		.loc 2 157 35 view .LVU5195
 19953 0142 2360     		str	r3, [r4]
 19954              	.LVL1362:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19955              		.loc 2 157 35 view .LVU5196
 19956              	.LBE12050:
 19957              	.LBE12049:
 19958              	.LBB12053:
 19959              	.LBI12053:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 19960              		.loc 8 329 7 is_stmt 1 view .LVU5197
 19961              	.LBE12053:
 19962              	.LBE12046:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 19963              		.loc 8 332 2 view .LVU5198
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 19964              		.loc 8 335 2 view .LVU5199
 19965              	.LBB12058:
 19966              	.LBB12054:
 19967              	.LBI12054:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19968              		.loc 2 263 9 view .LVU5200
 19969              	.LBB12055:
 19970              	.LBB12056:
 19971              	.LBI12056:
ARM GAS  /tmp/ccL95Edz.s 			page 697


 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19972              		.loc 2 243 9 view .LVU5201
 19973              	.LBB12057:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19974              		.loc 2 247 11 is_stmt 0 view .LVU5202
 19975 0144 3F49     		ldr	r1, .L444+8
 19976 0146 4FF00003 		mov	r3, #0
 19977 014a 0A46     		mov	r2, r1
 19978 014c 2046     		mov	r0, r4
 19979 014e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 19980              	.LVL1363:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19981              		.loc 2 247 11 view .LVU5203
 19982              	.LBE12057:
 19983              	.LBE12056:
 19984              	.LBE12055:
 19985              	.LBE12054:
 19986              	.LBE12058:
 19987              	.LBB12059:
 19988              	.LBI12059:
 19989              		.loc 5 153 7 is_stmt 1 view .LVU5204
 19990              	.LBB12060:
 19991              	.LBI12060:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19992              		.loc 4 89 7 view .LVU5205
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19993              		.loc 4 89 7 is_stmt 0 view .LVU5206
 19994 0152 DDE7     		b	.L405
 19995              	.LVL1364:
 19996              	.L438:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19997              		.loc 4 89 7 view .LVU5207
 19998              	.LBE12060:
 19999              	.LBE12059:
 111:alohal/filesystem/filesystem.cpp ****     } else {
 20000              		.loc 17 111 9 is_stmt 1 view .LVU5208
 20001              	.LBB12061:
 20002              	.LBI12061:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 20003              		.loc 5 138 7 view .LVU5209
 20004              	.LBB12062:
 20005              	.LBI12062:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20006              		.loc 4 80 7 view .LVU5210
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20007              		.loc 4 80 7 is_stmt 0 view .LVU5211
 20008              	.LBE12062:
 20009              	.LBE12061:
 20010              	.LBB12063:
 20011              	.LBI12063:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 20012              		.loc 2 525 7 is_stmt 1 view .LVU5212
 20013              	.LBB12064:
 20014              	.LBB12065:
 20015              	.LBB12066:
 20016              	.LBI12066:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 698


 20017              		.loc 2 190 7 view .LVU5213
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20018              		.loc 2 190 7 is_stmt 0 view .LVU5214
 20019              	.LBE12066:
 20020              	.LBB12067:
 20021              	.LBI12067:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 20022              		.loc 2 156 2 is_stmt 1 view .LVU5215
 20023              	.LBB12068:
 20024              	.LBB12069:
 20025              	.LBB12070:
 20026              	.LBI12070:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20027              		.loc 5 141 7 view .LVU5216
 20028              	.LBB12071:
 20029              	.LBI12071:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20030              		.loc 4 83 7 view .LVU5217
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20031              		.loc 4 83 7 is_stmt 0 view .LVU5218
 20032              	.LBE12071:
 20033              	.LBE12070:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20034              		.loc 2 157 35 view .LVU5219
 20035 0154 14AB     		add	r3, sp, #80
 20036              	.LVL1365:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20037              		.loc 2 157 35 view .LVU5220
 20038 0156 1293     		str	r3, [sp, #72]
 20039              	.LVL1366:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20040              		.loc 2 157 35 view .LVU5221
 20041              	.LBE12069:
 20042              	.LBE12068:
 20043              	.LBE12067:
 20044              	.LBB12072:
 20045              	.LBI12072:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 20046              		.loc 8 329 7 is_stmt 1 view .LVU5222
 20047              	.LBE12072:
 20048              	.LBE12065:
 20049              	.LBE12064:
 20050              	.LBE12063:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 20051              		.loc 8 332 2 view .LVU5223
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 20052              		.loc 8 335 2 view .LVU5224
 20053              	.LBB12079:
 20054              	.LBB12078:
 20055              	.LBB12077:
 20056              	.LBB12073:
 20057              	.LBI12073:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 20058              		.loc 2 263 9 view .LVU5225
 20059              	.LBB12074:
 20060              	.LBB12075:
 20061              	.LBI12075:
ARM GAS  /tmp/ccL95Edz.s 			page 699


 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 20062              		.loc 2 243 9 view .LVU5226
 20063              	.LBB12076:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20064              		.loc 2 247 11 is_stmt 0 view .LVU5227
 20065 0158 3C4A     		ldr	r2, .L444+16
 20066              	.LVL1367:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20067              		.loc 2 247 11 view .LVU5228
 20068 015a 4FF00003 		mov	r3, #0
 20069 015e 511E     		subs	r1, r2, #1
 20070 0160 12A8     		add	r0, sp, #72
 20071              	.LVL1368:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20072              		.loc 2 247 11 view .LVU5229
 20073 0162 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 20074              	.LVL1369:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20075              		.loc 2 247 11 view .LVU5230
 20076              	.LBE12076:
 20077              	.LBE12075:
 20078              	.LBE12074:
 20079              	.LBE12073:
 20080              	.LBE12077:
 20081              	.LBE12078:
 20082              	.LBE12079:
 111:alohal/filesystem/filesystem.cpp ****     } else {
 20083              		.loc 17 111 39 view .LVU5231
 20084 0166 12AA     		add	r2, sp, #72
 20085 0168 2946     		mov	r1, r5
 20086 016a 0CA8     		add	r0, sp, #48
 20087 016c FFF7FEFF 		bl	_ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 20088              	.LVL1370:
 20089              	.LBB12080:
 20090              	.LBI12080:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 20091              		.loc 2 732 7 is_stmt 1 view .LVU5232
 20092              	.LBB12081:
 20093              	.LBI12081:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 20094              		.loc 2 221 7 view .LVU5233
 20095              	.LBB12082:
 20096              	.LBI12082:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20097              		.loc 2 186 7 view .LVU5234
 20098              	.LBB12083:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20099              		.loc 2 187 28 is_stmt 0 view .LVU5235
 20100 0170 0098     		ldr	r0, [sp]
 20101              	.LVL1371:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20102              		.loc 2 187 28 view .LVU5236
 20103              	.LBE12083:
 20104              	.LBE12082:
 20105              	.LBB12084:
 20106              	.LBI12084:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 700


 20107              		.loc 2 200 7 is_stmt 1 view .LVU5237
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20108              		.loc 2 200 7 is_stmt 0 view .LVU5238
 20109              	.LBE12084:
 20110              	.LBE12081:
 20111              	.LBB12085:
 20112              	.LBB12086:
 20113              	.LBI12086:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 20114              		.loc 2 221 7 is_stmt 1 view .LVU5239
 20115              	.LBB12087:
 20116              	.LBI12087:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20117              		.loc 2 186 7 view .LVU5240
 20118              	.LBB12088:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20119              		.loc 2 187 28 is_stmt 0 view .LVU5241
 20120 0172 0C99     		ldr	r1, [sp, #48]
 20121              	.LVL1372:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20122              		.loc 2 187 28 view .LVU5242
 20123              	.LBE12088:
 20124              	.LBE12087:
 20125              	.LBB12089:
 20126              	.LBI12089:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20127              		.loc 2 200 7 is_stmt 1 view .LVU5243
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20128              		.loc 2 200 7 is_stmt 0 view .LVU5244
 20129              	.LBE12089:
 20130              	.LBE12086:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 20131              		.loc 2 747 2 view .LVU5245
 20132 0174 0EAB     		add	r3, sp, #56
 20133 0176 9942     		cmp	r1, r3
 20134 0178 1DD0     		beq	.L440
 20135              	.LVL1373:
 20136              	.LBB12090:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 20137              		.loc 2 761 6 view .LVU5246
 20138 017a 02AB     		add	r3, sp, #8
 20139 017c 9842     		cmp	r0, r3
 20140 017e 29D0     		beq	.L434
 20141              	.LVL1374:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 20142              		.loc 2 767 7 view .LVU5247
 20143 0180 029F     		ldr	r7, [sp, #8]
 20144              	.LVL1375:
 20145              	.L414:
 20146              	.LBB12091:
 20147              	.LBI12091:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 20148              		.loc 2 178 7 is_stmt 1 view .LVU5248
 20149              	.LBB12092:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20150              		.loc 2 179 9 is_stmt 0 view .LVU5249
 20151 0182 0091     		str	r1, [sp]
ARM GAS  /tmp/ccL95Edz.s 			page 701


 20152              	.LVL1376:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20153              		.loc 2 179 9 view .LVU5250
 20154              	.LBE12092:
 20155              	.LBE12091:
 20156              	.LBB12093:
 20157              	.LBI12093:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20158              		.loc 2 936 7 is_stmt 1 view .LVU5251
 20159              	.LBB12094:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20160              		.loc 2 937 16 is_stmt 0 view .LVU5252
 20161 0184 0D9B     		ldr	r3, [sp, #52]
 20162              	.LVL1377:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20163              		.loc 2 937 16 view .LVU5253
 20164              	.LBE12094:
 20165              	.LBE12093:
 20166              	.LBB12095:
 20167              	.LBI12095:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 20168              		.loc 2 182 7 is_stmt 1 view .LVU5254
 20169              	.LBB12096:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20170              		.loc 2 183 9 is_stmt 0 view .LVU5255
 20171 0186 0193     		str	r3, [sp, #4]
 20172              	.LVL1378:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20173              		.loc 2 183 9 view .LVU5256
 20174              	.LBE12096:
 20175              	.LBE12095:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 20176              		.loc 2 775 6 view .LVU5257
 20177 0188 0E9B     		ldr	r3, [sp, #56]
 20178              	.LVL1379:
 20179              	.LBB12097:
 20180              	.LBI12097:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 20181              		.loc 2 210 7 is_stmt 1 view .LVU5258
 20182              	.LBB12098:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20183              		.loc 2 211 9 is_stmt 0 view .LVU5259
 20184 018a 0293     		str	r3, [sp, #8]
 20185              	.LVL1380:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20186              		.loc 2 211 9 view .LVU5260
 20187              	.LBE12098:
 20188              	.LBE12097:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 20189              		.loc 2 776 6 view .LVU5261
 20190 018c 20B3     		cbz	r0, .L415
 20191              	.LVL1381:
 20192              	.LBB12099:
 20193              	.LBI12099:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 20194              		.loc 2 178 7 is_stmt 1 view .LVU5262
 20195              	.LBB12100:
ARM GAS  /tmp/ccL95Edz.s 			page 702


 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20196              		.loc 2 179 9 is_stmt 0 view .LVU5263
 20197 018e 0C90     		str	r0, [sp, #48]
 20198              	.LVL1382:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20199              		.loc 2 179 9 view .LVU5264
 20200              	.LBE12100:
 20201              	.LBE12099:
 20202              	.LBB12101:
 20203              	.LBI12101:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 20204              		.loc 2 210 7 is_stmt 1 view .LVU5265
 20205              	.LBB12102:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20206              		.loc 2 211 9 is_stmt 0 view .LVU5266
 20207 0190 0E97     		str	r7, [sp, #56]
 20208              	.LVL1383:
 20209              	.L413:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20210              		.loc 2 211 9 view .LVU5267
 20211              	.LBE12102:
 20212              	.LBE12101:
 20213              	.LBE12090:
 20214              	.LBE12085:
 20215              	.LBB12125:
 20216              	.LBI12125:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 20217              		.loc 2 1023 7 is_stmt 1 view .LVU5268
 20218              	.LBB12126:
 20219              	.LBI12126:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20220              		.loc 2 214 7 view .LVU5269
 20221              	.LBB12127:
 20222              	.LBI12127:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 20223              		.loc 2 182 7 view .LVU5270
 20224              	.LBB12128:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20225              		.loc 2 183 9 is_stmt 0 view .LVU5271
 20226 0192 0023     		movs	r3, #0
 20227 0194 0D93     		str	r3, [sp, #52]
 20228              	.LVL1384:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20229              		.loc 2 183 9 view .LVU5272
 20230              	.LBE12128:
 20231              	.LBE12127:
 20232              	.LBB12129:
 20233              	.LBI12129:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20234              		.loc 2 186 7 is_stmt 1 view .LVU5273
 20235              	.LBB12130:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20236              		.loc 2 187 28 is_stmt 0 view .LVU5274
 20237 0196 0C9A     		ldr	r2, [sp, #48]
 20238              	.LVL1385:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20239              		.loc 2 187 28 view .LVU5275
ARM GAS  /tmp/ccL95Edz.s 			page 703


 20240              	.LBE12130:
 20241              	.LBE12129:
 20242              	.LBB12131:
 20243              	.LBI12131:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 20244              		.loc 8 299 7 is_stmt 1 view .LVU5276
 20245              	.LBB12132:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20246              		.loc 8 300 9 view .LVU5277
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20247              		.loc 8 300 14 is_stmt 0 view .LVU5278
 20248 0198 1370     		strb	r3, [r2]
 20249              	.LVL1386:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20250              		.loc 8 300 14 view .LVU5279
 20251              	.LBE12132:
 20252              	.LBE12131:
 20253              	.LBE12126:
 20254              	.LBE12125:
 20255              	.LBE12080:
 20256              	.LBB12134:
 20257              	.LBI12134:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 20258              		.loc 2 657 7 is_stmt 1 view .LVU5280
 20259              	.LBB12135:
 20260              	.LBI12135:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20261              		.loc 2 229 7 view .LVU5281
 20262              	.LBB12136:
 20263              	.LBB12137:
 20264              	.LBI12137:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 20265              		.loc 2 221 7 view .LVU5282
 20266              	.LBB12138:
 20267              	.LBI12138:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20268              		.loc 2 186 7 view .LVU5283
 20269              	.LBB12139:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20270              		.loc 2 187 28 is_stmt 0 view .LVU5284
 20271 019a 0C98     		ldr	r0, [sp, #48]
 20272              	.LVL1387:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20273              		.loc 2 187 28 view .LVU5285
 20274              	.LBE12139:
 20275              	.LBE12138:
 20276              	.LBB12140:
 20277              	.LBI12140:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20278              		.loc 2 200 7 is_stmt 1 view .LVU5286
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20279              		.loc 2 200 7 is_stmt 0 view .LVU5287
 20280              	.LBE12140:
 20281              	.LBE12137:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 20282              		.loc 2 231 2 view .LVU5288
 20283 019c 0EAB     		add	r3, sp, #56
ARM GAS  /tmp/ccL95Edz.s 			page 704


 20284 019e 9842     		cmp	r0, r3
 20285 01a0 01D0     		beq	.L416
 20286              	.LVL1388:
 20287              	.LBB12141:
 20288              	.LBI12141:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 20289              		.loc 2 236 7 is_stmt 1 view .LVU5289
 20290              	.LBB12142:
 20291              	.LBB12143:
 20292              	.LBI12143:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20293              		.loc 3 469 7 view .LVU5290
 20294              	.LBB12144:
 20295              	.LBI12144:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 20296              		.loc 4 119 7 view .LVU5291
 20297              	.LBB12145:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20298              		.loc 4 128 19 is_stmt 0 view .LVU5292
 20299 01a2 FFF7FEFF 		bl	_ZdlPv
 20300              	.LVL1389:
 20301              	.L416:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20302              		.loc 4 128 19 view .LVU5293
 20303              	.LBE12145:
 20304              	.LBE12144:
 20305              	.LBE12143:
 20306              	.LBE12142:
 20307              	.LBE12141:
 20308              	.LBE12136:
 20309              	.LBE12135:
 20310              	.LBB12146:
 20311              	.LBI12146:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20312              		.loc 2 150 14 is_stmt 1 view .LVU5294
 20313              	.LBB12147:
 20314              	.LBI12147:
 20315              		.loc 5 153 7 view .LVU5295
 20316              	.LBB12148:
 20317              	.LBI12148:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20318              		.loc 4 89 7 view .LVU5296
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20319              		.loc 4 89 7 is_stmt 0 view .LVU5297
 20320              	.LBE12148:
 20321              	.LBE12147:
 20322              	.LBE12146:
 20323              	.LBE12134:
 20324              	.LBB12149:
 20325              	.LBI12149:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 20326              		.loc 2 657 7 is_stmt 1 view .LVU5298
 20327              	.LBB12150:
 20328              	.LBI12150:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20329              		.loc 2 229 7 view .LVU5299
 20330              	.LBB12151:
ARM GAS  /tmp/ccL95Edz.s 			page 705


 20331              	.LBB12152:
 20332              	.LBI12152:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 20333              		.loc 2 221 7 view .LVU5300
 20334              	.LBB12153:
 20335              	.LBI12153:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20336              		.loc 2 186 7 view .LVU5301
 20337              	.LBB12154:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20338              		.loc 2 187 28 is_stmt 0 view .LVU5302
 20339 01a6 1298     		ldr	r0, [sp, #72]
 20340              	.LVL1390:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20341              		.loc 2 187 28 view .LVU5303
 20342              	.LBE12154:
 20343              	.LBE12153:
 20344              	.LBB12155:
 20345              	.LBI12155:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20346              		.loc 2 200 7 is_stmt 1 view .LVU5304
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20347              		.loc 2 200 7 is_stmt 0 view .LVU5305
 20348              	.LBE12155:
 20349              	.LBE12152:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 20350              		.loc 2 231 2 view .LVU5306
 20351 01a8 14AB     		add	r3, sp, #80
 20352 01aa 9842     		cmp	r0, r3
 20353 01ac 3FF475AF 		beq	.L418
 20354              	.LVL1391:
 20355              	.LBB12156:
 20356              	.LBI12156:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 20357              		.loc 2 236 7 is_stmt 1 view .LVU5307
 20358              	.LBB12157:
 20359              	.LBB12158:
 20360              	.LBI12158:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20361              		.loc 3 469 7 view .LVU5308
 20362              	.LBB12159:
 20363              	.LBI12159:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 20364              		.loc 4 119 7 view .LVU5309
 20365              	.LBB12160:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20366              		.loc 4 128 19 is_stmt 0 view .LVU5310
 20367 01b0 FFF7FEFF 		bl	_ZdlPv
 20368              	.LVL1392:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20369              		.loc 4 128 19 view .LVU5311
 20370              	.LBE12160:
 20371              	.LBE12159:
 20372              	.LBE12158:
 20373              	.LBE12157:
 20374              	.LBE12156:
 20375              	.LBE12151:
ARM GAS  /tmp/ccL95Edz.s 			page 706


 20376              	.LBE12150:
 20377              	.LBB12164:
 20378              	.LBI12164:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20379              		.loc 2 150 14 is_stmt 1 view .LVU5312
 20380              	.LBB12165:
 20381              	.LBI12165:
 20382              		.loc 5 153 7 view .LVU5313
 20383              	.LBB12166:
 20384              	.LBI12166:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20385              		.loc 4 89 7 view .LVU5314
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20386              		.loc 4 89 7 is_stmt 0 view .LVU5315
 20387              	.LBE12166:
 20388              	.LBE12165:
 20389              	.LBE12164:
 20390              	.LBE12149:
 20391              	.LBB12168:
 20392              	.LBI12168:
 20393              		.loc 5 153 7 is_stmt 1 view .LVU5316
 20394              	.LBB12169:
 20395              	.LBI12169:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20396              		.loc 4 89 7 view .LVU5317
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20397              		.loc 4 89 7 is_stmt 0 view .LVU5318
 20398              	.LBE12169:
 20399              	.LBE12168:
 20400              	.LBB12170:
 20401              	.LBB12167:
 20402              	.LBB12163:
 20403              	.LBB12162:
 20404              	.LBB12161:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20405              		.loc 2 237 79 view .LVU5319
 20406 01b4 71E7     		b	.L418
 20407              	.LVL1393:
 20408              	.L440:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20409              		.loc 2 237 79 view .LVU5320
 20410              	.LBE12161:
 20411              	.LBE12162:
 20412              	.LBE12163:
 20413              	.LBE12167:
 20414              	.LBE12170:
 20415              	.LBB12171:
 20416              	.LBB12133:
 20417              	.LBB12105:
 20418              	.LBI12105:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20419              		.loc 2 930 7 is_stmt 1 view .LVU5321
 20420              	.LBB12106:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20421              		.loc 2 931 16 is_stmt 0 view .LVU5322
 20422 01b6 0D9A     		ldr	r2, [sp, #52]
 20423              	.LVL1394:
ARM GAS  /tmp/ccL95Edz.s 			page 707


 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20424              		.loc 2 931 16 view .LVU5323
 20425              	.LBE12106:
 20426              	.LBE12105:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 20427              		.loc 2 750 6 view .LVU5324
 20428 01b8 1AB1     		cbz	r2, .L411
 20429              	.LVL1395:
 20430              	.LBB12107:
 20431              	.LBI12107:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20432              		.loc 2 346 7 is_stmt 1 view .LVU5325
 20433              	.LBB12108:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 20434              		.loc 2 348 2 is_stmt 0 view .LVU5326
 20435 01ba 012A     		cmp	r2, #1
 20436 01bc 07D0     		beq	.L441
 20437              	.LVL1396:
 20438              	.LBB12109:
 20439              	.LBI12109:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 20440              		.loc 8 361 7 is_stmt 1 view .LVU5327
 20441              	.LBB12110:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 20442              		.loc 8 363 2 view .LVU5328
 20443              		.loc 8 365 2 view .LVU5329
 20444              		.loc 8 365 49 is_stmt 0 view .LVU5330
 20445 01be FFF7FEFF 		bl	memcpy
 20446              	.LVL1397:
 20447              	.L411:
 20448              		.loc 8 365 49 view .LVU5331
 20449              	.LBE12110:
 20450              	.LBE12109:
 20451              	.LBE12108:
 20452              	.LBE12107:
 20453              	.LBB12114:
 20454              	.LBI12114:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20455              		.loc 2 930 7 is_stmt 1 view .LVU5332
 20456              	.LBB12115:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20457              		.loc 2 931 16 is_stmt 0 view .LVU5333
 20458 01c2 0D9B     		ldr	r3, [sp, #52]
 20459              	.LVL1398:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20460              		.loc 2 931 16 view .LVU5334
 20461              	.LBE12115:
 20462              	.LBE12114:
 20463              	.LBB12116:
 20464              	.LBI12116:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20465              		.loc 2 214 7 is_stmt 1 view .LVU5335
 20466              	.LBB12117:
 20467              	.LBB12118:
 20468              	.LBI12118:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 20469              		.loc 2 182 7 view .LVU5336
ARM GAS  /tmp/ccL95Edz.s 			page 708


 20470              	.LBB12119:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20471              		.loc 2 183 9 is_stmt 0 view .LVU5337
 20472 01c4 0193     		str	r3, [sp, #4]
 20473              	.LVL1399:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20474              		.loc 2 183 9 view .LVU5338
 20475              	.LBE12119:
 20476              	.LBE12118:
 20477              	.LBB12120:
 20478              	.LBI12120:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20479              		.loc 2 186 7 is_stmt 1 view .LVU5339
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20480              		.loc 2 186 7 is_stmt 0 view .LVU5340
 20481              	.LBE12120:
 20482              	.LBB12121:
 20483              	.LBI12121:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 20484              		.loc 8 299 7 is_stmt 1 view .LVU5341
 20485              	.LBB12122:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20486              		.loc 8 300 9 view .LVU5342
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20487              		.loc 8 300 14 is_stmt 0 view .LVU5343
 20488 01c6 009A     		ldr	r2, [sp]
 20489 01c8 0021     		movs	r1, #0
 20490 01ca D154     		strb	r1, [r2, r3]
 20491              	.LVL1400:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20492              		.loc 8 300 14 view .LVU5344
 20493              	.LBE12122:
 20494              	.LBE12121:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20495              		.loc 2 218 7 view .LVU5345
 20496 01cc E1E7     		b	.L413
 20497              	.LVL1401:
 20498              	.L441:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20499              		.loc 2 218 7 view .LVU5346
 20500              	.LBE12117:
 20501              	.LBE12116:
 20502              	.LBB12123:
 20503              	.LBB12113:
 20504              	.LBB12111:
 20505              	.LBI12111:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 20506              		.loc 8 299 7 is_stmt 1 view .LVU5347
 20507              	.LBB12112:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20508              		.loc 8 300 9 view .LVU5348
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20509              		.loc 8 300 16 is_stmt 0 view .LVU5349
 20510 01ce 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20511              		.loc 8 300 14 view .LVU5350
 20512 01d0 0370     		strb	r3, [r0]
ARM GAS  /tmp/ccL95Edz.s 			page 709


 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20513              		.loc 8 300 22 view .LVU5351
 20514 01d2 F6E7     		b	.L411
 20515              	.LVL1402:
 20516              	.L434:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20517              		.loc 8 300 22 view .LVU5352
 20518              	.LBE12112:
 20519              	.LBE12111:
 20520              	.LBE12113:
 20521              	.LBE12123:
 20522              	.LBB12124:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 20523              		.loc 2 759 14 view .LVU5353
 20524 01d4 0020     		movs	r0, #0
 20525 01d6 D4E7     		b	.L414
 20526              	.LVL1403:
 20527              	.L415:
 20528              	.LBB12103:
 20529              	.LBI12103:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 20530              		.loc 2 178 7 is_stmt 1 view .LVU5354
 20531              	.LBB12104:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20532              		.loc 2 179 9 is_stmt 0 view .LVU5355
 20533 01d8 0EAB     		add	r3, sp, #56
 20534              	.LVL1404:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20535              		.loc 2 179 9 view .LVU5356
 20536 01da 0C93     		str	r3, [sp, #48]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20537              		.loc 2 179 33 view .LVU5357
 20538 01dc D9E7     		b	.L413
 20539              	.LVL1405:
 20540              	.L439:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20541              		.loc 2 179 33 view .LVU5358
 20542              	.LBE12104:
 20543              	.LBE12103:
 20544              	.LBE12124:
 20545              	.LBE12133:
 20546              	.LBE12171:
 20547              	.LBB12172:
 20548              	.LBB11868:
 20549              	.LBB11840:
 20550              	.LBI11840:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20551              		.loc 2 930 7 is_stmt 1 view .LVU5359
 20552              	.LBB11841:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20553              		.loc 2 931 16 is_stmt 0 view .LVU5360
 20554 01de 199A     		ldr	r2, [sp, #100]
 20555              	.LVL1406:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20556              		.loc 2 931 16 view .LVU5361
 20557              	.LBE11841:
 20558              	.LBE11840:
ARM GAS  /tmp/ccL95Edz.s 			page 710


 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 20559              		.loc 2 750 6 view .LVU5362
 20560 01e0 1AB1     		cbz	r2, .L420
 20561              	.LVL1407:
 20562              	.LBB11842:
 20563              	.LBI11842:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20564              		.loc 2 346 7 is_stmt 1 view .LVU5363
 20565              	.LBB11843:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 20566              		.loc 2 348 2 is_stmt 0 view .LVU5364
 20567 01e2 012A     		cmp	r2, #1
 20568 01e4 07D0     		beq	.L442
 20569              	.LVL1408:
 20570              	.LBB11844:
 20571              	.LBI11844:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 20572              		.loc 8 361 7 is_stmt 1 view .LVU5365
 20573              	.LBB11845:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 20574              		.loc 8 363 2 view .LVU5366
 20575              		.loc 8 365 2 view .LVU5367
 20576              		.loc 8 365 49 is_stmt 0 view .LVU5368
 20577 01e6 FFF7FEFF 		bl	memcpy
 20578              	.LVL1409:
 20579              	.L420:
 20580              		.loc 8 365 49 view .LVU5369
 20581              	.LBE11845:
 20582              	.LBE11844:
 20583              	.LBE11843:
 20584              	.LBE11842:
 20585              	.LBB11849:
 20586              	.LBI11849:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20587              		.loc 2 930 7 is_stmt 1 view .LVU5370
 20588              	.LBB11850:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20589              		.loc 2 931 16 is_stmt 0 view .LVU5371
 20590 01ea 199B     		ldr	r3, [sp, #100]
 20591              	.LVL1410:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20592              		.loc 2 931 16 view .LVU5372
 20593              	.LBE11850:
 20594              	.LBE11849:
 20595              	.LBB11851:
 20596              	.LBI11851:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20597              		.loc 2 214 7 is_stmt 1 view .LVU5373
 20598              	.LBB11852:
 20599              	.LBB11853:
 20600              	.LBI11853:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 20601              		.loc 2 182 7 view .LVU5374
 20602              	.LBB11854:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20603              		.loc 2 183 9 is_stmt 0 view .LVU5375
 20604 01ec 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccL95Edz.s 			page 711


 20605              	.LVL1411:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20606              		.loc 2 183 9 view .LVU5376
 20607              	.LBE11854:
 20608              	.LBE11853:
 20609              	.LBB11855:
 20610              	.LBI11855:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20611              		.loc 2 186 7 is_stmt 1 view .LVU5377
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20612              		.loc 2 186 7 is_stmt 0 view .LVU5378
 20613              	.LBE11855:
 20614              	.LBB11856:
 20615              	.LBI11856:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 20616              		.loc 8 299 7 is_stmt 1 view .LVU5379
 20617              	.LBB11857:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20618              		.loc 8 300 9 view .LVU5380
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20619              		.loc 8 300 14 is_stmt 0 view .LVU5381
 20620 01ee 009A     		ldr	r2, [sp]
 20621 01f0 0021     		movs	r1, #0
 20622 01f2 D154     		strb	r1, [r2, r3]
 20623              	.LVL1412:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20624              		.loc 8 300 14 view .LVU5382
 20625              	.LBE11857:
 20626              	.LBE11856:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20627              		.loc 2 218 7 view .LVU5383
 20628 01f4 41E7     		b	.L422
 20629              	.LVL1413:
 20630              	.L442:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20631              		.loc 2 218 7 view .LVU5384
 20632              	.LBE11852:
 20633              	.LBE11851:
 20634              	.LBB11858:
 20635              	.LBB11848:
 20636              	.LBB11846:
 20637              	.LBI11846:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 20638              		.loc 8 299 7 is_stmt 1 view .LVU5385
 20639              	.LBB11847:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20640              		.loc 8 300 9 view .LVU5386
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20641              		.loc 8 300 16 is_stmt 0 view .LVU5387
 20642 01f6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20643              		.loc 8 300 14 view .LVU5388
 20644 01f8 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20645              		.loc 8 300 22 view .LVU5389
 20646 01fa F6E7     		b	.L420
 20647              	.LVL1414:
ARM GAS  /tmp/ccL95Edz.s 			page 712


 20648              	.L435:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20649              		.loc 8 300 22 view .LVU5390
 20650              	.LBE11847:
 20651              	.LBE11846:
 20652              	.LBE11848:
 20653              	.LBE11858:
 20654              	.LBB11859:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 20655              		.loc 2 759 14 view .LVU5391
 20656 01fc 0020     		movs	r0, #0
 20657 01fe 32E7     		b	.L423
 20658              	.LVL1415:
 20659              	.L424:
 20660              	.LBB11838:
 20661              	.LBI11838:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 20662              		.loc 2 178 7 is_stmt 1 view .LVU5392
 20663              	.LBB11839:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20664              		.loc 2 179 9 is_stmt 0 view .LVU5393
 20665 0200 1AAB     		add	r3, sp, #104
 20666              	.LVL1416:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20667              		.loc 2 179 9 view .LVU5394
 20668 0202 1893     		str	r3, [sp, #96]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20669              		.loc 2 179 33 view .LVU5395
 20670 0204 39E7     		b	.L422
 20671              	.LVL1417:
 20672              	.L428:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20673              		.loc 2 179 33 view .LVU5396
 20674              	.LBE11839:
 20675              	.LBE11838:
 20676              	.LBE11859:
 20677              	.LBE11868:
 20678              	.LBE12172:
 119:alohal/filesystem/filesystem.cpp **** }
 20679              		.loc 17 119 5 is_stmt 1 view .LVU5397
 20680              	.LBB12173:
 20681              	.LBI12173:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 20682              		.loc 2 552 7 view .LVU5398
 20683              	.LBB12174:
 20684              	.LBB12175:
 20685              	.LBB12176:
 20686              	.LBI12176:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20687              		.loc 2 190 7 view .LVU5399
 20688              	.LBB12177:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 20689              		.loc 2 193 51 is_stmt 0 view .LVU5400
 20690 0206 04F10805 		add	r5, r4, #8
 20691              	.LVL1418:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 20692              		.loc 2 193 51 view .LVU5401
ARM GAS  /tmp/ccL95Edz.s 			page 713


 20693              	.LBE12177:
 20694              	.LBE12176:
 20695              	.LBB12178:
 20696              	.LBI12178:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 20697              		.loc 2 286 7 is_stmt 1 view .LVU5402
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 20698              		.loc 2 286 7 is_stmt 0 view .LVU5403
 20699              	.LBE12178:
 20700              	.LBB12179:
 20701              	.LBI12179:
 20702              		.loc 9 99 5 is_stmt 1 view .LVU5404
 20703              		.loc 9 99 5 is_stmt 0 view .LVU5405
 20704              	.LBE12179:
 20705              	.LBB12180:
 20706              	.LBI12180:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 20707              		.loc 2 159 2 is_stmt 1 view .LVU5406
 20708              	.LBB12181:
 20709              	.LBB12182:
 20710              	.LBI12182:
 20711              		.loc 9 99 5 view .LVU5407
 20712              		.loc 9 99 5 is_stmt 0 view .LVU5408
 20713              	.LBE12182:
 20714              	.LBB12183:
 20715              	.LBI12183:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20716              		.loc 5 141 7 is_stmt 1 view .LVU5409
 20717              	.LBB12184:
 20718              	.LBI12184:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20719              		.loc 4 83 7 view .LVU5410
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20720              		.loc 4 83 7 is_stmt 0 view .LVU5411
 20721              	.LBE12184:
 20722              	.LBE12183:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20723              		.loc 2 160 46 view .LVU5412
 20724 020a 2560     		str	r5, [r4]
 20725              	.LVL1419:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20726              		.loc 2 160 46 view .LVU5413
 20727              	.LBE12181:
 20728              	.LBE12180:
 20729              	.LBB12185:
 20730              	.LBI12185:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 20731              		.loc 2 221 7 is_stmt 1 view .LVU5414
 20732              	.LBB12186:
 20733              	.LBI12186:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20734              		.loc 2 186 7 view .LVU5415
 20735              	.LBB12187:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20736              		.loc 2 187 28 is_stmt 0 view .LVU5416
 20737 020c 009B     		ldr	r3, [sp]
 20738              	.LVL1420:
ARM GAS  /tmp/ccL95Edz.s 			page 714


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20739              		.loc 2 187 28 view .LVU5417
 20740              	.LBE12187:
 20741              	.LBE12186:
 20742              	.LBB12188:
 20743              	.LBI12188:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20744              		.loc 2 200 7 is_stmt 1 view .LVU5418
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20745              		.loc 2 200 7 is_stmt 0 view .LVU5419
 20746              	.LBE12188:
 20747              	.LBE12185:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 20748              		.loc 2 555 2 view .LVU5420
 20749 020e 02AA     		add	r2, sp, #8
 20750 0210 9342     		cmp	r3, r2
 20751 0212 0BD0     		beq	.L443
 20752              	.LVL1421:
 20753              	.LBB12189:
 20754              	.LBI12189:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20755              		.loc 2 186 7 is_stmt 1 view .LVU5421
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20756              		.loc 2 186 7 is_stmt 0 view .LVU5422
 20757              	.LBE12189:
 20758              	.LBB12190:
 20759              	.LBI12190:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 20760              		.loc 2 178 7 is_stmt 1 view .LVU5423
 20761              	.LBB12191:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20762              		.loc 2 179 9 is_stmt 0 view .LVU5424
 20763 0214 2360     		str	r3, [r4]
 20764              	.LVL1422:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20765              		.loc 2 179 9 view .LVU5425
 20766              	.LBE12191:
 20767              	.LBE12190:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 20768              		.loc 2 563 6 view .LVU5426
 20769 0216 029B     		ldr	r3, [sp, #8]
 20770              	.LVL1423:
 20771              	.LBB12192:
 20772              	.LBI12192:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 20773              		.loc 2 210 7 is_stmt 1 view .LVU5427
 20774              	.LBB12193:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20775              		.loc 2 211 9 is_stmt 0 view .LVU5428
 20776 0218 A360     		str	r3, [r4, #8]
 20777              	.LVL1424:
 20778              	.L432:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20779              		.loc 2 211 9 view .LVU5429
 20780              	.LBE12193:
 20781              	.LBE12192:
 20782              	.LBB12194:
ARM GAS  /tmp/ccL95Edz.s 			page 715


 20783              	.LBI12194:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20784              		.loc 2 936 7 is_stmt 1 view .LVU5430
 20785              	.LBB12195:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20786              		.loc 2 937 16 is_stmt 0 view .LVU5431
 20787 021a 019B     		ldr	r3, [sp, #4]
 20788              	.LVL1425:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20789              		.loc 2 937 16 view .LVU5432
 20790              	.LBE12195:
 20791              	.LBE12194:
 20792              	.LBB12196:
 20793              	.LBI12196:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 20794              		.loc 2 182 7 is_stmt 1 view .LVU5433
 20795              	.LBB12197:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20796              		.loc 2 183 9 is_stmt 0 view .LVU5434
 20797 021c 6360     		str	r3, [r4, #4]
 20798              	.LVL1426:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20799              		.loc 2 183 9 view .LVU5435
 20800              	.LBE12197:
 20801              	.LBE12196:
 20802              	.LBB12198:
 20803              	.LBI12198:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20804              		.loc 2 190 7 is_stmt 1 view .LVU5436
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20805              		.loc 2 190 7 is_stmt 0 view .LVU5437
 20806              	.LBE12198:
 20807              	.LBB12199:
 20808              	.LBI12199:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 20809              		.loc 2 178 7 is_stmt 1 view .LVU5438
 20810              	.LBB12200:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20811              		.loc 2 179 9 is_stmt 0 view .LVU5439
 20812 021e 02AB     		add	r3, sp, #8
 20813              	.LVL1427:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20814              		.loc 2 179 9 view .LVU5440
 20815 0220 0093     		str	r3, [sp]
 20816              	.LVL1428:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20817              		.loc 2 179 9 view .LVU5441
 20818              	.LBE12200:
 20819              	.LBE12199:
 20820              	.LBB12201:
 20821              	.LBI12201:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20822              		.loc 2 214 7 is_stmt 1 view .LVU5442
 20823              	.LBB12202:
 20824              	.LBI12202:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 20825              		.loc 2 182 7 view .LVU5443
ARM GAS  /tmp/ccL95Edz.s 			page 716


 20826              	.LBB12203:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20827              		.loc 2 183 9 is_stmt 0 view .LVU5444
 20828 0222 0023     		movs	r3, #0
 20829 0224 0193     		str	r3, [sp, #4]
 20830              	.LVL1429:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20831              		.loc 2 183 9 view .LVU5445
 20832              	.LBE12203:
 20833              	.LBE12202:
 20834              	.LBB12204:
 20835              	.LBI12204:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 20836              		.loc 8 299 7 is_stmt 1 view .LVU5446
 20837              	.LBB12205:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20838              		.loc 8 300 9 view .LVU5447
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20839              		.loc 8 300 14 is_stmt 0 view .LVU5448
 20840 0226 8DF80830 		strb	r3, [sp, #8]
 20841              	.LVL1430:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 20842              		.loc 8 300 14 view .LVU5449
 20843              	.LBE12205:
 20844              	.LBE12204:
 20845              	.LBE12201:
 20846              	.LBE12175:
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20847              		.loc 2 572 7 view .LVU5450
 20848 022a 6BE7     		b	.L430
 20849              	.L443:
 20850              	.LVL1431:
 20851              	.LBB12208:
 20852              	.LBB12206:
 20853              	.LBI12206:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 20854              		.loc 8 361 7 is_stmt 1 view .LVU5451
 20855              	.LBB12207:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 20856              		.loc 8 363 2 view .LVU5452
 20857              		.loc 8 365 2 view .LVU5453
 20858              		.loc 8 365 49 is_stmt 0 view .LVU5454
 20859 022c 1646     		mov	r6, r2
 20860 022e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 20861              	.LVL1432:
 20862              		.loc 8 365 49 view .LVU5455
 20863 0230 A060     		str	r0, [r4, #8]	@ unaligned
 20864 0232 E160     		str	r1, [r4, #12]	@ unaligned
 20865 0234 2261     		str	r2, [r4, #16]	@ unaligned
 20866 0236 6361     		str	r3, [r4, #20]	@ unaligned
 20867 0238 EFE7     		b	.L432
 20868              	.L445:
 20869 023a 00BF     		.align	2
 20870              	.L444:
 20871 023c ABAAAAAA 		.word	-1431655765
 20872 0240 22000000 		.word	.LC20+34
 20873 0244 18000000 		.word	.LC19
ARM GAS  /tmp/ccL95Edz.s 			page 717


 20874 0248 15000000 		.word	.LC18+21
 20875 024c 01000000 		.word	.LC5+1
 20876              	.LBE12207:
 20877              	.LBE12206:
 20878              	.LBE12208:
 20879              	.LBE12174:
 20880              	.LBE12173:
 20881              		.cfi_endproc
 20882              	.LFE3374:
 20884              		.section	.text._ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"ax
 20885              		.align	1
 20886              		.global	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 20887              		.syntax unified
 20888              		.thumb
 20889              		.thumb_func
 20890              		.fpu fpv4-sp-d16
 20892              	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 20893              	.LVL1433:
 20894              	.LFB3397:
 193:alohal/filesystem/filesystem.cpp ****     return Get_entry(Create_entry_path(filename));
 20895              		.loc 17 193 57 is_stmt 1 view -0
 20896              		.cfi_startproc
 20897              		@ args = 0, pretend = 0, frame = 40
 20898              		@ frame_needed = 0, uses_anonymous_args = 0
 193:alohal/filesystem/filesystem.cpp ****     return Get_entry(Create_entry_path(filename));
 20899              		.loc 17 193 57 is_stmt 0 view .LVU5457
 20900 0000 70B5     		push	{r4, r5, r6, lr}
 20901              	.LCFI72:
 20902              		.cfi_def_cfa_offset 16
 20903              		.cfi_offset 4, -16
 20904              		.cfi_offset 5, -12
 20905              		.cfi_offset 6, -8
 20906              		.cfi_offset 14, -4
 20907 0002 8AB0     		sub	sp, sp, #40
 20908              	.LCFI73:
 20909              		.cfi_def_cfa_offset 56
 20910 0004 0446     		mov	r4, r0
 20911 0006 0B46     		mov	r3, r1
 194:alohal/filesystem/filesystem.cpp **** }
 20912              		.loc 17 194 5 is_stmt 1 view .LVU5458
 20913              	.LVL1434:
 20914              	.LBB12288:
 20915              	.LBI12288:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 20916              		.loc 2 448 7 view .LVU5459
 20917              	.LBB12289:
 20918              	.LBB12290:
 20919              	.LBB12291:
 20920              	.LBI12291:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20921              		.loc 2 190 7 view .LVU5460
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20922              		.loc 2 190 7 is_stmt 0 view .LVU5461
 20923              	.LBE12291:
 20924              	.LBB12292:
 20925              	.LBI12292:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
ARM GAS  /tmp/ccL95Edz.s 			page 718


 20926              		.loc 2 290 7 is_stmt 1 view .LVU5462
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 20927              		.loc 2 290 7 is_stmt 0 view .LVU5463
 20928              	.LBE12292:
 20929              	.LBB12293:
 20930              	.LBI12293:
 20931              		.loc 19 97 19 is_stmt 1 view .LVU5464
 20932              	.LBB12294:
 20933              	.LBI12294:
 20934              		.loc 3 514 7 view .LVU5465
 20935              	.LBB12295:
 20936              	.LBI12295:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20937              		.loc 5 141 7 view .LVU5466
 20938              	.LBB12296:
 20939              	.LBI12296:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20940              		.loc 4 83 7 view .LVU5467
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20941              		.loc 4 83 7 is_stmt 0 view .LVU5468
 20942              	.LBE12296:
 20943              	.LBE12295:
 20944              	.LBE12294:
 20945              	.LBE12293:
 20946              	.LBB12297:
 20947              	.LBI12297:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 20948              		.loc 2 159 2 is_stmt 1 view .LVU5469
 20949              	.LBB12298:
 20950              	.LBB12299:
 20951              	.LBB12300:
 20952              	.LBI12300:
 20953              		.loc 9 99 5 view .LVU5470
 20954              		.loc 9 99 5 is_stmt 0 view .LVU5471
 20955              	.LBE12300:
 20956              	.LBB12301:
 20957              	.LBI12301:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20958              		.loc 5 141 7 is_stmt 1 view .LVU5472
 20959              	.LBB12302:
 20960              	.LBI12302:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20961              		.loc 4 83 7 view .LVU5473
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20962              		.loc 4 83 7 is_stmt 0 view .LVU5474
 20963              	.LBE12302:
 20964              	.LBE12301:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20965              		.loc 2 160 46 view .LVU5475
 20966 0008 06AA     		add	r2, sp, #24
 20967              	.LVL1435:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20968              		.loc 2 160 46 view .LVU5476
 20969 000a 0492     		str	r2, [sp, #16]
 20970              	.LVL1436:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20971              		.loc 2 160 46 view .LVU5477
ARM GAS  /tmp/ccL95Edz.s 			page 719


 20972              	.LBE12299:
 20973              	.LBE12298:
 20974              	.LBE12297:
 20975              	.LBB12303:
 20976              	.LBI12303:
 20977              		.loc 5 153 7 is_stmt 1 view .LVU5478
 20978              	.LBB12304:
 20979              	.LBI12304:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20980              		.loc 4 89 7 view .LVU5479
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20981              		.loc 4 89 7 is_stmt 0 view .LVU5480
 20982              	.LBE12304:
 20983              	.LBE12303:
 20984              	.LBB12305:
 20985              	.LBI12305:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20986              		.loc 2 186 7 is_stmt 1 view .LVU5481
 20987              	.LBB12306:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20988              		.loc 2 187 28 is_stmt 0 view .LVU5482
 20989 000c 0968     		ldr	r1, [r1]
 20990              	.LVL1437:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20991              		.loc 2 187 28 view .LVU5483
 20992              	.LBE12306:
 20993              	.LBE12305:
 20994              	.LBB12307:
 20995              	.LBI12307:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20996              		.loc 2 186 7 is_stmt 1 view .LVU5484
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20997              		.loc 2 186 7 is_stmt 0 view .LVU5485
 20998              	.LBE12307:
 20999              	.LBB12308:
 21000              	.LBI12308:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 21001              		.loc 2 936 7 is_stmt 1 view .LVU5486
 21002              	.LBB12309:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21003              		.loc 2 937 16 is_stmt 0 view .LVU5487
 21004 000e 5A68     		ldr	r2, [r3, #4]
 21005              	.LVL1438:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21006              		.loc 2 937 16 view .LVU5488
 21007              	.LBE12309:
 21008              	.LBE12308:
 21009              	.LBB12310:
 21010              	.LBI12310:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 21011              		.loc 2 263 9 is_stmt 1 view .LVU5489
 21012              	.LBB12311:
 21013              	.LBB12312:
 21014              	.LBI12312:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 21015              		.loc 2 243 9 view .LVU5490
 21016              	.LBB12313:
ARM GAS  /tmp/ccL95Edz.s 			page 720


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21017              		.loc 2 247 11 is_stmt 0 view .LVU5491
 21018 0010 4FF00003 		mov	r3, #0
 21019              	.LVL1439:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21020              		.loc 2 247 11 view .LVU5492
 21021 0014 0A44     		add	r2, r2, r1
 21022              	.LVL1440:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21023              		.loc 2 247 11 view .LVU5493
 21024 0016 04A8     		add	r0, sp, #16
 21025              	.LVL1441:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21026              		.loc 2 247 11 view .LVU5494
 21027 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 21028              	.LVL1442:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21029              		.loc 2 247 11 view .LVU5495
 21030              	.LBE12313:
 21031              	.LBE12312:
 21032              	.LBE12311:
 21033              	.LBE12310:
 21034              	.LBE12290:
 21035              	.LBE12289:
 21036              	.LBE12288:
 194:alohal/filesystem/filesystem.cpp **** }
 21037              		.loc 17 194 39 view .LVU5496
 21038 001c 04AA     		add	r2, sp, #16
 21039 001e 2146     		mov	r1, r4
 21040 0020 01A8     		add	r0, sp, #4
 21041 0022 FFF7FEFF 		bl	_ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21042              	.LVL1443:
 194:alohal/filesystem/filesystem.cpp **** }
 21043              		.loc 17 194 21 view .LVU5497
 21044 0026 01A9     		add	r1, sp, #4
 21045 0028 2046     		mov	r0, r4
 21046 002a FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_
 21047              	.LVL1444:
 21048 002e 0546     		mov	r5, r0
 21049              	.LVL1445:
 21050              	.LBB12314:
 21051              	.LBI12314:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21052              		.loc 11 675 7 is_stmt 1 view .LVU5498
 21053              	.LBB12315:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 21054              		.loc 11 677 15 is_stmt 0 view .LVU5499
 21055 0030 019C     		ldr	r4, [sp, #4]
 21056              	.LVL1446:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 21057              		.loc 11 677 15 view .LVU5500
 21058 0032 029E     		ldr	r6, [sp, #8]
 21059              	.LVL1447:
 21060              	.LBB12316:
 21061              	.LBI12316:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21062              		.loc 11 273 7 is_stmt 1 view .LVU5501
ARM GAS  /tmp/ccL95Edz.s 			page 721


 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21063              		.loc 11 273 7 is_stmt 0 view .LVU5502
 21064              	.LBE12316:
 21065              	.LBB12317:
 21066              	.LBI12317:
 21067              		.loc 22 203 5 is_stmt 1 view .LVU5503
 21068 0034 02E0     		b	.L449
 21069              	.LVL1448:
 21070              	.L453:
 21071              	.LBB12318:
 21072              	.LBB12319:
 21073              	.LBB12320:
 21074              	.LBB12321:
 21075              	.LBB12322:
 21076              	.LBB12323:
 21077              	.LBB12324:
 21078              	.LBB12325:
 21079              	.LBB12326:
 21080              	.LBI12326:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21081              		.loc 2 236 7 view .LVU5504
 21082              	.LBB12327:
 21083              	.LBB12328:
 21084              	.LBI12328:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21085              		.loc 3 469 7 view .LVU5505
 21086              	.LBB12329:
 21087              	.LBI12329:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21088              		.loc 4 119 7 view .LVU5506
 21089              	.LBB12330:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21090              		.loc 4 128 19 is_stmt 0 view .LVU5507
 21091 0036 FFF7FEFF 		bl	_ZdlPv
 21092              	.LVL1449:
 21093              	.L448:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21094              		.loc 4 128 19 view .LVU5508
 21095              	.LBE12330:
 21096              	.LBE12329:
 21097              	.LBE12328:
 21098              	.LBE12327:
 21099              	.LBE12326:
 21100              	.LBE12325:
 21101              	.LBE12324:
 21102              	.LBB12336:
 21103              	.LBI12336:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21104              		.loc 2 150 14 is_stmt 1 view .LVU5509
 21105              	.LBB12337:
 21106              	.LBI12337:
 21107              		.loc 5 153 7 view .LVU5510
 21108              	.LBB12338:
 21109              	.LBI12338:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21110              		.loc 4 89 7 view .LVU5511
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 722


 21111              		.loc 4 89 7 is_stmt 0 view .LVU5512
 21112              	.LBE12338:
 21113              	.LBE12337:
 21114              	.LBE12336:
 21115              	.LBE12323:
 21116              	.LBE12322:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 21117              		.loc 22 107 4 is_stmt 1 view .LVU5513
 21118 003a 1834     		adds	r4, r4, #24
 21119              	.LVL1450:
 21120              	.L449:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 21121              		.loc 22 107 19 view .LVU5514
 21122 003c A642     		cmp	r6, r4
 21123 003e 05D0     		beq	.L447
 21124              	.LVL1451:
 21125              	.LBB12341:
 21126              	.LBI12322:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 21127              		.loc 22 97 5 view .LVU5515
 21128              	.LBB12340:
 21129              	.LBI12323:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 21130              		.loc 2 657 7 view .LVU5516
 21131              	.LBB12339:
 21132              	.LBI12324:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21133              		.loc 2 229 7 view .LVU5517
 21134              	.LBB12335:
 21135              	.LBB12331:
 21136              	.LBI12331:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21137              		.loc 2 221 7 view .LVU5518
 21138              	.LBB12332:
 21139              	.LBI12332:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21140              		.loc 2 186 7 view .LVU5519
 21141              	.LBB12333:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21142              		.loc 2 187 28 is_stmt 0 view .LVU5520
 21143 0040 2346     		mov	r3, r4
 21144 0042 53F8080B 		ldr	r0, [r3], #8
 21145              	.LVL1452:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21146              		.loc 2 187 28 view .LVU5521
 21147              	.LBE12333:
 21148              	.LBE12332:
 21149              	.LBB12334:
 21150              	.LBI12334:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21151              		.loc 2 200 7 is_stmt 1 view .LVU5522
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21152              		.loc 2 200 7 is_stmt 0 view .LVU5523
 21153              	.LBE12334:
 21154              	.LBE12331:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21155              		.loc 2 231 2 view .LVU5524
ARM GAS  /tmp/ccL95Edz.s 			page 723


 21156 0046 9842     		cmp	r0, r3
 21157 0048 F5D1     		bne	.L453
 21158 004a F6E7     		b	.L448
 21159              	.LVL1453:
 21160              	.L447:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21161              		.loc 2 231 2 view .LVU5525
 21162              	.LBE12335:
 21163              	.LBE12339:
 21164              	.LBE12340:
 21165              	.LBE12341:
 21166              	.LBE12321:
 21167              	.LBE12320:
 21168              	.LBE12319:
 21169              	.LBE12318:
 21170              	.LBE12317:
 21171              	.LBB12342:
 21172              	.LBI12342:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21173              		.loc 11 330 7 is_stmt 1 view .LVU5526
 21174              	.LBB12343:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 21175              		.loc 11 332 2 is_stmt 0 view .LVU5527
 21176 004c 0198     		ldr	r0, [sp, #4]
 21177              	.LVL1454:
 21178              	.LBB12344:
 21179              	.LBI12344:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21180              		.loc 11 347 7 is_stmt 1 view .LVU5528
 21181              	.LBB12345:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 21182              		.loc 11 350 2 is_stmt 0 view .LVU5529
 21183 004e 08B1     		cbz	r0, .L450
 21184              	.LVL1455:
 21185              	.LBB12346:
 21186              	.LBI12346:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21187              		.loc 3 469 7 is_stmt 1 view .LVU5530
 21188              	.LBB12347:
 21189              	.LBB12348:
 21190              	.LBI12348:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21191              		.loc 4 119 7 view .LVU5531
 21192              	.LBB12349:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21193              		.loc 4 128 19 is_stmt 0 view .LVU5532
 21194 0050 FFF7FEFF 		bl	_ZdlPv
 21195              	.LVL1456:
 21196              	.L450:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21197              		.loc 4 128 19 view .LVU5533
 21198              	.LBE12349:
 21199              	.LBE12348:
 21200              	.LBE12347:
 21201              	.LBE12346:
 21202              	.LBE12345:
 21203              	.LBE12344:
ARM GAS  /tmp/ccL95Edz.s 			page 724


 21204              	.LBB12350:
 21205              	.LBI12350:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 21206              		.loc 11 125 14 is_stmt 1 view .LVU5534
 21207              	.LBB12351:
 21208              	.LBI12351:
 21209              		.loc 5 153 7 view .LVU5535
 21210              	.LBB12352:
 21211              	.LBI12352:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21212              		.loc 4 89 7 view .LVU5536
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21213              		.loc 4 89 7 is_stmt 0 view .LVU5537
 21214              	.LBE12352:
 21215              	.LBE12351:
 21216              	.LBE12350:
 21217              	.LBE12343:
 21218              	.LBE12342:
 21219              	.LBE12315:
 21220              	.LBE12314:
 21221              	.LBB12353:
 21222              	.LBI12353:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 21223              		.loc 2 657 7 is_stmt 1 view .LVU5538
 21224              	.LBB12354:
 21225              	.LBI12354:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21226              		.loc 2 229 7 view .LVU5539
 21227              	.LBB12355:
 21228              	.LBB12356:
 21229              	.LBI12356:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21230              		.loc 2 221 7 view .LVU5540
 21231              	.LBB12357:
 21232              	.LBI12357:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21233              		.loc 2 186 7 view .LVU5541
 21234              	.LBB12358:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21235              		.loc 2 187 28 is_stmt 0 view .LVU5542
 21236 0054 0498     		ldr	r0, [sp, #16]
 21237              	.LVL1457:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21238              		.loc 2 187 28 view .LVU5543
 21239              	.LBE12358:
 21240              	.LBE12357:
 21241              	.LBB12359:
 21242              	.LBI12359:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21243              		.loc 2 200 7 is_stmt 1 view .LVU5544
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21244              		.loc 2 200 7 is_stmt 0 view .LVU5545
 21245              	.LBE12359:
 21246              	.LBE12356:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21247              		.loc 2 231 2 view .LVU5546
 21248 0056 06AB     		add	r3, sp, #24
ARM GAS  /tmp/ccL95Edz.s 			page 725


 21249 0058 9842     		cmp	r0, r3
 21250 005a 01D0     		beq	.L446
 21251              	.LVL1458:
 21252              	.LBB12360:
 21253              	.LBI12360:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21254              		.loc 2 236 7 is_stmt 1 view .LVU5547
 21255              	.LBB12361:
 21256              	.LBB12362:
 21257              	.LBI12362:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21258              		.loc 3 469 7 view .LVU5548
 21259              	.LBB12363:
 21260              	.LBI12363:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21261              		.loc 4 119 7 view .LVU5549
 21262              	.LBB12364:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21263              		.loc 4 128 19 is_stmt 0 view .LVU5550
 21264 005c FFF7FEFF 		bl	_ZdlPv
 21265              	.LVL1459:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21266              		.loc 4 128 19 view .LVU5551
 21267              	.LBE12364:
 21268              	.LBE12363:
 21269              	.LBE12362:
 21270              	.LBE12361:
 21271              	.LBE12360:
 21272              	.LBE12355:
 21273              	.LBE12354:
 21274              	.LBB12365:
 21275              	.LBI12365:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21276              		.loc 2 150 14 is_stmt 1 view .LVU5552
 21277              	.LBB12366:
 21278              	.LBI12366:
 21279              		.loc 5 153 7 view .LVU5553
 21280              	.LBB12367:
 21281              	.LBI12367:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21282              		.loc 4 89 7 view .LVU5554
 21283              	.L446:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21284              		.loc 4 89 7 is_stmt 0 view .LVU5555
 21285              	.LBE12367:
 21286              	.LBE12366:
 21287              	.LBE12365:
 21288              	.LBE12353:
 195:alohal/filesystem/filesystem.cpp **** 
 21289              		.loc 17 195 1 view .LVU5556
 21290 0060 2846     		mov	r0, r5
 21291 0062 0AB0     		add	sp, sp, #40
 21292              	.LCFI74:
 21293              		.cfi_def_cfa_offset 16
 21294              		@ sp needed
 21295 0064 70BD     		pop	{r4, r5, r6, pc}
 21296              		.cfi_endproc
ARM GAS  /tmp/ccL95Edz.s 			page 726


 21297              	.LFE3397:
 21299              		.section	.text._ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,
 21300              		.align	1
 21301              		.global	_ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21302              		.syntax unified
 21303              		.thumb
 21304              		.thumb_func
 21305              		.fpu fpv4-sp-d16
 21307              	_ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 21308              	.LVL1460:
 21309              	.LFB3370:
  38:alohal/filesystem/filesystem.cpp ****     Directory *target_directory = static_cast<Directory *>(Get_entry(path));
 21310              		.loc 17 38 42 is_stmt 1 view -0
 21311              		.cfi_startproc
 21312              		@ args = 0, pretend = 0, frame = 48
 21313              		@ frame_needed = 0, uses_anonymous_args = 0
  38:alohal/filesystem/filesystem.cpp ****     Directory *target_directory = static_cast<Directory *>(Get_entry(path));
 21314              		.loc 17 38 42 is_stmt 0 view .LVU5558
 21315 0000 70B5     		push	{r4, r5, r6, lr}
 21316              	.LCFI75:
 21317              		.cfi_def_cfa_offset 16
 21318              		.cfi_offset 4, -16
 21319              		.cfi_offset 5, -12
 21320              		.cfi_offset 6, -8
 21321              		.cfi_offset 14, -4
 21322 0002 8CB0     		sub	sp, sp, #48
 21323              	.LCFI76:
 21324              		.cfi_def_cfa_offset 64
 21325 0004 0546     		mov	r5, r0
 21326 0006 0B46     		mov	r3, r1
  39:alohal/filesystem/filesystem.cpp ****     if (target_directory == nullptr) {
 21327              		.loc 17 39 5 is_stmt 1 view .LVU5559
 21328              	.LVL1461:
 21329              	.LBB12368:
 21330              	.LBI12368:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 21331              		.loc 2 448 7 view .LVU5560
 21332              	.LBB12369:
 21333              	.LBB12370:
 21334              	.LBB12371:
 21335              	.LBI12371:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21336              		.loc 2 190 7 view .LVU5561
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21337              		.loc 2 190 7 is_stmt 0 view .LVU5562
 21338              	.LBE12371:
 21339              	.LBB12372:
 21340              	.LBI12372:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 21341              		.loc 2 290 7 is_stmt 1 view .LVU5563
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 21342              		.loc 2 290 7 is_stmt 0 view .LVU5564
 21343              	.LBE12372:
 21344              	.LBB12373:
 21345              	.LBI12373:
 21346              		.loc 19 97 19 is_stmt 1 view .LVU5565
 21347              	.LBB12374:
ARM GAS  /tmp/ccL95Edz.s 			page 727


 21348              	.LBI12374:
 21349              		.loc 3 514 7 view .LVU5566
 21350              	.LBB12375:
 21351              	.LBI12375:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21352              		.loc 5 141 7 view .LVU5567
 21353              	.LBB12376:
 21354              	.LBI12376:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21355              		.loc 4 83 7 view .LVU5568
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21356              		.loc 4 83 7 is_stmt 0 view .LVU5569
 21357              	.LBE12376:
 21358              	.LBE12375:
 21359              	.LBE12374:
 21360              	.LBE12373:
 21361              	.LBB12377:
 21362              	.LBI12377:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 21363              		.loc 2 159 2 is_stmt 1 view .LVU5570
 21364              	.LBB12378:
 21365              	.LBB12379:
 21366              	.LBB12380:
 21367              	.LBI12380:
 21368              		.loc 9 99 5 view .LVU5571
 21369              		.loc 9 99 5 is_stmt 0 view .LVU5572
 21370              	.LBE12380:
 21371              	.LBB12381:
 21372              	.LBI12381:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21373              		.loc 5 141 7 is_stmt 1 view .LVU5573
 21374              	.LBB12382:
 21375              	.LBI12382:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21376              		.loc 4 83 7 view .LVU5574
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21377              		.loc 4 83 7 is_stmt 0 view .LVU5575
 21378              	.LBE12382:
 21379              	.LBE12381:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21380              		.loc 2 160 46 view .LVU5576
 21381 0008 02AE     		add	r6, sp, #8
 21382              	.LVL1462:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21383              		.loc 2 160 46 view .LVU5577
 21384 000a 0096     		str	r6, [sp]
 21385              	.LVL1463:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21386              		.loc 2 160 46 view .LVU5578
 21387              	.LBE12379:
 21388              	.LBE12378:
 21389              	.LBE12377:
 21390              	.LBB12383:
 21391              	.LBI12383:
 21392              		.loc 5 153 7 is_stmt 1 view .LVU5579
 21393              	.LBB12384:
 21394              	.LBI12384:
ARM GAS  /tmp/ccL95Edz.s 			page 728


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21395              		.loc 4 89 7 view .LVU5580
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21396              		.loc 4 89 7 is_stmt 0 view .LVU5581
 21397              	.LBE12384:
 21398              	.LBE12383:
 21399              	.LBB12385:
 21400              	.LBI12385:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21401              		.loc 2 186 7 is_stmt 1 view .LVU5582
 21402              	.LBB12386:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21403              		.loc 2 187 28 is_stmt 0 view .LVU5583
 21404 000c 0968     		ldr	r1, [r1]
 21405              	.LVL1464:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21406              		.loc 2 187 28 view .LVU5584
 21407              	.LBE12386:
 21408              	.LBE12385:
 21409              	.LBB12387:
 21410              	.LBI12387:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21411              		.loc 2 186 7 is_stmt 1 view .LVU5585
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21412              		.loc 2 186 7 is_stmt 0 view .LVU5586
 21413              	.LBE12387:
 21414              	.LBB12388:
 21415              	.LBI12388:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 21416              		.loc 2 936 7 is_stmt 1 view .LVU5587
 21417              	.LBB12389:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21418              		.loc 2 937 16 is_stmt 0 view .LVU5588
 21419 000e 5A68     		ldr	r2, [r3, #4]
 21420              	.LVL1465:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21421              		.loc 2 937 16 view .LVU5589
 21422              	.LBE12389:
 21423              	.LBE12388:
 21424              	.LBB12390:
 21425              	.LBI12390:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 21426              		.loc 2 263 9 is_stmt 1 view .LVU5590
 21427              	.LBB12391:
 21428              	.LBB12392:
 21429              	.LBI12392:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 21430              		.loc 2 243 9 view .LVU5591
 21431              	.LBB12393:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21432              		.loc 2 247 11 is_stmt 0 view .LVU5592
 21433 0010 4FF00003 		mov	r3, #0
 21434              	.LVL1466:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21435              		.loc 2 247 11 view .LVU5593
 21436 0014 0A44     		add	r2, r2, r1
 21437              	.LVL1467:
ARM GAS  /tmp/ccL95Edz.s 			page 729


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21438              		.loc 2 247 11 view .LVU5594
 21439 0016 6846     		mov	r0, sp
 21440              	.LVL1468:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21441              		.loc 2 247 11 view .LVU5595
 21442 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 21443              	.LVL1469:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21444              		.loc 2 247 11 view .LVU5596
 21445              	.LBE12393:
 21446              	.LBE12392:
 21447              	.LBE12391:
 21448              	.LBE12390:
 21449              	.LBE12370:
 21450              	.LBE12369:
 21451              	.LBE12368:
  39:alohal/filesystem/filesystem.cpp ****     if (target_directory == nullptr) {
 21452              		.loc 17 39 69 view .LVU5597
 21453 001c 6946     		mov	r1, sp
 21454 001e 2846     		mov	r0, r5
 21455 0020 FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21456              	.LVL1470:
 21457 0024 0446     		mov	r4, r0
 21458              	.LVL1471:
 21459              	.LBB12394:
 21460              	.LBI12394:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 21461              		.loc 2 657 7 is_stmt 1 view .LVU5598
 21462              	.LBB12395:
 21463              	.LBI12395:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21464              		.loc 2 229 7 view .LVU5599
 21465              	.LBB12396:
 21466              	.LBB12397:
 21467              	.LBI12397:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21468              		.loc 2 221 7 view .LVU5600
 21469              	.LBB12398:
 21470              	.LBI12398:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21471              		.loc 2 186 7 view .LVU5601
 21472              	.LBB12399:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21473              		.loc 2 187 28 is_stmt 0 view .LVU5602
 21474 0026 0098     		ldr	r0, [sp]
 21475              	.LVL1472:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21476              		.loc 2 187 28 view .LVU5603
 21477              	.LBE12399:
 21478              	.LBE12398:
 21479              	.LBB12400:
 21480              	.LBI12400:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21481              		.loc 2 200 7 is_stmt 1 view .LVU5604
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21482              		.loc 2 200 7 is_stmt 0 view .LVU5605
ARM GAS  /tmp/ccL95Edz.s 			page 730


 21483              	.LBE12400:
 21484              	.LBE12397:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21485              		.loc 2 231 2 view .LVU5606
 21486 0028 B042     		cmp	r0, r6
 21487 002a 01D0     		beq	.L455
 21488              	.LVL1473:
 21489              	.LBB12401:
 21490              	.LBI12401:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21491              		.loc 2 236 7 is_stmt 1 view .LVU5607
 21492              	.LBB12402:
 21493              	.LBB12403:
 21494              	.LBI12403:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21495              		.loc 3 469 7 view .LVU5608
 21496              	.LBB12404:
 21497              	.LBI12404:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21498              		.loc 4 119 7 view .LVU5609
 21499              	.LBB12405:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21500              		.loc 4 128 19 is_stmt 0 view .LVU5610
 21501 002c FFF7FEFF 		bl	_ZdlPv
 21502              	.LVL1474:
 21503              	.L455:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21504              		.loc 4 128 19 view .LVU5611
 21505              	.LBE12405:
 21506              	.LBE12404:
 21507              	.LBE12403:
 21508              	.LBE12402:
 21509              	.LBE12401:
 21510              	.LBE12396:
 21511              	.LBE12395:
 21512              	.LBB12406:
 21513              	.LBI12406:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21514              		.loc 2 150 14 is_stmt 1 view .LVU5612
 21515              	.LBB12407:
 21516              	.LBI12407:
 21517              		.loc 5 153 7 view .LVU5613
 21518              	.LBB12408:
 21519              	.LBI12408:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21520              		.loc 4 89 7 view .LVU5614
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21521              		.loc 4 89 7 is_stmt 0 view .LVU5615
 21522              	.LBE12408:
 21523              	.LBE12407:
 21524              	.LBE12406:
 21525              	.LBE12394:
  40:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 21526              		.loc 17 40 5 is_stmt 1 view .LVU5616
 21527 0030 BCB1     		cbz	r4, .L458
  44:alohal/filesystem/filesystem.cpp ****         return ENOTDIR;
 21528              		.loc 17 44 5 view .LVU5617
ARM GAS  /tmp/ccL95Edz.s 			page 731


 21529              	.LVL1475:
 21530              	.LBB12409:
 21531              	.LBI12409:
  66:alohal/filesystem/entry.hpp **** 
 21532              		.loc 1 66 23 view .LVU5618
 21533              	.LBB12410:
  66:alohal/filesystem/entry.hpp **** 
 21534              		.loc 1 66 34 view .LVU5619
  66:alohal/filesystem/entry.hpp **** 
 21535              		.loc 1 66 41 is_stmt 0 view .LVU5620
 21536 0032 6368     		ldr	r3, [r4, #4]
 21537              	.LVL1476:
  66:alohal/filesystem/entry.hpp **** 
 21538              		.loc 1 66 41 view .LVU5621
 21539              	.LBE12410:
 21540              	.LBE12409:
  44:alohal/filesystem/filesystem.cpp ****         return ENOTDIR;
 21541              		.loc 17 44 5 view .LVU5622
 21542 0034 012B     		cmp	r3, #1
 21543 0036 02D0     		beq	.L461
  45:alohal/filesystem/filesystem.cpp ****     }
 21544              		.loc 17 45 16 view .LVU5623
 21545 0038 1420     		movs	r0, #20
 21546              	.LVL1477:
 21547              	.L454:
  51:alohal/filesystem/filesystem.cpp **** 
 21548              		.loc 17 51 1 view .LVU5624
 21549 003a 0CB0     		add	sp, sp, #48
 21550              	.LCFI77:
 21551              		.cfi_remember_state
 21552              		.cfi_def_cfa_offset 16
 21553              		@ sp needed
 21554 003c 70BD     		pop	{r4, r5, r6, pc}
 21555              	.LVL1478:
 21556              	.L461:
 21557              	.LCFI78:
 21558              		.cfi_restore_state
  48:alohal/filesystem/filesystem.cpp ****     cli->Set_filesystem_prefix(actual_position->Path());
 21559              		.loc 17 48 5 is_stmt 1 view .LVU5625
  48:alohal/filesystem/filesystem.cpp ****     cli->Set_filesystem_prefix(actual_position->Path());
 21560              		.loc 17 48 21 is_stmt 0 view .LVU5626
 21561 003e 6C60     		str	r4, [r5, #4]
  49:alohal/filesystem/filesystem.cpp ****     return 0;
 21562              		.loc 17 49 5 is_stmt 1 view .LVU5627
 21563 0040 AD68     		ldr	r5, [r5, #8]
 21564              	.LVL1479:
  49:alohal/filesystem/filesystem.cpp ****     return 0;
 21565              		.loc 17 49 53 is_stmt 0 view .LVU5628
 21566 0042 2146     		mov	r1, r4
 21567 0044 06A8     		add	r0, sp, #24
 21568 0046 FFF7FEFF 		bl	_ZNK8FS_entry4PathB5cxx11Ev
 21569              	.LVL1480:
  49:alohal/filesystem/filesystem.cpp ****     return 0;
 21570              		.loc 17 49 31 view .LVU5629
 21571 004a 06A9     		add	r1, sp, #24
 21572 004c 2846     		mov	r0, r5
 21573 004e FFF7FEFF 		bl	_ZN3CLI21Set_filesystem_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
ARM GAS  /tmp/ccL95Edz.s 			page 732


 21574              	.LVL1481:
 21575              	.LBB12411:
 21576              	.LBI12411:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 21577              		.loc 2 657 7 is_stmt 1 view .LVU5630
 21578              	.LBB12412:
 21579              	.LBI12412:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21580              		.loc 2 229 7 view .LVU5631
 21581              	.LBB12413:
 21582              	.LBB12414:
 21583              	.LBI12414:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21584              		.loc 2 221 7 view .LVU5632
 21585              	.LBB12415:
 21586              	.LBI12415:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21587              		.loc 2 186 7 view .LVU5633
 21588              	.LBB12416:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21589              		.loc 2 187 28 is_stmt 0 view .LVU5634
 21590 0052 0698     		ldr	r0, [sp, #24]
 21591              	.LVL1482:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21592              		.loc 2 187 28 view .LVU5635
 21593              	.LBE12416:
 21594              	.LBE12415:
 21595              	.LBB12417:
 21596              	.LBI12417:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21597              		.loc 2 200 7 is_stmt 1 view .LVU5636
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21598              		.loc 2 200 7 is_stmt 0 view .LVU5637
 21599              	.LBE12417:
 21600              	.LBE12414:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21601              		.loc 2 231 2 view .LVU5638
 21602 0054 08AB     		add	r3, sp, #32
 21603 0056 9842     		cmp	r0, r3
 21604 0058 01D0     		beq	.L457
 21605              	.LVL1483:
 21606              	.LBB12418:
 21607              	.LBI12418:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21608              		.loc 2 236 7 is_stmt 1 view .LVU5639
 21609              	.LBB12419:
 21610              	.LBB12420:
 21611              	.LBI12420:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21612              		.loc 3 469 7 view .LVU5640
 21613              	.LBB12421:
 21614              	.LBI12421:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21615              		.loc 4 119 7 view .LVU5641
 21616              	.LBB12422:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21617              		.loc 4 128 19 is_stmt 0 view .LVU5642
ARM GAS  /tmp/ccL95Edz.s 			page 733


 21618 005a FFF7FEFF 		bl	_ZdlPv
 21619              	.LVL1484:
 21620              	.L457:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21621              		.loc 4 128 19 view .LVU5643
 21622              	.LBE12422:
 21623              	.LBE12421:
 21624              	.LBE12420:
 21625              	.LBE12419:
 21626              	.LBE12418:
 21627              	.LBE12413:
 21628              	.LBE12412:
 21629              	.LBB12423:
 21630              	.LBI12423:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21631              		.loc 2 150 14 is_stmt 1 view .LVU5644
 21632              	.LBB12424:
 21633              	.LBI12424:
 21634              		.loc 5 153 7 view .LVU5645
 21635              	.LBB12425:
 21636              	.LBI12425:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21637              		.loc 4 89 7 view .LVU5646
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21638              		.loc 4 89 7 is_stmt 0 view .LVU5647
 21639              	.LBE12425:
 21640              	.LBE12424:
 21641              	.LBE12423:
 21642              	.LBE12411:
  50:alohal/filesystem/filesystem.cpp **** }
 21643              		.loc 17 50 5 is_stmt 1 view .LVU5648
  50:alohal/filesystem/filesystem.cpp **** }
 21644              		.loc 17 50 12 is_stmt 0 view .LVU5649
 21645 005e 0020     		movs	r0, #0
 21646 0060 EBE7     		b	.L454
 21647              	.LVL1485:
 21648              	.L458:
  41:alohal/filesystem/filesystem.cpp ****     }
 21649              		.loc 17 41 16 view .LVU5650
 21650 0062 0220     		movs	r0, #2
 21651 0064 E9E7     		b	.L454
 21652              		.cfi_endproc
 21653              	.LFE3370:
 21655              		.section	.rodata._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsI
 21656              		.align	2
 21657              	.LC21:
 21658 0000 54617267 		.ascii	"Target location is unreachable - null returned \015"
 21658      6574206C 
 21658      6F636174 
 21658      696F6E20 
 21658      69732075 
 21659 0030 0A00     		.ascii	"\012\000"
 21660 0032 0000     		.align	2
 21661              	.LC22:
 21662 0034 54617267 		.ascii	"Target location is not a directory \015\012\000"
 21662      6574206C 
 21662      6F636174 
ARM GAS  /tmp/ccL95Edz.s 			page 734


 21662      696F6E20 
 21662      6973206E 
 21663              		.section	.text._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcE
 21664              		.align	1
 21665              		.global	_ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21666              		.syntax unified
 21667              		.thumb
 21668              		.thumb_func
 21669              		.fpu fpv4-sp-d16
 21671              	_ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:
 21672              	.LVL1486:
 21673              	.LFB3371:
  53:alohal/filesystem/filesystem.cpp ****     string directory_name = Command_check(args);
 21674              		.loc 17 53 48 is_stmt 1 view -0
 21675              		.cfi_startproc
 21676              		@ args = 0, pretend = 0, frame = 112
 21677              		@ frame_needed = 0, uses_anonymous_args = 0
  53:alohal/filesystem/filesystem.cpp ****     string directory_name = Command_check(args);
 21678              		.loc 17 53 48 is_stmt 0 view .LVU5652
 21679 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 21680              	.LCFI79:
 21681              		.cfi_def_cfa_offset 20
 21682              		.cfi_offset 4, -20
 21683              		.cfi_offset 5, -16
 21684              		.cfi_offset 6, -12
 21685              		.cfi_offset 7, -8
 21686              		.cfi_offset 14, -4
 21687 0002 9DB0     		sub	sp, sp, #116
 21688              	.LCFI80:
 21689              		.cfi_def_cfa_offset 136
 21690 0004 0746     		mov	r7, r0
 21691 0006 0D46     		mov	r5, r1
  54:alohal/filesystem/filesystem.cpp ****     if (directory_name == "") {
 21692              		.loc 17 54 5 is_stmt 1 view .LVU5653
 21693              	.LVL1487:
 21694              	.LBB12667:
 21695              	.LBI12667:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 21696              		.loc 11 550 7 view .LVU5654
 21697              	.LBB12668:
 21698              	.LBB12669:
 21699              	.LBB12670:
 21700              	.LBI12670:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 21701              		.loc 11 915 7 view .LVU5655
 21702              	.LBB12671:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 21703              		.loc 11 916 40 is_stmt 0 view .LVU5656
 21704 0008 4E68     		ldr	r6, [r1, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 21705              		.loc 11 916 66 view .LVU5657
 21706 000a 0B68     		ldr	r3, [r1]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 21707              		.loc 11 916 50 view .LVU5658
 21708 000c F61A     		subs	r6, r6, r3
 21709 000e F010     		asrs	r0, r6, #3
 21710              	.LVL1488:
ARM GAS  /tmp/ccL95Edz.s 			page 735


 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 21711              		.loc 11 916 50 view .LVU5659
 21712 0010 4B4B     		ldr	r3, .L485
 21713 0012 03FB00F3 		mul	r3, r3, r0
 21714              	.LVL1489:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 21715              		.loc 11 916 50 view .LVU5660
 21716              	.LBE12671:
 21717              	.LBE12670:
 21718              	.LBB12672:
 21719              	.LBI12672:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21720              		.loc 11 277 7 is_stmt 1 view .LVU5661
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21721              		.loc 11 277 7 is_stmt 0 view .LVU5662
 21722              	.LBE12672:
 21723              	.LBB12673:
 21724              	.LBI12673:
 21725              		.loc 19 97 19 is_stmt 1 view .LVU5663
 21726              	.LBB12674:
 21727              	.LBI12674:
 21728              		.loc 3 514 7 view .LVU5664
 21729              	.LBB12675:
 21730              	.LBI12675:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21731              		.loc 5 141 7 view .LVU5665
 21732              	.LBB12676:
 21733              	.LBI12676:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21734              		.loc 4 83 7 view .LVU5666
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21735              		.loc 4 83 7 is_stmt 0 view .LVU5667
 21736              	.LBE12676:
 21737              	.LBE12675:
 21738              	.LBE12674:
 21739              	.LBE12673:
 21740              	.LBB12677:
 21741              	.LBI12677:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 21742              		.loc 11 300 7 is_stmt 1 view .LVU5668
 21743              	.LBB12678:
 21744              	.LBI12678:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 21745              		.loc 11 133 2 view .LVU5669
 21746              	.LBB12679:
 21747              	.LBI12679:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21748              		.loc 5 141 7 view .LVU5670
 21749              	.LBB12680:
 21750              	.LBI12680:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21751              		.loc 4 83 7 view .LVU5671
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21752              		.loc 4 83 7 is_stmt 0 view .LVU5672
 21753              	.LBE12680:
 21754              	.LBE12679:
 21755              	.LBB12681:
ARM GAS  /tmp/ccL95Edz.s 			page 736


 21756              	.LBI12681:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 21757              		.loc 11 94 2 is_stmt 1 view .LVU5673
 21758              	.LBB12682:
 21759              	.LBB12683:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 21760              		.loc 11 95 47 is_stmt 0 view .LVU5674
 21761 0016 0022     		movs	r2, #0
 21762 0018 0792     		str	r2, [sp, #28]
 21763 001a 0892     		str	r2, [sp, #32]
 21764 001c 0992     		str	r2, [sp, #36]
 21765              	.LVL1490:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 21766              		.loc 11 95 47 view .LVU5675
 21767              	.LBE12683:
 21768              	.LBE12682:
 21769              	.LBE12681:
 21770              	.LBE12678:
 21771              	.LBB12684:
 21772              	.LBI12684:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21773              		.loc 11 356 7 is_stmt 1 view .LVU5676
 21774              	.LBB12685:
 21775              	.LBB12686:
 21776              	.LBI12686:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21777              		.loc 11 340 7 view .LVU5677
 21778              	.LBB12687:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21779              		.loc 11 343 18 is_stmt 0 view .LVU5678
 21780 001e 8BB1     		cbz	r3, .L477
 21781              	.LVL1491:
 21782              	.LBB12688:
 21783              	.LBI12688:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 21784              		.loc 3 443 7 is_stmt 1 view .LVU5679
 21785              	.LBB12689:
 21786              	.LBI12689:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21787              		.loc 4 102 7 view .LVU5680
 21788              	.LBB12690:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 21789              		.loc 4 104 2 is_stmt 0 view .LVU5681
 21790 0020 484A     		ldr	r2, .L485+4
 21791 0022 9342     		cmp	r3, r2
 21792 0024 0CD8     		bhi	.L480
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21793              		.loc 4 114 41 view .LVU5682
 21794 0026 03EB4303 		add	r3, r3, r3, lsl #1
 21795              	.LVL1492:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21796              		.loc 4 114 41 view .LVU5683
 21797 002a D800     		lsls	r0, r3, #3
 21798              	.LVL1493:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21799              		.loc 4 114 41 view .LVU5684
 21800 002c FFF7FEFF 		bl	_Znwj
ARM GAS  /tmp/ccL95Edz.s 			page 737


 21801              	.LVL1494:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21802              		.loc 4 114 41 view .LVU5685
 21803 0030 0446     		mov	r4, r0
 21804              	.LVL1495:
 21805              	.L463:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21806              		.loc 4 114 41 view .LVU5686
 21807              	.LBE12690:
 21808              	.LBE12689:
 21809              	.LBE12688:
 21810              	.LBE12687:
 21811              	.LBE12686:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 21812              		.loc 11 358 2 view .LVU5687
 21813 0032 0794     		str	r4, [sp, #28]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 21814              		.loc 11 359 2 view .LVU5688
 21815 0034 0894     		str	r4, [sp, #32]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21816              		.loc 11 360 59 view .LVU5689
 21817 0036 2644     		add	r6, r6, r4
 21818              	.LVL1496:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21819              		.loc 11 360 2 view .LVU5690
 21820 0038 0996     		str	r6, [sp, #36]
 21821              	.LVL1497:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21822              		.loc 11 360 2 view .LVU5691
 21823              	.LBE12685:
 21824              	.LBE12684:
 21825              	.LBE12677:
 21826              	.LBB12698:
 21827              	.LBI12698:
 21828              		.loc 5 153 7 is_stmt 1 view .LVU5692
 21829              	.LBB12699:
 21830              	.LBI12699:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21831              		.loc 4 89 7 view .LVU5693
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21832              		.loc 4 89 7 is_stmt 0 view .LVU5694
 21833              	.LBE12699:
 21834              	.LBE12698:
 21835              	.LBB12700:
 21836              	.LBI12700:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 21837              		.loc 11 817 7 is_stmt 1 view .LVU5695
 21838              	.LBB12701:
 21839              	.LBB12702:
 21840              	.LBI12702:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 21841              		.loc 13 806 7 view .LVU5696
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 21842              		.loc 13 806 7 is_stmt 0 view .LVU5697
 21843              	.LBE12702:
 21844              	.LBE12701:
 21845              	.LBE12700:
ARM GAS  /tmp/ccL95Edz.s 			page 738


 21846              	.LBB12703:
 21847              	.LBI12703:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 21848              		.loc 11 835 7 is_stmt 1 view .LVU5698
 21849              	.LBB12704:
 21850              	.LBB12705:
 21851              	.LBI12705:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 21852              		.loc 13 806 7 view .LVU5699
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 21853              		.loc 13 806 7 is_stmt 0 view .LVU5700
 21854              	.LBE12705:
 21855              	.LBE12704:
 21856              	.LBE12703:
 21857              	.LBB12706:
 21858              	.LBI12706:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21859              		.loc 11 273 7 is_stmt 1 view .LVU5701
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21860              		.loc 11 273 7 is_stmt 0 view .LVU5702
 21861              	.LBE12706:
 21862              	.LBB12707:
 21863              	.LBI12707:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 21864              		.loc 15 305 5 is_stmt 1 view .LVU5703
 21865              	.LBB12708:
 21866              	.LBB12709:
 21867              	.LBI12709:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 21868              		.loc 15 115 5 view .LVU5704
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 21869              		.loc 15 115 5 is_stmt 0 view .LVU5705
 21870 003a 2E68     		ldr	r6, [r5]
 21871              	.LVL1498:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 21872              		.loc 15 115 5 view .LVU5706
 21873 003c 6D68     		ldr	r5, [r5, #4]
 21874              	.LVL1499:
 21875              	.LBB12710:
 21876              	.LBB12711:
 21877              	.LBI12711:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 21878              		.loc 15 76 9 is_stmt 1 view .LVU5707
 21879 003e 10E0     		b	.L466
 21880              	.LVL1500:
 21881              	.L480:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 21882              		.loc 15 76 9 is_stmt 0 view .LVU5708
 21883              	.LBE12711:
 21884              	.LBE12710:
 21885              	.LBE12709:
 21886              	.LBE12708:
 21887              	.LBE12707:
 21888              	.LBB12752:
 21889              	.LBB12697:
 21890              	.LBB12696:
 21891              	.LBB12695:
ARM GAS  /tmp/ccL95Edz.s 			page 739


 21892              	.LBB12694:
 21893              	.LBB12693:
 21894              	.LBB12692:
 21895              	.LBB12691:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21896              		.loc 4 105 26 view .LVU5709
 21897 0040 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 21898              	.LVL1501:
 21899              	.L477:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21900              		.loc 4 105 26 view .LVU5710
 21901              	.LBE12691:
 21902              	.LBE12692:
 21903              	.LBE12693:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21904              		.loc 11 343 18 view .LVU5711
 21905 0044 0024     		movs	r4, #0
 21906 0046 F4E7     		b	.L463
 21907              	.LVL1502:
 21908              	.L481:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21909              		.loc 11 343 18 view .LVU5712
 21910              	.LBE12694:
 21911              	.LBE12695:
 21912              	.LBE12696:
 21913              	.LBE12697:
 21914              	.LBE12752:
 21915              	.LBB12753:
 21916              	.LBB12750:
 21917              	.LBB12748:
 21918              	.LBB12746:
 21919              	.LBB12744:
 21920              	.LBB12712:
 21921              	.LBB12713:
 21922              	.LBI12713:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 21923              		.loc 22 74 5 is_stmt 1 view .LVU5713
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 21924              		.loc 22 74 5 is_stmt 0 view .LVU5714
 21925              	.LBE12713:
 21926              	.LBE12712:
 21927              	.LBE12744:
 21928              	.LBE12746:
 21929              	.LBE12748:
 21930              	.LBE12750:
 21931              	.LBE12753:
 21932              	.LBE12669:
 21933              	.LBE12668:
 21934              	.LBE12667:
 21935              		.loc 14 174 3 is_stmt 1 view .LVU5715
 21936              	.LBB12757:
 21937              	.LBB12756:
 21938              	.LBB12755:
 21939              	.LBB12754:
 21940              	.LBB12751:
 21941              	.LBB12749:
 21942              	.LBB12747:
ARM GAS  /tmp/ccL95Edz.s 			page 740


 21943              	.LBB12745:
 21944              	.LBB12743:
 21945              	.LBB12739:
 21946              	.LBB12714:
 21947              	.LBI12714:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 21948              		.loc 2 448 7 view .LVU5716
 21949              	.LBB12715:
 21950              	.LBB12716:
 21951              	.LBI12716:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21952              		.loc 2 190 7 view .LVU5717
 21953              	.LBB12717:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 21954              		.loc 2 193 51 is_stmt 0 view .LVU5718
 21955 0048 04F10803 		add	r3, r4, #8
 21956              	.LVL1503:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 21957              		.loc 2 193 51 view .LVU5719
 21958              	.LBE12717:
 21959              	.LBE12716:
 21960              	.LBB12718:
 21961              	.LBI12718:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 21962              		.loc 2 290 7 is_stmt 1 view .LVU5720
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 21963              		.loc 2 290 7 is_stmt 0 view .LVU5721
 21964              	.LBE12718:
 21965              	.LBB12719:
 21966              	.LBI12719:
 21967              		.loc 19 97 19 is_stmt 1 view .LVU5722
 21968              	.LBB12720:
 21969              	.LBI12720:
 21970              		.loc 3 514 7 view .LVU5723
 21971              	.LBB12721:
 21972              	.LBI12721:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21973              		.loc 5 141 7 view .LVU5724
 21974              	.LBB12722:
 21975              	.LBI12722:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21976              		.loc 4 83 7 view .LVU5725
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21977              		.loc 4 83 7 is_stmt 0 view .LVU5726
 21978              	.LBE12722:
 21979              	.LBE12721:
 21980              	.LBE12720:
 21981              	.LBE12719:
 21982              	.LBB12723:
 21983              	.LBI12723:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 21984              		.loc 2 159 2 is_stmt 1 view .LVU5727
 21985              	.LBB12724:
 21986              	.LBB12725:
 21987              	.LBI12725:
 21988              		.loc 9 99 5 view .LVU5728
 21989              		.loc 9 99 5 is_stmt 0 view .LVU5729
ARM GAS  /tmp/ccL95Edz.s 			page 741


 21990              	.LBE12725:
 21991              	.LBB12726:
 21992              	.LBI12726:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21993              		.loc 5 141 7 is_stmt 1 view .LVU5730
 21994              	.LBB12727:
 21995              	.LBI12727:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21996              		.loc 4 83 7 view .LVU5731
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21997              		.loc 4 83 7 is_stmt 0 view .LVU5732
 21998              	.LBE12727:
 21999              	.LBE12726:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22000              		.loc 2 160 46 view .LVU5733
 22001 004c 2360     		str	r3, [r4]
 22002              	.LVL1504:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22003              		.loc 2 160 46 view .LVU5734
 22004              	.LBE12724:
 22005              	.LBE12723:
 22006              	.LBB12728:
 22007              	.LBI12728:
 22008              		.loc 5 153 7 is_stmt 1 view .LVU5735
 22009              	.LBB12729:
 22010              	.LBI12729:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22011              		.loc 4 89 7 view .LVU5736
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22012              		.loc 4 89 7 is_stmt 0 view .LVU5737
 22013              	.LBE12729:
 22014              	.LBE12728:
 22015              	.LBB12730:
 22016              	.LBI12730:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22017              		.loc 2 186 7 is_stmt 1 view .LVU5738
 22018              	.LBB12731:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22019              		.loc 2 187 28 is_stmt 0 view .LVU5739
 22020 004e 3168     		ldr	r1, [r6]
 22021              	.LVL1505:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22022              		.loc 2 187 28 view .LVU5740
 22023              	.LBE12731:
 22024              	.LBE12730:
 22025              	.LBB12732:
 22026              	.LBI12732:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22027              		.loc 2 186 7 is_stmt 1 view .LVU5741
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22028              		.loc 2 186 7 is_stmt 0 view .LVU5742
 22029              	.LBE12732:
 22030              	.LBB12733:
 22031              	.LBI12733:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22032              		.loc 2 936 7 is_stmt 1 view .LVU5743
 22033              	.LBB12734:
ARM GAS  /tmp/ccL95Edz.s 			page 742


 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22034              		.loc 2 937 16 is_stmt 0 view .LVU5744
 22035 0050 7268     		ldr	r2, [r6, #4]
 22036              	.LVL1506:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22037              		.loc 2 937 16 view .LVU5745
 22038              	.LBE12734:
 22039              	.LBE12733:
 22040              	.LBB12735:
 22041              	.LBI12735:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 22042              		.loc 2 263 9 is_stmt 1 view .LVU5746
 22043              	.LBB12736:
 22044              	.LBB12737:
 22045              	.LBI12737:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 22046              		.loc 2 243 9 view .LVU5747
 22047              	.LBB12738:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22048              		.loc 2 247 11 is_stmt 0 view .LVU5748
 22049 0052 4FF00003 		mov	r3, #0
 22050 0056 0A44     		add	r2, r2, r1
 22051              	.LVL1507:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22052              		.loc 2 247 11 view .LVU5749
 22053 0058 2046     		mov	r0, r4
 22054 005a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 22055              	.LVL1508:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22056              		.loc 2 247 11 view .LVU5750
 22057              	.LBE12738:
 22058              	.LBE12737:
 22059              	.LBE12736:
 22060              	.LBE12735:
 22061              	.LBE12715:
 22062              	.LBE12714:
 22063              	.LBE12739:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 22064              		.loc 15 82 8 is_stmt 1 view .LVU5751
 22065              	.LBB12740:
 22066              	.LBI12740:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 22067              		.loc 13 827 7 view .LVU5752
 22068              	.LBB12741:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 22069              		.loc 13 829 2 is_stmt 0 view .LVU5753
 22070 005e 1836     		adds	r6, r6, #24
 22071              	.LVL1509:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 22072              		.loc 13 829 2 view .LVU5754
 22073              	.LBE12741:
 22074              	.LBE12740:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 22075              		.loc 15 82 8 view .LVU5755
 22076 0060 1834     		adds	r4, r4, #24
 22077              	.LVL1510:
 22078              	.L466:
ARM GAS  /tmp/ccL95Edz.s 			page 743


  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 22079              		.loc 15 82 23 is_stmt 1 view .LVU5756
 22080              	.LBB12742:
 22081              	.LBI12742:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 22082              		.loc 13 907 5 view .LVU5757
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 22083              		.loc 13 907 5 is_stmt 0 view .LVU5758
 22084              	.LBE12742:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 22085              		.loc 15 82 23 view .LVU5759
 22086 0062 AE42     		cmp	r6, r5
 22087 0064 F0D1     		bne	.L481
 22088              	.LVL1511:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 22089              		.loc 15 82 23 view .LVU5760
 22090              	.LBE12743:
 22091              	.LBE12745:
 22092              	.LBE12747:
 22093              	.LBE12749:
 22094              	.LBE12751:
 22095              	.LBE12754:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 22096              		.loc 11 554 2 view .LVU5761
 22097 0066 0894     		str	r4, [sp, #32]
 22098              	.LVL1512:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 22099              		.loc 11 554 2 view .LVU5762
 22100              	.LBE12755:
 22101              	.LBE12756:
 22102              	.LBE12757:
  54:alohal/filesystem/filesystem.cpp ****     if (directory_name == "") {
 22103              		.loc 17 54 47 view .LVU5763
 22104 0068 07AA     		add	r2, sp, #28
 22105 006a 3946     		mov	r1, r7
 22106 006c 01A8     		add	r0, sp, #4
 22107 006e FFF7FEFF 		bl	_ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES
 22108              	.LVL1513:
 22109              	.LBB12758:
 22110              	.LBI12758:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 22111              		.loc 11 675 7 is_stmt 1 view .LVU5764
 22112              	.LBB12759:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 22113              		.loc 11 677 15 is_stmt 0 view .LVU5765
 22114 0072 079C     		ldr	r4, [sp, #28]
 22115 0074 089D     		ldr	r5, [sp, #32]
 22116              	.LVL1514:
 22117              	.LBB12760:
 22118              	.LBI12760:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 22119              		.loc 11 273 7 is_stmt 1 view .LVU5766
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 22120              		.loc 11 273 7 is_stmt 0 view .LVU5767
 22121              	.LBE12760:
 22122              	.LBB12761:
 22123              	.LBI12761:
ARM GAS  /tmp/ccL95Edz.s 			page 744


 22124              		.loc 22 203 5 is_stmt 1 view .LVU5768
 22125 0076 02E0     		b	.L469
 22126              	.LVL1515:
 22127              	.L482:
 22128              	.LBB12762:
 22129              	.LBB12763:
 22130              	.LBB12764:
 22131              	.LBB12765:
 22132              	.LBB12766:
 22133              	.LBB12767:
 22134              	.LBB12768:
 22135              	.LBB12769:
 22136              	.LBB12770:
 22137              	.LBI12770:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22138              		.loc 2 236 7 view .LVU5769
 22139              	.LBB12771:
 22140              	.LBB12772:
 22141              	.LBI12772:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22142              		.loc 3 469 7 view .LVU5770
 22143              	.LBB12773:
 22144              	.LBI12773:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22145              		.loc 4 119 7 view .LVU5771
 22146              	.LBB12774:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22147              		.loc 4 128 19 is_stmt 0 view .LVU5772
 22148 0078 FFF7FEFF 		bl	_ZdlPv
 22149              	.LVL1516:
 22150              	.L468:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22151              		.loc 4 128 19 view .LVU5773
 22152              	.LBE12774:
 22153              	.LBE12773:
 22154              	.LBE12772:
 22155              	.LBE12771:
 22156              	.LBE12770:
 22157              	.LBE12769:
 22158              	.LBE12768:
 22159              	.LBB12780:
 22160              	.LBI12780:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22161              		.loc 2 150 14 is_stmt 1 view .LVU5774
 22162              	.LBB12781:
 22163              	.LBI12781:
 22164              		.loc 5 153 7 view .LVU5775
 22165              	.LBB12782:
 22166              	.LBI12782:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22167              		.loc 4 89 7 view .LVU5776
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22168              		.loc 4 89 7 is_stmt 0 view .LVU5777
 22169              	.LBE12782:
 22170              	.LBE12781:
 22171              	.LBE12780:
 22172              	.LBE12767:
ARM GAS  /tmp/ccL95Edz.s 			page 745


 22173              	.LBE12766:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 22174              		.loc 22 107 4 is_stmt 1 view .LVU5778
 22175 007c 1834     		adds	r4, r4, #24
 22176              	.LVL1517:
 22177              	.L469:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 22178              		.loc 22 107 19 view .LVU5779
 22179 007e A542     		cmp	r5, r4
 22180 0080 05D0     		beq	.L467
 22181              	.LVL1518:
 22182              	.LBB12785:
 22183              	.LBI12766:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 22184              		.loc 22 97 5 view .LVU5780
 22185              	.LBB12784:
 22186              	.LBI12767:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22187              		.loc 2 657 7 view .LVU5781
 22188              	.LBB12783:
 22189              	.LBI12768:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22190              		.loc 2 229 7 view .LVU5782
 22191              	.LBB12779:
 22192              	.LBB12775:
 22193              	.LBI12775:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22194              		.loc 2 221 7 view .LVU5783
 22195              	.LBB12776:
 22196              	.LBI12776:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22197              		.loc 2 186 7 view .LVU5784
 22198              	.LBB12777:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22199              		.loc 2 187 28 is_stmt 0 view .LVU5785
 22200 0082 2346     		mov	r3, r4
 22201 0084 53F8080B 		ldr	r0, [r3], #8
 22202              	.LVL1519:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22203              		.loc 2 187 28 view .LVU5786
 22204              	.LBE12777:
 22205              	.LBE12776:
 22206              	.LBB12778:
 22207              	.LBI12778:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22208              		.loc 2 200 7 is_stmt 1 view .LVU5787
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22209              		.loc 2 200 7 is_stmt 0 view .LVU5788
 22210              	.LBE12778:
 22211              	.LBE12775:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22212              		.loc 2 231 2 view .LVU5789
 22213 0088 9842     		cmp	r0, r3
 22214 008a F5D1     		bne	.L482
 22215 008c F6E7     		b	.L468
 22216              	.LVL1520:
 22217              	.L467:
ARM GAS  /tmp/ccL95Edz.s 			page 746


 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22218              		.loc 2 231 2 view .LVU5790
 22219              	.LBE12779:
 22220              	.LBE12783:
 22221              	.LBE12784:
 22222              	.LBE12785:
 22223              	.LBE12765:
 22224              	.LBE12764:
 22225              	.LBE12763:
 22226              	.LBE12762:
 22227              	.LBE12761:
 22228              	.LBB12786:
 22229              	.LBI12786:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 22230              		.loc 11 330 7 is_stmt 1 view .LVU5791
 22231              	.LBB12787:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 22232              		.loc 11 332 2 is_stmt 0 view .LVU5792
 22233 008e 0798     		ldr	r0, [sp, #28]
 22234              	.LVL1521:
 22235              	.LBB12788:
 22236              	.LBI12788:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 22237              		.loc 11 347 7 is_stmt 1 view .LVU5793
 22238              	.LBB12789:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 22239              		.loc 11 350 2 is_stmt 0 view .LVU5794
 22240 0090 08B1     		cbz	r0, .L470
 22241              	.LVL1522:
 22242              	.LBB12790:
 22243              	.LBI12790:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22244              		.loc 3 469 7 is_stmt 1 view .LVU5795
 22245              	.LBB12791:
 22246              	.LBB12792:
 22247              	.LBI12792:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22248              		.loc 4 119 7 view .LVU5796
 22249              	.LBB12793:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22250              		.loc 4 128 19 is_stmt 0 view .LVU5797
 22251 0092 FFF7FEFF 		bl	_ZdlPv
 22252              	.LVL1523:
 22253              	.L470:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22254              		.loc 4 128 19 view .LVU5798
 22255              	.LBE12793:
 22256              	.LBE12792:
 22257              	.LBE12791:
 22258              	.LBE12790:
 22259              	.LBE12789:
 22260              	.LBE12788:
 22261              	.LBB12794:
 22262              	.LBI12794:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 22263              		.loc 11 125 14 is_stmt 1 view .LVU5799
 22264              	.LBB12795:
ARM GAS  /tmp/ccL95Edz.s 			page 747


 22265              	.LBI12795:
 22266              		.loc 5 153 7 view .LVU5800
 22267              	.LBB12796:
 22268              	.LBI12796:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22269              		.loc 4 89 7 view .LVU5801
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22270              		.loc 4 89 7 is_stmt 0 view .LVU5802
 22271              	.LBE12796:
 22272              	.LBE12795:
 22273              	.LBE12794:
 22274              	.LBE12787:
 22275              	.LBE12786:
 22276              	.LBE12759:
 22277              	.LBE12758:
  55:alohal/filesystem/filesystem.cpp ****         return -1;
 22278              		.loc 17 55 5 is_stmt 1 view .LVU5803
 22279              	.LBB12797:
 22280              	.LBI12797:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 22281              		.loc 2 6175 5 view .LVU5804
 22282              	.LBB12798:
 22283              		.loc 2 6177 35 is_stmt 0 view .LVU5805
 22284 0096 2C49     		ldr	r1, .L485+8
 22285 0098 01A8     		add	r0, sp, #4
 22286              	.LVL1524:
 22287              		.loc 2 6177 35 view .LVU5806
 22288 009a FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 22289              	.LVL1525:
 22290              		.loc 2 6177 35 view .LVU5807
 22291              	.LBE12798:
 22292              	.LBE12797:
  55:alohal/filesystem/filesystem.cpp ****         return -1;
 22293              		.loc 17 55 5 view .LVU5808
 22294 009e 0028     		cmp	r0, #0
 22295 00a0 4AD0     		beq	.L478
  59:alohal/filesystem/filesystem.cpp **** 
 22296              		.loc 17 59 5 is_stmt 1 view .LVU5809
 22297              	.LVL1526:
 22298              	.LBB12799:
 22299              	.LBI12799:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 22300              		.loc 2 448 7 view .LVU5810
 22301              	.LBB12800:
 22302              	.LBB12801:
 22303              	.LBB12802:
 22304              	.LBI12802:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22305              		.loc 2 190 7 view .LVU5811
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22306              		.loc 2 190 7 is_stmt 0 view .LVU5812
 22307              	.LBE12802:
 22308              	.LBB12803:
 22309              	.LBI12803:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 22310              		.loc 2 290 7 is_stmt 1 view .LVU5813
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
ARM GAS  /tmp/ccL95Edz.s 			page 748


 22311              		.loc 2 290 7 is_stmt 0 view .LVU5814
 22312              	.LBE12803:
 22313              	.LBB12804:
 22314              	.LBI12804:
 22315              		.loc 19 97 19 is_stmt 1 view .LVU5815
 22316              	.LBB12805:
 22317              	.LBI12805:
 22318              		.loc 3 514 7 view .LVU5816
 22319              	.LBB12806:
 22320              	.LBI12806:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 22321              		.loc 5 141 7 view .LVU5817
 22322              	.LBB12807:
 22323              	.LBI12807:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22324              		.loc 4 83 7 view .LVU5818
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22325              		.loc 4 83 7 is_stmt 0 view .LVU5819
 22326              	.LBE12807:
 22327              	.LBE12806:
 22328              	.LBE12805:
 22329              	.LBE12804:
 22330              	.LBB12808:
 22331              	.LBI12808:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 22332              		.loc 2 159 2 is_stmt 1 view .LVU5820
 22333              	.LBB12809:
 22334              	.LBB12810:
 22335              	.LBB12811:
 22336              	.LBI12811:
 22337              		.loc 9 99 5 view .LVU5821
 22338              		.loc 9 99 5 is_stmt 0 view .LVU5822
 22339              	.LBE12811:
 22340              	.LBB12812:
 22341              	.LBI12812:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 22342              		.loc 5 141 7 is_stmt 1 view .LVU5823
 22343              	.LBB12813:
 22344              	.LBI12813:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22345              		.loc 4 83 7 view .LVU5824
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22346              		.loc 4 83 7 is_stmt 0 view .LVU5825
 22347              	.LBE12813:
 22348              	.LBE12812:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22349              		.loc 2 160 46 view .LVU5826
 22350 00a2 0CAD     		add	r5, sp, #48
 22351              	.LVL1527:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22352              		.loc 2 160 46 view .LVU5827
 22353 00a4 0A95     		str	r5, [sp, #40]
 22354              	.LVL1528:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22355              		.loc 2 160 46 view .LVU5828
 22356              	.LBE12810:
 22357              	.LBE12809:
ARM GAS  /tmp/ccL95Edz.s 			page 749


 22358              	.LBE12808:
 22359              	.LBB12814:
 22360              	.LBI12814:
 22361              		.loc 5 153 7 is_stmt 1 view .LVU5829
 22362              	.LBB12815:
 22363              	.LBI12815:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22364              		.loc 4 89 7 view .LVU5830
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22365              		.loc 4 89 7 is_stmt 0 view .LVU5831
 22366              	.LBE12815:
 22367              	.LBE12814:
 22368              	.LBB12816:
 22369              	.LBI12816:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22370              		.loc 2 186 7 is_stmt 1 view .LVU5832
 22371              	.LBB12817:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22372              		.loc 2 187 28 is_stmt 0 view .LVU5833
 22373 00a6 0199     		ldr	r1, [sp, #4]
 22374              	.LVL1529:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22375              		.loc 2 187 28 view .LVU5834
 22376              	.LBE12817:
 22377              	.LBE12816:
 22378              	.LBB12818:
 22379              	.LBI12818:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22380              		.loc 2 186 7 is_stmt 1 view .LVU5835
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22381              		.loc 2 186 7 is_stmt 0 view .LVU5836
 22382              	.LBE12818:
 22383              	.LBB12819:
 22384              	.LBI12819:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22385              		.loc 2 936 7 is_stmt 1 view .LVU5837
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22386              		.loc 2 936 7 is_stmt 0 view .LVU5838
 22387              	.LBE12819:
 22388              	.LBB12820:
 22389              	.LBI12820:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 22390              		.loc 2 263 9 is_stmt 1 view .LVU5839
 22391              	.LBB12821:
 22392              	.LBB12822:
 22393              	.LBI12822:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 22394              		.loc 2 243 9 view .LVU5840
 22395              	.LBB12823:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22396              		.loc 2 247 11 is_stmt 0 view .LVU5841
 22397 00a8 4FF00003 		mov	r3, #0
 22398 00ac 029A     		ldr	r2, [sp, #8]
 22399 00ae 0A44     		add	r2, r2, r1
 22400              	.LVL1530:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22401              		.loc 2 247 11 view .LVU5842
ARM GAS  /tmp/ccL95Edz.s 			page 750


 22402 00b0 0AA8     		add	r0, sp, #40
 22403              	.LVL1531:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22404              		.loc 2 247 11 view .LVU5843
 22405 00b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 22406              	.LVL1532:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22407              		.loc 2 247 11 view .LVU5844
 22408              	.LBE12823:
 22409              	.LBE12822:
 22410              	.LBE12821:
 22411              	.LBE12820:
 22412              	.LBE12801:
 22413              	.LBE12800:
 22414              	.LBE12799:
  59:alohal/filesystem/filesystem.cpp **** 
 22415              		.loc 17 59 35 view .LVU5845
 22416 00b6 0AA9     		add	r1, sp, #40
 22417 00b8 3846     		mov	r0, r7
 22418 00ba FFF7FEFF 		bl	_ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 22419              	.LVL1533:
 22420 00be 0446     		mov	r4, r0
 22421              	.LVL1534:
 22422              	.LBB12824:
 22423              	.LBI12824:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22424              		.loc 2 657 7 is_stmt 1 view .LVU5846
 22425              	.LBB12825:
 22426              	.LBI12825:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22427              		.loc 2 229 7 view .LVU5847
 22428              	.LBB12826:
 22429              	.LBB12827:
 22430              	.LBI12827:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22431              		.loc 2 221 7 view .LVU5848
 22432              	.LBB12828:
 22433              	.LBI12828:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22434              		.loc 2 186 7 view .LVU5849
 22435              	.LBB12829:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22436              		.loc 2 187 28 is_stmt 0 view .LVU5850
 22437 00c0 0A98     		ldr	r0, [sp, #40]
 22438              	.LVL1535:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22439              		.loc 2 187 28 view .LVU5851
 22440              	.LBE12829:
 22441              	.LBE12828:
 22442              	.LBB12830:
 22443              	.LBI12830:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22444              		.loc 2 200 7 is_stmt 1 view .LVU5852
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22445              		.loc 2 200 7 is_stmt 0 view .LVU5853
 22446              	.LBE12830:
 22447              	.LBE12827:
ARM GAS  /tmp/ccL95Edz.s 			page 751


 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22448              		.loc 2 231 2 view .LVU5854
 22449 00c2 A842     		cmp	r0, r5
 22450 00c4 01D0     		beq	.L472
 22451              	.LVL1536:
 22452              	.LBB12831:
 22453              	.LBI12831:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22454              		.loc 2 236 7 is_stmt 1 view .LVU5855
 22455              	.LBB12832:
 22456              	.LBB12833:
 22457              	.LBI12833:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22458              		.loc 3 469 7 view .LVU5856
 22459              	.LBB12834:
 22460              	.LBI12834:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22461              		.loc 4 119 7 view .LVU5857
 22462              	.LBB12835:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22463              		.loc 4 128 19 is_stmt 0 view .LVU5858
 22464 00c6 FFF7FEFF 		bl	_ZdlPv
 22465              	.LVL1537:
 22466              	.L472:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22467              		.loc 4 128 19 view .LVU5859
 22468              	.LBE12835:
 22469              	.LBE12834:
 22470              	.LBE12833:
 22471              	.LBE12832:
 22472              	.LBE12831:
 22473              	.LBE12826:
 22474              	.LBE12825:
 22475              	.LBB12836:
 22476              	.LBI12836:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22477              		.loc 2 150 14 is_stmt 1 view .LVU5860
 22478              	.LBB12837:
 22479              	.LBI12837:
 22480              		.loc 5 153 7 view .LVU5861
 22481              	.LBB12838:
 22482              	.LBI12838:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22483              		.loc 4 89 7 view .LVU5862
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22484              		.loc 4 89 7 is_stmt 0 view .LVU5863
 22485              	.LBE12838:
 22486              	.LBE12837:
 22487              	.LBE12836:
 22488              	.LBE12824:
  61:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is unreachable - null returned \r\n");
 22489              		.loc 17 61 5 is_stmt 1 view .LVU5864
 22490 00ca 022C     		cmp	r4, #2
 22491 00cc 0AD0     		beq	.L483
  63:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a directory \r\n");
 22492              		.loc 17 63 12 view .LVU5865
 22493 00ce 142C     		cmp	r4, #20
ARM GAS  /tmp/ccL95Edz.s 			page 752


 22494 00d0 1DD0     		beq	.L484
 22495              	.LVL1538:
 22496              	.L471:
 22497              	.LBB12839:
 22498              	.LBI12839:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22499              		.loc 2 657 7 view .LVU5866
 22500              	.LBB12840:
 22501              	.LBI12840:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22502              		.loc 2 229 7 view .LVU5867
 22503              	.LBB12841:
 22504              	.LBB12842:
 22505              	.LBI12842:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22506              		.loc 2 221 7 view .LVU5868
 22507              	.LBB12843:
 22508              	.LBI12843:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22509              		.loc 2 186 7 view .LVU5869
 22510              	.LBB12844:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22511              		.loc 2 187 28 is_stmt 0 view .LVU5870
 22512 00d2 0198     		ldr	r0, [sp, #4]
 22513              	.LVL1539:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22514              		.loc 2 187 28 view .LVU5871
 22515              	.LBE12844:
 22516              	.LBE12843:
 22517              	.LBB12845:
 22518              	.LBI12845:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22519              		.loc 2 200 7 is_stmt 1 view .LVU5872
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22520              		.loc 2 200 7 is_stmt 0 view .LVU5873
 22521              	.LBE12845:
 22522              	.LBE12842:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22523              		.loc 2 231 2 view .LVU5874
 22524 00d4 03AB     		add	r3, sp, #12
 22525 00d6 9842     		cmp	r0, r3
 22526 00d8 01D0     		beq	.L462
 22527              	.LVL1540:
 22528              	.LBB12846:
 22529              	.LBI12846:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22530              		.loc 2 236 7 is_stmt 1 view .LVU5875
 22531              	.LBB12847:
 22532              	.LBB12848:
 22533              	.LBI12848:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22534              		.loc 3 469 7 view .LVU5876
 22535              	.LBB12849:
 22536              	.LBI12849:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22537              		.loc 4 119 7 view .LVU5877
 22538              	.LBB12850:
ARM GAS  /tmp/ccL95Edz.s 			page 753


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22539              		.loc 4 128 19 is_stmt 0 view .LVU5878
 22540 00da FFF7FEFF 		bl	_ZdlPv
 22541              	.LVL1541:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22542              		.loc 4 128 19 view .LVU5879
 22543              	.LBE12850:
 22544              	.LBE12849:
 22545              	.LBE12848:
 22546              	.LBE12847:
 22547              	.LBE12846:
 22548              	.LBE12841:
 22549              	.LBE12840:
 22550              	.LBB12851:
 22551              	.LBI12851:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22552              		.loc 2 150 14 is_stmt 1 view .LVU5880
 22553              	.LBB12852:
 22554              	.LBI12852:
 22555              		.loc 5 153 7 view .LVU5881
 22556              	.LBB12853:
 22557              	.LBI12853:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22558              		.loc 4 89 7 view .LVU5882
 22559              	.L462:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22560              		.loc 4 89 7 is_stmt 0 view .LVU5883
 22561              	.LBE12853:
 22562              	.LBE12852:
 22563              	.LBE12851:
 22564              	.LBE12839:
  68:alohal/filesystem/filesystem.cpp **** 
 22565              		.loc 17 68 1 view .LVU5884
 22566 00de 2046     		mov	r0, r4
 22567 00e0 1DB0     		add	sp, sp, #116
 22568              	.LCFI81:
 22569              		.cfi_remember_state
 22570              		.cfi_def_cfa_offset 20
 22571              		@ sp needed
 22572 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 22573              	.LVL1542:
 22574              	.L483:
 22575              	.LCFI82:
 22576              		.cfi_restore_state
  62:alohal/filesystem/filesystem.cpp ****     } else if (return_code == ENOTDIR){
 22577              		.loc 17 62 9 is_stmt 1 view .LVU5885
 22578 00e4 BE68     		ldr	r6, [r7, #8]
 22579              	.LVL1543:
 22580              	.LBB12854:
 22581              	.LBI12854:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 22582              		.loc 5 138 7 view .LVU5886
 22583              	.LBB12855:
 22584              	.LBI12855:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22585              		.loc 4 80 7 view .LVU5887
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 754


 22586              		.loc 4 80 7 is_stmt 0 view .LVU5888
 22587              	.LBE12855:
 22588              	.LBE12854:
 22589              	.LBB12856:
 22590              	.LBI12856:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 22591              		.loc 2 525 7 is_stmt 1 view .LVU5889
 22592              	.LBB12857:
 22593              	.LBB12858:
 22594              	.LBB12859:
 22595              	.LBI12859:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22596              		.loc 2 190 7 view .LVU5890
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22597              		.loc 2 190 7 is_stmt 0 view .LVU5891
 22598              	.LBE12859:
 22599              	.LBB12860:
 22600              	.LBI12860:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 22601              		.loc 2 156 2 is_stmt 1 view .LVU5892
 22602              	.LBB12861:
 22603              	.LBB12862:
 22604              	.LBB12863:
 22605              	.LBI12863:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 22606              		.loc 5 141 7 view .LVU5893
 22607              	.LBB12864:
 22608              	.LBI12864:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22609              		.loc 4 83 7 view .LVU5894
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22610              		.loc 4 83 7 is_stmt 0 view .LVU5895
 22611              	.LBE12864:
 22612              	.LBE12863:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22613              		.loc 2 157 35 view .LVU5896
 22614 00e6 12AD     		add	r5, sp, #72
 22615              	.LVL1544:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22616              		.loc 2 157 35 view .LVU5897
 22617 00e8 1095     		str	r5, [sp, #64]
 22618              	.LVL1545:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22619              		.loc 2 157 35 view .LVU5898
 22620              	.LBE12862:
 22621              	.LBE12861:
 22622              	.LBE12860:
 22623              	.LBB12865:
 22624              	.LBI12865:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 22625              		.loc 8 329 7 is_stmt 1 view .LVU5899
 22626              	.LBE12865:
 22627              	.LBE12858:
 22628              	.LBE12857:
 22629              	.LBE12856:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 22630              		.loc 8 332 2 view .LVU5900
ARM GAS  /tmp/ccL95Edz.s 			page 755


 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 22631              		.loc 8 335 2 view .LVU5901
 22632              	.LBB12872:
 22633              	.LBB12871:
 22634              	.LBB12870:
 22635              	.LBB12866:
 22636              	.LBI12866:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 22637              		.loc 2 263 9 view .LVU5902
 22638              	.LBB12867:
 22639              	.LBB12868:
 22640              	.LBI12868:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 22641              		.loc 2 243 9 view .LVU5903
 22642              	.LBB12869:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22643              		.loc 2 247 11 is_stmt 0 view .LVU5904
 22644 00ea 184A     		ldr	r2, .L485+12
 22645              	.LVL1546:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22646              		.loc 2 247 11 view .LVU5905
 22647 00ec 4FF00003 		mov	r3, #0
 22648 00f0 A2F13101 		sub	r1, r2, #49
 22649 00f4 10A8     		add	r0, sp, #64
 22650              	.LVL1547:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22651              		.loc 2 247 11 view .LVU5906
 22652 00f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 22653              	.LVL1548:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22654              		.loc 2 247 11 view .LVU5907
 22655              	.LBE12869:
 22656              	.LBE12868:
 22657              	.LBE12867:
 22658              	.LBE12866:
 22659              	.LBE12870:
 22660              	.LBE12871:
 22661              	.LBE12872:
  62:alohal/filesystem/filesystem.cpp ****     } else if (return_code == ENOTDIR){
 22662              		.loc 17 62 19 view .LVU5908
 22663 00fa 10A9     		add	r1, sp, #64
 22664 00fc 3046     		mov	r0, r6
 22665 00fe FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 22666              	.LVL1549:
 22667              	.LBB12873:
 22668              	.LBI12873:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22669              		.loc 2 657 7 is_stmt 1 view .LVU5909
 22670              	.LBB12874:
 22671              	.LBI12874:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22672              		.loc 2 229 7 view .LVU5910
 22673              	.LBB12875:
 22674              	.LBB12876:
 22675              	.LBI12876:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22676              		.loc 2 221 7 view .LVU5911
ARM GAS  /tmp/ccL95Edz.s 			page 756


 22677              	.LBB12877:
 22678              	.LBI12877:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22679              		.loc 2 186 7 view .LVU5912
 22680              	.LBB12878:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22681              		.loc 2 187 28 is_stmt 0 view .LVU5913
 22682 0102 1098     		ldr	r0, [sp, #64]
 22683              	.LVL1550:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22684              		.loc 2 187 28 view .LVU5914
 22685              	.LBE12878:
 22686              	.LBE12877:
 22687              	.LBB12879:
 22688              	.LBI12879:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22689              		.loc 2 200 7 is_stmt 1 view .LVU5915
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22690              		.loc 2 200 7 is_stmt 0 view .LVU5916
 22691              	.LBE12879:
 22692              	.LBE12876:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22693              		.loc 2 231 2 view .LVU5917
 22694 0104 A842     		cmp	r0, r5
 22695 0106 E4D0     		beq	.L471
 22696              	.LVL1551:
 22697              	.LBB12880:
 22698              	.LBI12880:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22699              		.loc 2 236 7 is_stmt 1 view .LVU5918
 22700              	.LBB12881:
 22701              	.LBB12882:
 22702              	.LBI12882:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22703              		.loc 3 469 7 view .LVU5919
 22704              	.LBB12883:
 22705              	.LBI12883:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22706              		.loc 4 119 7 view .LVU5920
 22707              	.LBB12884:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22708              		.loc 4 128 19 is_stmt 0 view .LVU5921
 22709 0108 FFF7FEFF 		bl	_ZdlPv
 22710              	.LVL1552:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22711              		.loc 4 128 19 view .LVU5922
 22712              	.LBE12884:
 22713              	.LBE12883:
 22714              	.LBE12882:
 22715              	.LBE12881:
 22716              	.LBE12880:
 22717              	.LBE12875:
 22718              	.LBE12874:
 22719              	.LBB12888:
 22720              	.LBI12888:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22721              		.loc 2 150 14 is_stmt 1 view .LVU5923
ARM GAS  /tmp/ccL95Edz.s 			page 757


 22722              	.LBB12889:
 22723              	.LBI12889:
 22724              		.loc 5 153 7 view .LVU5924
 22725              	.LBB12890:
 22726              	.LBI12890:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22727              		.loc 4 89 7 view .LVU5925
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22728              		.loc 4 89 7 is_stmt 0 view .LVU5926
 22729              	.LBE12890:
 22730              	.LBE12889:
 22731              	.LBE12888:
 22732              	.LBE12873:
 22733              	.LBB12892:
 22734              	.LBI12892:
 22735              		.loc 5 153 7 is_stmt 1 view .LVU5927
 22736              	.LBB12893:
 22737              	.LBI12893:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22738              		.loc 4 89 7 view .LVU5928
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22739              		.loc 4 89 7 is_stmt 0 view .LVU5929
 22740              	.LBE12893:
 22741              	.LBE12892:
 22742              	.LBB12894:
 22743              	.LBB12891:
 22744              	.LBB12887:
 22745              	.LBB12886:
 22746              	.LBB12885:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22747              		.loc 2 237 79 view .LVU5930
 22748 010c E1E7     		b	.L471
 22749              	.LVL1553:
 22750              	.L484:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22751              		.loc 2 237 79 view .LVU5931
 22752              	.LBE12885:
 22753              	.LBE12886:
 22754              	.LBE12887:
 22755              	.LBE12891:
 22756              	.LBE12894:
  64:alohal/filesystem/filesystem.cpp ****     }
 22757              		.loc 17 64 9 is_stmt 1 view .LVU5932
 22758 010e BE68     		ldr	r6, [r7, #8]
 22759              	.LVL1554:
 22760              	.LBB12895:
 22761              	.LBI12895:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 22762              		.loc 5 138 7 view .LVU5933
 22763              	.LBB12896:
 22764              	.LBI12896:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22765              		.loc 4 80 7 view .LVU5934
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22766              		.loc 4 80 7 is_stmt 0 view .LVU5935
 22767              	.LBE12896:
 22768              	.LBE12895:
ARM GAS  /tmp/ccL95Edz.s 			page 758


 22769              	.LBB12897:
 22770              	.LBI12897:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 22771              		.loc 2 525 7 is_stmt 1 view .LVU5936
 22772              	.LBB12898:
 22773              	.LBB12899:
 22774              	.LBB12900:
 22775              	.LBI12900:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22776              		.loc 2 190 7 view .LVU5937
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22777              		.loc 2 190 7 is_stmt 0 view .LVU5938
 22778              	.LBE12900:
 22779              	.LBB12901:
 22780              	.LBI12901:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 22781              		.loc 2 156 2 is_stmt 1 view .LVU5939
 22782              	.LBB12902:
 22783              	.LBB12903:
 22784              	.LBB12904:
 22785              	.LBI12904:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 22786              		.loc 5 141 7 view .LVU5940
 22787              	.LBB12905:
 22788              	.LBI12905:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22789              		.loc 4 83 7 view .LVU5941
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22790              		.loc 4 83 7 is_stmt 0 view .LVU5942
 22791              	.LBE12905:
 22792              	.LBE12904:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22793              		.loc 2 157 35 view .LVU5943
 22794 0110 18AD     		add	r5, sp, #96
 22795              	.LVL1555:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22796              		.loc 2 157 35 view .LVU5944
 22797 0112 1695     		str	r5, [sp, #88]
 22798              	.LVL1556:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22799              		.loc 2 157 35 view .LVU5945
 22800              	.LBE12903:
 22801              	.LBE12902:
 22802              	.LBE12901:
 22803              	.LBB12906:
 22804              	.LBI12906:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 22805              		.loc 8 329 7 is_stmt 1 view .LVU5946
 22806              	.LBE12906:
 22807              	.LBE12899:
 22808              	.LBE12898:
 22809              	.LBE12897:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 22810              		.loc 8 332 2 view .LVU5947
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 22811              		.loc 8 335 2 view .LVU5948
 22812              	.LBB12913:
ARM GAS  /tmp/ccL95Edz.s 			page 759


 22813              	.LBB12912:
 22814              	.LBB12911:
 22815              	.LBB12907:
 22816              	.LBI12907:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 22817              		.loc 2 263 9 view .LVU5949
 22818              	.LBB12908:
 22819              	.LBB12909:
 22820              	.LBI12909:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 22821              		.loc 2 243 9 view .LVU5950
 22822              	.LBB12910:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22823              		.loc 2 247 11 is_stmt 0 view .LVU5951
 22824 0114 0E4A     		ldr	r2, .L485+16
 22825              	.LVL1557:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22826              		.loc 2 247 11 view .LVU5952
 22827 0116 4FF00003 		mov	r3, #0
 22828 011a A2F12501 		sub	r1, r2, #37
 22829 011e 16A8     		add	r0, sp, #88
 22830              	.LVL1558:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22831              		.loc 2 247 11 view .LVU5953
 22832 0120 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 22833              	.LVL1559:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 22834              		.loc 2 247 11 view .LVU5954
 22835              	.LBE12910:
 22836              	.LBE12909:
 22837              	.LBE12908:
 22838              	.LBE12907:
 22839              	.LBE12911:
 22840              	.LBE12912:
 22841              	.LBE12913:
  64:alohal/filesystem/filesystem.cpp ****     }
 22842              		.loc 17 64 19 view .LVU5955
 22843 0124 16A9     		add	r1, sp, #88
 22844 0126 3046     		mov	r0, r6
 22845 0128 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 22846              	.LVL1560:
 22847              	.LBB12914:
 22848              	.LBI12914:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22849              		.loc 2 657 7 is_stmt 1 view .LVU5956
 22850              	.LBB12915:
 22851              	.LBI12915:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22852              		.loc 2 229 7 view .LVU5957
 22853              	.LBB12916:
 22854              	.LBB12917:
 22855              	.LBI12917:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22856              		.loc 2 221 7 view .LVU5958
 22857              	.LBB12918:
 22858              	.LBI12918:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 760


 22859              		.loc 2 186 7 view .LVU5959
 22860              	.LBB12919:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22861              		.loc 2 187 28 is_stmt 0 view .LVU5960
 22862 012c 1698     		ldr	r0, [sp, #88]
 22863              	.LVL1561:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22864              		.loc 2 187 28 view .LVU5961
 22865              	.LBE12919:
 22866              	.LBE12918:
 22867              	.LBB12920:
 22868              	.LBI12920:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22869              		.loc 2 200 7 is_stmt 1 view .LVU5962
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22870              		.loc 2 200 7 is_stmt 0 view .LVU5963
 22871              	.LBE12920:
 22872              	.LBE12917:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22873              		.loc 2 231 2 view .LVU5964
 22874 012e A842     		cmp	r0, r5
 22875 0130 CFD0     		beq	.L471
 22876              	.LVL1562:
 22877              	.LBB12921:
 22878              	.LBI12921:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22879              		.loc 2 236 7 is_stmt 1 view .LVU5965
 22880              	.LBB12922:
 22881              	.LBB12923:
 22882              	.LBI12923:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22883              		.loc 3 469 7 view .LVU5966
 22884              	.LBB12924:
 22885              	.LBI12924:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22886              		.loc 4 119 7 view .LVU5967
 22887              	.LBB12925:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22888              		.loc 4 128 19 is_stmt 0 view .LVU5968
 22889 0132 FFF7FEFF 		bl	_ZdlPv
 22890              	.LVL1563:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22891              		.loc 4 128 19 view .LVU5969
 22892              	.LBE12925:
 22893              	.LBE12924:
 22894              	.LBE12923:
 22895              	.LBE12922:
 22896              	.LBE12921:
 22897              	.LBE12916:
 22898              	.LBE12915:
 22899              	.LBB12929:
 22900              	.LBI12929:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22901              		.loc 2 150 14 is_stmt 1 view .LVU5970
 22902              	.LBB12930:
 22903              	.LBI12930:
 22904              		.loc 5 153 7 view .LVU5971
ARM GAS  /tmp/ccL95Edz.s 			page 761


 22905              	.LBB12931:
 22906              	.LBI12931:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22907              		.loc 4 89 7 view .LVU5972
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22908              		.loc 4 89 7 is_stmt 0 view .LVU5973
 22909              	.LBE12931:
 22910              	.LBE12930:
 22911              	.LBE12929:
 22912              	.LBE12914:
 22913              	.LBB12933:
 22914              	.LBI12933:
 22915              		.loc 5 153 7 is_stmt 1 view .LVU5974
 22916              	.LBB12934:
 22917              	.LBI12934:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22918              		.loc 4 89 7 view .LVU5975
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22919              		.loc 4 89 7 is_stmt 0 view .LVU5976
 22920              	.LBE12934:
 22921              	.LBE12933:
 22922              	.LBB12935:
 22923              	.LBB12932:
 22924              	.LBB12928:
 22925              	.LBB12927:
 22926              	.LBB12926:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22927              		.loc 2 237 79 view .LVU5977
 22928 0136 CCE7     		b	.L471
 22929              	.LVL1564:
 22930              	.L478:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22931              		.loc 2 237 79 view .LVU5978
 22932              	.LBE12926:
 22933              	.LBE12927:
 22934              	.LBE12928:
 22935              	.LBE12932:
 22936              	.LBE12935:
  56:alohal/filesystem/filesystem.cpp ****     }
 22937              		.loc 17 56 17 view .LVU5979
 22938 0138 4FF0FF34 		mov	r4, #-1
 22939 013c C9E7     		b	.L471
 22940              	.L486:
 22941 013e 00BF     		.align	2
 22942              	.L485:
 22943 0140 ABAAAAAA 		.word	-1431655765
 22944 0144 55555505 		.word	89478485
 22945 0148 18000000 		.word	.LC19
 22946 014c 31000000 		.word	.LC21+49
 22947 0150 25000000 		.word	.LC22+37
 22948              		.cfi_endproc
 22949              	.LFE3371:
 22951              		.section	.rodata._ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traits
 22952              		.align	2
 22953              	.LC23:
 22954 0000 54617267 		.ascii	"Target location is not a file \015\012\000"
 22954      6574206C 
ARM GAS  /tmp/ccL95Edz.s 			page 762


 22954      6F636174 
 22954      696F6E20 
 22954      6973206E 
 22955 0021 000000   		.align	2
 22956              	.LC24:
 22957 0024 256600   		.ascii	"%f\000"
 22958 0027 00       		.align	2
 22959              	.LC25:
 22960 0028 62617369 		.ascii	"basic_string::substr\000"
 22960      635F7374 
 22960      72696E67 
 22960      3A3A7375 
 22960      62737472 
 22961 003d 000000   		.align	2
 22962              	.LC26:
 22963 0040 62617369 		.ascii	"basic_string::basic_string\000"
 22963      635F7374 
 22963      72696E67 
 22963      3A3A6261 
 22963      7369635F 
 22964              		.section	.text._ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIc
 22965              		.align	1
 22966              		.global	_ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 22967              		.syntax unified
 22968              		.thumb
 22969              		.thumb_func
 22970              		.fpu fpv4-sp-d16
 22972              	_ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 22973              	.LVL1565:
 22974              	.LFB3372:
  70:alohal/filesystem/filesystem.cpp ****     string filename = Command_check(args);
 22975              		.loc 17 70 49 is_stmt 1 view -0
 22976              		.cfi_startproc
 22977              		@ args = 0, pretend = 0, frame = 184
 22978              		@ frame_needed = 0, uses_anonymous_args = 0
  70:alohal/filesystem/filesystem.cpp ****     string filename = Command_check(args);
 22979              		.loc 17 70 49 is_stmt 0 view .LVU5981
 22980 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 22981              	.LCFI83:
 22982              		.cfi_def_cfa_offset 20
 22983              		.cfi_offset 4, -20
 22984              		.cfi_offset 5, -16
 22985              		.cfi_offset 6, -12
 22986              		.cfi_offset 7, -8
 22987              		.cfi_offset 14, -4
 22988 0002 B1B0     		sub	sp, sp, #196
 22989              	.LCFI84:
 22990              		.cfi_def_cfa_offset 216
 22991 0004 0746     		mov	r7, r0
 22992 0006 0D46     		mov	r5, r1
  71:alohal/filesystem/filesystem.cpp ****     if (filename == "") {
 22993              		.loc 17 71 5 is_stmt 1 view .LVU5982
 22994              	.LVL1566:
 22995              	.LBB13372:
 22996              	.LBI13372:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 22997              		.loc 11 550 7 view .LVU5983
ARM GAS  /tmp/ccL95Edz.s 			page 763


 22998              	.LBB13373:
 22999              	.LBB13374:
 23000              	.LBB13375:
 23001              	.LBI13375:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 23002              		.loc 11 915 7 view .LVU5984
 23003              	.LBB13376:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23004              		.loc 11 916 40 is_stmt 0 view .LVU5985
 23005 0008 4E68     		ldr	r6, [r1, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23006              		.loc 11 916 66 view .LVU5986
 23007 000a 0B68     		ldr	r3, [r1]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23008              		.loc 11 916 50 view .LVU5987
 23009 000c F61A     		subs	r6, r6, r3
 23010 000e F010     		asrs	r0, r6, #3
 23011              	.LVL1567:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23012              		.loc 11 916 50 view .LVU5988
 23013 0010 A74B     		ldr	r3, .L537+8
 23014 0012 03FB00F3 		mul	r3, r3, r0
 23015              	.LVL1568:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23016              		.loc 11 916 50 view .LVU5989
 23017              	.LBE13376:
 23018              	.LBE13375:
 23019              	.LBB13377:
 23020              	.LBI13377:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23021              		.loc 11 277 7 is_stmt 1 view .LVU5990
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23022              		.loc 11 277 7 is_stmt 0 view .LVU5991
 23023              	.LBE13377:
 23024              	.LBB13378:
 23025              	.LBI13378:
 23026              		.loc 19 97 19 is_stmt 1 view .LVU5992
 23027              	.LBB13379:
 23028              	.LBI13379:
 23029              		.loc 3 514 7 view .LVU5993
 23030              	.LBB13380:
 23031              	.LBI13380:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23032              		.loc 5 141 7 view .LVU5994
 23033              	.LBB13381:
 23034              	.LBI13381:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23035              		.loc 4 83 7 view .LVU5995
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23036              		.loc 4 83 7 is_stmt 0 view .LVU5996
 23037              	.LBE13381:
 23038              	.LBE13380:
 23039              	.LBE13379:
 23040              	.LBE13378:
 23041              	.LBB13382:
 23042              	.LBI13382:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
ARM GAS  /tmp/ccL95Edz.s 			page 764


 23043              		.loc 11 300 7 is_stmt 1 view .LVU5997
 23044              	.LBB13383:
 23045              	.LBI13383:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 23046              		.loc 11 133 2 view .LVU5998
 23047              	.LBB13384:
 23048              	.LBI13384:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23049              		.loc 5 141 7 view .LVU5999
 23050              	.LBB13385:
 23051              	.LBI13385:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23052              		.loc 4 83 7 view .LVU6000
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23053              		.loc 4 83 7 is_stmt 0 view .LVU6001
 23054              	.LBE13385:
 23055              	.LBE13384:
 23056              	.LBB13386:
 23057              	.LBI13386:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 23058              		.loc 11 94 2 is_stmt 1 view .LVU6002
 23059              	.LBB13387:
 23060              	.LBB13388:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 23061              		.loc 11 95 47 is_stmt 0 view .LVU6003
 23062 0016 0022     		movs	r2, #0
 23063 0018 0F92     		str	r2, [sp, #60]
 23064 001a 1092     		str	r2, [sp, #64]
 23065 001c 1192     		str	r2, [sp, #68]
 23066              	.LVL1569:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 23067              		.loc 11 95 47 view .LVU6004
 23068              	.LBE13388:
 23069              	.LBE13387:
 23070              	.LBE13386:
 23071              	.LBE13383:
 23072              	.LBB13389:
 23073              	.LBI13389:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 23074              		.loc 11 356 7 is_stmt 1 view .LVU6005
 23075              	.LBB13390:
 23076              	.LBB13391:
 23077              	.LBI13391:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 23078              		.loc 11 340 7 view .LVU6006
 23079              	.LBB13392:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23080              		.loc 11 343 18 is_stmt 0 view .LVU6007
 23081 001e 8BB1     		cbz	r3, .L522
 23082              	.LVL1570:
 23083              	.LBB13393:
 23084              	.LBI13393:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 23085              		.loc 3 443 7 is_stmt 1 view .LVU6008
 23086              	.LBB13394:
 23087              	.LBI13394:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 765


 23088              		.loc 4 102 7 view .LVU6009
 23089              	.LBB13395:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 23090              		.loc 4 104 2 is_stmt 0 view .LVU6010
 23091 0020 A44A     		ldr	r2, .L537+12
 23092 0022 9342     		cmp	r3, r2
 23093 0024 0CD8     		bhi	.L526
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23094              		.loc 4 114 41 view .LVU6011
 23095 0026 03EB4303 		add	r3, r3, r3, lsl #1
 23096              	.LVL1571:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23097              		.loc 4 114 41 view .LVU6012
 23098 002a D800     		lsls	r0, r3, #3
 23099              	.LVL1572:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23100              		.loc 4 114 41 view .LVU6013
 23101 002c FFF7FEFF 		bl	_Znwj
 23102              	.LVL1573:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23103              		.loc 4 114 41 view .LVU6014
 23104 0030 0446     		mov	r4, r0
 23105              	.LVL1574:
 23106              	.L488:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23107              		.loc 4 114 41 view .LVU6015
 23108              	.LBE13395:
 23109              	.LBE13394:
 23110              	.LBE13393:
 23111              	.LBE13392:
 23112              	.LBE13391:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 23113              		.loc 11 358 2 view .LVU6016
 23114 0032 0F94     		str	r4, [sp, #60]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 23115              		.loc 11 359 2 view .LVU6017
 23116 0034 1094     		str	r4, [sp, #64]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23117              		.loc 11 360 59 view .LVU6018
 23118 0036 2644     		add	r6, r6, r4
 23119              	.LVL1575:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23120              		.loc 11 360 2 view .LVU6019
 23121 0038 1196     		str	r6, [sp, #68]
 23122              	.LVL1576:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23123              		.loc 11 360 2 view .LVU6020
 23124              	.LBE13390:
 23125              	.LBE13389:
 23126              	.LBE13382:
 23127              	.LBB13403:
 23128              	.LBI13403:
 23129              		.loc 5 153 7 is_stmt 1 view .LVU6021
 23130              	.LBB13404:
 23131              	.LBI13404:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23132              		.loc 4 89 7 view .LVU6022
ARM GAS  /tmp/ccL95Edz.s 			page 766


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23133              		.loc 4 89 7 is_stmt 0 view .LVU6023
 23134              	.LBE13404:
 23135              	.LBE13403:
 23136              	.LBB13405:
 23137              	.LBI13405:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 23138              		.loc 11 817 7 is_stmt 1 view .LVU6024
 23139              	.LBB13406:
 23140              	.LBB13407:
 23141              	.LBI13407:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23142              		.loc 13 806 7 view .LVU6025
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23143              		.loc 13 806 7 is_stmt 0 view .LVU6026
 23144              	.LBE13407:
 23145              	.LBE13406:
 23146              	.LBE13405:
 23147              	.LBB13408:
 23148              	.LBI13408:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 23149              		.loc 11 835 7 is_stmt 1 view .LVU6027
 23150              	.LBB13409:
 23151              	.LBB13410:
 23152              	.LBI13410:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23153              		.loc 13 806 7 view .LVU6028
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23154              		.loc 13 806 7 is_stmt 0 view .LVU6029
 23155              	.LBE13410:
 23156              	.LBE13409:
 23157              	.LBE13408:
 23158              	.LBB13411:
 23159              	.LBI13411:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23160              		.loc 11 273 7 is_stmt 1 view .LVU6030
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23161              		.loc 11 273 7 is_stmt 0 view .LVU6031
 23162              	.LBE13411:
 23163              	.LBB13412:
 23164              	.LBI13412:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 23165              		.loc 15 305 5 is_stmt 1 view .LVU6032
 23166              	.LBB13413:
 23167              	.LBB13414:
 23168              	.LBI13414:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 23169              		.loc 15 115 5 view .LVU6033
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 23170              		.loc 15 115 5 is_stmt 0 view .LVU6034
 23171 003a 2E68     		ldr	r6, [r5]
 23172              	.LVL1577:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 23173              		.loc 15 115 5 view .LVU6035
 23174 003c 6D68     		ldr	r5, [r5, #4]
 23175              	.LVL1578:
 23176              	.LBB13415:
ARM GAS  /tmp/ccL95Edz.s 			page 767


 23177              	.LBB13416:
 23178              	.LBI13416:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 23179              		.loc 15 76 9 is_stmt 1 view .LVU6036
 23180 003e 10E0     		b	.L491
 23181              	.LVL1579:
 23182              	.L526:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 23183              		.loc 15 76 9 is_stmt 0 view .LVU6037
 23184              	.LBE13416:
 23185              	.LBE13415:
 23186              	.LBE13414:
 23187              	.LBE13413:
 23188              	.LBE13412:
 23189              	.LBB13457:
 23190              	.LBB13402:
 23191              	.LBB13401:
 23192              	.LBB13400:
 23193              	.LBB13399:
 23194              	.LBB13398:
 23195              	.LBB13397:
 23196              	.LBB13396:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23197              		.loc 4 105 26 view .LVU6038
 23198 0040 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 23199              	.LVL1580:
 23200              	.L522:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23201              		.loc 4 105 26 view .LVU6039
 23202              	.LBE13396:
 23203              	.LBE13397:
 23204              	.LBE13398:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23205              		.loc 11 343 18 view .LVU6040
 23206 0044 0024     		movs	r4, #0
 23207 0046 F4E7     		b	.L488
 23208              	.LVL1581:
 23209              	.L527:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23210              		.loc 11 343 18 view .LVU6041
 23211              	.LBE13399:
 23212              	.LBE13400:
 23213              	.LBE13401:
 23214              	.LBE13402:
 23215              	.LBE13457:
 23216              	.LBB13458:
 23217              	.LBB13455:
 23218              	.LBB13453:
 23219              	.LBB13451:
 23220              	.LBB13449:
 23221              	.LBB13417:
 23222              	.LBB13418:
 23223              	.LBI13418:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 23224              		.loc 22 74 5 is_stmt 1 view .LVU6042
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 23225              		.loc 22 74 5 is_stmt 0 view .LVU6043
ARM GAS  /tmp/ccL95Edz.s 			page 768


 23226              	.LBE13418:
 23227              	.LBE13417:
 23228              	.LBE13449:
 23229              	.LBE13451:
 23230              	.LBE13453:
 23231              	.LBE13455:
 23232              	.LBE13458:
 23233              	.LBE13374:
 23234              	.LBE13373:
 23235              	.LBE13372:
 23236              		.loc 14 174 3 is_stmt 1 view .LVU6044
 23237              	.LBB13462:
 23238              	.LBB13461:
 23239              	.LBB13460:
 23240              	.LBB13459:
 23241              	.LBB13456:
 23242              	.LBB13454:
 23243              	.LBB13452:
 23244              	.LBB13450:
 23245              	.LBB13448:
 23246              	.LBB13444:
 23247              	.LBB13419:
 23248              	.LBI13419:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 23249              		.loc 2 448 7 view .LVU6045
 23250              	.LBB13420:
 23251              	.LBB13421:
 23252              	.LBI13421:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23253              		.loc 2 190 7 view .LVU6046
 23254              	.LBB13422:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 23255              		.loc 2 193 51 is_stmt 0 view .LVU6047
 23256 0048 04F10803 		add	r3, r4, #8
 23257              	.LVL1582:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 23258              		.loc 2 193 51 view .LVU6048
 23259              	.LBE13422:
 23260              	.LBE13421:
 23261              	.LBB13423:
 23262              	.LBI13423:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23263              		.loc 2 290 7 is_stmt 1 view .LVU6049
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23264              		.loc 2 290 7 is_stmt 0 view .LVU6050
 23265              	.LBE13423:
 23266              	.LBB13424:
 23267              	.LBI13424:
 23268              		.loc 19 97 19 is_stmt 1 view .LVU6051
 23269              	.LBB13425:
 23270              	.LBI13425:
 23271              		.loc 3 514 7 view .LVU6052
 23272              	.LBB13426:
 23273              	.LBI13426:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23274              		.loc 5 141 7 view .LVU6053
 23275              	.LBB13427:
ARM GAS  /tmp/ccL95Edz.s 			page 769


 23276              	.LBI13427:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23277              		.loc 4 83 7 view .LVU6054
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23278              		.loc 4 83 7 is_stmt 0 view .LVU6055
 23279              	.LBE13427:
 23280              	.LBE13426:
 23281              	.LBE13425:
 23282              	.LBE13424:
 23283              	.LBB13428:
 23284              	.LBI13428:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 23285              		.loc 2 159 2 is_stmt 1 view .LVU6056
 23286              	.LBB13429:
 23287              	.LBB13430:
 23288              	.LBI13430:
 23289              		.loc 9 99 5 view .LVU6057
 23290              		.loc 9 99 5 is_stmt 0 view .LVU6058
 23291              	.LBE13430:
 23292              	.LBB13431:
 23293              	.LBI13431:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23294              		.loc 5 141 7 is_stmt 1 view .LVU6059
 23295              	.LBB13432:
 23296              	.LBI13432:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23297              		.loc 4 83 7 view .LVU6060
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23298              		.loc 4 83 7 is_stmt 0 view .LVU6061
 23299              	.LBE13432:
 23300              	.LBE13431:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23301              		.loc 2 160 46 view .LVU6062
 23302 004c 2360     		str	r3, [r4]
 23303              	.LVL1583:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23304              		.loc 2 160 46 view .LVU6063
 23305              	.LBE13429:
 23306              	.LBE13428:
 23307              	.LBB13433:
 23308              	.LBI13433:
 23309              		.loc 5 153 7 is_stmt 1 view .LVU6064
 23310              	.LBB13434:
 23311              	.LBI13434:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23312              		.loc 4 89 7 view .LVU6065
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23313              		.loc 4 89 7 is_stmt 0 view .LVU6066
 23314              	.LBE13434:
 23315              	.LBE13433:
 23316              	.LBB13435:
 23317              	.LBI13435:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23318              		.loc 2 186 7 is_stmt 1 view .LVU6067
 23319              	.LBB13436:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23320              		.loc 2 187 28 is_stmt 0 view .LVU6068
ARM GAS  /tmp/ccL95Edz.s 			page 770


 23321 004e 3168     		ldr	r1, [r6]
 23322              	.LVL1584:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23323              		.loc 2 187 28 view .LVU6069
 23324              	.LBE13436:
 23325              	.LBE13435:
 23326              	.LBB13437:
 23327              	.LBI13437:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23328              		.loc 2 186 7 is_stmt 1 view .LVU6070
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23329              		.loc 2 186 7 is_stmt 0 view .LVU6071
 23330              	.LBE13437:
 23331              	.LBB13438:
 23332              	.LBI13438:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23333              		.loc 2 936 7 is_stmt 1 view .LVU6072
 23334              	.LBB13439:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23335              		.loc 2 937 16 is_stmt 0 view .LVU6073
 23336 0050 7268     		ldr	r2, [r6, #4]
 23337              	.LVL1585:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23338              		.loc 2 937 16 view .LVU6074
 23339              	.LBE13439:
 23340              	.LBE13438:
 23341              	.LBB13440:
 23342              	.LBI13440:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 23343              		.loc 2 263 9 is_stmt 1 view .LVU6075
 23344              	.LBB13441:
 23345              	.LBB13442:
 23346              	.LBI13442:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 23347              		.loc 2 243 9 view .LVU6076
 23348              	.LBB13443:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23349              		.loc 2 247 11 is_stmt 0 view .LVU6077
 23350 0052 4FF00003 		mov	r3, #0
 23351 0056 0A44     		add	r2, r2, r1
 23352              	.LVL1586:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23353              		.loc 2 247 11 view .LVU6078
 23354 0058 2046     		mov	r0, r4
 23355 005a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 23356              	.LVL1587:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23357              		.loc 2 247 11 view .LVU6079
 23358              	.LBE13443:
 23359              	.LBE13442:
 23360              	.LBE13441:
 23361              	.LBE13440:
 23362              	.LBE13420:
 23363              	.LBE13419:
 23364              	.LBE13444:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 23365              		.loc 15 82 8 is_stmt 1 view .LVU6080
ARM GAS  /tmp/ccL95Edz.s 			page 771


 23366              	.LBB13445:
 23367              	.LBI13445:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 23368              		.loc 13 827 7 view .LVU6081
 23369              	.LBB13446:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 23370              		.loc 13 829 2 is_stmt 0 view .LVU6082
 23371 005e 1836     		adds	r6, r6, #24
 23372              	.LVL1588:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 23373              		.loc 13 829 2 view .LVU6083
 23374              	.LBE13446:
 23375              	.LBE13445:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 23376              		.loc 15 82 8 view .LVU6084
 23377 0060 1834     		adds	r4, r4, #24
 23378              	.LVL1589:
 23379              	.L491:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 23380              		.loc 15 82 23 is_stmt 1 view .LVU6085
 23381              	.LBB13447:
 23382              	.LBI13447:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 23383              		.loc 13 907 5 view .LVU6086
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 23384              		.loc 13 907 5 is_stmt 0 view .LVU6087
 23385              	.LBE13447:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 23386              		.loc 15 82 23 view .LVU6088
 23387 0062 AE42     		cmp	r6, r5
 23388 0064 F0D1     		bne	.L527
 23389              	.LVL1590:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 23390              		.loc 15 82 23 view .LVU6089
 23391              	.LBE13448:
 23392              	.LBE13450:
 23393              	.LBE13452:
 23394              	.LBE13454:
 23395              	.LBE13456:
 23396              	.LBE13459:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 23397              		.loc 11 554 2 view .LVU6090
 23398 0066 1094     		str	r4, [sp, #64]
 23399              	.LVL1591:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 23400              		.loc 11 554 2 view .LVU6091
 23401              	.LBE13460:
 23402              	.LBE13461:
 23403              	.LBE13462:
  71:alohal/filesystem/filesystem.cpp ****     if (filename == "") {
 23404              		.loc 17 71 41 view .LVU6092
 23405 0068 0FAA     		add	r2, sp, #60
 23406 006a 3946     		mov	r1, r7
 23407 006c 09A8     		add	r0, sp, #36
 23408 006e FFF7FEFF 		bl	_ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES
 23409              	.LVL1592:
 23410              	.LBB13463:
ARM GAS  /tmp/ccL95Edz.s 			page 772


 23411              	.LBI13463:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 23412              		.loc 11 675 7 is_stmt 1 view .LVU6093
 23413              	.LBB13464:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 23414              		.loc 11 677 15 is_stmt 0 view .LVU6094
 23415 0072 0F9C     		ldr	r4, [sp, #60]
 23416 0074 109D     		ldr	r5, [sp, #64]
 23417              	.LVL1593:
 23418              	.LBB13465:
 23419              	.LBI13465:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23420              		.loc 11 273 7 is_stmt 1 view .LVU6095
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23421              		.loc 11 273 7 is_stmt 0 view .LVU6096
 23422              	.LBE13465:
 23423              	.LBB13466:
 23424              	.LBI13466:
 23425              		.loc 22 203 5 is_stmt 1 view .LVU6097
 23426 0076 02E0     		b	.L494
 23427              	.LVL1594:
 23428              	.L528:
 23429              	.LBB13467:
 23430              	.LBB13468:
 23431              	.LBB13469:
 23432              	.LBB13470:
 23433              	.LBB13471:
 23434              	.LBB13472:
 23435              	.LBB13473:
 23436              	.LBB13474:
 23437              	.LBB13475:
 23438              	.LBI13475:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 23439              		.loc 2 236 7 view .LVU6098
 23440              	.LBB13476:
 23441              	.LBB13477:
 23442              	.LBI13477:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 23443              		.loc 3 469 7 view .LVU6099
 23444              	.LBB13478:
 23445              	.LBI13478:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 23446              		.loc 4 119 7 view .LVU6100
 23447              	.LBB13479:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23448              		.loc 4 128 19 is_stmt 0 view .LVU6101
 23449 0078 FFF7FEFF 		bl	_ZdlPv
 23450              	.LVL1595:
 23451              	.L493:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23452              		.loc 4 128 19 view .LVU6102
 23453              	.LBE13479:
 23454              	.LBE13478:
 23455              	.LBE13477:
 23456              	.LBE13476:
 23457              	.LBE13475:
 23458              	.LBE13474:
ARM GAS  /tmp/ccL95Edz.s 			page 773


 23459              	.LBE13473:
 23460              	.LBB13485:
 23461              	.LBI13485:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23462              		.loc 2 150 14 is_stmt 1 view .LVU6103
 23463              	.LBB13486:
 23464              	.LBI13486:
 23465              		.loc 5 153 7 view .LVU6104
 23466              	.LBB13487:
 23467              	.LBI13487:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23468              		.loc 4 89 7 view .LVU6105
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23469              		.loc 4 89 7 is_stmt 0 view .LVU6106
 23470              	.LBE13487:
 23471              	.LBE13486:
 23472              	.LBE13485:
 23473              	.LBE13472:
 23474              	.LBE13471:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 23475              		.loc 22 107 4 is_stmt 1 view .LVU6107
 23476 007c 1834     		adds	r4, r4, #24
 23477              	.LVL1596:
 23478              	.L494:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 23479              		.loc 22 107 19 view .LVU6108
 23480 007e A542     		cmp	r5, r4
 23481 0080 05D0     		beq	.L492
 23482              	.LVL1597:
 23483              	.LBB13490:
 23484              	.LBI13471:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 23485              		.loc 22 97 5 view .LVU6109
 23486              	.LBB13489:
 23487              	.LBI13472:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 23488              		.loc 2 657 7 view .LVU6110
 23489              	.LBB13488:
 23490              	.LBI13473:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23491              		.loc 2 229 7 view .LVU6111
 23492              	.LBB13484:
 23493              	.LBB13480:
 23494              	.LBI13480:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 23495              		.loc 2 221 7 view .LVU6112
 23496              	.LBB13481:
 23497              	.LBI13481:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23498              		.loc 2 186 7 view .LVU6113
 23499              	.LBB13482:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23500              		.loc 2 187 28 is_stmt 0 view .LVU6114
 23501 0082 2346     		mov	r3, r4
 23502 0084 53F8080B 		ldr	r0, [r3], #8
 23503              	.LVL1598:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 774


 23504              		.loc 2 187 28 view .LVU6115
 23505              	.LBE13482:
 23506              	.LBE13481:
 23507              	.LBB13483:
 23508              	.LBI13483:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23509              		.loc 2 200 7 is_stmt 1 view .LVU6116
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23510              		.loc 2 200 7 is_stmt 0 view .LVU6117
 23511              	.LBE13483:
 23512              	.LBE13480:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 23513              		.loc 2 231 2 view .LVU6118
 23514 0088 9842     		cmp	r0, r3
 23515 008a F5D1     		bne	.L528
 23516 008c F6E7     		b	.L493
 23517              	.LVL1599:
 23518              	.L492:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 23519              		.loc 2 231 2 view .LVU6119
 23520              	.LBE13484:
 23521              	.LBE13488:
 23522              	.LBE13489:
 23523              	.LBE13490:
 23524              	.LBE13470:
 23525              	.LBE13469:
 23526              	.LBE13468:
 23527              	.LBE13467:
 23528              	.LBE13466:
 23529              	.LBB13491:
 23530              	.LBI13491:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 23531              		.loc 11 330 7 is_stmt 1 view .LVU6120
 23532              	.LBB13492:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 23533              		.loc 11 332 2 is_stmt 0 view .LVU6121
 23534 008e 0F98     		ldr	r0, [sp, #60]
 23535              	.LVL1600:
 23536              	.LBB13493:
 23537              	.LBI13493:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 23538              		.loc 11 347 7 is_stmt 1 view .LVU6122
 23539              	.LBB13494:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 23540              		.loc 11 350 2 is_stmt 0 view .LVU6123
 23541 0090 08B1     		cbz	r0, .L495
 23542              	.LVL1601:
 23543              	.LBB13495:
 23544              	.LBI13495:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 23545              		.loc 3 469 7 is_stmt 1 view .LVU6124
 23546              	.LBB13496:
 23547              	.LBB13497:
 23548              	.LBI13497:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 23549              		.loc 4 119 7 view .LVU6125
 23550              	.LBB13498:
ARM GAS  /tmp/ccL95Edz.s 			page 775


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23551              		.loc 4 128 19 is_stmt 0 view .LVU6126
 23552 0092 FFF7FEFF 		bl	_ZdlPv
 23553              	.LVL1602:
 23554              	.L495:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23555              		.loc 4 128 19 view .LVU6127
 23556              	.LBE13498:
 23557              	.LBE13497:
 23558              	.LBE13496:
 23559              	.LBE13495:
 23560              	.LBE13494:
 23561              	.LBE13493:
 23562              	.LBB13499:
 23563              	.LBI13499:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 23564              		.loc 11 125 14 is_stmt 1 view .LVU6128
 23565              	.LBB13500:
 23566              	.LBI13500:
 23567              		.loc 5 153 7 view .LVU6129
 23568              	.LBB13501:
 23569              	.LBI13501:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23570              		.loc 4 89 7 view .LVU6130
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23571              		.loc 4 89 7 is_stmt 0 view .LVU6131
 23572              	.LBE13501:
 23573              	.LBE13500:
 23574              	.LBE13499:
 23575              	.LBE13492:
 23576              	.LBE13491:
 23577              	.LBE13464:
 23578              	.LBE13463:
  72:alohal/filesystem/filesystem.cpp ****         return EINVAL;
 23579              		.loc 17 72 5 is_stmt 1 view .LVU6132
 23580              	.LBB13502:
 23581              	.LBI13502:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 23582              		.loc 2 6175 5 view .LVU6133
 23583              	.LBB13503:
 23584              		.loc 2 6177 35 is_stmt 0 view .LVU6134
 23585 0096 8849     		ldr	r1, .L537+16
 23586 0098 09A8     		add	r0, sp, #36
 23587              	.LVL1603:
 23588              		.loc 2 6177 35 view .LVU6135
 23589 009a FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 23590              	.LVL1604:
 23591              		.loc 2 6177 35 view .LVU6136
 23592              	.LBE13503:
 23593              	.LBE13502:
  72:alohal/filesystem/filesystem.cpp ****         return EINVAL;
 23594              		.loc 17 72 5 view .LVU6137
 23595 009e 0028     		cmp	r0, #0
 23596 00a0 00F0FD80 		beq	.L523
  76:alohal/filesystem/filesystem.cpp ****     if (target_file == nullptr) {
 23597              		.loc 17 76 5 is_stmt 1 view .LVU6138
 23598              	.LVL1605:
ARM GAS  /tmp/ccL95Edz.s 			page 776


 23599              	.LBB13504:
 23600              	.LBI13504:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 23601              		.loc 2 448 7 view .LVU6139
 23602              	.LBB13505:
 23603              	.LBB13506:
 23604              	.LBB13507:
 23605              	.LBI13507:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23606              		.loc 2 190 7 view .LVU6140
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23607              		.loc 2 190 7 is_stmt 0 view .LVU6141
 23608              	.LBE13507:
 23609              	.LBB13508:
 23610              	.LBI13508:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23611              		.loc 2 290 7 is_stmt 1 view .LVU6142
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23612              		.loc 2 290 7 is_stmt 0 view .LVU6143
 23613              	.LBE13508:
 23614              	.LBB13509:
 23615              	.LBI13509:
 23616              		.loc 19 97 19 is_stmt 1 view .LVU6144
 23617              	.LBB13510:
 23618              	.LBI13510:
 23619              		.loc 3 514 7 view .LVU6145
 23620              	.LBB13511:
 23621              	.LBI13511:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23622              		.loc 5 141 7 view .LVU6146
 23623              	.LBB13512:
 23624              	.LBI13512:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23625              		.loc 4 83 7 view .LVU6147
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23626              		.loc 4 83 7 is_stmt 0 view .LVU6148
 23627              	.LBE13512:
 23628              	.LBE13511:
 23629              	.LBE13510:
 23630              	.LBE13509:
 23631              	.LBB13513:
 23632              	.LBI13513:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 23633              		.loc 2 159 2 is_stmt 1 view .LVU6149
 23634              	.LBB13514:
 23635              	.LBB13515:
 23636              	.LBB13516:
 23637              	.LBI13516:
 23638              		.loc 9 99 5 view .LVU6150
 23639              		.loc 9 99 5 is_stmt 0 view .LVU6151
 23640              	.LBE13516:
 23641              	.LBB13517:
 23642              	.LBI13517:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23643              		.loc 5 141 7 is_stmt 1 view .LVU6152
 23644              	.LBB13518:
 23645              	.LBI13518:
ARM GAS  /tmp/ccL95Edz.s 			page 777


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23646              		.loc 4 83 7 view .LVU6153
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23647              		.loc 4 83 7 is_stmt 0 view .LVU6154
 23648              	.LBE13518:
 23649              	.LBE13517:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23650              		.loc 2 160 46 view .LVU6155
 23651 00a4 14AD     		add	r5, sp, #80
 23652              	.LVL1606:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23653              		.loc 2 160 46 view .LVU6156
 23654 00a6 1295     		str	r5, [sp, #72]
 23655              	.LVL1607:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23656              		.loc 2 160 46 view .LVU6157
 23657              	.LBE13515:
 23658              	.LBE13514:
 23659              	.LBE13513:
 23660              	.LBB13519:
 23661              	.LBI13519:
 23662              		.loc 5 153 7 is_stmt 1 view .LVU6158
 23663              	.LBB13520:
 23664              	.LBI13520:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23665              		.loc 4 89 7 view .LVU6159
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23666              		.loc 4 89 7 is_stmt 0 view .LVU6160
 23667              	.LBE13520:
 23668              	.LBE13519:
 23669              	.LBB13521:
 23670              	.LBI13521:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23671              		.loc 2 186 7 is_stmt 1 view .LVU6161
 23672              	.LBB13522:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23673              		.loc 2 187 28 is_stmt 0 view .LVU6162
 23674 00a8 0999     		ldr	r1, [sp, #36]
 23675              	.LVL1608:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23676              		.loc 2 187 28 view .LVU6163
 23677              	.LBE13522:
 23678              	.LBE13521:
 23679              	.LBB13523:
 23680              	.LBI13523:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23681              		.loc 2 186 7 is_stmt 1 view .LVU6164
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23682              		.loc 2 186 7 is_stmt 0 view .LVU6165
 23683              	.LBE13523:
 23684              	.LBB13524:
 23685              	.LBI13524:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23686              		.loc 2 936 7 is_stmt 1 view .LVU6166
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23687              		.loc 2 936 7 is_stmt 0 view .LVU6167
 23688              	.LBE13524:
ARM GAS  /tmp/ccL95Edz.s 			page 778


 23689              	.LBB13525:
 23690              	.LBI13525:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 23691              		.loc 2 263 9 is_stmt 1 view .LVU6168
 23692              	.LBB13526:
 23693              	.LBB13527:
 23694              	.LBI13527:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 23695              		.loc 2 243 9 view .LVU6169
 23696              	.LBB13528:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23697              		.loc 2 247 11 is_stmt 0 view .LVU6170
 23698 00aa 4FF00003 		mov	r3, #0
 23699 00ae 0A9A     		ldr	r2, [sp, #40]
 23700 00b0 0A44     		add	r2, r2, r1
 23701              	.LVL1609:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23702              		.loc 2 247 11 view .LVU6171
 23703 00b2 12A8     		add	r0, sp, #72
 23704              	.LVL1610:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23705              		.loc 2 247 11 view .LVU6172
 23706 00b4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 23707              	.LVL1611:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23708              		.loc 2 247 11 view .LVU6173
 23709              	.LBE13528:
 23710              	.LBE13527:
 23711              	.LBE13526:
 23712              	.LBE13525:
 23713              	.LBE13506:
 23714              	.LBE13505:
 23715              	.LBE13504:
  76:alohal/filesystem/filesystem.cpp ****     if (target_file == nullptr) {
 23716              		.loc 17 76 58 view .LVU6174
 23717 00b8 12A9     		add	r1, sp, #72
 23718 00ba 3846     		mov	r0, r7
 23719 00bc FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 23720              	.LVL1612:
 23721 00c0 0446     		mov	r4, r0
 23722              	.LVL1613:
 23723              	.LBB13529:
 23724              	.LBI13529:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 23725              		.loc 2 657 7 is_stmt 1 view .LVU6175
 23726              	.LBB13530:
 23727              	.LBI13530:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23728              		.loc 2 229 7 view .LVU6176
 23729              	.LBB13531:
 23730              	.LBB13532:
 23731              	.LBI13532:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 23732              		.loc 2 221 7 view .LVU6177
 23733              	.LBB13533:
 23734              	.LBI13533:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 779


 23735              		.loc 2 186 7 view .LVU6178
 23736              	.LBB13534:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23737              		.loc 2 187 28 is_stmt 0 view .LVU6179
 23738 00c2 1298     		ldr	r0, [sp, #72]
 23739              	.LVL1614:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23740              		.loc 2 187 28 view .LVU6180
 23741              	.LBE13534:
 23742              	.LBE13533:
 23743              	.LBB13535:
 23744              	.LBI13535:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23745              		.loc 2 200 7 is_stmt 1 view .LVU6181
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23746              		.loc 2 200 7 is_stmt 0 view .LVU6182
 23747              	.LBE13535:
 23748              	.LBE13532:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 23749              		.loc 2 231 2 view .LVU6183
 23750 00c4 A842     		cmp	r0, r5
 23751 00c6 01D0     		beq	.L497
 23752              	.LVL1615:
 23753              	.LBB13536:
 23754              	.LBI13536:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 23755              		.loc 2 236 7 is_stmt 1 view .LVU6184
 23756              	.LBB13537:
 23757              	.LBB13538:
 23758              	.LBI13538:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 23759              		.loc 3 469 7 view .LVU6185
 23760              	.LBB13539:
 23761              	.LBI13539:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 23762              		.loc 4 119 7 view .LVU6186
 23763              	.LBB13540:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23764              		.loc 4 128 19 is_stmt 0 view .LVU6187
 23765 00c8 FFF7FEFF 		bl	_ZdlPv
 23766              	.LVL1616:
 23767              	.L497:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23768              		.loc 4 128 19 view .LVU6188
 23769              	.LBE13540:
 23770              	.LBE13539:
 23771              	.LBE13538:
 23772              	.LBE13537:
 23773              	.LBE13536:
 23774              	.LBE13531:
 23775              	.LBE13530:
 23776              	.LBB13541:
 23777              	.LBI13541:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23778              		.loc 2 150 14 is_stmt 1 view .LVU6189
 23779              	.LBB13542:
 23780              	.LBI13542:
ARM GAS  /tmp/ccL95Edz.s 			page 780


 23781              		.loc 5 153 7 view .LVU6190
 23782              	.LBB13543:
 23783              	.LBI13543:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23784              		.loc 4 89 7 view .LVU6191
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23785              		.loc 4 89 7 is_stmt 0 view .LVU6192
 23786              	.LBE13543:
 23787              	.LBE13542:
 23788              	.LBE13541:
 23789              	.LBE13529:
  77:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is unreachable - null returned \r\n");
 23790              		.loc 17 77 5 is_stmt 1 view .LVU6193
 23791 00cc 24B3     		cbz	r4, .L529
  82:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a file \r\n");
 23792              		.loc 17 82 5 view .LVU6194
 23793              	.LVL1617:
 23794              	.LBB13544:
 23795              	.LBI13544:
  66:alohal/filesystem/entry.hpp **** 
 23796              		.loc 1 66 23 view .LVU6195
 23797              	.LBB13545:
  66:alohal/filesystem/entry.hpp **** 
 23798              		.loc 1 66 34 view .LVU6196
  66:alohal/filesystem/entry.hpp **** 
 23799              		.loc 1 66 41 is_stmt 0 view .LVU6197
 23800 00ce 6368     		ldr	r3, [r4, #4]
 23801              	.LVL1618:
  66:alohal/filesystem/entry.hpp **** 
 23802              		.loc 1 66 41 view .LVU6198
 23803              	.LBE13545:
 23804              	.LBE13544:
  82:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a file \r\n");
 23805              		.loc 17 82 5 view .LVU6199
 23806 00d0 022B     		cmp	r3, #2
 23807 00d2 37D1     		bne	.L530
  87:alohal/filesystem/filesystem.cpp ****     if (content.substr(content.length()-2,content.length()) != "\r\n") {
 23808              		.loc 17 87 5 is_stmt 1 view .LVU6200
 23809              	.LVL1619:
 23810              	.LBB13546:
 23811              	.LBI13546:
  64:alohal/filesystem/file.hpp **** 
  65:alohal/filesystem/file.hpp ****     /**
  66:alohal/filesystem/file.hpp ****      * @brief Construct a new File object which content is saved in RAM
  67:alohal/filesystem/file.hpp ****      *
  68:alohal/filesystem/file.hpp ****      * @param name      Name of file
  69:alohal/filesystem/file.hpp ****      * @param content   Default content of file, can be empty
  70:alohal/filesystem/file.hpp ****      */
  71:alohal/filesystem/file.hpp ****     File(string name, string content = "") :
  72:alohal/filesystem/file.hpp ****         location(Location::RAM),
  73:alohal/filesystem/file.hpp ****         content(content){
  74:alohal/filesystem/file.hpp ****         this->type = Type::File;
  75:alohal/filesystem/file.hpp ****         this->name = name;
  76:alohal/filesystem/file.hpp ****     }
  77:alohal/filesystem/file.hpp **** 
  78:alohal/filesystem/file.hpp ****     /**
  79:alohal/filesystem/file.hpp ****      * @brief   Construct a new File object which is virtual type
ARM GAS  /tmp/ccL95Edz.s 			page 781


  80:alohal/filesystem/file.hpp ****      *          Used for function which returns text value (string)
  81:alohal/filesystem/file.hpp ****      *
  82:alohal/filesystem/file.hpp ****      * @param name      Name of file
  83:alohal/filesystem/file.hpp ****      * @param object    Pointer to object which will provide data for virtual file
  84:alohal/filesystem/file.hpp ****      * @param method    Method of object which will provide data
  85:alohal/filesystem/file.hpp ****      */
  86:alohal/filesystem/file.hpp ****     File(string name, class_T *object, string (class_T::*method) (void)) :
  87:alohal/filesystem/file.hpp ****         virtual_obtainer_text(new Invocation_wrapper<class_T, string, void>(object, method)),
  88:alohal/filesystem/file.hpp ****         location(Location::Virtual){
  89:alohal/filesystem/file.hpp ****         this->type = Type::File;
  90:alohal/filesystem/file.hpp ****         this->name = name;
  91:alohal/filesystem/file.hpp ****     }
  92:alohal/filesystem/file.hpp **** 
  93:alohal/filesystem/file.hpp ****     /**
  94:alohal/filesystem/file.hpp ****      * @brief   Construct a new File object which is virtual type
  95:alohal/filesystem/file.hpp ****      *          Used for function which returns numerical value (double)
  96:alohal/filesystem/file.hpp ****      *
  97:alohal/filesystem/file.hpp ****      * @param name      Name of file
  98:alohal/filesystem/file.hpp ****      * @param object    Pointer to object which will provide data for virtual file
  99:alohal/filesystem/file.hpp ****      * @param method    Method of object which will provide data
 100:alohal/filesystem/file.hpp ****      */
 101:alohal/filesystem/file.hpp ****     File(string name, class_T *object, double (class_T::*method) (void)) :
 102:alohal/filesystem/file.hpp ****         virtual_obtainer_numerical(new Invocation_wrapper<class_T, double, void>(object, method)),
 103:alohal/filesystem/file.hpp ****         location(Location::Virtual){
 104:alohal/filesystem/file.hpp ****         this->type = Type::File;
 105:alohal/filesystem/file.hpp ****         this->name = name;
 106:alohal/filesystem/file.hpp ****     }
 107:alohal/filesystem/file.hpp **** 
 108:alohal/filesystem/file.hpp ****     /**
 109:alohal/filesystem/file.hpp ****      * @brief Write content of file, used when content is saved in RAM
 110:alohal/filesystem/file.hpp ****      *
 111:alohal/filesystem/file.hpp ****      * @param content   Content to write
 112:alohal/filesystem/file.hpp ****      * @return int      0 if success, -1 when invalid Location type
 113:alohal/filesystem/file.hpp ****      */
 114:alohal/filesystem/file.hpp ****     int Write(string content){
 115:alohal/filesystem/file.hpp ****         if (location != Location::RAM) {
 116:alohal/filesystem/file.hpp ****             return -1;
 117:alohal/filesystem/file.hpp ****         }
 118:alohal/filesystem/file.hpp **** 
 119:alohal/filesystem/file.hpp ****         this->content.assign(content);
 120:alohal/filesystem/file.hpp ****         return 0;
 121:alohal/filesystem/file.hpp ****     }
 122:alohal/filesystem/file.hpp **** 
 123:alohal/filesystem/file.hpp ****     /**
 124:alohal/filesystem/file.hpp ****      * @brief Return content of file, if file is virtual, will call method for obtaining informatio
 125:alohal/filesystem/file.hpp ****      *
 126:alohal/filesystem/file.hpp ****      * @return string Content of file
 127:alohal/filesystem/file.hpp ****      */
 128:alohal/filesystem/file.hpp ****     string Read() const {
 23812              		.loc 6 128 12 view .LVU6201
 23813              	.LBB13547:
 129:alohal/filesystem/file.hpp ****         if (location == Location::RAM) {
 23814              		.loc 6 129 13 is_stmt 0 view .LVU6202
 23815 00d4 E36A     		ldr	r3, [r4, #44]
 23816              		.loc 6 129 9 view .LVU6203
 23817 00d6 002B     		cmp	r3, #0
 23818 00d8 4AD0     		beq	.L531
ARM GAS  /tmp/ccL95Edz.s 			page 782


 130:alohal/filesystem/file.hpp ****             return content;
 131:alohal/filesystem/file.hpp ****         } else if (location == Location::Virtual && (virtual_obtainer_text != nullptr)) {
 23819              		.loc 6 131 16 view .LVU6204
 23820 00da 022B     		cmp	r3, #2
 23821 00dc 53D0     		beq	.L532
 23822              	.L504:
 132:alohal/filesystem/file.hpp ****             return virtual_obtainer_text->Invoke();
 133:alohal/filesystem/file.hpp ****         } else if (location == Location::Virtual && (virtual_obtainer_numerical != nullptr)) {
 23823              		.loc 6 133 16 view .LVU6205
 23824 00de 022B     		cmp	r3, #2
 23825 00e0 71D1     		bne	.L509
 23826              		.loc 6 133 54 view .LVU6206
 23827 00e2 A36A     		ldr	r3, [r4, #40]
 23828              		.loc 6 133 50 view .LVU6207
 23829 00e4 002B     		cmp	r3, #0
 23830 00e6 6ED0     		beq	.L509
 23831              	.LVL1620:
 23832              	.LBB13548:
 23833              	.LBI13548:
 23834              		.file 24 "alohal/misc/invocation_wrapper.hpp"
   1:alohal/misc/invocation_wrapper.hpp **** /**
   2:alohal/misc/invocation_wrapper.hpp ****  * @file invocation_wrapper.hpp
   3:alohal/misc/invocation_wrapper.hpp ****  * @author Petr Malan√≠k (TheColonelYoung(at)gmail(dot)com)
   4:alohal/misc/invocation_wrapper.hpp ****  * @version 0.3
   5:alohal/misc/invocation_wrapper.hpp ****  * @date 10.09.2019
   6:alohal/misc/invocation_wrapper.hpp ****  */
   7:alohal/misc/invocation_wrapper.hpp **** 
   8:alohal/misc/invocation_wrapper.hpp **** #pragma once
   9:alohal/misc/invocation_wrapper.hpp **** 
  10:alohal/misc/invocation_wrapper.hpp **** #include <functional>
  11:alohal/misc/invocation_wrapper.hpp **** 
  12:alohal/misc/invocation_wrapper.hpp **** /**
  13:alohal/misc/invocation_wrapper.hpp ****  * @brief   Base class for Invocation_wrapper, this class is used when inherited class
  14:alohal/misc/invocation_wrapper.hpp ****  *              Invocation_wrapper is saved to vector and have different class template
  15:alohal/misc/invocation_wrapper.hpp ****  *          Vector only needs to define return type and type of argument
  16:alohal/misc/invocation_wrapper.hpp ****  *
  17:alohal/misc/invocation_wrapper.hpp ****  * @tparam return_T     Template for type of returned value
  18:alohal/misc/invocation_wrapper.hpp ****  * @tparam args_T       Template for type of argument
  19:alohal/misc/invocation_wrapper.hpp ****  */
  20:alohal/misc/invocation_wrapper.hpp **** template <typename return_T, typename args_T>
  21:alohal/misc/invocation_wrapper.hpp **** class Invocation_wrapper_base {
  22:alohal/misc/invocation_wrapper.hpp **** public:
  23:alohal/misc/invocation_wrapper.hpp ****     Invocation_wrapper_base() = default;
  24:alohal/misc/invocation_wrapper.hpp ****     virtual ~Invocation_wrapper_base() = default;
  25:alohal/misc/invocation_wrapper.hpp ****     virtual return_T Invoke(args_T arg) const { return return_T(); };
  26:alohal/misc/invocation_wrapper.hpp ****     virtual bool operator == (const Invocation_wrapper_base<return_T, args_T> & compare) const { re
  27:alohal/misc/invocation_wrapper.hpp **** };
  28:alohal/misc/invocation_wrapper.hpp **** 
  29:alohal/misc/invocation_wrapper.hpp **** /**
  30:alohal/misc/invocation_wrapper.hpp ****  * @brief   Same as Invocation_wrapper_base<return_T, args_T> but as argument type is used void
  31:alohal/misc/invocation_wrapper.hpp ****  *          Specialization of templated class above
  32:alohal/misc/invocation_wrapper.hpp ****  *
  33:alohal/misc/invocation_wrapper.hpp ****  * @tparam return_T Template for type of returned value
  34:alohal/misc/invocation_wrapper.hpp ****  */
  35:alohal/misc/invocation_wrapper.hpp **** template <typename return_T>
  36:alohal/misc/invocation_wrapper.hpp **** class Invocation_wrapper_base<return_T, void> {
  37:alohal/misc/invocation_wrapper.hpp **** public:
ARM GAS  /tmp/ccL95Edz.s 			page 783


  38:alohal/misc/invocation_wrapper.hpp ****     Invocation_wrapper_base() = default;
  39:alohal/misc/invocation_wrapper.hpp ****     virtual ~Invocation_wrapper_base() = default;
  40:alohal/misc/invocation_wrapper.hpp ****     virtual return_T Invoke() const { return return_T(); };
  41:alohal/misc/invocation_wrapper.hpp ****     virtual bool operator == (const Invocation_wrapper_base<return_T, void> & compare) const { retu
  42:alohal/misc/invocation_wrapper.hpp **** };
  43:alohal/misc/invocation_wrapper.hpp **** 
  44:alohal/misc/invocation_wrapper.hpp **** 
  45:alohal/misc/invocation_wrapper.hpp **** /**
  46:alohal/misc/invocation_wrapper.hpp ****  * @brief   This wrapper hold pointer to object and method. Method must be assigned to class from w
  47:alohal/misc/invocation_wrapper.hpp ****  *          Invoking of wrapper will pass arguments to stored method or pointer and then will run i
  48:alohal/misc/invocation_wrapper.hpp ****  *          After is encapsulated method of class done, will return value from it.
  49:alohal/misc/invocation_wrapper.hpp ****  *          Contains special variables for methods, which argument is void
  50:alohal/misc/invocation_wrapper.hpp ****  *
  51:alohal/misc/invocation_wrapper.hpp ****  * @tparam class_T   Type of class which is stored inside this wrapper
  52:alohal/misc/invocation_wrapper.hpp ****  * @tparam return_T  Type which will be returned from wrapped method or function
  53:alohal/misc/invocation_wrapper.hpp ****  * @tparam args_T    Type of input argument of method or function
  54:alohal/misc/invocation_wrapper.hpp ****  */
  55:alohal/misc/invocation_wrapper.hpp **** template <typename class_T, typename return_T, typename args_T>
  56:alohal/misc/invocation_wrapper.hpp **** class Invocation_wrapper : public Invocation_wrapper_base<return_T, args_T>
  57:alohal/misc/invocation_wrapper.hpp **** {
  58:alohal/misc/invocation_wrapper.hpp **** private:
  59:alohal/misc/invocation_wrapper.hpp ****     /**
  60:alohal/misc/invocation_wrapper.hpp ****      * @brief Pointer to object on which will be method invocated
  61:alohal/misc/invocation_wrapper.hpp ****      */
  62:alohal/misc/invocation_wrapper.hpp ****     class_T *object_ptr = nullptr;
  63:alohal/misc/invocation_wrapper.hpp **** 
  64:alohal/misc/invocation_wrapper.hpp ****     /**
  65:alohal/misc/invocation_wrapper.hpp ****      * @brief pointer to method of class, which will be invocated on saved object
  66:alohal/misc/invocation_wrapper.hpp ****      */
  67:alohal/misc/invocation_wrapper.hpp ****     return_T (class_T::*method_pointer)(args_T args) = nullptr;
  68:alohal/misc/invocation_wrapper.hpp **** 
  69:alohal/misc/invocation_wrapper.hpp **** public:
  70:alohal/misc/invocation_wrapper.hpp ****     /**
  71:alohal/misc/invocation_wrapper.hpp ****      * @brief Construct a new Invocation_wrapper object which holds object and his class method
  72:alohal/misc/invocation_wrapper.hpp ****      *
  73:alohal/misc/invocation_wrapper.hpp ****      * @param object    Pointer to object which will be stored
  74:alohal/misc/invocation_wrapper.hpp ****      * @param method    Cointer to class method which can bee Invoked on object
  75:alohal/misc/invocation_wrapper.hpp ****      */
  76:alohal/misc/invocation_wrapper.hpp ****     Invocation_wrapper(class_T *object, return_T (class_T::*method) (args_T args)) :
  77:alohal/misc/invocation_wrapper.hpp ****         object_ptr(object), method_pointer(method)
  78:alohal/misc/invocation_wrapper.hpp ****     { }
  79:alohal/misc/invocation_wrapper.hpp **** 
  80:alohal/misc/invocation_wrapper.hpp ****     /**
  81:alohal/misc/invocation_wrapper.hpp ****      * @brief Invoke method on saved object or call saved function
  82:alohal/misc/invocation_wrapper.hpp ****      *
  83:alohal/misc/invocation_wrapper.hpp ****      * @param args          Arguments for encapsulated method
  84:alohal/misc/invocation_wrapper.hpp ****      * @return return_T     Value returned from encapsulated method
  85:alohal/misc/invocation_wrapper.hpp ****      */
  86:alohal/misc/invocation_wrapper.hpp ****     return_T Invoke(args_T args) const override final {
  87:alohal/misc/invocation_wrapper.hpp ****         if (object_ptr) {
  88:alohal/misc/invocation_wrapper.hpp ****             return (*object_ptr.*method_pointer)(args);
  89:alohal/misc/invocation_wrapper.hpp ****         } else {    // Return default value of type
  90:alohal/misc/invocation_wrapper.hpp ****             return return_T();
  91:alohal/misc/invocation_wrapper.hpp ****         }
  92:alohal/misc/invocation_wrapper.hpp ****     }
  93:alohal/misc/invocation_wrapper.hpp **** 
  94:alohal/misc/invocation_wrapper.hpp ****     /**
ARM GAS  /tmp/ccL95Edz.s 			page 784


  95:alohal/misc/invocation_wrapper.hpp ****      * @brief   Perform comparission between two objects of class Invocation_wrapper_base,
  96:alohal/misc/invocation_wrapper.hpp ****      *              this operator is inherit and overloaded from base class
  97:alohal/misc/invocation_wrapper.hpp ****      *          Comparing object is cast to Invocation_wrapper
  98:alohal/misc/invocation_wrapper.hpp ****      *
  99:alohal/misc/invocation_wrapper.hpp ****      * @param compare   Right side of comparission
 100:alohal/misc/invocation_wrapper.hpp ****      * @return true     Object are same
 101:alohal/misc/invocation_wrapper.hpp ****      * @return false    Object are different
 102:alohal/misc/invocation_wrapper.hpp ****      */
 103:alohal/misc/invocation_wrapper.hpp ****     bool operator == (const Invocation_wrapper_base<return_T, args_T> & compare) const override fin
 104:alohal/misc/invocation_wrapper.hpp ****         auto compare_derivated = reinterpret_cast<const Invocation_wrapper<class_T, return_T, args_
 105:alohal/misc/invocation_wrapper.hpp ****         return (*this) == compare_derivated;
 106:alohal/misc/invocation_wrapper.hpp ****     }
 107:alohal/misc/invocation_wrapper.hpp **** 
 108:alohal/misc/invocation_wrapper.hpp ****     /**
 109:alohal/misc/invocation_wrapper.hpp ****      * @brief Perform comparission based on pointer to saved object and pointer to method
 110:alohal/misc/invocation_wrapper.hpp ****      *
 111:alohal/misc/invocation_wrapper.hpp ****      * @param compare   Right side of comparission
 112:alohal/misc/invocation_wrapper.hpp ****      * @return true     Object are same
 113:alohal/misc/invocation_wrapper.hpp ****      * @return false    Object are different
 114:alohal/misc/invocation_wrapper.hpp ****      */
 115:alohal/misc/invocation_wrapper.hpp ****     bool operator == (const Invocation_wrapper<class_T, return_T, args_T> & compare) const {
 116:alohal/misc/invocation_wrapper.hpp ****         return (this->object_ptr == compare.object_ptr) && (this->method_pointer == compare.method_
 117:alohal/misc/invocation_wrapper.hpp ****     }
 118:alohal/misc/invocation_wrapper.hpp **** };
 119:alohal/misc/invocation_wrapper.hpp **** 
 120:alohal/misc/invocation_wrapper.hpp **** 
 121:alohal/misc/invocation_wrapper.hpp **** /**
 122:alohal/misc/invocation_wrapper.hpp ****  * @brief   Specialized version of Invocation_wrapper which is used when method receive no argument
 123:alohal/misc/invocation_wrapper.hpp ****  *
 124:alohal/misc/invocation_wrapper.hpp ****  * @tparam class_T   Type of class which is stored inside this wrapper
 125:alohal/misc/invocation_wrapper.hpp ****  * @tparam return_T  Type which will be returned from wrapped method or function
 126:alohal/misc/invocation_wrapper.hpp ****  */
 127:alohal/misc/invocation_wrapper.hpp **** template <typename class_T, typename return_T>
 128:alohal/misc/invocation_wrapper.hpp **** class Invocation_wrapper<class_T, return_T, void> : public Invocation_wrapper_base<return_T, void>
 129:alohal/misc/invocation_wrapper.hpp **** {
 130:alohal/misc/invocation_wrapper.hpp **** private:
 131:alohal/misc/invocation_wrapper.hpp ****     /**
 132:alohal/misc/invocation_wrapper.hpp ****      * @brief Pointer to object on which will be method invocated
 133:alohal/misc/invocation_wrapper.hpp ****      */
 134:alohal/misc/invocation_wrapper.hpp ****     class_T *object_ptr = nullptr;
 135:alohal/misc/invocation_wrapper.hpp **** 
 136:alohal/misc/invocation_wrapper.hpp ****     /**
 137:alohal/misc/invocation_wrapper.hpp ****      * @brief pointer to method of class, which will be invocated on saved object
 138:alohal/misc/invocation_wrapper.hpp ****      */
 139:alohal/misc/invocation_wrapper.hpp ****     return_T (class_T::*method_pointer)(void) = nullptr;
 140:alohal/misc/invocation_wrapper.hpp **** 
 141:alohal/misc/invocation_wrapper.hpp **** public:
 142:alohal/misc/invocation_wrapper.hpp ****     /**
 143:alohal/misc/invocation_wrapper.hpp ****      * @brief   Construct a new Invocation_wrapper object which holds object and his class method
 144:alohal/misc/invocation_wrapper.hpp ****      *          This variant is used when method receive void as parametr
 145:alohal/misc/invocation_wrapper.hpp ****      *
 146:alohal/misc/invocation_wrapper.hpp ****      * @param object    Pointer to object which will be stored
 147:alohal/misc/invocation_wrapper.hpp ****      * @param method    Cointer to class method which can bee Invoked on object
 148:alohal/misc/invocation_wrapper.hpp ****      */
 149:alohal/misc/invocation_wrapper.hpp ****     Invocation_wrapper(class_T *object, return_T (class_T::*method) (void)) :
 150:alohal/misc/invocation_wrapper.hpp ****         object_ptr(object), method_pointer(method)
 151:alohal/misc/invocation_wrapper.hpp ****     { }
ARM GAS  /tmp/ccL95Edz.s 			page 785


 152:alohal/misc/invocation_wrapper.hpp **** 
 153:alohal/misc/invocation_wrapper.hpp ****     /**
 154:alohal/misc/invocation_wrapper.hpp ****      * @brief   Invoke method on saved object
 155:alohal/misc/invocation_wrapper.hpp ****      *          This variant is used when method receive void as parametr
 156:alohal/misc/invocation_wrapper.hpp ****      *
 157:alohal/misc/invocation_wrapper.hpp ****      * @return return_T     Value returned from encapsulated method
 158:alohal/misc/invocation_wrapper.hpp ****      */
 159:alohal/misc/invocation_wrapper.hpp ****     return_T Invoke() const override final {
 23835              		.loc 24 159 14 is_stmt 1 view .LVU6208
 23836              	.LBB13549:
 160:alohal/misc/invocation_wrapper.hpp ****         if (object_ptr) {
 23837              		.loc 24 160 13 is_stmt 0 view .LVU6209
 23838 00e8 5A68     		ldr	r2, [r3, #4]
 23839              		.loc 24 160 9 view .LVU6210
 23840 00ea 002A     		cmp	r2, #0
 23841 00ec 68D0     		beq	.L524
 161:alohal/misc/invocation_wrapper.hpp ****             return (*object_ptr.*method_pointer)();
 23842              		.loc 24 161 49 view .LVU6211
 23843 00ee D868     		ldr	r0, [r3, #12]
 23844 00f0 10F0010F 		tst	r0, #1
 23845 00f4 62D0     		beq	.L511
 23846 00f6 4110     		asrs	r1, r0, #1
 23847 00f8 5158     		ldr	r1, [r2, r1]
 23848 00fa 9B68     		ldr	r3, [r3, #8]
 23849              	.LVL1621:
 23850              		.loc 24 161 49 view .LVU6212
 23851 00fc CB58     		ldr	r3, [r1, r3]
 23852              	.L512:
 23853 00fe 02EB6000 		add	r0, r2, r0, asr #1
 23854 0102 9847     		blx	r3
 23855              	.LVL1622:
 23856              	.L510:
 23857              		.loc 24 161 49 view .LVU6213
 23858              	.LBE13549:
 23859              	.LBE13548:
 23860              	.LBB13551:
 23861              	.LBI13551:
6178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator !=
6180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
ARM GAS  /tmp/ccL95Edz.s 			page 786


6198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
6207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator <
6218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
6233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
6245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<(const _CharT* __lhs,
6252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 787


6255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator >
6256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string follows string.
6258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string follows C string.
6271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string follows string.
6283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>(const _CharT* __lhs,
6290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator <=
6294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
6296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
ARM GAS  /tmp/ccL95Edz.s 			page 788


6312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
6328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator >=
6332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
6334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
6366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 789


6369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
6371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline void
6378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { __lhs.swap(__rhs); }
6382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Read stream into a string.
6386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __is  Input stream.
6387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the input stream.
6389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  contents of @a __str are erased.
6395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<>
6402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<char>&
6403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Write string to a stream.
6407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __os  Output stream.
6408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  String to write out.
6409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the output stream.
6410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  writing a C string.
6413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 586. string inserter not a formatted function
6421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
ARM GAS  /tmp/ccL95Edz.s 			page 790


6426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __is  Input stream.
6427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __delim  Character marking end of line.
6429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the input stream.
6430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @a __str.
6436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __is  Input stream.
6445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the input stream.
6447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @a __str.
6453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
6461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::getline(__is, __str, __delim); }
6467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::getline(__is, __str); }
6474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
6475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<>
6477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<char>&
6478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    char __delim);
6480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<>
ARM GAS  /tmp/ccL95Edz.s 			page 791


6483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<wchar_t>&
6484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    wchar_t __delim);
6486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif  
6487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** } // namespace
6490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
6492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <ext/string_conversions.h>
6494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** {
6497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline int
6503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					__idx, __base); }
6506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline long
6508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline unsigned long
6513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline long long
6518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline unsigned long long
6523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // NB: strtof vs strtod.
6528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline float
6529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
6531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline double
6533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline long double
6537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
ARM GAS  /tmp/ccL95Edz.s 			page 792


6540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // NB: (v)snprintf vs sprintf.
6543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // DR 1261.
6545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(int __val)
6547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
6548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%d", __val); }
6549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(unsigned __val)
6552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   4 * sizeof(unsigned),
6554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%u", __val); }
6555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(long __val)
6558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(long),
6559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%ld", __val); }
6560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(unsigned long __val)
6563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
6565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%lu", __val); }
6566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(long long __val)
6569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   4 * sizeof(long long),
6571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%lld", __val); }
6572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(unsigned long long __val)
6575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   4 * sizeof(unsigned long long),
6577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%llu", __val); }
6578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(float __val)
6581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   {
6582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     const int __n = 
6583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%f", __val);
6586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   }
6587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(double __val)
 23862              		.loc 2 6589 3 is_stmt 1 view .LVU6214
 23863              	.LBB13552:
6590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   {
6591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     const int __n = 
 23864              		.loc 2 6591 5 view .LVU6215
6592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
ARM GAS  /tmp/ccL95Edz.s 			page 793


 23865              		.loc 2 6593 5 view .LVU6216
6594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%f", __val);
 23866              		.loc 2 6594 20 is_stmt 0 view .LVU6217
 23867 0104 8DED000B 		vstr.64	d0, [sp]
 23868 0108 6C4B     		ldr	r3, .L537+20
 23869 010a 4FF4A472 		mov	r2, #328
 23870 010e 6C49     		ldr	r1, .L537+24
 23871 0110 03A8     		add	r0, sp, #12
 23872 0112 FFF7FEFF 		bl	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPK
 23873              	.LVL1623:
 23874              		.loc 2 6594 20 view .LVU6218
 23875 0116 5FE0     		b	.L503
 23876              	.LVL1624:
 23877              	.L529:
 23878              		.loc 2 6594 20 view .LVU6219
 23879              	.LBE13552:
 23880              	.LBE13551:
 23881              	.LBE13547:
 23882              	.LBE13546:
  78:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 23883              		.loc 17 78 9 is_stmt 1 view .LVU6220
 23884 0118 BD68     		ldr	r5, [r7, #8]
 23885              	.LVL1625:
 23886              	.LBB13619:
 23887              	.LBI13619:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 23888              		.loc 5 138 7 view .LVU6221
 23889              	.LBB13620:
 23890              	.LBI13620:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23891              		.loc 4 80 7 view .LVU6222
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23892              		.loc 4 80 7 is_stmt 0 view .LVU6223
 23893              	.LBE13620:
 23894              	.LBE13619:
 23895              	.LBB13621:
 23896              	.LBI13621:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 23897              		.loc 2 525 7 is_stmt 1 view .LVU6224
 23898              	.LBB13622:
 23899              	.LBB13623:
 23900              	.LBB13624:
 23901              	.LBI13624:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23902              		.loc 2 190 7 view .LVU6225
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23903              		.loc 2 190 7 is_stmt 0 view .LVU6226
 23904              	.LBE13624:
 23905              	.LBB13625:
 23906              	.LBI13625:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 23907              		.loc 2 156 2 is_stmt 1 view .LVU6227
 23908              	.LBB13626:
 23909              	.LBB13627:
 23910              	.LBB13628:
 23911              	.LBI13628:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccL95Edz.s 			page 794


 23912              		.loc 5 141 7 view .LVU6228
 23913              	.LBB13629:
 23914              	.LBI13629:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23915              		.loc 4 83 7 view .LVU6229
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23916              		.loc 4 83 7 is_stmt 0 view .LVU6230
 23917              	.LBE13629:
 23918              	.LBE13628:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23919              		.loc 2 157 35 view .LVU6231
 23920 011a 1AAC     		add	r4, sp, #104
 23921              	.LVL1626:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23922              		.loc 2 157 35 view .LVU6232
 23923 011c 1894     		str	r4, [sp, #96]
 23924              	.LVL1627:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23925              		.loc 2 157 35 view .LVU6233
 23926              	.LBE13627:
 23927              	.LBE13626:
 23928              	.LBE13625:
 23929              	.LBB13630:
 23930              	.LBI13630:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 23931              		.loc 8 329 7 is_stmt 1 view .LVU6234
 23932              	.LBE13630:
 23933              	.LBE13623:
 23934              	.LBE13622:
 23935              	.LBE13621:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 23936              		.loc 8 332 2 view .LVU6235
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 23937              		.loc 8 335 2 view .LVU6236
 23938              	.LBB13637:
 23939              	.LBB13636:
 23940              	.LBB13635:
 23941              	.LBB13631:
 23942              	.LBI13631:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 23943              		.loc 2 263 9 view .LVU6237
 23944              	.LBB13632:
 23945              	.LBB13633:
 23946              	.LBI13633:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 23947              		.loc 2 243 9 view .LVU6238
 23948              	.LBB13634:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23949              		.loc 2 247 11 is_stmt 0 view .LVU6239
 23950 011e 694A     		ldr	r2, .L537+28
 23951              	.LVL1628:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23952              		.loc 2 247 11 view .LVU6240
 23953 0120 4FF00003 		mov	r3, #0
 23954 0124 A2F13101 		sub	r1, r2, #49
 23955 0128 18A8     		add	r0, sp, #96
 23956              	.LVL1629:
ARM GAS  /tmp/ccL95Edz.s 			page 795


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23957              		.loc 2 247 11 view .LVU6241
 23958 012a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 23959              	.LVL1630:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23960              		.loc 2 247 11 view .LVU6242
 23961              	.LBE13634:
 23962              	.LBE13633:
 23963              	.LBE13632:
 23964              	.LBE13631:
 23965              	.LBE13635:
 23966              	.LBE13636:
 23967              	.LBE13637:
  78:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 23968              		.loc 17 78 19 view .LVU6243
 23969 012e 18A9     		add	r1, sp, #96
 23970 0130 2846     		mov	r0, r5
 23971 0132 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 23972              	.LVL1631:
 23973              	.LBB13638:
 23974              	.LBI13638:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 23975              		.loc 2 657 7 is_stmt 1 view .LVU6244
 23976              	.LBB13639:
 23977              	.LBI13639:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23978              		.loc 2 229 7 view .LVU6245
 23979              	.LBB13640:
 23980              	.LBB13641:
 23981              	.LBI13641:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 23982              		.loc 2 221 7 view .LVU6246
 23983              	.LBB13642:
 23984              	.LBI13642:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23985              		.loc 2 186 7 view .LVU6247
 23986              	.LBB13643:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23987              		.loc 2 187 28 is_stmt 0 view .LVU6248
 23988 0136 1898     		ldr	r0, [sp, #96]
 23989              	.LVL1632:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23990              		.loc 2 187 28 view .LVU6249
 23991              	.LBE13643:
 23992              	.LBE13642:
 23993              	.LBB13644:
 23994              	.LBI13644:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23995              		.loc 2 200 7 is_stmt 1 view .LVU6250
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23996              		.loc 2 200 7 is_stmt 0 view .LVU6251
 23997              	.LBE13644:
 23998              	.LBE13641:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 23999              		.loc 2 231 2 view .LVU6252
 24000 0138 A042     		cmp	r0, r4
 24001 013a 01D0     		beq	.L499
ARM GAS  /tmp/ccL95Edz.s 			page 796


 24002              	.LVL1633:
 24003              	.LBB13645:
 24004              	.LBI13645:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24005              		.loc 2 236 7 is_stmt 1 view .LVU6253
 24006              	.LBB13646:
 24007              	.LBB13647:
 24008              	.LBI13647:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24009              		.loc 3 469 7 view .LVU6254
 24010              	.LBB13648:
 24011              	.LBI13648:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24012              		.loc 4 119 7 view .LVU6255
 24013              	.LBB13649:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24014              		.loc 4 128 19 is_stmt 0 view .LVU6256
 24015 013c FFF7FEFF 		bl	_ZdlPv
 24016              	.LVL1634:
 24017              	.L499:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24018              		.loc 4 128 19 view .LVU6257
 24019              	.LBE13649:
 24020              	.LBE13648:
 24021              	.LBE13647:
 24022              	.LBE13646:
 24023              	.LBE13645:
 24024              	.LBE13640:
 24025              	.LBE13639:
 24026              	.LBB13650:
 24027              	.LBI13650:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24028              		.loc 2 150 14 is_stmt 1 view .LVU6258
 24029              	.LBB13651:
 24030              	.LBI13651:
 24031              		.loc 5 153 7 view .LVU6259
 24032              	.LBB13652:
 24033              	.LBI13652:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24034              		.loc 4 89 7 view .LVU6260
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24035              		.loc 4 89 7 is_stmt 0 view .LVU6261
 24036              	.LBE13652:
 24037              	.LBE13651:
 24038              	.LBE13650:
 24039              	.LBE13638:
 24040              	.LBB13653:
 24041              	.LBI13653:
 24042              		.loc 5 153 7 is_stmt 1 view .LVU6262
 24043              	.LBB13654:
 24044              	.LBI13654:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24045              		.loc 4 89 7 view .LVU6263
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24046              		.loc 4 89 7 is_stmt 0 view .LVU6264
 24047              	.LBE13654:
 24048              	.LBE13653:
ARM GAS  /tmp/ccL95Edz.s 			page 797


  79:alohal/filesystem/filesystem.cpp ****     }
 24049              		.loc 17 79 9 is_stmt 1 view .LVU6265
  79:alohal/filesystem/filesystem.cpp ****     }
 24050              		.loc 17 79 16 is_stmt 0 view .LVU6266
 24051 0140 0224     		movs	r4, #2
 24052 0142 85E0     		b	.L496
 24053              	.LVL1635:
 24054              	.L530:
  83:alohal/filesystem/filesystem.cpp ****         return EISDIR;
 24055              		.loc 17 83 9 is_stmt 1 view .LVU6267
 24056 0144 BD68     		ldr	r5, [r7, #8]
 24057              	.LVL1636:
 24058              	.LBB13655:
 24059              	.LBI13655:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 24060              		.loc 5 138 7 view .LVU6268
 24061              	.LBB13656:
 24062              	.LBI13656:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24063              		.loc 4 80 7 view .LVU6269
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24064              		.loc 4 80 7 is_stmt 0 view .LVU6270
 24065              	.LBE13656:
 24066              	.LBE13655:
 24067              	.LBB13657:
 24068              	.LBI13657:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 24069              		.loc 2 525 7 is_stmt 1 view .LVU6271
 24070              	.LBB13658:
 24071              	.LBB13659:
 24072              	.LBB13660:
 24073              	.LBI13660:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24074              		.loc 2 190 7 view .LVU6272
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24075              		.loc 2 190 7 is_stmt 0 view .LVU6273
 24076              	.LBE13660:
 24077              	.LBB13661:
 24078              	.LBI13661:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 24079              		.loc 2 156 2 is_stmt 1 view .LVU6274
 24080              	.LBB13662:
 24081              	.LBB13663:
 24082              	.LBB13664:
 24083              	.LBI13664:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24084              		.loc 5 141 7 view .LVU6275
 24085              	.LBB13665:
 24086              	.LBI13665:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24087              		.loc 4 83 7 view .LVU6276
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24088              		.loc 4 83 7 is_stmt 0 view .LVU6277
 24089              	.LBE13665:
 24090              	.LBE13664:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24091              		.loc 2 157 35 view .LVU6278
ARM GAS  /tmp/ccL95Edz.s 			page 798


 24092 0146 20AC     		add	r4, sp, #128
 24093              	.LVL1637:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24094              		.loc 2 157 35 view .LVU6279
 24095 0148 1E94     		str	r4, [sp, #120]
 24096              	.LVL1638:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24097              		.loc 2 157 35 view .LVU6280
 24098              	.LBE13663:
 24099              	.LBE13662:
 24100              	.LBE13661:
 24101              	.LBB13666:
 24102              	.LBI13666:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 24103              		.loc 8 329 7 is_stmt 1 view .LVU6281
 24104              	.LBE13666:
 24105              	.LBE13659:
 24106              	.LBE13658:
 24107              	.LBE13657:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 24108              		.loc 8 332 2 view .LVU6282
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 24109              		.loc 8 335 2 view .LVU6283
 24110              	.LBB13673:
 24111              	.LBB13672:
 24112              	.LBB13671:
 24113              	.LBB13667:
 24114              	.LBI13667:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 24115              		.loc 2 263 9 view .LVU6284
 24116              	.LBB13668:
 24117              	.LBB13669:
 24118              	.LBI13669:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 24119              		.loc 2 243 9 view .LVU6285
 24120              	.LBB13670:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24121              		.loc 2 247 11 is_stmt 0 view .LVU6286
 24122 014a 5F4A     		ldr	r2, .L537+32
 24123              	.LVL1639:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24124              		.loc 2 247 11 view .LVU6287
 24125 014c 4FF00003 		mov	r3, #0
 24126 0150 A2F12001 		sub	r1, r2, #32
 24127 0154 1EA8     		add	r0, sp, #120
 24128              	.LVL1640:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24129              		.loc 2 247 11 view .LVU6288
 24130 0156 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 24131              	.LVL1641:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24132              		.loc 2 247 11 view .LVU6289
 24133              	.LBE13670:
 24134              	.LBE13669:
 24135              	.LBE13668:
 24136              	.LBE13667:
 24137              	.LBE13671:
ARM GAS  /tmp/ccL95Edz.s 			page 799


 24138              	.LBE13672:
 24139              	.LBE13673:
  83:alohal/filesystem/filesystem.cpp ****         return EISDIR;
 24140              		.loc 17 83 19 view .LVU6290
 24141 015a 1EA9     		add	r1, sp, #120
 24142 015c 2846     		mov	r0, r5
 24143 015e FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 24144              	.LVL1642:
 24145              	.LBB13674:
 24146              	.LBI13674:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24147              		.loc 2 657 7 is_stmt 1 view .LVU6291
 24148              	.LBB13675:
 24149              	.LBI13675:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24150              		.loc 2 229 7 view .LVU6292
 24151              	.LBB13676:
 24152              	.LBB13677:
 24153              	.LBI13677:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 24154              		.loc 2 221 7 view .LVU6293
 24155              	.LBB13678:
 24156              	.LBI13678:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24157              		.loc 2 186 7 view .LVU6294
 24158              	.LBB13679:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24159              		.loc 2 187 28 is_stmt 0 view .LVU6295
 24160 0162 1E98     		ldr	r0, [sp, #120]
 24161              	.LVL1643:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24162              		.loc 2 187 28 view .LVU6296
 24163              	.LBE13679:
 24164              	.LBE13678:
 24165              	.LBB13680:
 24166              	.LBI13680:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24167              		.loc 2 200 7 is_stmt 1 view .LVU6297
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24168              		.loc 2 200 7 is_stmt 0 view .LVU6298
 24169              	.LBE13680:
 24170              	.LBE13677:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24171              		.loc 2 231 2 view .LVU6299
 24172 0164 A042     		cmp	r0, r4
 24173 0166 01D0     		beq	.L501
 24174              	.LVL1644:
 24175              	.LBB13681:
 24176              	.LBI13681:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24177              		.loc 2 236 7 is_stmt 1 view .LVU6300
 24178              	.LBB13682:
 24179              	.LBB13683:
 24180              	.LBI13683:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24181              		.loc 3 469 7 view .LVU6301
 24182              	.LBB13684:
ARM GAS  /tmp/ccL95Edz.s 			page 800


 24183              	.LBI13684:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24184              		.loc 4 119 7 view .LVU6302
 24185              	.LBB13685:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24186              		.loc 4 128 19 is_stmt 0 view .LVU6303
 24187 0168 FFF7FEFF 		bl	_ZdlPv
 24188              	.LVL1645:
 24189              	.L501:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24190              		.loc 4 128 19 view .LVU6304
 24191              	.LBE13685:
 24192              	.LBE13684:
 24193              	.LBE13683:
 24194              	.LBE13682:
 24195              	.LBE13681:
 24196              	.LBE13676:
 24197              	.LBE13675:
 24198              	.LBB13686:
 24199              	.LBI13686:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24200              		.loc 2 150 14 is_stmt 1 view .LVU6305
 24201              	.LBB13687:
 24202              	.LBI13687:
 24203              		.loc 5 153 7 view .LVU6306
 24204              	.LBB13688:
 24205              	.LBI13688:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24206              		.loc 4 89 7 view .LVU6307
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24207              		.loc 4 89 7 is_stmt 0 view .LVU6308
 24208              	.LBE13688:
 24209              	.LBE13687:
 24210              	.LBE13686:
 24211              	.LBE13674:
 24212              	.LBB13689:
 24213              	.LBI13689:
 24214              		.loc 5 153 7 is_stmt 1 view .LVU6309
 24215              	.LBB13690:
 24216              	.LBI13690:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24217              		.loc 4 89 7 view .LVU6310
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24218              		.loc 4 89 7 is_stmt 0 view .LVU6311
 24219              	.LBE13690:
 24220              	.LBE13689:
  84:alohal/filesystem/filesystem.cpp ****     }
 24221              		.loc 17 84 9 is_stmt 1 view .LVU6312
  84:alohal/filesystem/filesystem.cpp ****     }
 24222              		.loc 17 84 16 is_stmt 0 view .LVU6313
 24223 016c 1524     		movs	r4, #21
 24224 016e 6FE0     		b	.L496
 24225              	.LVL1646:
 24226              	.L531:
 24227              	.LBB13691:
 24228              	.LBB13617:
 24229              	.LBB13553:
ARM GAS  /tmp/ccL95Edz.s 			page 801


 24230              	.LBI13553:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 24231              		.loc 2 448 7 is_stmt 1 view .LVU6314
 24232              	.LBB13554:
 24233              	.LBB13555:
 24234              	.LBB13556:
 24235              	.LBI13556:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24236              		.loc 2 190 7 view .LVU6315
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24237              		.loc 2 190 7 is_stmt 0 view .LVU6316
 24238              	.LBE13556:
 24239              	.LBB13557:
 24240              	.LBI13557:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 24241              		.loc 2 290 7 is_stmt 1 view .LVU6317
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 24242              		.loc 2 290 7 is_stmt 0 view .LVU6318
 24243              	.LBE13557:
 24244              	.LBB13558:
 24245              	.LBI13558:
 24246              		.loc 19 97 19 is_stmt 1 view .LVU6319
 24247              	.LBB13559:
 24248              	.LBI13559:
 24249              		.loc 3 514 7 view .LVU6320
 24250              	.LBB13560:
 24251              	.LBI13560:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24252              		.loc 5 141 7 view .LVU6321
 24253              	.LBB13561:
 24254              	.LBI13561:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24255              		.loc 4 83 7 view .LVU6322
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24256              		.loc 4 83 7 is_stmt 0 view .LVU6323
 24257              	.LBE13561:
 24258              	.LBE13560:
 24259              	.LBE13559:
 24260              	.LBE13558:
 24261              	.LBB13562:
 24262              	.LBI13562:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 24263              		.loc 2 159 2 is_stmt 1 view .LVU6324
 24264              	.LBB13563:
 24265              	.LBB13564:
 24266              	.LBI13564:
 24267              		.loc 9 99 5 view .LVU6325
 24268              		.loc 9 99 5 is_stmt 0 view .LVU6326
 24269              	.LBE13564:
 24270              	.LBB13565:
 24271              	.LBI13565:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24272              		.loc 5 141 7 is_stmt 1 view .LVU6327
 24273              	.LBB13566:
 24274              	.LBI13566:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24275              		.loc 4 83 7 view .LVU6328
ARM GAS  /tmp/ccL95Edz.s 			page 802


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24276              		.loc 4 83 7 is_stmt 0 view .LVU6329
 24277              	.LBE13566:
 24278              	.LBE13565:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24279              		.loc 2 160 46 view .LVU6330
 24280 0170 05AB     		add	r3, sp, #20
 24281              	.LVL1647:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24282              		.loc 2 160 46 view .LVU6331
 24283 0172 0393     		str	r3, [sp, #12]
 24284              	.LVL1648:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24285              		.loc 2 160 46 view .LVU6332
 24286              	.LBE13563:
 24287              	.LBE13562:
 24288              	.LBB13567:
 24289              	.LBI13567:
 24290              		.loc 5 153 7 is_stmt 1 view .LVU6333
 24291              	.LBB13568:
 24292              	.LBI13568:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24293              		.loc 4 89 7 view .LVU6334
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24294              		.loc 4 89 7 is_stmt 0 view .LVU6335
 24295              	.LBE13568:
 24296              	.LBE13567:
 24297              	.LBB13569:
 24298              	.LBI13569:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24299              		.loc 2 186 7 is_stmt 1 view .LVU6336
 24300              	.LBB13570:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24301              		.loc 2 187 28 is_stmt 0 view .LVU6337
 24302 0174 216B     		ldr	r1, [r4, #48]
 24303              	.LVL1649:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24304              		.loc 2 187 28 view .LVU6338
 24305              	.LBE13570:
 24306              	.LBE13569:
 24307              	.LBB13571:
 24308              	.LBI13571:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24309              		.loc 2 186 7 is_stmt 1 view .LVU6339
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24310              		.loc 2 186 7 is_stmt 0 view .LVU6340
 24311              	.LBE13571:
 24312              	.LBB13572:
 24313              	.LBI13572:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24314              		.loc 2 936 7 is_stmt 1 view .LVU6341
 24315              	.LBB13573:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24316              		.loc 2 937 16 is_stmt 0 view .LVU6342
 24317 0176 626B     		ldr	r2, [r4, #52]
 24318              	.LVL1650:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 803


 24319              		.loc 2 937 16 view .LVU6343
 24320              	.LBE13573:
 24321              	.LBE13572:
 24322              	.LBB13574:
 24323              	.LBI13574:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 24324              		.loc 2 263 9 is_stmt 1 view .LVU6344
 24325              	.LBB13575:
 24326              	.LBB13576:
 24327              	.LBI13576:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 24328              		.loc 2 243 9 view .LVU6345
 24329              	.LBB13577:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24330              		.loc 2 247 11 is_stmt 0 view .LVU6346
 24331 0178 4FF00003 		mov	r3, #0
 24332 017c 0A44     		add	r2, r2, r1
 24333              	.LVL1651:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24334              		.loc 2 247 11 view .LVU6347
 24335 017e 03A8     		add	r0, sp, #12
 24336              	.LVL1652:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24337              		.loc 2 247 11 view .LVU6348
 24338 0180 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 24339              	.LVL1653:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24340              		.loc 2 247 11 view .LVU6349
 24341              	.LBE13577:
 24342              	.LBE13576:
 24343              	.LBE13575:
 24344              	.LBE13574:
 24345              	.LBE13555:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24346              		.loc 2 451 74 view .LVU6350
 24347 0184 28E0     		b	.L503
 24348              	.LVL1654:
 24349              	.L532:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24350              		.loc 2 451 74 view .LVU6351
 24351              	.LBE13554:
 24352              	.LBE13553:
 131:alohal/filesystem/file.hpp ****             return virtual_obtainer_text->Invoke();
 24353              		.loc 6 131 54 view .LVU6352
 24354 0186 626A     		ldr	r2, [r4, #36]
 131:alohal/filesystem/file.hpp ****             return virtual_obtainer_text->Invoke();
 24355              		.loc 6 131 50 view .LVU6353
 24356 0188 002A     		cmp	r2, #0
 24357 018a A8D0     		beq	.L504
 24358              	.LVL1655:
 24359              	.LBB13578:
 24360              	.LBI13578:
 159:alohal/misc/invocation_wrapper.hpp ****         if (object_ptr) {
 24361              		.loc 24 159 14 is_stmt 1 view .LVU6354
 24362              	.LBB13579:
 160:alohal/misc/invocation_wrapper.hpp ****             return (*object_ptr.*method_pointer)();
 24363              		.loc 24 160 13 is_stmt 0 view .LVU6355
ARM GAS  /tmp/ccL95Edz.s 			page 804


 24364 018c 5368     		ldr	r3, [r2, #4]
 160:alohal/misc/invocation_wrapper.hpp ****             return (*object_ptr.*method_pointer)();
 24365              		.loc 24 160 9 view .LVU6356
 24366 018e 73B1     		cbz	r3, .L505
 24367              		.loc 24 161 49 view .LVU6357
 24368 0190 D168     		ldr	r1, [r2, #12]
 24369 0192 11F0010F 		tst	r1, #1
 24370 0196 08D0     		beq	.L506
 24371 0198 4810     		asrs	r0, r1, #1
 24372 019a 1858     		ldr	r0, [r3, r0]
 24373 019c 9268     		ldr	r2, [r2, #8]
 24374              	.LVL1656:
 24375              		.loc 24 161 49 view .LVU6358
 24376 019e 8258     		ldr	r2, [r0, r2]
 24377              	.L507:
 24378              		.loc 24 161 50 view .LVU6359
 24379 01a0 03EB6101 		add	r1, r3, r1, asr #1
 24380 01a4 03A8     		add	r0, sp, #12
 24381 01a6 9047     		blx	r2
 24382              	.LVL1657:
 24383              		.loc 24 161 50 view .LVU6360
 24384 01a8 16E0     		b	.L503
 24385              	.LVL1658:
 24386              	.L506:
 24387              		.loc 24 161 49 view .LVU6361
 24388 01aa 9268     		ldr	r2, [r2, #8]
 24389              	.LVL1659:
 24390              		.loc 24 161 49 view .LVU6362
 24391 01ac F8E7     		b	.L507
 24392              	.LVL1660:
 24393              	.L505:
 24394              	.LBB13580:
 24395              	.LBI13580:
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 24396              		.loc 2 431 7 is_stmt 1 view .LVU6363
 24397              	.LBB13581:
 24398              	.LBB13582:
 24399              	.LBI13582:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24400              		.loc 2 190 7 view .LVU6364
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24401              		.loc 2 190 7 is_stmt 0 view .LVU6365
 24402              	.LBE13582:
 24403              	.LBB13583:
 24404              	.LBI13583:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 24405              		.loc 5 138 7 is_stmt 1 view .LVU6366
 24406              	.LBB13584:
 24407              	.LBI13584:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24408              		.loc 4 80 7 view .LVU6367
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24409              		.loc 4 80 7 is_stmt 0 view .LVU6368
 24410              	.LBE13584:
 24411              	.LBE13583:
 24412              	.LBB13585:
 24413              	.LBI13585:
ARM GAS  /tmp/ccL95Edz.s 			page 805


 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 24414              		.loc 2 159 2 is_stmt 1 view .LVU6369
 24415              	.LBB13586:
 24416              	.LBB13587:
 24417              	.LBI13587:
 24418              		.loc 9 99 5 view .LVU6370
 24419              		.loc 9 99 5 is_stmt 0 view .LVU6371
 24420              	.LBE13587:
 24421              	.LBB13588:
 24422              	.LBI13588:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24423              		.loc 5 141 7 is_stmt 1 view .LVU6372
 24424              	.LBB13589:
 24425              	.LBI13589:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24426              		.loc 4 83 7 view .LVU6373
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24427              		.loc 4 83 7 is_stmt 0 view .LVU6374
 24428              	.LBE13589:
 24429              	.LBE13588:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24430              		.loc 2 160 46 view .LVU6375
 24431 01ae 05AB     		add	r3, sp, #20
 24432              	.LVL1661:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24433              		.loc 2 160 46 view .LVU6376
 24434 01b0 0393     		str	r3, [sp, #12]
 24435              	.LVL1662:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24436              		.loc 2 160 46 view .LVU6377
 24437              	.LBE13586:
 24438              	.LBE13585:
 24439              	.LBB13590:
 24440              	.LBI13590:
 24441              		.loc 5 153 7 is_stmt 1 view .LVU6378
 24442              	.LBB13591:
 24443              	.LBI13591:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24444              		.loc 4 89 7 view .LVU6379
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24445              		.loc 4 89 7 is_stmt 0 view .LVU6380
 24446              	.LBE13591:
 24447              	.LBE13590:
 24448              	.LBB13592:
 24449              	.LBI13592:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24450              		.loc 2 214 7 is_stmt 1 view .LVU6381
 24451              	.LBB13593:
 24452              	.LBI13593:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 24453              		.loc 2 182 7 view .LVU6382
 24454              	.LBB13594:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24455              		.loc 2 183 9 is_stmt 0 view .LVU6383
 24456 01b2 0023     		movs	r3, #0
 24457 01b4 0493     		str	r3, [sp, #16]
 24458              	.LVL1663:
ARM GAS  /tmp/ccL95Edz.s 			page 806


 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24459              		.loc 2 183 9 view .LVU6384
 24460              	.LBE13594:
 24461              	.LBE13593:
 24462              	.LBB13595:
 24463              	.LBI13595:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 24464              		.loc 8 299 7 is_stmt 1 view .LVU6385
 24465              	.LBB13596:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 24466              		.loc 8 300 9 view .LVU6386
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 24467              		.loc 8 300 14 is_stmt 0 view .LVU6387
 24468 01b6 8DF81430 		strb	r3, [sp, #20]
 24469              	.LVL1664:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 24470              		.loc 8 300 14 view .LVU6388
 24471              	.LBE13596:
 24472              	.LBE13595:
 24473              	.LBE13592:
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24474              		.loc 2 434 27 view .LVU6389
 24475 01ba 0DE0     		b	.L503
 24476              	.LVL1665:
 24477              	.L511:
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24478              		.loc 2 434 27 view .LVU6390
 24479              	.LBE13581:
 24480              	.LBE13580:
 24481              	.LBE13579:
 24482              	.LBE13578:
 24483              	.LBB13597:
 24484              	.LBB13550:
 24485              		.loc 24 161 49 view .LVU6391
 24486 01bc 9B68     		ldr	r3, [r3, #8]
 24487              	.LVL1666:
 24488              		.loc 24 161 49 view .LVU6392
 24489 01be 9EE7     		b	.L512
 24490              	.LVL1667:
 24491              	.L524:
 162:alohal/misc/invocation_wrapper.hpp ****         } else {
 163:alohal/misc/invocation_wrapper.hpp ****             return return_T();
 24492              		.loc 24 163 29 view .LVU6393
 24493 01c0 9FED390B 		vldr.64	d0, .L537
 24494 01c4 9EE7     		b	.L510
 24495              	.LVL1668:
 24496              	.L509:
 24497              		.loc 24 163 29 view .LVU6394
 24498              	.LBE13550:
 24499              	.LBE13597:
 24500              	.LBB13598:
 24501              	.LBI13598:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 24502              		.loc 5 138 7 is_stmt 1 view .LVU6395
 24503              	.LBB13599:
 24504              	.LBI13599:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 807


 24505              		.loc 4 80 7 view .LVU6396
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24506              		.loc 4 80 7 is_stmt 0 view .LVU6397
 24507              	.LBE13599:
 24508              	.LBE13598:
 24509              	.LBB13600:
 24510              	.LBI13600:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 24511              		.loc 2 525 7 is_stmt 1 view .LVU6398
 24512              	.LBB13601:
 24513              	.LBB13602:
 24514              	.LBI13602:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24515              		.loc 2 190 7 view .LVU6399
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24516              		.loc 2 190 7 is_stmt 0 view .LVU6400
 24517              	.LBE13602:
 24518              	.LBB13603:
 24519              	.LBI13603:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 24520              		.loc 2 156 2 is_stmt 1 view .LVU6401
 24521              	.LBB13604:
 24522              	.LBB13605:
 24523              	.LBB13606:
 24524              	.LBI13606:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24525              		.loc 5 141 7 view .LVU6402
 24526              	.LBB13607:
 24527              	.LBI13607:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24528              		.loc 4 83 7 view .LVU6403
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24529              		.loc 4 83 7 is_stmt 0 view .LVU6404
 24530              	.LBE13607:
 24531              	.LBE13606:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24532              		.loc 2 157 35 view .LVU6405
 24533 01c6 05AB     		add	r3, sp, #20
 24534              	.LVL1669:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24535              		.loc 2 157 35 view .LVU6406
 24536 01c8 0393     		str	r3, [sp, #12]
 24537              	.LVL1670:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24538              		.loc 2 157 35 view .LVU6407
 24539              	.LBE13605:
 24540              	.LBE13604:
 24541              	.LBE13603:
 24542              	.LBB13608:
 24543              	.LBI13608:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 24544              		.loc 8 329 7 is_stmt 1 view .LVU6408
 24545              	.LBE13608:
 24546              	.LBE13601:
 24547              	.LBE13600:
 24548              	.LBE13617:
 24549              	.LBE13691:
ARM GAS  /tmp/ccL95Edz.s 			page 808


 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 24550              		.loc 8 332 2 view .LVU6409
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 24551              		.loc 8 335 2 view .LVU6410
 24552              	.LBB13692:
 24553              	.LBB13618:
 24554              	.LBB13614:
 24555              	.LBB13613:
 24556              	.LBB13609:
 24557              	.LBI13609:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 24558              		.loc 2 263 9 view .LVU6411
 24559              	.LBB13610:
 24560              	.LBB13611:
 24561              	.LBI13611:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 24562              		.loc 2 243 9 view .LVU6412
 24563              	.LBB13612:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24564              		.loc 2 247 11 is_stmt 0 view .LVU6413
 24565 01ca 3B49     		ldr	r1, .L537+16
 24566 01cc 4FF00003 		mov	r3, #0
 24567 01d0 0A46     		mov	r2, r1
 24568 01d2 03A8     		add	r0, sp, #12
 24569              	.LVL1671:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24570              		.loc 2 247 11 view .LVU6414
 24571 01d4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 24572              	.LVL1672:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24573              		.loc 2 247 11 view .LVU6415
 24574              	.LBE13612:
 24575              	.LBE13611:
 24576              	.LBE13610:
 24577              	.LBE13609:
 24578              	.LBE13613:
 24579              	.LBE13614:
 24580              	.LBB13615:
 24581              	.LBI13615:
 24582              		.loc 5 153 7 is_stmt 1 view .LVU6416
 24583              	.LBB13616:
 24584              	.LBI13616:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24585              		.loc 4 89 7 view .LVU6417
 24586              	.L503:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24587              		.loc 4 89 7 is_stmt 0 view .LVU6418
 24588              	.LBE13616:
 24589              	.LBE13615:
 24590              	.LBE13618:
 24591              	.LBE13692:
  88:alohal/filesystem/filesystem.cpp ****         content += "\r\n";
 24592              		.loc 17 88 5 is_stmt 1 view .LVU6419
 24593              	.LBB13693:
 24594              	.LBI13693:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24595              		.loc 2 936 7 view .LVU6420
ARM GAS  /tmp/ccL95Edz.s 			page 809


 24596              	.LBB13694:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24597              		.loc 2 937 16 is_stmt 0 view .LVU6421
 24598 01d8 049B     		ldr	r3, [sp, #16]
 24599              	.LVL1673:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24600              		.loc 2 937 16 view .LVU6422
 24601              	.LBE13694:
 24602              	.LBE13693:
  88:alohal/filesystem/filesystem.cpp ****         content += "\r\n";
 24603              		.loc 17 88 23 view .LVU6423
 24604 01da 981E     		subs	r0, r3, #2
 24605              	.LVL1674:
 24606              	.LBB13695:
 24607              	.LBI13695:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 24608              		.loc 2 2834 7 is_stmt 1 view .LVU6424
 24609              	.LBB13696:
 24610              	.LBB13697:
 24611              	.LBI13697:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24612              		.loc 2 310 7 view .LVU6425
 24613              	.LBB13698:
 24614              	.LBB13699:
 24615              	.LBI13699:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24616              		.loc 2 930 7 view .LVU6426
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24617              		.loc 2 930 7 is_stmt 0 view .LVU6427
 24618              	.LBE13699:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24619              		.loc 2 312 2 view .LVU6428
 24620 01dc 9842     		cmp	r0, r3
 24621 01de 40D8     		bhi	.L533
 24622              	.LVL1675:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24623              		.loc 2 312 2 view .LVU6429
 24624              	.LBE13698:
 24625              	.LBE13697:
 24626              	.LBB13701:
 24627              	.LBI13701:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 24628              		.loc 2 476 7 is_stmt 1 view .LVU6430
 24629              	.LBB13702:
 24630              	.LBB13703:
 24631              	.LBI13703:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24632              		.loc 2 190 7 view .LVU6431
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24633              		.loc 2 190 7 is_stmt 0 view .LVU6432
 24634              	.LBE13703:
 24635              	.LBB13704:
 24636              	.LBI13704:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 24637              		.loc 5 138 7 is_stmt 1 view .LVU6433
 24638              	.LBB13705:
 24639              	.LBI13705:
ARM GAS  /tmp/ccL95Edz.s 			page 810


  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24640              		.loc 4 80 7 view .LVU6434
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24641              		.loc 4 80 7 is_stmt 0 view .LVU6435
 24642              	.LBE13705:
 24643              	.LBE13704:
 24644              	.LBB13706:
 24645              	.LBI13706:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 24646              		.loc 2 159 2 is_stmt 1 view .LVU6436
 24647              	.LBB13707:
 24648              	.LBB13708:
 24649              	.LBB13709:
 24650              	.LBI13709:
 24651              		.loc 9 99 5 view .LVU6437
 24652              		.loc 9 99 5 is_stmt 0 view .LVU6438
 24653              	.LBE13709:
 24654              	.LBB13710:
 24655              	.LBI13710:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24656              		.loc 5 141 7 is_stmt 1 view .LVU6439
 24657              	.LBB13711:
 24658              	.LBI13711:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24659              		.loc 4 83 7 view .LVU6440
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24660              		.loc 4 83 7 is_stmt 0 view .LVU6441
 24661              	.LBE13711:
 24662              	.LBE13710:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24663              		.loc 2 160 46 view .LVU6442
 24664 01e0 26AA     		add	r2, sp, #152
 24665              	.LVL1676:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24666              		.loc 2 160 46 view .LVU6443
 24667 01e2 2492     		str	r2, [sp, #144]
 24668              	.LVL1677:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24669              		.loc 2 160 46 view .LVU6444
 24670              	.LBE13708:
 24671              	.LBE13707:
 24672              	.LBE13706:
 24673              	.LBB13712:
 24674              	.LBI13712:
 24675              		.loc 5 153 7 is_stmt 1 view .LVU6445
 24676              	.LBB13713:
 24677              	.LBI13713:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24678              		.loc 4 89 7 view .LVU6446
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24679              		.loc 4 89 7 is_stmt 0 view .LVU6447
 24680              	.LBE13713:
 24681              	.LBE13712:
 24682              	.LBB13714:
 24683              	.LBB13715:
 24684              	.LBI13715:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 811


 24685              		.loc 2 186 7 is_stmt 1 view .LVU6448
 24686              	.LBB13716:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24687              		.loc 2 187 28 is_stmt 0 view .LVU6449
 24688 01e4 0399     		ldr	r1, [sp, #12]
 24689              	.LVL1678:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24690              		.loc 2 187 28 view .LVU6450
 24691              	.LBE13716:
 24692              	.LBE13715:
 24693              	.LBB13717:
 24694              	.LBI13717:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24695              		.loc 2 310 7 is_stmt 1 view .LVU6451
 24696              	.LBB13718:
 24697              	.LBB13719:
 24698              	.LBI13719:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24699              		.loc 2 930 7 view .LVU6452
 24700              	.LBB13720:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24701              		.loc 2 931 16 is_stmt 0 view .LVU6453
 24702 01e6 049A     		ldr	r2, [sp, #16]
 24703              	.LVL1679:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24704              		.loc 2 931 16 view .LVU6454
 24705              	.LBE13720:
 24706              	.LBE13719:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24707              		.loc 2 312 2 view .LVU6455
 24708 01e8 9042     		cmp	r0, r2
 24709 01ea 3FD8     		bhi	.L534
 24710              	.LVL1680:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24711              		.loc 2 312 2 view .LVU6456
 24712              	.LBE13718:
 24713              	.LBE13717:
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 24714              		.loc 2 480 16 view .LVU6457
 24715 01ec 0144     		add	r1, r1, r0
 24716              	.LVL1681:
 24717              	.LBB13722:
 24718              	.LBI13722:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24719              		.loc 2 329 7 is_stmt 1 view .LVU6458
 24720              	.LBB13723:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 24721              		.loc 2 331 47 is_stmt 0 view .LVU6459
 24722 01ee 121A     		subs	r2, r2, r0
 24723              	.LVL1682:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 24724              		.loc 2 332 19 view .LVU6460
 24725 01f0 9342     		cmp	r3, r2
 24726 01f2 00D2     		bcs	.L515
 24727 01f4 1A46     		mov	r2, r3
 24728              	.LVL1683:
 24729              	.L515:
ARM GAS  /tmp/ccL95Edz.s 			page 812


 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 24730              		.loc 2 332 19 view .LVU6461
 24731              	.LBE13723:
 24732              	.LBE13722:
 24733              	.LBB13724:
 24734              	.LBI13724:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 24735              		.loc 2 263 9 is_stmt 1 view .LVU6462
 24736              	.LBB13725:
 24737              	.LBB13726:
 24738              	.LBI13726:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 24739              		.loc 2 243 9 view .LVU6463
 24740              	.LBB13727:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24741              		.loc 2 247 11 is_stmt 0 view .LVU6464
 24742 01f6 4FF00003 		mov	r3, #0
 24743              	.LVL1684:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24744              		.loc 2 247 11 view .LVU6465
 24745 01fa 0A44     		add	r2, r2, r1
 24746              	.LVL1685:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24747              		.loc 2 247 11 view .LVU6466
 24748 01fc 24A8     		add	r0, sp, #144
 24749              	.LVL1686:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24750              		.loc 2 247 11 view .LVU6467
 24751 01fe FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 24752              	.LVL1687:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24753              		.loc 2 247 11 view .LVU6468
 24754              	.LBE13727:
 24755              	.LBE13726:
 24756              	.LBE13725:
 24757              	.LBE13724:
 24758              	.LBE13714:
 24759              	.LBE13702:
 24760              	.LBE13701:
 24761              	.LBE13696:
 24762              	.LBE13695:
 24763              	.LBB13734:
 24764              	.LBI13734:
6213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 24765              		.loc 2 6213 5 is_stmt 1 view .LVU6469
 24766              	.LBB13735:
 24767              	.LBI13735:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 24768              		.loc 2 6175 5 view .LVU6470
 24769              	.LBB13736:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24770              		.loc 2 6177 35 is_stmt 0 view .LVU6471
 24771 0202 3249     		ldr	r1, .L537+36
 24772 0204 24A8     		add	r0, sp, #144
 24773              	.LVL1688:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24774              		.loc 2 6177 35 view .LVU6472
ARM GAS  /tmp/ccL95Edz.s 			page 813


 24775 0206 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 24776              	.LVL1689:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24777              		.loc 2 6177 35 view .LVU6473
 24778 020a 0446     		mov	r4, r0
 24779              	.LVL1690:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24780              		.loc 2 6177 35 view .LVU6474
 24781              	.LBE13736:
 24782              	.LBE13735:
 24783              	.LBE13734:
 24784              	.LBB13737:
 24785              	.LBI13737:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24786              		.loc 2 657 7 is_stmt 1 view .LVU6475
 24787              	.LBB13738:
 24788              	.LBI13738:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24789              		.loc 2 229 7 view .LVU6476
 24790              	.LBB13739:
 24791              	.LBB13740:
 24792              	.LBI13740:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 24793              		.loc 2 221 7 view .LVU6477
 24794              	.LBB13741:
 24795              	.LBI13741:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24796              		.loc 2 186 7 view .LVU6478
 24797              	.LBB13742:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24798              		.loc 2 187 28 is_stmt 0 view .LVU6479
 24799 020c 2498     		ldr	r0, [sp, #144]
 24800              	.LVL1691:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24801              		.loc 2 187 28 view .LVU6480
 24802              	.LBE13742:
 24803              	.LBE13741:
 24804              	.LBB13743:
 24805              	.LBI13743:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24806              		.loc 2 200 7 is_stmt 1 view .LVU6481
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24807              		.loc 2 200 7 is_stmt 0 view .LVU6482
 24808              	.LBE13743:
 24809              	.LBE13740:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24810              		.loc 2 231 2 view .LVU6483
 24811 020e 26AB     		add	r3, sp, #152
 24812 0210 9842     		cmp	r0, r3
 24813 0212 01D0     		beq	.L516
 24814              	.LVL1692:
 24815              	.LBB13744:
 24816              	.LBI13744:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24817              		.loc 2 236 7 is_stmt 1 view .LVU6484
 24818              	.LBB13745:
 24819              	.LBB13746:
ARM GAS  /tmp/ccL95Edz.s 			page 814


 24820              	.LBI13746:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24821              		.loc 3 469 7 view .LVU6485
 24822              	.LBB13747:
 24823              	.LBI13747:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24824              		.loc 4 119 7 view .LVU6486
 24825              	.LBB13748:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24826              		.loc 4 128 19 is_stmt 0 view .LVU6487
 24827 0214 FFF7FEFF 		bl	_ZdlPv
 24828              	.LVL1693:
 24829              	.L516:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24830              		.loc 4 128 19 view .LVU6488
 24831              	.LBE13748:
 24832              	.LBE13747:
 24833              	.LBE13746:
 24834              	.LBE13745:
 24835              	.LBE13744:
 24836              	.LBE13739:
 24837              	.LBE13738:
 24838              	.LBB13749:
 24839              	.LBI13749:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24840              		.loc 2 150 14 is_stmt 1 view .LVU6489
 24841              	.LBB13750:
 24842              	.LBI13750:
 24843              		.loc 5 153 7 view .LVU6490
 24844              	.LBB13751:
 24845              	.LBI13751:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24846              		.loc 4 89 7 view .LVU6491
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24847              		.loc 4 89 7 is_stmt 0 view .LVU6492
 24848              	.LBE13751:
 24849              	.LBE13750:
 24850              	.LBE13749:
 24851              	.LBE13737:
  88:alohal/filesystem/filesystem.cpp ****         content += "\r\n";
 24852              		.loc 17 88 5 view .LVU6493
 24853 0218 74BB     		cbnz	r4, .L535
 24854              	.L517:
  91:alohal/filesystem/filesystem.cpp ****     return 0;
 24855              		.loc 17 91 5 is_stmt 1 view .LVU6494
 24856 021a BD68     		ldr	r5, [r7, #8]
 24857              	.LVL1694:
 24858              	.LBB13752:
 24859              	.LBI13752:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 24860              		.loc 2 448 7 view .LVU6495
 24861              	.LBB13753:
 24862              	.LBB13754:
 24863              	.LBB13755:
 24864              	.LBI13755:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24865              		.loc 2 190 7 view .LVU6496
ARM GAS  /tmp/ccL95Edz.s 			page 815


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24866              		.loc 2 190 7 is_stmt 0 view .LVU6497
 24867              	.LBE13755:
 24868              	.LBB13756:
 24869              	.LBI13756:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 24870              		.loc 2 290 7 is_stmt 1 view .LVU6498
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 24871              		.loc 2 290 7 is_stmt 0 view .LVU6499
 24872              	.LBE13756:
 24873              	.LBB13757:
 24874              	.LBI13757:
 24875              		.loc 19 97 19 is_stmt 1 view .LVU6500
 24876              	.LBB13758:
 24877              	.LBI13758:
 24878              		.loc 3 514 7 view .LVU6501
 24879              	.LBB13759:
 24880              	.LBI13759:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24881              		.loc 5 141 7 view .LVU6502
 24882              	.LBB13760:
 24883              	.LBI13760:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24884              		.loc 4 83 7 view .LVU6503
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24885              		.loc 4 83 7 is_stmt 0 view .LVU6504
 24886              	.LBE13760:
 24887              	.LBE13759:
 24888              	.LBE13758:
 24889              	.LBE13757:
 24890              	.LBB13761:
 24891              	.LBI13761:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 24892              		.loc 2 159 2 is_stmt 1 view .LVU6505
 24893              	.LBB13762:
 24894              	.LBB13763:
 24895              	.LBB13764:
 24896              	.LBI13764:
 24897              		.loc 9 99 5 view .LVU6506
 24898              		.loc 9 99 5 is_stmt 0 view .LVU6507
 24899              	.LBE13764:
 24900              	.LBB13765:
 24901              	.LBI13765:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24902              		.loc 5 141 7 is_stmt 1 view .LVU6508
 24903              	.LBB13766:
 24904              	.LBI13766:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24905              		.loc 4 83 7 view .LVU6509
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24906              		.loc 4 83 7 is_stmt 0 view .LVU6510
 24907              	.LBE13766:
 24908              	.LBE13765:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24909              		.loc 2 160 46 view .LVU6511
 24910 021c 2CAC     		add	r4, sp, #176
 24911              	.LVL1695:
ARM GAS  /tmp/ccL95Edz.s 			page 816


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24912              		.loc 2 160 46 view .LVU6512
 24913 021e 2A94     		str	r4, [sp, #168]
 24914              	.LVL1696:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24915              		.loc 2 160 46 view .LVU6513
 24916              	.LBE13763:
 24917              	.LBE13762:
 24918              	.LBE13761:
 24919              	.LBB13767:
 24920              	.LBI13767:
 24921              		.loc 5 153 7 is_stmt 1 view .LVU6514
 24922              	.LBB13768:
 24923              	.LBI13768:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24924              		.loc 4 89 7 view .LVU6515
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24925              		.loc 4 89 7 is_stmt 0 view .LVU6516
 24926              	.LBE13768:
 24927              	.LBE13767:
 24928              	.LBB13769:
 24929              	.LBI13769:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24930              		.loc 2 186 7 is_stmt 1 view .LVU6517
 24931              	.LBB13770:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24932              		.loc 2 187 28 is_stmt 0 view .LVU6518
 24933 0220 0399     		ldr	r1, [sp, #12]
 24934              	.LVL1697:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24935              		.loc 2 187 28 view .LVU6519
 24936              	.LBE13770:
 24937              	.LBE13769:
 24938              	.LBB13771:
 24939              	.LBI13771:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24940              		.loc 2 186 7 is_stmt 1 view .LVU6520
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24941              		.loc 2 186 7 is_stmt 0 view .LVU6521
 24942              	.LBE13771:
 24943              	.LBB13772:
 24944              	.LBI13772:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24945              		.loc 2 936 7 is_stmt 1 view .LVU6522
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24946              		.loc 2 936 7 is_stmt 0 view .LVU6523
 24947              	.LBE13772:
 24948              	.LBB13773:
 24949              	.LBI13773:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 24950              		.loc 2 263 9 is_stmt 1 view .LVU6524
 24951              	.LBB13774:
 24952              	.LBB13775:
 24953              	.LBI13775:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 24954              		.loc 2 243 9 view .LVU6525
 24955              	.LBB13776:
ARM GAS  /tmp/ccL95Edz.s 			page 817


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24956              		.loc 2 247 11 is_stmt 0 view .LVU6526
 24957 0222 4FF00003 		mov	r3, #0
 24958 0226 049A     		ldr	r2, [sp, #16]
 24959 0228 0A44     		add	r2, r2, r1
 24960              	.LVL1698:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24961              		.loc 2 247 11 view .LVU6527
 24962 022a 2AA8     		add	r0, sp, #168
 24963              	.LVL1699:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24964              		.loc 2 247 11 view .LVU6528
 24965 022c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 24966              	.LVL1700:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24967              		.loc 2 247 11 view .LVU6529
 24968              	.LBE13776:
 24969              	.LBE13775:
 24970              	.LBE13774:
 24971              	.LBE13773:
 24972              	.LBE13754:
 24973              	.LBE13753:
 24974              	.LBE13752:
  91:alohal/filesystem/filesystem.cpp ****     return 0;
 24975              		.loc 17 91 15 view .LVU6530
 24976 0230 2AA9     		add	r1, sp, #168
 24977 0232 2846     		mov	r0, r5
 24978 0234 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 24979              	.LVL1701:
 24980              	.LBB13777:
 24981              	.LBI13777:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24982              		.loc 2 657 7 is_stmt 1 view .LVU6531
 24983              	.LBB13778:
 24984              	.LBI13778:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24985              		.loc 2 229 7 view .LVU6532
 24986              	.LBB13779:
 24987              	.LBB13780:
 24988              	.LBI13780:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 24989              		.loc 2 221 7 view .LVU6533
 24990              	.LBB13781:
 24991              	.LBI13781:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24992              		.loc 2 186 7 view .LVU6534
 24993              	.LBB13782:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24994              		.loc 2 187 28 is_stmt 0 view .LVU6535
 24995 0238 2A98     		ldr	r0, [sp, #168]
 24996              	.LVL1702:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24997              		.loc 2 187 28 view .LVU6536
 24998              	.LBE13782:
 24999              	.LBE13781:
 25000              	.LBB13783:
 25001              	.LBI13783:
ARM GAS  /tmp/ccL95Edz.s 			page 818


 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25002              		.loc 2 200 7 is_stmt 1 view .LVU6537
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25003              		.loc 2 200 7 is_stmt 0 view .LVU6538
 25004              	.LBE13783:
 25005              	.LBE13780:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25006              		.loc 2 231 2 view .LVU6539
 25007 023a A042     		cmp	r0, r4
 25008 023c 01D0     		beq	.L519
 25009              	.LVL1703:
 25010              	.LBB13784:
 25011              	.LBI13784:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25012              		.loc 2 236 7 is_stmt 1 view .LVU6540
 25013              	.LBB13785:
 25014              	.LBB13786:
 25015              	.LBI13786:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25016              		.loc 3 469 7 view .LVU6541
 25017              	.LBB13787:
 25018              	.LBI13787:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25019              		.loc 4 119 7 view .LVU6542
 25020              	.LBB13788:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25021              		.loc 4 128 19 is_stmt 0 view .LVU6543
 25022 023e FFF7FEFF 		bl	_ZdlPv
 25023              	.LVL1704:
 25024              	.L519:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25025              		.loc 4 128 19 view .LVU6544
 25026              	.LBE13788:
 25027              	.LBE13787:
 25028              	.LBE13786:
 25029              	.LBE13785:
 25030              	.LBE13784:
 25031              	.LBE13779:
 25032              	.LBE13778:
 25033              	.LBB13789:
 25034              	.LBI13789:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25035              		.loc 2 150 14 is_stmt 1 view .LVU6545
 25036              	.LBB13790:
 25037              	.LBI13790:
 25038              		.loc 5 153 7 view .LVU6546
 25039              	.LBB13791:
 25040              	.LBI13791:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25041              		.loc 4 89 7 view .LVU6547
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25042              		.loc 4 89 7 is_stmt 0 view .LVU6548
 25043              	.LBE13791:
 25044              	.LBE13790:
 25045              	.LBE13789:
 25046              	.LBE13777:
  92:alohal/filesystem/filesystem.cpp **** }
ARM GAS  /tmp/ccL95Edz.s 			page 819


 25047              		.loc 17 92 5 is_stmt 1 view .LVU6549
 25048              	.LBB13792:
 25049              	.LBI13792:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25050              		.loc 2 657 7 view .LVU6550
 25051              	.LBB13793:
 25052              	.LBB13794:
 25053              	.LBB13795:
 25054              	.LBI13795:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25055              		.loc 2 229 7 view .LVU6551
 25056              	.LBB13796:
 25057              	.LBB13797:
 25058              	.LBI13797:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25059              		.loc 2 221 7 view .LVU6552
 25060              	.LBB13798:
 25061              	.LBI13798:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25062              		.loc 2 186 7 view .LVU6553
 25063              	.LBB13799:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25064              		.loc 2 187 28 is_stmt 0 view .LVU6554
 25065 0242 0398     		ldr	r0, [sp, #12]
 25066              	.LVL1705:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25067              		.loc 2 187 28 view .LVU6555
 25068              	.LBE13799:
 25069              	.LBE13798:
 25070              	.LBB13800:
 25071              	.LBI13800:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25072              		.loc 2 200 7 is_stmt 1 view .LVU6556
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25073              		.loc 2 200 7 is_stmt 0 view .LVU6557
 25074              	.LBE13800:
 25075              	.LBE13797:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25076              		.loc 2 231 2 view .LVU6558
 25077 0244 05AB     		add	r3, sp, #20
 25078 0246 9842     		cmp	r0, r3
 25079 0248 01D0     		beq	.L520
 25080              	.LVL1706:
 25081              	.LBB13801:
 25082              	.LBI13801:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25083              		.loc 2 236 7 is_stmt 1 view .LVU6559
 25084              	.LBB13802:
 25085              	.LBB13803:
 25086              	.LBI13803:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25087              		.loc 3 469 7 view .LVU6560
 25088              	.LBB13804:
 25089              	.LBI13804:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25090              		.loc 4 119 7 view .LVU6561
 25091              	.LBB13805:
ARM GAS  /tmp/ccL95Edz.s 			page 820


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25092              		.loc 4 128 19 is_stmt 0 view .LVU6562
 25093 024a FFF7FEFF 		bl	_ZdlPv
 25094              	.LVL1707:
 25095              	.L520:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25096              		.loc 4 128 19 view .LVU6563
 25097              	.LBE13805:
 25098              	.LBE13804:
 25099              	.LBE13803:
 25100              	.LBE13802:
 25101              	.LBE13801:
 25102              	.LBE13796:
 25103              	.LBE13795:
 25104              	.LBB13806:
 25105              	.LBI13806:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25106              		.loc 2 150 14 is_stmt 1 view .LVU6564
 25107              	.LBB13807:
 25108              	.LBI13807:
 25109              		.loc 5 153 7 view .LVU6565
 25110              	.LBB13808:
 25111              	.LBI13808:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25112              		.loc 4 89 7 view .LVU6566
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25113              		.loc 4 89 7 is_stmt 0 view .LVU6567
 25114              	.LBE13808:
 25115              	.LBE13807:
 25116              	.LBE13806:
 25117              	.LBE13794:
 25118              	.LBE13793:
 25119              	.LBE13792:
  92:alohal/filesystem/filesystem.cpp **** }
 25120              		.loc 17 92 12 view .LVU6568
 25121 024e 0024     		movs	r4, #0
 25122              	.LVL1708:
 25123              	.L496:
 25124              	.LBB13809:
 25125              	.LBI13809:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25126              		.loc 2 657 7 is_stmt 1 view .LVU6569
 25127              	.LBB13810:
 25128              	.LBI13810:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25129              		.loc 2 229 7 view .LVU6570
 25130              	.LBB13811:
 25131              	.LBB13812:
 25132              	.LBI13812:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25133              		.loc 2 221 7 view .LVU6571
 25134              	.LBB13813:
 25135              	.LBI13813:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25136              		.loc 2 186 7 view .LVU6572
 25137              	.LBB13814:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 821


 25138              		.loc 2 187 28 is_stmt 0 view .LVU6573
 25139 0250 0998     		ldr	r0, [sp, #36]
 25140              	.LVL1709:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25141              		.loc 2 187 28 view .LVU6574
 25142              	.LBE13814:
 25143              	.LBE13813:
 25144              	.LBB13815:
 25145              	.LBI13815:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25146              		.loc 2 200 7 is_stmt 1 view .LVU6575
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25147              		.loc 2 200 7 is_stmt 0 view .LVU6576
 25148              	.LBE13815:
 25149              	.LBE13812:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25150              		.loc 2 231 2 view .LVU6577
 25151 0252 0BAB     		add	r3, sp, #44
 25152 0254 9842     		cmp	r0, r3
 25153 0256 01D0     		beq	.L487
 25154              	.LVL1710:
 25155              	.LBB13816:
 25156              	.LBI13816:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25157              		.loc 2 236 7 is_stmt 1 view .LVU6578
 25158              	.LBB13817:
 25159              	.LBB13818:
 25160              	.LBI13818:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25161              		.loc 3 469 7 view .LVU6579
 25162              	.LBB13819:
 25163              	.LBI13819:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25164              		.loc 4 119 7 view .LVU6580
 25165              	.LBB13820:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25166              		.loc 4 128 19 is_stmt 0 view .LVU6581
 25167 0258 FFF7FEFF 		bl	_ZdlPv
 25168              	.LVL1711:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25169              		.loc 4 128 19 view .LVU6582
 25170              	.LBE13820:
 25171              	.LBE13819:
 25172              	.LBE13818:
 25173              	.LBE13817:
 25174              	.LBE13816:
 25175              	.LBE13811:
 25176              	.LBE13810:
 25177              	.LBB13821:
 25178              	.LBI13821:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25179              		.loc 2 150 14 is_stmt 1 view .LVU6583
 25180              	.LBB13822:
 25181              	.LBI13822:
 25182              		.loc 5 153 7 view .LVU6584
 25183              	.LBB13823:
 25184              	.LBI13823:
ARM GAS  /tmp/ccL95Edz.s 			page 822


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25185              		.loc 4 89 7 view .LVU6585
 25186              	.L487:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25187              		.loc 4 89 7 is_stmt 0 view .LVU6586
 25188              	.LBE13823:
 25189              	.LBE13822:
 25190              	.LBE13821:
 25191              	.LBE13809:
  93:alohal/filesystem/filesystem.cpp **** 
 25192              		.loc 17 93 1 view .LVU6587
 25193 025c 2046     		mov	r0, r4
 25194 025e 31B0     		add	sp, sp, #196
 25195              	.LCFI85:
 25196              		.cfi_remember_state
 25197              		.cfi_def_cfa_offset 20
 25198              		@ sp needed
 25199 0260 F0BD     		pop	{r4, r5, r6, r7, pc}
 25200              	.LVL1712:
 25201              	.L533:
 25202              	.LCFI86:
 25203              		.cfi_restore_state
 25204              	.LBB13824:
 25205              	.LBB13733:
 25206              	.LBB13731:
 25207              	.LBB13700:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 25208              		.loc 2 313 28 view .LVU6588
 25209 0262 0246     		mov	r2, r0
 25210 0264 1A49     		ldr	r1, .L537+40
 25211 0266 1B48     		ldr	r0, .L537+44
 25212              	.LVL1713:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 25213              		.loc 2 313 28 view .LVU6589
 25214 0268 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 25215              	.LVL1714:
 25216              	.L534:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 25217              		.loc 2 313 28 view .LVU6590
 25218              	.LBE13700:
 25219              	.LBE13731:
 25220              	.LBB13732:
 25221              	.LBB13730:
 25222              	.LBB13729:
 25223              	.LBB13728:
 25224              	.LBB13721:
 25225 026c 1346     		mov	r3, r2
 25226 026e 0246     		mov	r2, r0
 25227              	.LVL1715:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 25228              		.loc 2 313 28 view .LVU6591
 25229 0270 1949     		ldr	r1, .L537+48
 25230 0272 1848     		ldr	r0, .L537+44
 25231              	.LVL1716:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 25232              		.loc 2 313 28 view .LVU6592
 25233 0274 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
ARM GAS  /tmp/ccL95Edz.s 			page 823


 25234              	.LVL1717:
 25235              	.L535:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 25236              		.loc 2 313 28 view .LVU6593
 25237              	.LBE13721:
 25238              	.LBE13728:
 25239              	.LBE13729:
 25240              	.LBE13730:
 25241              	.LBE13732:
 25242              	.LBE13733:
 25243              	.LBE13824:
  89:alohal/filesystem/filesystem.cpp ****     }
 25244              		.loc 17 89 9 is_stmt 1 view .LVU6594
 25245              	.LBB13825:
 25246              	.LBI13825:
1177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__s); }
 25247              		.loc 2 1177 7 view .LVU6595
 25248              	.LBB13826:
 25249              	.LBI13826:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25250              		.loc 2 1263 7 view .LVU6596
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25251              		.loc 2 1263 7 is_stmt 0 view .LVU6597
 25252              	.LBE13826:
 25253              	.LBE13825:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 25254              		.loc 8 332 2 is_stmt 1 view .LVU6598
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 25255              		.loc 8 335 2 view .LVU6599
 25256              	.LBB13834:
 25257              	.LBB13833:
 25258              	.LBB13827:
 25259              	.LBB13828:
 25260              	.LBI13828:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25261              		.loc 2 320 7 view .LVU6600
 25262              	.LBB13829:
 25263              	.LBB13830:
 25264              	.LBI13830:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25265              		.loc 2 930 7 view .LVU6601
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25266              		.loc 2 930 7 is_stmt 0 view .LVU6602
 25267              	.LBE13830:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 25268              		.loc 2 322 2 view .LVU6603
 25269 0278 049B     		ldr	r3, [sp, #16]
 25270 027a C3F17F53 		rsb	r3, r3, #1069547520
 25271 027e 03F57F13 		add	r3, r3, #4177920
 25272 0282 03F57F53 		add	r3, r3, #16320
 25273 0286 3F33     		adds	r3, r3, #63
 25274 0288 012B     		cmp	r3, #1
 25275 028a 05D9     		bls	.L536
 25276              	.LVL1718:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 25277              		.loc 2 322 2 view .LVU6604
 25278              	.LBE13829:
ARM GAS  /tmp/ccL95Edz.s 			page 824


 25279              	.LBE13828:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25280              		.loc 2 1268 27 view .LVU6605
 25281 028c 0222     		movs	r2, #2
 25282 028e 0F49     		ldr	r1, .L537+36
 25283 0290 03A8     		add	r0, sp, #12
 25284              	.LVL1719:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25285              		.loc 2 1268 27 view .LVU6606
 25286 0292 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 25287              	.LVL1720:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25288              		.loc 2 1268 27 view .LVU6607
 25289 0296 C0E7     		b	.L517
 25290              	.LVL1721:
 25291              	.L536:
 25292              	.LBB13832:
 25293              	.LBB13831:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25294              		.loc 2 323 24 view .LVU6608
 25295 0298 1048     		ldr	r0, .L537+52
 25296 029a FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 25297              	.LVL1722:
 25298              	.L523:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25299              		.loc 2 323 24 view .LVU6609
 25300              	.LBE13831:
 25301              	.LBE13832:
 25302              	.LBE13827:
 25303              	.LBE13833:
 25304              	.LBE13834:
  73:alohal/filesystem/filesystem.cpp ****     }
 25305              		.loc 17 73 16 view .LVU6610
 25306 029e 1624     		movs	r4, #22
 25307 02a0 D6E7     		b	.L496
 25308              	.L538:
 25309 02a2 00BFAFF3 		.align	3
 25309      0080
 25310              	.L537:
 25311 02a8 00000000 		.word	0
 25312 02ac 00000000 		.word	0
 25313 02b0 ABAAAAAA 		.word	-1431655765
 25314 02b4 55555505 		.word	89478485
 25315 02b8 18000000 		.word	.LC19
 25316 02bc 24000000 		.word	.LC24
 25317 02c0 00000000 		.word	vsnprintf
 25318 02c4 31000000 		.word	.LC21+49
 25319 02c8 20000000 		.word	.LC23+32
 25320 02cc 30000000 		.word	.LC4
 25321 02d0 28000000 		.word	.LC25
 25322 02d4 1C000000 		.word	.LC8
 25323 02d8 40000000 		.word	.LC26
 25324 02dc 00000000 		.word	.LC0
 25325              		.cfi_endproc
 25326              	.LFE3372:
 25328              		.section	.rodata._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8F
 25329              		.align	2
ARM GAS  /tmp/ccL95Edz.s 			page 825


 25330              	.LC27:
 25331 0000 456E7472 		.ascii	"Entry with that already exists in filesystem: \000"
 25331      79207769 
 25331      74682074 
 25331      68617420 
 25331      616C7265 
 25332 002f 00       		.align	2
 25333              	.LC28:
 25334 0030 43616E6E 		.ascii	"Cannot find parent \015\012\000"
 25334      6F742066 
 25334      696E6420 
 25334      70617265 
 25334      6E74200D 
 25335 0046 0000     		.align	2
 25336              	.LC29:
 25337 0048 50617265 		.ascii	"Parent is not a directory \015\012\000"
 25337      6E742069 
 25337      73206E6F 
 25337      74206120 
 25337      64697265 
 25338              		.section	.text._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_
 25339              		.align	1
 25340              		.global	_ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry
 25341              		.syntax unified
 25342              		.thumb
 25343              		.thumb_func
 25344              		.fpu fpv4-sp-d16
 25346              	_ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry:
 25347              	.LVL1723:
 25348              	.LFB3401:
 220:alohal/filesystem/filesystem.cpp **** 
 221:alohal/filesystem/filesystem.cpp **** int Filesystem::Make_directory(string path){
 222:alohal/filesystem/filesystem.cpp ****     string directory_name = path.substr(path.find_last_of("/") + 1);
 223:alohal/filesystem/filesystem.cpp ****     Directory *new_directory = new Directory(directory_name);
 224:alohal/filesystem/filesystem.cpp ****     return Add_entry(path, new_directory);
 225:alohal/filesystem/filesystem.cpp **** }
 226:alohal/filesystem/filesystem.cpp **** 
 227:alohal/filesystem/filesystem.cpp **** int Filesystem::Make_file(string path, string content){
 228:alohal/filesystem/filesystem.cpp ****     string filename = path.substr(path.find_last_of("/") + 1);
 229:alohal/filesystem/filesystem.cpp ****     File<> *new_file = new File(filename, content);
 230:alohal/filesystem/filesystem.cpp ****     return Add_entry(path, new_file);
 231:alohal/filesystem/filesystem.cpp **** }
 232:alohal/filesystem/filesystem.cpp **** 
 233:alohal/filesystem/filesystem.cpp **** int Filesystem::Add_entry(string path, FS_entry *entry){
 25349              		.loc 17 233 56 is_stmt 1 view -0
 25350              		.cfi_startproc
 25351              		@ args = 0, pretend = 0, frame = 216
 25352              		@ frame_needed = 0, uses_anonymous_args = 0
 25353              		.loc 17 233 56 is_stmt 0 view .LVU6612
 25354 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 25355              	.LCFI87:
 25356              		.cfi_def_cfa_offset 24
 25357              		.cfi_offset 4, -24
 25358              		.cfi_offset 5, -20
 25359              		.cfi_offset 6, -16
 25360              		.cfi_offset 7, -12
 25361              		.cfi_offset 8, -8
ARM GAS  /tmp/ccL95Edz.s 			page 826


 25362              		.cfi_offset 14, -4
 25363 0004 B8B0     		sub	sp, sp, #224
 25364              	.LCFI88:
 25365              		.cfi_def_cfa_offset 248
 25366 0006 0546     		mov	r5, r0
 25367 0008 0C46     		mov	r4, r1
 25368 000a 1746     		mov	r7, r2
 234:alohal/filesystem/filesystem.cpp ****     path = Absolute_path(path);
 25369              		.loc 17 234 5 is_stmt 1 view .LVU6613
 25370              	.LVL1724:
 25371              	.LBB14237:
 25372              	.LBI14237:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 25373              		.loc 2 448 7 view .LVU6614
 25374              	.LBB14238:
 25375              	.LBB14239:
 25376              	.LBB14240:
 25377              	.LBI14240:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25378              		.loc 2 190 7 view .LVU6615
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25379              		.loc 2 190 7 is_stmt 0 view .LVU6616
 25380              	.LBE14240:
 25381              	.LBB14241:
 25382              	.LBI14241:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 25383              		.loc 2 290 7 is_stmt 1 view .LVU6617
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 25384              		.loc 2 290 7 is_stmt 0 view .LVU6618
 25385              	.LBE14241:
 25386              	.LBB14242:
 25387              	.LBI14242:
 25388              		.loc 19 97 19 is_stmt 1 view .LVU6619
 25389              	.LBB14243:
 25390              	.LBI14243:
 25391              		.loc 3 514 7 view .LVU6620
 25392              	.LBB14244:
 25393              	.LBI14244:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 25394              		.loc 5 141 7 view .LVU6621
 25395              	.LBB14245:
 25396              	.LBI14245:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25397              		.loc 4 83 7 view .LVU6622
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25398              		.loc 4 83 7 is_stmt 0 view .LVU6623
 25399              	.LBE14245:
 25400              	.LBE14244:
 25401              	.LBE14243:
 25402              	.LBE14242:
 25403              	.LBB14246:
 25404              	.LBI14246:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 25405              		.loc 2 159 2 is_stmt 1 view .LVU6624
 25406              	.LBB14247:
 25407              	.LBB14248:
 25408              	.LBB14249:
ARM GAS  /tmp/ccL95Edz.s 			page 827


 25409              	.LBI14249:
 25410              		.loc 9 99 5 view .LVU6625
 25411              		.loc 9 99 5 is_stmt 0 view .LVU6626
 25412              	.LBE14249:
 25413              	.LBB14250:
 25414              	.LBI14250:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 25415              		.loc 5 141 7 is_stmt 1 view .LVU6627
 25416              	.LBB14251:
 25417              	.LBI14251:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25418              		.loc 4 83 7 view .LVU6628
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25419              		.loc 4 83 7 is_stmt 0 view .LVU6629
 25420              	.LBE14251:
 25421              	.LBE14250:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25422              		.loc 2 160 46 view .LVU6630
 25423 000c 10AB     		add	r3, sp, #64
 25424              	.LVL1725:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25425              		.loc 2 160 46 view .LVU6631
 25426 000e 0E93     		str	r3, [sp, #56]
 25427              	.LVL1726:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25428              		.loc 2 160 46 view .LVU6632
 25429              	.LBE14248:
 25430              	.LBE14247:
 25431              	.LBE14246:
 25432              	.LBB14252:
 25433              	.LBI14252:
 25434              		.loc 5 153 7 is_stmt 1 view .LVU6633
 25435              	.LBB14253:
 25436              	.LBI14253:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25437              		.loc 4 89 7 view .LVU6634
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25438              		.loc 4 89 7 is_stmt 0 view .LVU6635
 25439              	.LBE14253:
 25440              	.LBE14252:
 25441              	.LBB14254:
 25442              	.LBI14254:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25443              		.loc 2 186 7 is_stmt 1 view .LVU6636
 25444              	.LBB14255:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25445              		.loc 2 187 28 is_stmt 0 view .LVU6637
 25446 0010 0968     		ldr	r1, [r1]
 25447              	.LVL1727:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25448              		.loc 2 187 28 view .LVU6638
 25449              	.LBE14255:
 25450              	.LBE14254:
 25451              	.LBB14256:
 25452              	.LBI14256:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25453              		.loc 2 186 7 is_stmt 1 view .LVU6639
ARM GAS  /tmp/ccL95Edz.s 			page 828


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25454              		.loc 2 186 7 is_stmt 0 view .LVU6640
 25455              	.LBE14256:
 25456              	.LBB14257:
 25457              	.LBI14257:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25458              		.loc 2 936 7 is_stmt 1 view .LVU6641
 25459              	.LBB14258:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25460              		.loc 2 937 16 is_stmt 0 view .LVU6642
 25461 0012 6268     		ldr	r2, [r4, #4]
 25462              	.LVL1728:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25463              		.loc 2 937 16 view .LVU6643
 25464              	.LBE14258:
 25465              	.LBE14257:
 25466              	.LBB14259:
 25467              	.LBI14259:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 25468              		.loc 2 263 9 is_stmt 1 view .LVU6644
 25469              	.LBB14260:
 25470              	.LBB14261:
 25471              	.LBI14261:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 25472              		.loc 2 243 9 view .LVU6645
 25473              	.LBB14262:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25474              		.loc 2 247 11 is_stmt 0 view .LVU6646
 25475 0014 4FF00003 		mov	r3, #0
 25476 0018 0A44     		add	r2, r2, r1
 25477              	.LVL1729:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25478              		.loc 2 247 11 view .LVU6647
 25479 001a 0EA8     		add	r0, sp, #56
 25480              	.LVL1730:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25481              		.loc 2 247 11 view .LVU6648
 25482 001c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 25483              	.LVL1731:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25484              		.loc 2 247 11 view .LVU6649
 25485              	.LBE14262:
 25486              	.LBE14261:
 25487              	.LBE14260:
 25488              	.LBE14259:
 25489              	.LBE14239:
 25490              	.LBE14238:
 25491              	.LBE14237:
 25492              		.loc 17 234 25 view .LVU6650
 25493 0020 0EAA     		add	r2, sp, #56
 25494 0022 2946     		mov	r1, r5
 25495 0024 08A8     		add	r0, sp, #32
 25496 0026 FFF7FEFF 		bl	_ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 25497              	.LVL1732:
 25498              	.LBB14263:
 25499              	.LBI14263:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
ARM GAS  /tmp/ccL95Edz.s 			page 829


 25500              		.loc 2 732 7 is_stmt 1 view .LVU6651
 25501              	.LBB14264:
 25502              	.LBI14264:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25503              		.loc 2 221 7 view .LVU6652
 25504              	.LBB14265:
 25505              	.LBI14265:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25506              		.loc 2 186 7 view .LVU6653
 25507              	.LBB14266:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25508              		.loc 2 187 28 is_stmt 0 view .LVU6654
 25509 002a 2346     		mov	r3, r4
 25510 002c 53F8080B 		ldr	r0, [r3], #8
 25511              	.LVL1733:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25512              		.loc 2 187 28 view .LVU6655
 25513              	.LBE14266:
 25514              	.LBE14265:
 25515              	.LBB14267:
 25516              	.LBI14267:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25517              		.loc 2 200 7 is_stmt 1 view .LVU6656
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25518              		.loc 2 200 7 is_stmt 0 view .LVU6657
 25519              	.LBE14267:
 25520              	.LBE14264:
 25521              	.LBB14268:
 25522              	.LBB14269:
 25523              	.LBI14269:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25524              		.loc 2 221 7 is_stmt 1 view .LVU6658
 25525              	.LBB14270:
 25526              	.LBI14270:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25527              		.loc 2 186 7 view .LVU6659
 25528              	.LBB14271:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25529              		.loc 2 187 28 is_stmt 0 view .LVU6660
 25530 0030 0899     		ldr	r1, [sp, #32]
 25531              	.LVL1734:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25532              		.loc 2 187 28 view .LVU6661
 25533              	.LBE14271:
 25534              	.LBE14270:
 25535              	.LBB14272:
 25536              	.LBI14272:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25537              		.loc 2 200 7 is_stmt 1 view .LVU6662
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25538              		.loc 2 200 7 is_stmt 0 view .LVU6663
 25539              	.LBE14272:
 25540              	.LBE14269:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 25541              		.loc 2 747 2 view .LVU6664
 25542 0032 0AAA     		add	r2, sp, #40
 25543 0034 9142     		cmp	r1, r2
ARM GAS  /tmp/ccL95Edz.s 			page 830


 25544 0036 00F08B80 		beq	.L567
 25545              	.LVL1735:
 25546              	.LBB14273:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 25547              		.loc 2 761 6 view .LVU6665
 25548 003a 9842     		cmp	r0, r3
 25549 003c 00F09780 		beq	.L565
 25550              	.LVL1736:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 25551              		.loc 2 767 7 view .LVU6666
 25552 0040 A668     		ldr	r6, [r4, #8]
 25553              	.LVL1737:
 25554              	.L544:
 25555              	.LBB14274:
 25556              	.LBI14274:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 25557              		.loc 2 178 7 is_stmt 1 view .LVU6667
 25558              	.LBB14275:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25559              		.loc 2 179 9 is_stmt 0 view .LVU6668
 25560 0042 2160     		str	r1, [r4]
 25561              	.LVL1738:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25562              		.loc 2 179 9 view .LVU6669
 25563              	.LBE14275:
 25564              	.LBE14274:
 25565              	.LBB14276:
 25566              	.LBI14276:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25567              		.loc 2 936 7 is_stmt 1 view .LVU6670
 25568              	.LBB14277:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25569              		.loc 2 937 16 is_stmt 0 view .LVU6671
 25570 0044 099B     		ldr	r3, [sp, #36]
 25571              	.LVL1739:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25572              		.loc 2 937 16 view .LVU6672
 25573              	.LBE14277:
 25574              	.LBE14276:
 25575              	.LBB14278:
 25576              	.LBI14278:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 25577              		.loc 2 182 7 is_stmt 1 view .LVU6673
 25578              	.LBB14279:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25579              		.loc 2 183 9 is_stmt 0 view .LVU6674
 25580 0046 6360     		str	r3, [r4, #4]
 25581              	.LVL1740:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25582              		.loc 2 183 9 view .LVU6675
 25583              	.LBE14279:
 25584              	.LBE14278:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 25585              		.loc 2 775 6 view .LVU6676
 25586 0048 0A9B     		ldr	r3, [sp, #40]
 25587              	.LVL1741:
 25588              	.LBB14280:
ARM GAS  /tmp/ccL95Edz.s 			page 831


 25589              	.LBI14280:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 25590              		.loc 2 210 7 is_stmt 1 view .LVU6677
 25591              	.LBB14281:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25592              		.loc 2 211 9 is_stmt 0 view .LVU6678
 25593 004a A360     		str	r3, [r4, #8]
 25594              	.LVL1742:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25595              		.loc 2 211 9 view .LVU6679
 25596              	.LBE14281:
 25597              	.LBE14280:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 25598              		.loc 2 776 6 view .LVU6680
 25599 004c 0028     		cmp	r0, #0
 25600 004e 00F09080 		beq	.L545
 25601              	.LVL1743:
 25602              	.LBB14282:
 25603              	.LBI14282:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 25604              		.loc 2 178 7 is_stmt 1 view .LVU6681
 25605              	.LBB14283:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25606              		.loc 2 179 9 is_stmt 0 view .LVU6682
 25607 0052 0890     		str	r0, [sp, #32]
 25608              	.LVL1744:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25609              		.loc 2 179 9 view .LVU6683
 25610              	.LBE14283:
 25611              	.LBE14282:
 25612              	.LBB14284:
 25613              	.LBI14284:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 25614              		.loc 2 210 7 is_stmt 1 view .LVU6684
 25615              	.LBB14285:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25616              		.loc 2 211 9 is_stmt 0 view .LVU6685
 25617 0054 0A96     		str	r6, [sp, #40]
 25618              	.LVL1745:
 25619              	.L543:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25620              		.loc 2 211 9 view .LVU6686
 25621              	.LBE14285:
 25622              	.LBE14284:
 25623              	.LBE14273:
 25624              	.LBE14268:
 25625              	.LBB14309:
 25626              	.LBI14309:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 25627              		.loc 2 1023 7 is_stmt 1 view .LVU6687
 25628              	.LBB14310:
 25629              	.LBI14310:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25630              		.loc 2 214 7 view .LVU6688
 25631              	.LBB14311:
 25632              	.LBI14311:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
ARM GAS  /tmp/ccL95Edz.s 			page 832


 25633              		.loc 2 182 7 view .LVU6689
 25634              	.LBB14312:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25635              		.loc 2 183 9 is_stmt 0 view .LVU6690
 25636 0056 0023     		movs	r3, #0
 25637 0058 0993     		str	r3, [sp, #36]
 25638              	.LVL1746:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25639              		.loc 2 183 9 view .LVU6691
 25640              	.LBE14312:
 25641              	.LBE14311:
 25642              	.LBB14313:
 25643              	.LBI14313:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25644              		.loc 2 186 7 is_stmt 1 view .LVU6692
 25645              	.LBB14314:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25646              		.loc 2 187 28 is_stmt 0 view .LVU6693
 25647 005a 089A     		ldr	r2, [sp, #32]
 25648              	.LVL1747:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25649              		.loc 2 187 28 view .LVU6694
 25650              	.LBE14314:
 25651              	.LBE14313:
 25652              	.LBB14315:
 25653              	.LBI14315:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 25654              		.loc 8 299 7 is_stmt 1 view .LVU6695
 25655              	.LBB14316:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25656              		.loc 8 300 9 view .LVU6696
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25657              		.loc 8 300 14 is_stmt 0 view .LVU6697
 25658 005c 1370     		strb	r3, [r2]
 25659              	.LVL1748:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25660              		.loc 8 300 14 view .LVU6698
 25661              	.LBE14316:
 25662              	.LBE14315:
 25663              	.LBE14310:
 25664              	.LBE14309:
 25665              	.LBE14263:
 25666              	.LBB14318:
 25667              	.LBI14318:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25668              		.loc 2 657 7 is_stmt 1 view .LVU6699
 25669              	.LBB14319:
 25670              	.LBI14319:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25671              		.loc 2 229 7 view .LVU6700
 25672              	.LBB14320:
 25673              	.LBB14321:
 25674              	.LBI14321:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25675              		.loc 2 221 7 view .LVU6701
 25676              	.LBB14322:
 25677              	.LBI14322:
ARM GAS  /tmp/ccL95Edz.s 			page 833


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25678              		.loc 2 186 7 view .LVU6702
 25679              	.LBB14323:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25680              		.loc 2 187 28 is_stmt 0 view .LVU6703
 25681 005e 0898     		ldr	r0, [sp, #32]
 25682              	.LVL1749:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25683              		.loc 2 187 28 view .LVU6704
 25684              	.LBE14323:
 25685              	.LBE14322:
 25686              	.LBB14324:
 25687              	.LBI14324:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25688              		.loc 2 200 7 is_stmt 1 view .LVU6705
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25689              		.loc 2 200 7 is_stmt 0 view .LVU6706
 25690              	.LBE14324:
 25691              	.LBE14321:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25692              		.loc 2 231 2 view .LVU6707
 25693 0060 0AAB     		add	r3, sp, #40
 25694 0062 9842     		cmp	r0, r3
 25695 0064 01D0     		beq	.L546
 25696              	.LVL1750:
 25697              	.LBB14325:
 25698              	.LBI14325:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25699              		.loc 2 236 7 is_stmt 1 view .LVU6708
 25700              	.LBB14326:
 25701              	.LBB14327:
 25702              	.LBI14327:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25703              		.loc 3 469 7 view .LVU6709
 25704              	.LBB14328:
 25705              	.LBI14328:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25706              		.loc 4 119 7 view .LVU6710
 25707              	.LBB14329:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25708              		.loc 4 128 19 is_stmt 0 view .LVU6711
 25709 0066 FFF7FEFF 		bl	_ZdlPv
 25710              	.LVL1751:
 25711              	.L546:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25712              		.loc 4 128 19 view .LVU6712
 25713              	.LBE14329:
 25714              	.LBE14328:
 25715              	.LBE14327:
 25716              	.LBE14326:
 25717              	.LBE14325:
 25718              	.LBE14320:
 25719              	.LBE14319:
 25720              	.LBB14330:
 25721              	.LBI14330:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25722              		.loc 2 150 14 is_stmt 1 view .LVU6713
ARM GAS  /tmp/ccL95Edz.s 			page 834


 25723              	.LBB14331:
 25724              	.LBI14331:
 25725              		.loc 5 153 7 view .LVU6714
 25726              	.LBB14332:
 25727              	.LBI14332:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25728              		.loc 4 89 7 view .LVU6715
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25729              		.loc 4 89 7 is_stmt 0 view .LVU6716
 25730              	.LBE14332:
 25731              	.LBE14331:
 25732              	.LBE14330:
 25733              	.LBE14318:
 25734              	.LBB14333:
 25735              	.LBI14333:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25736              		.loc 2 657 7 is_stmt 1 view .LVU6717
 25737              	.LBB14334:
 25738              	.LBI14334:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25739              		.loc 2 229 7 view .LVU6718
 25740              	.LBB14335:
 25741              	.LBB14336:
 25742              	.LBI14336:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25743              		.loc 2 221 7 view .LVU6719
 25744              	.LBB14337:
 25745              	.LBI14337:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25746              		.loc 2 186 7 view .LVU6720
 25747              	.LBB14338:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25748              		.loc 2 187 28 is_stmt 0 view .LVU6721
 25749 006a 0E98     		ldr	r0, [sp, #56]
 25750              	.LVL1752:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25751              		.loc 2 187 28 view .LVU6722
 25752              	.LBE14338:
 25753              	.LBE14337:
 25754              	.LBB14339:
 25755              	.LBI14339:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25756              		.loc 2 200 7 is_stmt 1 view .LVU6723
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25757              		.loc 2 200 7 is_stmt 0 view .LVU6724
 25758              	.LBE14339:
 25759              	.LBE14336:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25760              		.loc 2 231 2 view .LVU6725
 25761 006c 10AB     		add	r3, sp, #64
 25762 006e 9842     		cmp	r0, r3
 25763 0070 01D0     		beq	.L547
 25764              	.LVL1753:
 25765              	.LBB14340:
 25766              	.LBI14340:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25767              		.loc 2 236 7 is_stmt 1 view .LVU6726
ARM GAS  /tmp/ccL95Edz.s 			page 835


 25768              	.LBB14341:
 25769              	.LBB14342:
 25770              	.LBI14342:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25771              		.loc 3 469 7 view .LVU6727
 25772              	.LBB14343:
 25773              	.LBI14343:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25774              		.loc 4 119 7 view .LVU6728
 25775              	.LBB14344:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25776              		.loc 4 128 19 is_stmt 0 view .LVU6729
 25777 0072 FFF7FEFF 		bl	_ZdlPv
 25778              	.LVL1754:
 25779              	.L547:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25780              		.loc 4 128 19 view .LVU6730
 25781              	.LBE14344:
 25782              	.LBE14343:
 25783              	.LBE14342:
 25784              	.LBE14341:
 25785              	.LBE14340:
 25786              	.LBE14335:
 25787              	.LBE14334:
 25788              	.LBB14345:
 25789              	.LBI14345:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25790              		.loc 2 150 14 is_stmt 1 view .LVU6731
 25791              	.LBB14346:
 25792              	.LBI14346:
 25793              		.loc 5 153 7 view .LVU6732
 25794              	.LBB14347:
 25795              	.LBI14347:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25796              		.loc 4 89 7 view .LVU6733
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25797              		.loc 4 89 7 is_stmt 0 view .LVU6734
 25798              	.LBE14347:
 25799              	.LBE14346:
 25800              	.LBE14345:
 25801              	.LBE14333:
 235:alohal/filesystem/filesystem.cpp ****     if (Entry_exists(path)) {
 25802              		.loc 17 235 5 is_stmt 1 view .LVU6735
 25803              	.LBB14348:
 25804              	.LBI14348:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 25805              		.loc 2 448 7 view .LVU6736
 25806              	.LBB14349:
 25807              	.LBB14350:
 25808              	.LBB14351:
 25809              	.LBI14351:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25810              		.loc 2 190 7 view .LVU6737
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25811              		.loc 2 190 7 is_stmt 0 view .LVU6738
 25812              	.LBE14351:
 25813              	.LBB14352:
ARM GAS  /tmp/ccL95Edz.s 			page 836


 25814              	.LBI14352:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 25815              		.loc 2 290 7 is_stmt 1 view .LVU6739
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 25816              		.loc 2 290 7 is_stmt 0 view .LVU6740
 25817              	.LBE14352:
 25818              	.LBB14353:
 25819              	.LBI14353:
 25820              		.loc 19 97 19 is_stmt 1 view .LVU6741
 25821              	.LBB14354:
 25822              	.LBI14354:
 25823              		.loc 3 514 7 view .LVU6742
 25824              	.LBB14355:
 25825              	.LBI14355:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 25826              		.loc 5 141 7 view .LVU6743
 25827              	.LBB14356:
 25828              	.LBI14356:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25829              		.loc 4 83 7 view .LVU6744
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25830              		.loc 4 83 7 is_stmt 0 view .LVU6745
 25831              	.LBE14356:
 25832              	.LBE14355:
 25833              	.LBE14354:
 25834              	.LBE14353:
 25835              	.LBB14357:
 25836              	.LBI14357:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 25837              		.loc 2 159 2 is_stmt 1 view .LVU6746
 25838              	.LBB14358:
 25839              	.LBB14359:
 25840              	.LBB14360:
 25841              	.LBI14360:
 25842              		.loc 9 99 5 view .LVU6747
 25843              		.loc 9 99 5 is_stmt 0 view .LVU6748
 25844              	.LBE14360:
 25845              	.LBB14361:
 25846              	.LBI14361:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 25847              		.loc 5 141 7 is_stmt 1 view .LVU6749
 25848              	.LBB14362:
 25849              	.LBI14362:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25850              		.loc 4 83 7 view .LVU6750
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25851              		.loc 4 83 7 is_stmt 0 view .LVU6751
 25852              	.LBE14362:
 25853              	.LBE14361:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25854              		.loc 2 160 46 view .LVU6752
 25855 0076 0DF15808 		add	r8, sp, #88
 25856              	.LVL1755:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25857              		.loc 2 160 46 view .LVU6753
 25858 007a CDF85080 		str	r8, [sp, #80]
 25859              	.LVL1756:
ARM GAS  /tmp/ccL95Edz.s 			page 837


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25860              		.loc 2 160 46 view .LVU6754
 25861              	.LBE14359:
 25862              	.LBE14358:
 25863              	.LBE14357:
 25864              	.LBB14363:
 25865              	.LBI14363:
 25866              		.loc 5 153 7 is_stmt 1 view .LVU6755
 25867              	.LBB14364:
 25868              	.LBI14364:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25869              		.loc 4 89 7 view .LVU6756
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25870              		.loc 4 89 7 is_stmt 0 view .LVU6757
 25871              	.LBE14364:
 25872              	.LBE14363:
 25873              	.LBB14365:
 25874              	.LBI14365:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25875              		.loc 2 186 7 is_stmt 1 view .LVU6758
 25876              	.LBB14366:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25877              		.loc 2 187 28 is_stmt 0 view .LVU6759
 25878 007e 2168     		ldr	r1, [r4]
 25879              	.LVL1757:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25880              		.loc 2 187 28 view .LVU6760
 25881              	.LBE14366:
 25882              	.LBE14365:
 25883              	.LBB14367:
 25884              	.LBI14367:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25885              		.loc 2 186 7 is_stmt 1 view .LVU6761
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25886              		.loc 2 186 7 is_stmt 0 view .LVU6762
 25887              	.LBE14367:
 25888              	.LBB14368:
 25889              	.LBI14368:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25890              		.loc 2 936 7 is_stmt 1 view .LVU6763
 25891              	.LBB14369:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25892              		.loc 2 937 16 is_stmt 0 view .LVU6764
 25893 0080 6268     		ldr	r2, [r4, #4]
 25894              	.LVL1758:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25895              		.loc 2 937 16 view .LVU6765
 25896              	.LBE14369:
 25897              	.LBE14368:
 25898              	.LBB14370:
 25899              	.LBI14370:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 25900              		.loc 2 263 9 is_stmt 1 view .LVU6766
 25901              	.LBB14371:
 25902              	.LBB14372:
 25903              	.LBI14372:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
ARM GAS  /tmp/ccL95Edz.s 			page 838


 25904              		.loc 2 243 9 view .LVU6767
 25905              	.LBB14373:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25906              		.loc 2 247 11 is_stmt 0 view .LVU6768
 25907 0082 4FF00003 		mov	r3, #0
 25908 0086 0A44     		add	r2, r2, r1
 25909              	.LVL1759:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25910              		.loc 2 247 11 view .LVU6769
 25911 0088 14A8     		add	r0, sp, #80
 25912              	.LVL1760:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25913              		.loc 2 247 11 view .LVU6770
 25914 008a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 25915              	.LVL1761:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25916              		.loc 2 247 11 view .LVU6771
 25917              	.LBE14373:
 25918              	.LBE14372:
 25919              	.LBE14371:
 25920              	.LBE14370:
 25921              	.LBE14350:
 25922              	.LBE14349:
 25923              	.LBE14348:
 25924              		.loc 17 235 21 view .LVU6772
 25925 008e 14A9     		add	r1, sp, #80
 25926 0090 2846     		mov	r0, r5
 25927 0092 FFF7FEFF 		bl	_ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 25928              	.LVL1762:
 25929 0096 0646     		mov	r6, r0
 25930              	.LVL1763:
 25931              	.LBB14374:
 25932              	.LBI14374:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25933              		.loc 2 657 7 is_stmt 1 view .LVU6773
 25934              	.LBB14375:
 25935              	.LBI14375:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25936              		.loc 2 229 7 view .LVU6774
 25937              	.LBB14376:
 25938              	.LBB14377:
 25939              	.LBI14377:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25940              		.loc 2 221 7 view .LVU6775
 25941              	.LBB14378:
 25942              	.LBI14378:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25943              		.loc 2 186 7 view .LVU6776
 25944              	.LBB14379:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25945              		.loc 2 187 28 is_stmt 0 view .LVU6777
 25946 0098 1498     		ldr	r0, [sp, #80]
 25947              	.LVL1764:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25948              		.loc 2 187 28 view .LVU6778
 25949              	.LBE14379:
 25950              	.LBE14378:
ARM GAS  /tmp/ccL95Edz.s 			page 839


 25951              	.LBB14380:
 25952              	.LBI14380:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25953              		.loc 2 200 7 is_stmt 1 view .LVU6779
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25954              		.loc 2 200 7 is_stmt 0 view .LVU6780
 25955              	.LBE14380:
 25956              	.LBE14377:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25957              		.loc 2 231 2 view .LVU6781
 25958 009a 4045     		cmp	r0, r8
 25959 009c 01D0     		beq	.L548
 25960              	.LVL1765:
 25961              	.LBB14381:
 25962              	.LBI14381:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25963              		.loc 2 236 7 is_stmt 1 view .LVU6782
 25964              	.LBB14382:
 25965              	.LBB14383:
 25966              	.LBI14383:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25967              		.loc 3 469 7 view .LVU6783
 25968              	.LBB14384:
 25969              	.LBI14384:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25970              		.loc 4 119 7 view .LVU6784
 25971              	.LBB14385:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25972              		.loc 4 128 19 is_stmt 0 view .LVU6785
 25973 009e FFF7FEFF 		bl	_ZdlPv
 25974              	.LVL1766:
 25975              	.L548:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25976              		.loc 4 128 19 view .LVU6786
 25977              	.LBE14385:
 25978              	.LBE14384:
 25979              	.LBE14383:
 25980              	.LBE14382:
 25981              	.LBE14381:
 25982              	.LBE14376:
 25983              	.LBE14375:
 25984              	.LBB14386:
 25985              	.LBI14386:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25986              		.loc 2 150 14 is_stmt 1 view .LVU6787
 25987              	.LBB14387:
 25988              	.LBI14387:
 25989              		.loc 5 153 7 view .LVU6788
 25990              	.LBB14388:
 25991              	.LBI14388:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25992              		.loc 4 89 7 view .LVU6789
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25993              		.loc 4 89 7 is_stmt 0 view .LVU6790
 25994              	.LBE14388:
 25995              	.LBE14387:
 25996              	.LBE14386:
ARM GAS  /tmp/ccL95Edz.s 			page 840


 25997              	.LBE14374:
 25998              		.loc 17 235 5 view .LVU6791
 25999 00a2 002E     		cmp	r6, #0
 26000 00a4 68D1     		bne	.L568
 236:alohal/filesystem/filesystem.cpp ****         cli->Print("Entry with that already exists in filesystem: " + path + "\r\n");
 237:alohal/filesystem/filesystem.cpp ****         return EEXIST;
 238:alohal/filesystem/filesystem.cpp ****     }
 239:alohal/filesystem/filesystem.cpp **** 
 240:alohal/filesystem/filesystem.cpp ****     if (path == "") {
 26001              		.loc 17 240 5 is_stmt 1 view .LVU6792
 26002              	.LVL1767:
 26003              	.LBB14389:
 26004              	.LBI14389:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 26005              		.loc 2 6175 5 view .LVU6793
 26006              	.LBB14390:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26007              		.loc 2 6177 35 is_stmt 0 view .LVU6794
 26008 00a6 6849     		ldr	r1, .L574
 26009 00a8 2046     		mov	r0, r4
 26010 00aa FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 26011              	.LVL1768:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26012              		.loc 2 6177 35 view .LVU6795
 26013              	.LBE14390:
 26014              	.LBE14389:
 26015              		.loc 17 240 5 view .LVU6796
 26016 00ae 0028     		cmp	r0, #0
 26017 00b0 00F0A480 		beq	.L569
 26018              	.L556:
 241:alohal/filesystem/filesystem.cpp ****         path = "/";
 242:alohal/filesystem/filesystem.cpp ****     }
 243:alohal/filesystem/filesystem.cpp **** 
 244:alohal/filesystem/filesystem.cpp ****     string parent_directory_name = path.substr(0, path.find_last_of("/"));
 26019              		.loc 17 244 5 is_stmt 1 view .LVU6797
 26020              	.LVL1769:
 26021              	.LBB14391:
 26022              	.LBI14391:
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 26023              		.loc 2 2635 7 view .LVU6798
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 26024              		.loc 2 2635 7 is_stmt 0 view .LVU6799
 26025              	.LBE14391:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 26026              		.loc 8 332 2 is_stmt 1 view .LVU6800
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26027              		.loc 8 335 2 view .LVU6801
 26028              	.LBB14393:
 26029              	.LBB14392:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26030              		.loc 2 2639 64 is_stmt 0 view .LVU6802
 26031 00b4 0123     		movs	r3, #1
 26032 00b6 4FF0FF32 		mov	r2, #-1
 26033 00ba 6449     		ldr	r1, .L574+4
 26034 00bc 2046     		mov	r0, r4
 26035 00be FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
 26036              	.LVL1770:
ARM GAS  /tmp/ccL95Edz.s 			page 841


2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26037              		.loc 2 2639 64 view .LVU6803
 26038              	.LBE14392:
 26039              	.LBE14393:
 26040              	.LBB14394:
 26041              	.LBI14394:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 26042              		.loc 2 2834 7 is_stmt 1 view .LVU6804
 26043              	.LBB14395:
 26044              	.LBI14395:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 26045              		.loc 2 476 7 view .LVU6805
 26046              	.LBB14396:
 26047              	.LBB14397:
 26048              	.LBI14397:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26049              		.loc 2 190 7 view .LVU6806
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26050              		.loc 2 190 7 is_stmt 0 view .LVU6807
 26051              	.LBE14397:
 26052              	.LBB14398:
 26053              	.LBI14398:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 26054              		.loc 5 138 7 is_stmt 1 view .LVU6808
 26055              	.LBB14399:
 26056              	.LBI14399:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26057              		.loc 4 80 7 view .LVU6809
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26058              		.loc 4 80 7 is_stmt 0 view .LVU6810
 26059              	.LBE14399:
 26060              	.LBE14398:
 26061              	.LBB14400:
 26062              	.LBI14400:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 26063              		.loc 2 159 2 is_stmt 1 view .LVU6811
 26064              	.LBB14401:
 26065              	.LBB14402:
 26066              	.LBB14403:
 26067              	.LBI14403:
 26068              		.loc 9 99 5 view .LVU6812
 26069              		.loc 9 99 5 is_stmt 0 view .LVU6813
 26070              	.LBE14403:
 26071              	.LBB14404:
 26072              	.LBI14404:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26073              		.loc 5 141 7 is_stmt 1 view .LVU6814
 26074              	.LBB14405:
 26075              	.LBI14405:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26076              		.loc 4 83 7 view .LVU6815
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26077              		.loc 4 83 7 is_stmt 0 view .LVU6816
 26078              	.LBE14405:
 26079              	.LBE14404:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26080              		.loc 2 160 46 view .LVU6817
ARM GAS  /tmp/ccL95Edz.s 			page 842


 26081 00c2 04AB     		add	r3, sp, #16
 26082              	.LVL1771:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26083              		.loc 2 160 46 view .LVU6818
 26084 00c4 0293     		str	r3, [sp, #8]
 26085              	.LVL1772:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26086              		.loc 2 160 46 view .LVU6819
 26087              	.LBE14402:
 26088              	.LBE14401:
 26089              	.LBE14400:
 26090              	.LBB14406:
 26091              	.LBI14406:
 26092              		.loc 5 153 7 is_stmt 1 view .LVU6820
 26093              	.LBB14407:
 26094              	.LBI14407:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26095              		.loc 4 89 7 view .LVU6821
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26096              		.loc 4 89 7 is_stmt 0 view .LVU6822
 26097              	.LBE14407:
 26098              	.LBE14406:
 26099              	.LBB14408:
 26100              	.LBB14409:
 26101              	.LBI14409:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26102              		.loc 2 186 7 is_stmt 1 view .LVU6823
 26103              	.LBB14410:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26104              		.loc 2 187 28 is_stmt 0 view .LVU6824
 26105 00c6 2168     		ldr	r1, [r4]
 26106              	.LVL1773:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26107              		.loc 2 187 28 view .LVU6825
 26108              	.LBE14410:
 26109              	.LBE14409:
 26110              	.LBB14411:
 26111              	.LBI14411:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26112              		.loc 2 310 7 is_stmt 1 view .LVU6826
 26113              	.LBB14412:
 26114              	.LBI14412:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26115              		.loc 2 930 7 view .LVU6827
 26116              	.LBB14413:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26117              		.loc 2 931 16 is_stmt 0 view .LVU6828
 26118 00c8 6268     		ldr	r2, [r4, #4]
 26119              	.LVL1774:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26120              		.loc 2 931 16 view .LVU6829
 26121              	.LBE14413:
 26122              	.LBE14412:
 26123              	.LBE14411:
 26124              	.LBB14414:
 26125              	.LBI14414:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 843


 26126              		.loc 2 329 7 is_stmt 1 view .LVU6830
 26127              	.LBB14415:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26128              		.loc 2 332 19 is_stmt 0 view .LVU6831
 26129 00ca 9042     		cmp	r0, r2
 26130 00cc 00D2     		bcs	.L557
 26131 00ce 0246     		mov	r2, r0
 26132              	.LVL1775:
 26133              	.L557:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26134              		.loc 2 332 19 view .LVU6832
 26135              	.LBE14415:
 26136              	.LBE14414:
 26137              	.LBB14416:
 26138              	.LBI14416:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26139              		.loc 2 263 9 is_stmt 1 view .LVU6833
 26140              	.LBB14417:
 26141              	.LBB14418:
 26142              	.LBI14418:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 26143              		.loc 2 243 9 view .LVU6834
 26144              	.LBB14419:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26145              		.loc 2 247 11 is_stmt 0 view .LVU6835
 26146 00d0 4FF00003 		mov	r3, #0
 26147 00d4 0A44     		add	r2, r2, r1
 26148              	.LVL1776:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26149              		.loc 2 247 11 view .LVU6836
 26150 00d6 02A8     		add	r0, sp, #8
 26151              	.LVL1777:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26152              		.loc 2 247 11 view .LVU6837
 26153 00d8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 26154              	.LVL1778:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26155              		.loc 2 247 11 view .LVU6838
 26156              	.LBE14419:
 26157              	.LBE14418:
 26158              	.LBE14417:
 26159              	.LBE14416:
 26160              	.LBE14408:
 26161              	.LBE14396:
 26162              	.LBE14395:
 26163              	.LBE14394:
 245:alohal/filesystem/filesystem.cpp **** 
 246:alohal/filesystem/filesystem.cpp ****     Directory *parent_directory = static_cast<Directory *>(Get_entry(parent_directory_name));
 26164              		.loc 17 246 5 is_stmt 1 view .LVU6839
 26165              	.LBB14420:
 26166              	.LBI14420:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 26167              		.loc 2 448 7 view .LVU6840
 26168              	.LBB14421:
 26169              	.LBB14422:
 26170              	.LBB14423:
 26171              	.LBI14423:
ARM GAS  /tmp/ccL95Edz.s 			page 844


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26172              		.loc 2 190 7 view .LVU6841
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26173              		.loc 2 190 7 is_stmt 0 view .LVU6842
 26174              	.LBE14423:
 26175              	.LBB14424:
 26176              	.LBI14424:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26177              		.loc 2 290 7 is_stmt 1 view .LVU6843
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26178              		.loc 2 290 7 is_stmt 0 view .LVU6844
 26179              	.LBE14424:
 26180              	.LBB14425:
 26181              	.LBI14425:
 26182              		.loc 19 97 19 is_stmt 1 view .LVU6845
 26183              	.LBB14426:
 26184              	.LBI14426:
 26185              		.loc 3 514 7 view .LVU6846
 26186              	.LBB14427:
 26187              	.LBI14427:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26188              		.loc 5 141 7 view .LVU6847
 26189              	.LBB14428:
 26190              	.LBI14428:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26191              		.loc 4 83 7 view .LVU6848
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26192              		.loc 4 83 7 is_stmt 0 view .LVU6849
 26193              	.LBE14428:
 26194              	.LBE14427:
 26195              	.LBE14426:
 26196              	.LBE14425:
 26197              	.LBB14429:
 26198              	.LBI14429:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 26199              		.loc 2 159 2 is_stmt 1 view .LVU6850
 26200              	.LBB14430:
 26201              	.LBB14431:
 26202              	.LBB14432:
 26203              	.LBI14432:
 26204              		.loc 9 99 5 view .LVU6851
 26205              		.loc 9 99 5 is_stmt 0 view .LVU6852
 26206              	.LBE14432:
 26207              	.LBB14433:
 26208              	.LBI14433:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26209              		.loc 5 141 7 is_stmt 1 view .LVU6853
 26210              	.LBB14434:
 26211              	.LBI14434:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26212              		.loc 4 83 7 view .LVU6854
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26213              		.loc 4 83 7 is_stmt 0 view .LVU6855
 26214              	.LBE14434:
 26215              	.LBE14433:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26216              		.loc 2 160 46 view .LVU6856
ARM GAS  /tmp/ccL95Edz.s 			page 845


 26217 00dc 28AE     		add	r6, sp, #160
 26218              	.LVL1779:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26219              		.loc 2 160 46 view .LVU6857
 26220 00de 2696     		str	r6, [sp, #152]
 26221              	.LVL1780:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26222              		.loc 2 160 46 view .LVU6858
 26223              	.LBE14431:
 26224              	.LBE14430:
 26225              	.LBE14429:
 26226              	.LBB14435:
 26227              	.LBI14435:
 26228              		.loc 5 153 7 is_stmt 1 view .LVU6859
 26229              	.LBB14436:
 26230              	.LBI14436:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26231              		.loc 4 89 7 view .LVU6860
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26232              		.loc 4 89 7 is_stmt 0 view .LVU6861
 26233              	.LBE14436:
 26234              	.LBE14435:
 26235              	.LBB14437:
 26236              	.LBI14437:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26237              		.loc 2 186 7 is_stmt 1 view .LVU6862
 26238              	.LBB14438:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26239              		.loc 2 187 28 is_stmt 0 view .LVU6863
 26240 00e0 0299     		ldr	r1, [sp, #8]
 26241              	.LVL1781:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26242              		.loc 2 187 28 view .LVU6864
 26243              	.LBE14438:
 26244              	.LBE14437:
 26245              	.LBB14439:
 26246              	.LBI14439:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26247              		.loc 2 186 7 is_stmt 1 view .LVU6865
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26248              		.loc 2 186 7 is_stmt 0 view .LVU6866
 26249              	.LBE14439:
 26250              	.LBB14440:
 26251              	.LBI14440:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26252              		.loc 2 936 7 is_stmt 1 view .LVU6867
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26253              		.loc 2 936 7 is_stmt 0 view .LVU6868
 26254              	.LBE14440:
 26255              	.LBB14441:
 26256              	.LBI14441:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26257              		.loc 2 263 9 is_stmt 1 view .LVU6869
 26258              	.LBB14442:
 26259              	.LBB14443:
 26260              	.LBI14443:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
ARM GAS  /tmp/ccL95Edz.s 			page 846


 26261              		.loc 2 243 9 view .LVU6870
 26262              	.LBB14444:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26263              		.loc 2 247 11 is_stmt 0 view .LVU6871
 26264 00e2 4FF00003 		mov	r3, #0
 26265 00e6 039A     		ldr	r2, [sp, #12]
 26266 00e8 0A44     		add	r2, r2, r1
 26267              	.LVL1782:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26268              		.loc 2 247 11 view .LVU6872
 26269 00ea 26A8     		add	r0, sp, #152
 26270              	.LVL1783:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26271              		.loc 2 247 11 view .LVU6873
 26272 00ec FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 26273              	.LVL1784:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26274              		.loc 2 247 11 view .LVU6874
 26275              	.LBE14444:
 26276              	.LBE14443:
 26277              	.LBE14442:
 26278              	.LBE14441:
 26279              	.LBE14422:
 26280              	.LBE14421:
 26281              	.LBE14420:
 26282              		.loc 17 246 69 view .LVU6875
 26283 00f0 26A9     		add	r1, sp, #152
 26284 00f2 2846     		mov	r0, r5
 26285 00f4 FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 26286              	.LVL1785:
 26287 00f8 0446     		mov	r4, r0
 26288              	.LVL1786:
 26289              	.LBB14445:
 26290              	.LBI14445:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 26291              		.loc 2 657 7 is_stmt 1 view .LVU6876
 26292              	.LBB14446:
 26293              	.LBI14446:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26294              		.loc 2 229 7 view .LVU6877
 26295              	.LBB14447:
 26296              	.LBB14448:
 26297              	.LBI14448:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 26298              		.loc 2 221 7 view .LVU6878
 26299              	.LBB14449:
 26300              	.LBI14449:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26301              		.loc 2 186 7 view .LVU6879
 26302              	.LBB14450:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26303              		.loc 2 187 28 is_stmt 0 view .LVU6880
 26304 00fa 2698     		ldr	r0, [sp, #152]
 26305              	.LVL1787:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26306              		.loc 2 187 28 view .LVU6881
 26307              	.LBE14450:
ARM GAS  /tmp/ccL95Edz.s 			page 847


 26308              	.LBE14449:
 26309              	.LBB14451:
 26310              	.LBI14451:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26311              		.loc 2 200 7 is_stmt 1 view .LVU6882
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26312              		.loc 2 200 7 is_stmt 0 view .LVU6883
 26313              	.LBE14451:
 26314              	.LBE14448:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 26315              		.loc 2 231 2 view .LVU6884
 26316 00fc B042     		cmp	r0, r6
 26317 00fe 01D0     		beq	.L558
 26318              	.LVL1788:
 26319              	.LBB14452:
 26320              	.LBI14452:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 26321              		.loc 2 236 7 is_stmt 1 view .LVU6885
 26322              	.LBB14453:
 26323              	.LBB14454:
 26324              	.LBI14454:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 26325              		.loc 3 469 7 view .LVU6886
 26326              	.LBB14455:
 26327              	.LBI14455:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 26328              		.loc 4 119 7 view .LVU6887
 26329              	.LBB14456:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26330              		.loc 4 128 19 is_stmt 0 view .LVU6888
 26331 0100 FFF7FEFF 		bl	_ZdlPv
 26332              	.LVL1789:
 26333              	.L558:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26334              		.loc 4 128 19 view .LVU6889
 26335              	.LBE14456:
 26336              	.LBE14455:
 26337              	.LBE14454:
 26338              	.LBE14453:
 26339              	.LBE14452:
 26340              	.LBE14447:
 26341              	.LBE14446:
 26342              	.LBB14457:
 26343              	.LBI14457:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26344              		.loc 2 150 14 is_stmt 1 view .LVU6890
 26345              	.LBB14458:
 26346              	.LBI14458:
 26347              		.loc 5 153 7 view .LVU6891
 26348              	.LBB14459:
 26349              	.LBI14459:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26350              		.loc 4 89 7 view .LVU6892
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26351              		.loc 4 89 7 is_stmt 0 view .LVU6893
 26352              	.LBE14459:
 26353              	.LBE14458:
ARM GAS  /tmp/ccL95Edz.s 			page 848


 26354              	.LBE14457:
 26355              	.LBE14445:
 247:alohal/filesystem/filesystem.cpp ****     if (parent_directory == nullptr) {
 26356              		.loc 17 247 5 is_stmt 1 view .LVU6894
 26357 0104 002C     		cmp	r4, #0
 26358 0106 00F08280 		beq	.L570
 248:alohal/filesystem/filesystem.cpp ****         cli->Print("Cannot find parent \r\n");
 249:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 250:alohal/filesystem/filesystem.cpp ****     } else if(parent_directory->Type_of() != FS_entry::Type::Directory){
 26359              		.loc 17 250 12 view .LVU6895
 26360              	.LVL1790:
 26361              	.LBB14460:
 26362              	.LBI14460:
  66:alohal/filesystem/entry.hpp **** 
 26363              		.loc 1 66 23 view .LVU6896
 26364              	.LBB14461:
  66:alohal/filesystem/entry.hpp **** 
 26365              		.loc 1 66 34 view .LVU6897
  66:alohal/filesystem/entry.hpp **** 
 26366              		.loc 1 66 41 is_stmt 0 view .LVU6898
 26367 010a 6368     		ldr	r3, [r4, #4]
 26368              	.LVL1791:
  66:alohal/filesystem/entry.hpp **** 
 26369              		.loc 1 66 41 view .LVU6899
 26370              	.LBE14461:
 26371              	.LBE14460:
 26372              		.loc 17 250 12 view .LVU6900
 26373 010c 012B     		cmp	r3, #1
 26374 010e 00F09480 		beq	.L562
 251:alohal/filesystem/filesystem.cpp ****         cli->Print("Parent is not a directory \r\n");
 26375              		.loc 17 251 9 is_stmt 1 view .LVU6901
 26376 0112 AD68     		ldr	r5, [r5, #8]
 26377              	.LVL1792:
 26378              	.LBB14462:
 26379              	.LBI14462:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 26380              		.loc 5 138 7 view .LVU6902
 26381              	.LBB14463:
 26382              	.LBI14463:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26383              		.loc 4 80 7 view .LVU6903
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26384              		.loc 4 80 7 is_stmt 0 view .LVU6904
 26385              	.LBE14463:
 26386              	.LBE14462:
 26387              	.LBB14464:
 26388              	.LBI14464:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 26389              		.loc 2 525 7 is_stmt 1 view .LVU6905
 26390              	.LBB14465:
 26391              	.LBB14466:
 26392              	.LBB14467:
 26393              	.LBI14467:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26394              		.loc 2 190 7 view .LVU6906
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26395              		.loc 2 190 7 is_stmt 0 view .LVU6907
ARM GAS  /tmp/ccL95Edz.s 			page 849


 26396              	.LBE14467:
 26397              	.LBB14468:
 26398              	.LBI14468:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 26399              		.loc 2 156 2 is_stmt 1 view .LVU6908
 26400              	.LBB14469:
 26401              	.LBB14470:
 26402              	.LBB14471:
 26403              	.LBI14471:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26404              		.loc 5 141 7 view .LVU6909
 26405              	.LBB14472:
 26406              	.LBI14472:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26407              		.loc 4 83 7 view .LVU6910
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26408              		.loc 4 83 7 is_stmt 0 view .LVU6911
 26409              	.LBE14472:
 26410              	.LBE14471:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26411              		.loc 2 157 35 view .LVU6912
 26412 0114 34AC     		add	r4, sp, #208
 26413              	.LVL1793:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26414              		.loc 2 157 35 view .LVU6913
 26415 0116 3294     		str	r4, [sp, #200]
 26416              	.LVL1794:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26417              		.loc 2 157 35 view .LVU6914
 26418              	.LBE14470:
 26419              	.LBE14469:
 26420              	.LBE14468:
 26421              	.LBB14473:
 26422              	.LBI14473:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 26423              		.loc 8 329 7 is_stmt 1 view .LVU6915
 26424              	.LBE14473:
 26425              	.LBE14466:
 26426              	.LBE14465:
 26427              	.LBE14464:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 26428              		.loc 8 332 2 view .LVU6916
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26429              		.loc 8 335 2 view .LVU6917
 26430              	.LBB14480:
 26431              	.LBB14479:
 26432              	.LBB14478:
 26433              	.LBB14474:
 26434              	.LBI14474:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26435              		.loc 2 263 9 view .LVU6918
 26436              	.LBB14475:
 26437              	.LBB14476:
 26438              	.LBI14476:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 26439              		.loc 2 243 9 view .LVU6919
 26440              	.LBB14477:
ARM GAS  /tmp/ccL95Edz.s 			page 850


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26441              		.loc 2 247 11 is_stmt 0 view .LVU6920
 26442 0118 4D4A     		ldr	r2, .L574+8
 26443              	.LVL1795:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26444              		.loc 2 247 11 view .LVU6921
 26445 011a 4FF00003 		mov	r3, #0
 26446 011e A2F11C01 		sub	r1, r2, #28
 26447 0122 32A8     		add	r0, sp, #200
 26448              	.LVL1796:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26449              		.loc 2 247 11 view .LVU6922
 26450 0124 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 26451              	.LVL1797:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26452              		.loc 2 247 11 view .LVU6923
 26453              	.LBE14477:
 26454              	.LBE14476:
 26455              	.LBE14475:
 26456              	.LBE14474:
 26457              	.LBE14478:
 26458              	.LBE14479:
 26459              	.LBE14480:
 26460              		.loc 17 251 19 view .LVU6924
 26461 0128 32A9     		add	r1, sp, #200
 26462 012a 2846     		mov	r0, r5
 26463 012c FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 26464              	.LVL1798:
 26465              	.LBB14481:
 26466              	.LBI14481:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 26467              		.loc 2 657 7 is_stmt 1 view .LVU6925
 26468              	.LBB14482:
 26469              	.LBI14482:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26470              		.loc 2 229 7 view .LVU6926
 26471              	.LBB14483:
 26472              	.LBB14484:
 26473              	.LBI14484:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 26474              		.loc 2 221 7 view .LVU6927
 26475              	.LBB14485:
 26476              	.LBI14485:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26477              		.loc 2 186 7 view .LVU6928
 26478              	.LBB14486:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26479              		.loc 2 187 28 is_stmt 0 view .LVU6929
 26480 0130 3298     		ldr	r0, [sp, #200]
 26481              	.LVL1799:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26482              		.loc 2 187 28 view .LVU6930
 26483              	.LBE14486:
 26484              	.LBE14485:
 26485              	.LBB14487:
 26486              	.LBI14487:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 851


 26487              		.loc 2 200 7 is_stmt 1 view .LVU6931
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26488              		.loc 2 200 7 is_stmt 0 view .LVU6932
 26489              	.LBE14487:
 26490              	.LBE14484:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 26491              		.loc 2 231 2 view .LVU6933
 26492 0132 A042     		cmp	r0, r4
 26493 0134 01D0     		beq	.L563
 26494              	.LVL1800:
 26495              	.LBB14488:
 26496              	.LBI14488:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 26497              		.loc 2 236 7 is_stmt 1 view .LVU6934
 26498              	.LBB14489:
 26499              	.LBB14490:
 26500              	.LBI14490:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 26501              		.loc 3 469 7 view .LVU6935
 26502              	.LBB14491:
 26503              	.LBI14491:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 26504              		.loc 4 119 7 view .LVU6936
 26505              	.LBB14492:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26506              		.loc 4 128 19 is_stmt 0 view .LVU6937
 26507 0136 FFF7FEFF 		bl	_ZdlPv
 26508              	.LVL1801:
 26509              	.L563:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26510              		.loc 4 128 19 view .LVU6938
 26511              	.LBE14492:
 26512              	.LBE14491:
 26513              	.LBE14490:
 26514              	.LBE14489:
 26515              	.LBE14488:
 26516              	.LBE14483:
 26517              	.LBE14482:
 26518              	.LBB14493:
 26519              	.LBI14493:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26520              		.loc 2 150 14 is_stmt 1 view .LVU6939
 26521              	.LBB14494:
 26522              	.LBI14494:
 26523              		.loc 5 153 7 view .LVU6940
 26524              	.LBB14495:
 26525              	.LBI14495:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26526              		.loc 4 89 7 view .LVU6941
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26527              		.loc 4 89 7 is_stmt 0 view .LVU6942
 26528              	.LBE14495:
 26529              	.LBE14494:
 26530              	.LBE14493:
 26531              	.LBE14481:
 26532              	.LBB14496:
 26533              	.LBI14496:
ARM GAS  /tmp/ccL95Edz.s 			page 852


 26534              		.loc 5 153 7 is_stmt 1 view .LVU6943
 26535              	.LBB14497:
 26536              	.LBI14497:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26537              		.loc 4 89 7 view .LVU6944
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26538              		.loc 4 89 7 is_stmt 0 view .LVU6945
 26539              	.LBE14497:
 26540              	.LBE14496:
 252:alohal/filesystem/filesystem.cpp ****         return ENOTDIR;;
 26541              		.loc 17 252 9 is_stmt 1 view .LVU6946
 26542              		.loc 17 252 16 is_stmt 0 view .LVU6947
 26543 013a 1424     		movs	r4, #20
 26544              	.L561:
 26545              	.LVL1802:
 26546              	.LBB14498:
 26547              	.LBI14498:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 26548              		.loc 2 657 7 is_stmt 1 view .LVU6948
 26549              	.LBB14499:
 26550              	.LBB14500:
 26551              	.LBI14500:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26552              		.loc 2 229 7 view .LVU6949
 26553              	.LBB14501:
 26554              	.LBB14502:
 26555              	.LBI14502:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 26556              		.loc 2 221 7 view .LVU6950
 26557              	.LBB14503:
 26558              	.LBI14503:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26559              		.loc 2 186 7 view .LVU6951
 26560              	.LBB14504:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26561              		.loc 2 187 28 is_stmt 0 view .LVU6952
 26562 013c 0298     		ldr	r0, [sp, #8]
 26563              	.LVL1803:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26564              		.loc 2 187 28 view .LVU6953
 26565              	.LBE14504:
 26566              	.LBE14503:
 26567              	.LBB14505:
 26568              	.LBI14505:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26569              		.loc 2 200 7 is_stmt 1 view .LVU6954
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26570              		.loc 2 200 7 is_stmt 0 view .LVU6955
 26571              	.LBE14505:
 26572              	.LBE14502:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 26573              		.loc 2 231 2 view .LVU6956
 26574 013e 04AB     		add	r3, sp, #16
 26575 0140 9842     		cmp	r0, r3
 26576 0142 01D0     		beq	.L539
 26577              	.LVL1804:
 26578              	.LBB14506:
ARM GAS  /tmp/ccL95Edz.s 			page 853


 26579              	.LBI14506:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 26580              		.loc 2 236 7 is_stmt 1 view .LVU6957
 26581              	.LBB14507:
 26582              	.LBB14508:
 26583              	.LBI14508:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 26584              		.loc 3 469 7 view .LVU6958
 26585              	.LBB14509:
 26586              	.LBI14509:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 26587              		.loc 4 119 7 view .LVU6959
 26588              	.LBB14510:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26589              		.loc 4 128 19 is_stmt 0 view .LVU6960
 26590 0144 FFF7FEFF 		bl	_ZdlPv
 26591              	.LVL1805:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26592              		.loc 4 128 19 view .LVU6961
 26593              	.LBE14510:
 26594              	.LBE14509:
 26595              	.LBE14508:
 26596              	.LBE14507:
 26597              	.LBE14506:
 26598              	.LBE14501:
 26599              	.LBE14500:
 26600              	.LBB14511:
 26601              	.LBI14511:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26602              		.loc 2 150 14 is_stmt 1 view .LVU6962
 26603              	.LBB14512:
 26604              	.LBI14512:
 26605              		.loc 5 153 7 view .LVU6963
 26606              	.LBB14513:
 26607              	.LBI14513:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26608              		.loc 4 89 7 view .LVU6964
 26609              	.L539:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26610              		.loc 4 89 7 is_stmt 0 view .LVU6965
 26611              	.LBE14513:
 26612              	.LBE14512:
 26613              	.LBE14511:
 26614              	.LBE14499:
 26615              	.LBE14498:
 253:alohal/filesystem/filesystem.cpp ****     }
 254:alohal/filesystem/filesystem.cpp **** 
 255:alohal/filesystem/filesystem.cpp ****     parent_directory->Add_entry(entry);
 256:alohal/filesystem/filesystem.cpp **** 
 257:alohal/filesystem/filesystem.cpp ****     return 0;
 258:alohal/filesystem/filesystem.cpp **** 
 259:alohal/filesystem/filesystem.cpp **** }
 26616              		.loc 17 259 1 view .LVU6966
 26617 0148 2046     		mov	r0, r4
 26618 014a 38B0     		add	sp, sp, #224
 26619              	.LCFI89:
 26620              		.cfi_remember_state
ARM GAS  /tmp/ccL95Edz.s 			page 854


 26621              		.cfi_def_cfa_offset 24
 26622              		@ sp needed
 26623 014c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 26624              	.LVL1806:
 26625              	.L567:
 26626              	.LCFI90:
 26627              		.cfi_restore_state
 26628              	.LBB14514:
 26629              	.LBB14317:
 26630              	.LBB14288:
 26631              	.LBI14288:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26632              		.loc 2 930 7 is_stmt 1 view .LVU6967
 26633              	.LBB14289:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26634              		.loc 2 931 16 is_stmt 0 view .LVU6968
 26635 0150 099A     		ldr	r2, [sp, #36]
 26636              	.LVL1807:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26637              		.loc 2 931 16 view .LVU6969
 26638              	.LBE14289:
 26639              	.LBE14288:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 26640              		.loc 2 750 6 view .LVU6970
 26641 0152 1AB1     		cbz	r2, .L541
 26642              	.LVL1808:
 26643              	.LBB14290:
 26644              	.LBI14290:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26645              		.loc 2 346 7 is_stmt 1 view .LVU6971
 26646              	.LBB14291:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 26647              		.loc 2 348 2 is_stmt 0 view .LVU6972
 26648 0154 012A     		cmp	r2, #1
 26649 0156 07D0     		beq	.L571
 26650              	.LVL1809:
 26651              	.LBB14292:
 26652              	.LBI14292:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 26653              		.loc 8 361 7 is_stmt 1 view .LVU6973
 26654              	.LBB14293:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 26655              		.loc 8 363 2 view .LVU6974
 26656              		.loc 8 365 2 view .LVU6975
 26657              		.loc 8 365 49 is_stmt 0 view .LVU6976
 26658 0158 FFF7FEFF 		bl	memcpy
 26659              	.LVL1810:
 26660              	.L541:
 26661              		.loc 8 365 49 view .LVU6977
 26662              	.LBE14293:
 26663              	.LBE14292:
 26664              	.LBE14291:
 26665              	.LBE14290:
 26666              	.LBB14297:
 26667              	.LBI14297:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26668              		.loc 2 930 7 is_stmt 1 view .LVU6978
ARM GAS  /tmp/ccL95Edz.s 			page 855


 26669              	.LBB14298:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26670              		.loc 2 931 16 is_stmt 0 view .LVU6979
 26671 015c 099B     		ldr	r3, [sp, #36]
 26672              	.LVL1811:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26673              		.loc 2 931 16 view .LVU6980
 26674              	.LBE14298:
 26675              	.LBE14297:
 26676              	.LBB14299:
 26677              	.LBI14299:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26678              		.loc 2 214 7 is_stmt 1 view .LVU6981
 26679              	.LBB14300:
 26680              	.LBB14301:
 26681              	.LBI14301:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 26682              		.loc 2 182 7 view .LVU6982
 26683              	.LBB14302:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26684              		.loc 2 183 9 is_stmt 0 view .LVU6983
 26685 015e 6360     		str	r3, [r4, #4]
 26686              	.LVL1812:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26687              		.loc 2 183 9 view .LVU6984
 26688              	.LBE14302:
 26689              	.LBE14301:
 26690              	.LBB14303:
 26691              	.LBI14303:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26692              		.loc 2 186 7 is_stmt 1 view .LVU6985
 26693              	.LBB14304:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26694              		.loc 2 187 28 is_stmt 0 view .LVU6986
 26695 0160 2268     		ldr	r2, [r4]
 26696              	.LVL1813:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26697              		.loc 2 187 28 view .LVU6987
 26698              	.LBE14304:
 26699              	.LBE14303:
 26700              	.LBB14305:
 26701              	.LBI14305:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 26702              		.loc 8 299 7 is_stmt 1 view .LVU6988
 26703              	.LBB14306:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26704              		.loc 8 300 9 view .LVU6989
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26705              		.loc 8 300 14 is_stmt 0 view .LVU6990
 26706 0162 0021     		movs	r1, #0
 26707 0164 D154     		strb	r1, [r2, r3]
 26708              	.LVL1814:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26709              		.loc 8 300 14 view .LVU6991
 26710              	.LBE14306:
 26711              	.LBE14305:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 856


 26712              		.loc 2 218 7 view .LVU6992
 26713 0166 76E7     		b	.L543
 26714              	.LVL1815:
 26715              	.L571:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26716              		.loc 2 218 7 view .LVU6993
 26717              	.LBE14300:
 26718              	.LBE14299:
 26719              	.LBB14307:
 26720              	.LBB14296:
 26721              	.LBB14294:
 26722              	.LBI14294:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 26723              		.loc 8 299 7 is_stmt 1 view .LVU6994
 26724              	.LBB14295:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26725              		.loc 8 300 9 view .LVU6995
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26726              		.loc 8 300 16 is_stmt 0 view .LVU6996
 26727 0168 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26728              		.loc 8 300 14 view .LVU6997
 26729 016a 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26730              		.loc 8 300 22 view .LVU6998
 26731 016c F6E7     		b	.L541
 26732              	.LVL1816:
 26733              	.L565:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26734              		.loc 8 300 22 view .LVU6999
 26735              	.LBE14295:
 26736              	.LBE14294:
 26737              	.LBE14296:
 26738              	.LBE14307:
 26739              	.LBB14308:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 26740              		.loc 2 759 14 view .LVU7000
 26741 016e 0020     		movs	r0, #0
 26742 0170 67E7     		b	.L544
 26743              	.LVL1817:
 26744              	.L545:
 26745              	.LBB14286:
 26746              	.LBI14286:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 26747              		.loc 2 178 7 is_stmt 1 view .LVU7001
 26748              	.LBB14287:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26749              		.loc 2 179 9 is_stmt 0 view .LVU7002
 26750 0172 0AAB     		add	r3, sp, #40
 26751 0174 0893     		str	r3, [sp, #32]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26752              		.loc 2 179 33 view .LVU7003
 26753 0176 6EE7     		b	.L543
 26754              	.LVL1818:
 26755              	.L568:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26756              		.loc 2 179 33 view .LVU7004
ARM GAS  /tmp/ccL95Edz.s 			page 857


 26757              	.LBE14287:
 26758              	.LBE14286:
 26759              	.LBE14308:
 26760              	.LBE14317:
 26761              	.LBE14514:
 236:alohal/filesystem/filesystem.cpp ****         return EEXIST;
 26762              		.loc 17 236 9 is_stmt 1 view .LVU7005
 26763 0178 AE68     		ldr	r6, [r5, #8]
 236:alohal/filesystem/filesystem.cpp ****         return EEXIST;
 26764              		.loc 17 236 69 is_stmt 0 view .LVU7006
 26765 017a 2246     		mov	r2, r4
 26766 017c 3549     		ldr	r1, .L574+12
 26767 017e 20A8     		add	r0, sp, #128
 26768 0180 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 26769              	.LVL1819:
 26770              	.LBB14515:
 26771              	.LBI14515:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 26772              		.loc 2 6121 5 is_stmt 1 view .LVU7007
 26773              	.LBB14516:
 26774              	.LBI14516:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26775              		.loc 2 1263 7 view .LVU7008
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26776              		.loc 2 1263 7 is_stmt 0 view .LVU7009
 26777              	.LBE14516:
 26778              	.LBE14515:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 26779              		.loc 8 332 2 is_stmt 1 view .LVU7010
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26780              		.loc 8 335 2 view .LVU7011
 26781              	.LBB14564:
 26782              	.LBB14524:
 26783              	.LBB14517:
 26784              	.LBB14518:
 26785              	.LBI14518:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26786              		.loc 2 320 7 view .LVU7012
 26787              	.LBB14519:
 26788              	.LBB14520:
 26789              	.LBI14520:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26790              		.loc 2 930 7 view .LVU7013
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26791              		.loc 2 930 7 is_stmt 0 view .LVU7014
 26792              	.LBE14520:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 26793              		.loc 2 322 2 view .LVU7015
 26794 0184 219B     		ldr	r3, [sp, #132]
 26795 0186 C3F17F53 		rsb	r3, r3, #1069547520
 26796 018a 03F57F13 		add	r3, r3, #4177920
 26797 018e 03F57F53 		add	r3, r3, #16320
 26798 0192 3F33     		adds	r3, r3, #63
 26799 0194 012B     		cmp	r3, #1
 26800 0196 27D9     		bls	.L572
 26801              	.LVL1820:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
ARM GAS  /tmp/ccL95Edz.s 			page 858


 26802              		.loc 2 322 2 view .LVU7016
 26803              	.LBE14519:
 26804              	.LBE14518:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26805              		.loc 2 1268 27 view .LVU7017
 26806 0198 0222     		movs	r2, #2
 26807 019a 2F49     		ldr	r1, .L574+16
 26808 019c 20A8     		add	r0, sp, #128
 26809              	.LVL1821:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26810              		.loc 2 1268 27 view .LVU7018
 26811 019e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 26812              	.LVL1822:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26813              		.loc 2 1268 27 view .LVU7019
 26814 01a2 0446     		mov	r4, r0
 26815              	.LVL1823:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26816              		.loc 2 1268 27 view .LVU7020
 26817              	.LBE14517:
 26818              	.LBE14524:
 26819              	.LBB14525:
 26820              	.LBI14525:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 26821              		.loc 2 552 7 is_stmt 1 view .LVU7021
 26822              	.LBB14526:
 26823              	.LBB14527:
 26824              	.LBB14528:
 26825              	.LBI14528:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26826              		.loc 2 190 7 view .LVU7022
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26827              		.loc 2 190 7 is_stmt 0 view .LVU7023
 26828              	.LBE14528:
 26829              	.LBB14529:
 26830              	.LBI14529:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26831              		.loc 2 286 7 is_stmt 1 view .LVU7024
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26832              		.loc 2 286 7 is_stmt 0 view .LVU7025
 26833              	.LBE14529:
 26834              	.LBB14530:
 26835              	.LBI14530:
 26836              		.loc 9 99 5 is_stmt 1 view .LVU7026
 26837              		.loc 9 99 5 is_stmt 0 view .LVU7027
 26838              	.LBE14530:
 26839              	.LBB14531:
 26840              	.LBI14531:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 26841              		.loc 2 159 2 is_stmt 1 view .LVU7028
 26842              	.LBB14532:
 26843              	.LBB14533:
 26844              	.LBB14534:
 26845              	.LBI14534:
 26846              		.loc 9 99 5 view .LVU7029
 26847              		.loc 9 99 5 is_stmt 0 view .LVU7030
 26848              	.LBE14534:
ARM GAS  /tmp/ccL95Edz.s 			page 859


 26849              	.LBB14535:
 26850              	.LBI14535:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26851              		.loc 5 141 7 is_stmt 1 view .LVU7031
 26852              	.LBB14536:
 26853              	.LBI14536:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26854              		.loc 4 83 7 view .LVU7032
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26855              		.loc 4 83 7 is_stmt 0 view .LVU7033
 26856              	.LBE14536:
 26857              	.LBE14535:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26858              		.loc 2 160 46 view .LVU7034
 26859 01a4 1CAB     		add	r3, sp, #112
 26860              	.LVL1824:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26861              		.loc 2 160 46 view .LVU7035
 26862 01a6 1A93     		str	r3, [sp, #104]
 26863              	.LVL1825:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26864              		.loc 2 160 46 view .LVU7036
 26865              	.LBE14533:
 26866              	.LBE14532:
 26867              	.LBE14531:
 26868              	.LBB14537:
 26869              	.LBI14537:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 26870              		.loc 2 221 7 is_stmt 1 view .LVU7037
 26871              	.LBB14538:
 26872              	.LBI14538:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26873              		.loc 2 186 7 view .LVU7038
 26874              	.LBB14539:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26875              		.loc 2 187 28 is_stmt 0 view .LVU7039
 26876 01a8 0546     		mov	r5, r0
 26877              	.LVL1826:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26878              		.loc 2 187 28 view .LVU7040
 26879 01aa 55F8083B 		ldr	r3, [r5], #8
 26880              	.LVL1827:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26881              		.loc 2 187 28 view .LVU7041
 26882              	.LBE14539:
 26883              	.LBE14538:
 26884              	.LBB14540:
 26885              	.LBI14540:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26886              		.loc 2 200 7 is_stmt 1 view .LVU7042
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26887              		.loc 2 200 7 is_stmt 0 view .LVU7043
 26888              	.LBE14540:
 26889              	.LBE14537:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 26890              		.loc 2 555 2 view .LVU7044
 26891 01ae AB42     		cmp	r3, r5
ARM GAS  /tmp/ccL95Edz.s 			page 860


 26892 01b0 1DD0     		beq	.L573
 26893              	.LVL1828:
 26894              	.LBB14541:
 26895              	.LBI14541:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26896              		.loc 2 186 7 is_stmt 1 view .LVU7045
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26897              		.loc 2 186 7 is_stmt 0 view .LVU7046
 26898              	.LBE14541:
 26899              	.LBB14542:
 26900              	.LBI14542:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 26901              		.loc 2 178 7 is_stmt 1 view .LVU7047
 26902              	.LBB14543:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26903              		.loc 2 179 9 is_stmt 0 view .LVU7048
 26904 01b2 1A93     		str	r3, [sp, #104]
 26905              	.LVL1829:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26906              		.loc 2 179 9 view .LVU7049
 26907              	.LBE14543:
 26908              	.LBE14542:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 26909              		.loc 2 563 6 view .LVU7050
 26910 01b4 8368     		ldr	r3, [r0, #8]
 26911              	.LVL1830:
 26912              	.LBB14544:
 26913              	.LBI14544:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 26914              		.loc 2 210 7 is_stmt 1 view .LVU7051
 26915              	.LBB14545:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26916              		.loc 2 211 9 is_stmt 0 view .LVU7052
 26917 01b6 1C93     		str	r3, [sp, #112]
 26918              	.LVL1831:
 26919              	.L552:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26920              		.loc 2 211 9 view .LVU7053
 26921              	.LBE14545:
 26922              	.LBE14544:
 26923              	.LBB14546:
 26924              	.LBI14546:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26925              		.loc 2 936 7 is_stmt 1 view .LVU7054
 26926              	.LBB14547:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26927              		.loc 2 937 16 is_stmt 0 view .LVU7055
 26928 01b8 6368     		ldr	r3, [r4, #4]
 26929              	.LVL1832:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26930              		.loc 2 937 16 view .LVU7056
 26931              	.LBE14547:
 26932              	.LBE14546:
 26933              	.LBB14548:
 26934              	.LBI14548:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 26935              		.loc 2 182 7 is_stmt 1 view .LVU7057
ARM GAS  /tmp/ccL95Edz.s 			page 861


 26936              	.LBB14549:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26937              		.loc 2 183 9 is_stmt 0 view .LVU7058
 26938 01ba 1B93     		str	r3, [sp, #108]
 26939              	.LVL1833:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26940              		.loc 2 183 9 view .LVU7059
 26941              	.LBE14549:
 26942              	.LBE14548:
 26943              	.LBB14550:
 26944              	.LBI14550:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26945              		.loc 2 190 7 is_stmt 1 view .LVU7060
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26946              		.loc 2 190 7 is_stmt 0 view .LVU7061
 26947              	.LBE14550:
 26948              	.LBB14551:
 26949              	.LBI14551:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 26950              		.loc 2 178 7 is_stmt 1 view .LVU7062
 26951              	.LBB14552:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26952              		.loc 2 179 9 is_stmt 0 view .LVU7063
 26953 01bc 2560     		str	r5, [r4]
 26954              	.LVL1834:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26955              		.loc 2 179 9 view .LVU7064
 26956              	.LBE14552:
 26957              	.LBE14551:
 26958              	.LBB14553:
 26959              	.LBI14553:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26960              		.loc 2 214 7 is_stmt 1 view .LVU7065
 26961              	.LBB14554:
 26962              	.LBI14554:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 26963              		.loc 2 182 7 view .LVU7066
 26964              	.LBB14555:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26965              		.loc 2 183 9 is_stmt 0 view .LVU7067
 26966 01be 0023     		movs	r3, #0
 26967 01c0 6360     		str	r3, [r4, #4]
 26968              	.LVL1835:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26969              		.loc 2 183 9 view .LVU7068
 26970              	.LBE14555:
 26971              	.LBE14554:
 26972              	.LBB14556:
 26973              	.LBI14556:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 26974              		.loc 8 299 7 is_stmt 1 view .LVU7069
 26975              	.LBB14557:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26976              		.loc 8 300 9 view .LVU7070
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26977              		.loc 8 300 14 is_stmt 0 view .LVU7071
 26978 01c2 2372     		strb	r3, [r4, #8]
ARM GAS  /tmp/ccL95Edz.s 			page 862


 26979              	.LVL1836:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 26980              		.loc 8 300 14 view .LVU7072
 26981              	.LBE14557:
 26982              	.LBE14556:
 26983              	.LBE14553:
 26984              	.LBE14527:
 26985              	.LBE14526:
 26986              	.LBE14525:
 26987              	.LBE14564:
 236:alohal/filesystem/filesystem.cpp ****         return EEXIST;
 26988              		.loc 17 236 19 view .LVU7073
 26989 01c4 1AA9     		add	r1, sp, #104
 26990 01c6 3046     		mov	r0, r6
 26991 01c8 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 26992              	.LVL1837:
 26993              	.LBB14565:
 26994              	.LBI14565:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 26995              		.loc 2 657 7 is_stmt 1 view .LVU7074
 26996              	.LBB14566:
 26997              	.LBI14566:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26998              		.loc 2 229 7 view .LVU7075
 26999              	.LBB14567:
 27000              	.LBB14568:
 27001              	.LBI14568:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27002              		.loc 2 221 7 view .LVU7076
 27003              	.LBB14569:
 27004              	.LBI14569:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27005              		.loc 2 186 7 view .LVU7077
 27006              	.LBB14570:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27007              		.loc 2 187 28 is_stmt 0 view .LVU7078
 27008 01cc 1A98     		ldr	r0, [sp, #104]
 27009              	.LVL1838:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27010              		.loc 2 187 28 view .LVU7079
 27011              	.LBE14570:
 27012              	.LBE14569:
 27013              	.LBB14571:
 27014              	.LBI14571:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27015              		.loc 2 200 7 is_stmt 1 view .LVU7080
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27016              		.loc 2 200 7 is_stmt 0 view .LVU7081
 27017              	.LBE14571:
 27018              	.LBE14568:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27019              		.loc 2 231 2 view .LVU7082
 27020 01ce 1CAB     		add	r3, sp, #112
 27021 01d0 9842     		cmp	r0, r3
 27022 01d2 01D0     		beq	.L553
 27023              	.LVL1839:
 27024              	.LBB14572:
ARM GAS  /tmp/ccL95Edz.s 			page 863


 27025              	.LBI14572:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27026              		.loc 2 236 7 is_stmt 1 view .LVU7083
 27027              	.LBB14573:
 27028              	.LBB14574:
 27029              	.LBI14574:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27030              		.loc 3 469 7 view .LVU7084
 27031              	.LBB14575:
 27032              	.LBI14575:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27033              		.loc 4 119 7 view .LVU7085
 27034              	.LBB14576:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27035              		.loc 4 128 19 is_stmt 0 view .LVU7086
 27036 01d4 FFF7FEFF 		bl	_ZdlPv
 27037              	.LVL1840:
 27038              	.L553:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27039              		.loc 4 128 19 view .LVU7087
 27040              	.LBE14576:
 27041              	.LBE14575:
 27042              	.LBE14574:
 27043              	.LBE14573:
 27044              	.LBE14572:
 27045              	.LBE14567:
 27046              	.LBE14566:
 27047              	.LBB14577:
 27048              	.LBI14577:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27049              		.loc 2 150 14 is_stmt 1 view .LVU7088
 27050              	.LBB14578:
 27051              	.LBI14578:
 27052              		.loc 5 153 7 view .LVU7089
 27053              	.LBB14579:
 27054              	.LBI14579:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27055              		.loc 4 89 7 view .LVU7090
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27056              		.loc 4 89 7 is_stmt 0 view .LVU7091
 27057              	.LBE14579:
 27058              	.LBE14578:
 27059              	.LBE14577:
 27060              	.LBE14565:
 27061              	.LBB14580:
 27062              	.LBI14580:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27063              		.loc 2 657 7 is_stmt 1 view .LVU7092
 27064              	.LBB14581:
 27065              	.LBI14581:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27066              		.loc 2 229 7 view .LVU7093
 27067              	.LBB14582:
 27068              	.LBB14583:
 27069              	.LBI14583:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27070              		.loc 2 221 7 view .LVU7094
ARM GAS  /tmp/ccL95Edz.s 			page 864


 27071              	.LBB14584:
 27072              	.LBI14584:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27073              		.loc 2 186 7 view .LVU7095
 27074              	.LBB14585:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27075              		.loc 2 187 28 is_stmt 0 view .LVU7096
 27076 01d8 2098     		ldr	r0, [sp, #128]
 27077              	.LVL1841:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27078              		.loc 2 187 28 view .LVU7097
 27079              	.LBE14585:
 27080              	.LBE14584:
 27081              	.LBB14586:
 27082              	.LBI14586:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27083              		.loc 2 200 7 is_stmt 1 view .LVU7098
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27084              		.loc 2 200 7 is_stmt 0 view .LVU7099
 27085              	.LBE14586:
 27086              	.LBE14583:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27087              		.loc 2 231 2 view .LVU7100
 27088 01da 22AB     		add	r3, sp, #136
 27089 01dc 9842     		cmp	r0, r3
 27090 01de 01D0     		beq	.L554
 27091              	.LVL1842:
 27092              	.LBB14587:
 27093              	.LBI14587:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27094              		.loc 2 236 7 is_stmt 1 view .LVU7101
 27095              	.LBB14588:
 27096              	.LBB14589:
 27097              	.LBI14589:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27098              		.loc 3 469 7 view .LVU7102
 27099              	.LBB14590:
 27100              	.LBI14590:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27101              		.loc 4 119 7 view .LVU7103
 27102              	.LBB14591:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27103              		.loc 4 128 19 is_stmt 0 view .LVU7104
 27104 01e0 FFF7FEFF 		bl	_ZdlPv
 27105              	.LVL1843:
 27106              	.L554:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27107              		.loc 4 128 19 view .LVU7105
 27108              	.LBE14591:
 27109              	.LBE14590:
 27110              	.LBE14589:
 27111              	.LBE14588:
 27112              	.LBE14587:
 27113              	.LBE14582:
 27114              	.LBE14581:
 27115              	.LBB14592:
 27116              	.LBI14592:
ARM GAS  /tmp/ccL95Edz.s 			page 865


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27117              		.loc 2 150 14 is_stmt 1 view .LVU7106
 27118              	.LBB14593:
 27119              	.LBI14593:
 27120              		.loc 5 153 7 view .LVU7107
 27121              	.LBB14594:
 27122              	.LBI14594:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27123              		.loc 4 89 7 view .LVU7108
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27124              		.loc 4 89 7 is_stmt 0 view .LVU7109
 27125              	.LBE14594:
 27126              	.LBE14593:
 27127              	.LBE14592:
 27128              	.LBE14580:
 237:alohal/filesystem/filesystem.cpp ****     }
 27129              		.loc 17 237 9 is_stmt 1 view .LVU7110
 237:alohal/filesystem/filesystem.cpp ****     }
 27130              		.loc 17 237 16 is_stmt 0 view .LVU7111
 27131 01e4 1124     		movs	r4, #17
 27132 01e6 AFE7     		b	.L539
 27133              	.LVL1844:
 27134              	.L572:
 27135              	.LBB14595:
 27136              	.LBB14562:
 27137              	.LBB14523:
 27138              	.LBB14522:
 27139              	.LBB14521:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 27140              		.loc 2 323 24 view .LVU7112
 27141 01e8 1C48     		ldr	r0, .L574+20
 27142 01ea FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 27143              	.LVL1845:
 27144              	.L573:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 27145              		.loc 2 323 24 view .LVU7113
 27146              	.LBE14521:
 27147              	.LBE14522:
 27148              	.LBE14523:
 27149              	.LBE14562:
 27150              	.LBB14563:
 27151              	.LBB14561:
 27152              	.LBB14560:
 27153              	.LBB14558:
 27154              	.LBI14558:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 27155              		.loc 8 361 7 is_stmt 1 view .LVU7114
 27156              	.LBB14559:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 27157              		.loc 8 363 2 view .LVU7115
 27158              		.loc 8 365 2 view .LVU7116
 27159              		.loc 8 365 49 is_stmt 0 view .LVU7117
 27160 01ee 1CAF     		add	r7, sp, #112
 27161              	.LVL1846:
 27162              		.loc 8 365 49 view .LVU7118
 27163 01f0 2868     		ldr	r0, [r5]	@ unaligned
 27164              	.LVL1847:
ARM GAS  /tmp/ccL95Edz.s 			page 866


 27165              		.loc 8 365 49 view .LVU7119
 27166 01f2 6968     		ldr	r1, [r5, #4]	@ unaligned
 27167 01f4 AA68     		ldr	r2, [r5, #8]	@ unaligned
 27168 01f6 EB68     		ldr	r3, [r5, #12]	@ unaligned
 27169 01f8 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 27170 01fa DDE7     		b	.L552
 27171              	.LVL1848:
 27172              	.L569:
 27173              		.loc 8 365 49 view .LVU7120
 27174              	.LBE14559:
 27175              	.LBE14558:
 27176              	.LBE14560:
 27177              	.LBE14561:
 27178              	.LBE14563:
 27179              	.LBE14595:
 241:alohal/filesystem/filesystem.cpp ****     }
 27180              		.loc 17 241 9 is_stmt 1 view .LVU7121
 27181              	.LBB14596:
 27182              	.LBI14596:
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__s); }
 27183              		.loc 2 704 7 view .LVU7122
 27184              	.LBB14597:
 27185              	.LBI14597:
1435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27186              		.loc 2 1435 7 view .LVU7123
 27187              	.LBB14598:
 27188              	.LBB14599:
 27189              	.LBI14599:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27190              		.loc 2 930 7 view .LVU7124
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27191              		.loc 2 930 7 is_stmt 0 view .LVU7125
 27192              	.LBE14599:
 27193              	.LBE14598:
 27194              	.LBE14597:
 27195              	.LBE14596:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 27196              		.loc 8 332 2 is_stmt 1 view .LVU7126
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 27197              		.loc 8 335 2 view .LVU7127
 27198              	.LBB14602:
 27199              	.LBB14601:
 27200              	.LBB14600:
1439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 27201              		.loc 2 1439 30 is_stmt 0 view .LVU7128
 27202 01fc 0123     		movs	r3, #1
 27203 01fe 0093     		str	r3, [sp]
 27204 0200 124B     		ldr	r3, .L574+4
 27205 0202 6268     		ldr	r2, [r4, #4]
 27206 0204 0021     		movs	r1, #0
 27207 0206 2046     		mov	r0, r4
 27208 0208 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 27209              	.LVL1849:
 27210 020c 52E7     		b	.L556
 27211              	.LVL1850:
 27212              	.L570:
1439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 867


 27213              		.loc 2 1439 30 view .LVU7129
 27214              	.LBE14600:
 27215              	.LBE14601:
 27216              	.LBE14602:
 248:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 27217              		.loc 17 248 9 is_stmt 1 view .LVU7130
 27218 020e AD68     		ldr	r5, [r5, #8]
 27219              	.LVL1851:
 27220              	.LBB14603:
 27221              	.LBI14603:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 27222              		.loc 5 138 7 view .LVU7131
 27223              	.LBB14604:
 27224              	.LBI14604:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27225              		.loc 4 80 7 view .LVU7132
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27226              		.loc 4 80 7 is_stmt 0 view .LVU7133
 27227              	.LBE14604:
 27228              	.LBE14603:
 27229              	.LBB14605:
 27230              	.LBI14605:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 27231              		.loc 2 525 7 is_stmt 1 view .LVU7134
 27232              	.LBB14606:
 27233              	.LBB14607:
 27234              	.LBB14608:
 27235              	.LBI14608:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27236              		.loc 2 190 7 view .LVU7135
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27237              		.loc 2 190 7 is_stmt 0 view .LVU7136
 27238              	.LBE14608:
 27239              	.LBB14609:
 27240              	.LBI14609:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 27241              		.loc 2 156 2 is_stmt 1 view .LVU7137
 27242              	.LBB14610:
 27243              	.LBB14611:
 27244              	.LBB14612:
 27245              	.LBI14612:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27246              		.loc 5 141 7 view .LVU7138
 27247              	.LBB14613:
 27248              	.LBI14613:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27249              		.loc 4 83 7 view .LVU7139
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27250              		.loc 4 83 7 is_stmt 0 view .LVU7140
 27251              	.LBE14613:
 27252              	.LBE14612:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27253              		.loc 2 157 35 view .LVU7141
 27254 0210 2EAC     		add	r4, sp, #184
 27255              	.LVL1852:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27256              		.loc 2 157 35 view .LVU7142
ARM GAS  /tmp/ccL95Edz.s 			page 868


 27257 0212 2C94     		str	r4, [sp, #176]
 27258              	.LVL1853:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27259              		.loc 2 157 35 view .LVU7143
 27260              	.LBE14611:
 27261              	.LBE14610:
 27262              	.LBE14609:
 27263              	.LBB14614:
 27264              	.LBI14614:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 27265              		.loc 8 329 7 is_stmt 1 view .LVU7144
 27266              	.LBE14614:
 27267              	.LBE14607:
 27268              	.LBE14606:
 27269              	.LBE14605:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 27270              		.loc 8 332 2 view .LVU7145
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 27271              		.loc 8 335 2 view .LVU7146
 27272              	.LBB14621:
 27273              	.LBB14620:
 27274              	.LBB14619:
 27275              	.LBB14615:
 27276              	.LBI14615:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27277              		.loc 2 263 9 view .LVU7147
 27278              	.LBB14616:
 27279              	.LBB14617:
 27280              	.LBI14617:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27281              		.loc 2 243 9 view .LVU7148
 27282              	.LBB14618:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27283              		.loc 2 247 11 is_stmt 0 view .LVU7149
 27284 0214 124A     		ldr	r2, .L574+24
 27285              	.LVL1854:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27286              		.loc 2 247 11 view .LVU7150
 27287 0216 4FF00003 		mov	r3, #0
 27288 021a A2F11501 		sub	r1, r2, #21
 27289 021e 2CA8     		add	r0, sp, #176
 27290              	.LVL1855:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27291              		.loc 2 247 11 view .LVU7151
 27292 0220 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 27293              	.LVL1856:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27294              		.loc 2 247 11 view .LVU7152
 27295              	.LBE14618:
 27296              	.LBE14617:
 27297              	.LBE14616:
 27298              	.LBE14615:
 27299              	.LBE14619:
 27300              	.LBE14620:
 27301              	.LBE14621:
 248:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 27302              		.loc 17 248 19 view .LVU7153
ARM GAS  /tmp/ccL95Edz.s 			page 869


 27303 0224 2CA9     		add	r1, sp, #176
 27304 0226 2846     		mov	r0, r5
 27305 0228 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 27306              	.LVL1857:
 27307              	.LBB14622:
 27308              	.LBI14622:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27309              		.loc 2 657 7 is_stmt 1 view .LVU7154
 27310              	.LBB14623:
 27311              	.LBI14623:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27312              		.loc 2 229 7 view .LVU7155
 27313              	.LBB14624:
 27314              	.LBB14625:
 27315              	.LBI14625:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27316              		.loc 2 221 7 view .LVU7156
 27317              	.LBB14626:
 27318              	.LBI14626:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27319              		.loc 2 186 7 view .LVU7157
 27320              	.LBB14627:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27321              		.loc 2 187 28 is_stmt 0 view .LVU7158
 27322 022c 2C98     		ldr	r0, [sp, #176]
 27323              	.LVL1858:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27324              		.loc 2 187 28 view .LVU7159
 27325              	.LBE14627:
 27326              	.LBE14626:
 27327              	.LBB14628:
 27328              	.LBI14628:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27329              		.loc 2 200 7 is_stmt 1 view .LVU7160
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27330              		.loc 2 200 7 is_stmt 0 view .LVU7161
 27331              	.LBE14628:
 27332              	.LBE14625:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27333              		.loc 2 231 2 view .LVU7162
 27334 022e A042     		cmp	r0, r4
 27335 0230 01D0     		beq	.L560
 27336              	.LVL1859:
 27337              	.LBB14629:
 27338              	.LBI14629:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27339              		.loc 2 236 7 is_stmt 1 view .LVU7163
 27340              	.LBB14630:
 27341              	.LBB14631:
 27342              	.LBI14631:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27343              		.loc 3 469 7 view .LVU7164
 27344              	.LBB14632:
 27345              	.LBI14632:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27346              		.loc 4 119 7 view .LVU7165
 27347              	.LBB14633:
ARM GAS  /tmp/ccL95Edz.s 			page 870


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27348              		.loc 4 128 19 is_stmt 0 view .LVU7166
 27349 0232 FFF7FEFF 		bl	_ZdlPv
 27350              	.LVL1860:
 27351              	.L560:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27352              		.loc 4 128 19 view .LVU7167
 27353              	.LBE14633:
 27354              	.LBE14632:
 27355              	.LBE14631:
 27356              	.LBE14630:
 27357              	.LBE14629:
 27358              	.LBE14624:
 27359              	.LBE14623:
 27360              	.LBB14634:
 27361              	.LBI14634:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27362              		.loc 2 150 14 is_stmt 1 view .LVU7168
 27363              	.LBB14635:
 27364              	.LBI14635:
 27365              		.loc 5 153 7 view .LVU7169
 27366              	.LBB14636:
 27367              	.LBI14636:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27368              		.loc 4 89 7 view .LVU7170
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27369              		.loc 4 89 7 is_stmt 0 view .LVU7171
 27370              	.LBE14636:
 27371              	.LBE14635:
 27372              	.LBE14634:
 27373              	.LBE14622:
 27374              	.LBB14637:
 27375              	.LBI14637:
 27376              		.loc 5 153 7 is_stmt 1 view .LVU7172
 27377              	.LBB14638:
 27378              	.LBI14638:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27379              		.loc 4 89 7 view .LVU7173
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27380              		.loc 4 89 7 is_stmt 0 view .LVU7174
 27381              	.LBE14638:
 27382              	.LBE14637:
 249:alohal/filesystem/filesystem.cpp ****     } else if(parent_directory->Type_of() != FS_entry::Type::Directory){
 27383              		.loc 17 249 9 is_stmt 1 view .LVU7175
 249:alohal/filesystem/filesystem.cpp ****     } else if(parent_directory->Type_of() != FS_entry::Type::Directory){
 27384              		.loc 17 249 16 is_stmt 0 view .LVU7176
 27385 0236 0224     		movs	r4, #2
 27386 0238 80E7     		b	.L561
 27387              	.LVL1861:
 27388              	.L562:
 252:alohal/filesystem/filesystem.cpp ****     }
 27389              		.loc 17 252 24 is_stmt 1 view .LVU7177
 255:alohal/filesystem/filesystem.cpp **** 
 27390              		.loc 17 255 5 view .LVU7178
 255:alohal/filesystem/filesystem.cpp **** 
 27391              		.loc 17 255 32 is_stmt 0 view .LVU7179
 27392 023a 3946     		mov	r1, r7
ARM GAS  /tmp/ccL95Edz.s 			page 871


 27393 023c 2046     		mov	r0, r4
 27394 023e FFF7FEFF 		bl	_ZN9Directory9Add_entryEP8FS_entry
 27395              	.LVL1862:
 257:alohal/filesystem/filesystem.cpp **** 
 27396              		.loc 17 257 5 is_stmt 1 view .LVU7180
 257:alohal/filesystem/filesystem.cpp **** 
 27397              		.loc 17 257 12 is_stmt 0 view .LVU7181
 27398 0242 0024     		movs	r4, #0
 27399              	.LVL1863:
 257:alohal/filesystem/filesystem.cpp **** 
 27400              		.loc 17 257 12 view .LVU7182
 27401 0244 7AE7     		b	.L561
 27402              	.L575:
 27403 0246 00BF     		.align	2
 27404              	.L574:
 27405 0248 18000000 		.word	.LC19
 27406 024c 04000000 		.word	.LC6
 27407 0250 1C000000 		.word	.LC29+28
 27408 0254 00000000 		.word	.LC27
 27409 0258 30000000 		.word	.LC4
 27410 025c 00000000 		.word	.LC0
 27411 0260 15000000 		.word	.LC28+21
 27412              		.cfi_endproc
 27413              	.LFE3401:
 27415              		.section	.text._ZN10Filesystem14Make_directoryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 27416              		.align	1
 27417              		.global	_ZN10Filesystem14Make_directoryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 27418              		.syntax unified
 27419              		.thumb
 27420              		.thumb_func
 27421              		.fpu fpv4-sp-d16
 27423              	_ZN10Filesystem14Make_directoryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 27424              	.LVL1864:
 27425              	.LFB3399:
 221:alohal/filesystem/filesystem.cpp ****     string directory_name = path.substr(path.find_last_of("/") + 1);
 27426              		.loc 17 221 44 is_stmt 1 view -0
 27427              		.cfi_startproc
 27428              		@ args = 0, pretend = 0, frame = 72
 27429              		@ frame_needed = 0, uses_anonymous_args = 0
 221:alohal/filesystem/filesystem.cpp ****     string directory_name = path.substr(path.find_last_of("/") + 1);
 27430              		.loc 17 221 44 is_stmt 0 view .LVU7184
 27431 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 27432              	.LCFI91:
 27433              		.cfi_def_cfa_offset 20
 27434              		.cfi_offset 4, -20
 27435              		.cfi_offset 5, -16
 27436              		.cfi_offset 6, -12
 27437              		.cfi_offset 7, -8
 27438              		.cfi_offset 14, -4
 27439 0002 93B0     		sub	sp, sp, #76
 27440              	.LCFI92:
 27441              		.cfi_def_cfa_offset 96
 27442 0004 0546     		mov	r5, r0
 27443 0006 0C46     		mov	r4, r1
 222:alohal/filesystem/filesystem.cpp ****     Directory *new_directory = new Directory(directory_name);
 27444              		.loc 17 222 5 is_stmt 1 view .LVU7185
 27445              	.LVL1865:
ARM GAS  /tmp/ccL95Edz.s 			page 872


 27446              	.LBB14771:
 27447              	.LBI14771:
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 27448              		.loc 2 2635 7 view .LVU7186
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 27449              		.loc 2 2635 7 is_stmt 0 view .LVU7187
 27450              	.LBE14771:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 27451              		.loc 8 332 2 is_stmt 1 view .LVU7188
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 27452              		.loc 8 335 2 view .LVU7189
 27453              	.LBB14773:
 27454              	.LBB14772:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 27455              		.loc 2 2639 64 is_stmt 0 view .LVU7190
 27456 0008 0123     		movs	r3, #1
 27457 000a 4FF0FF32 		mov	r2, #-1
 27458 000e 2949     		ldr	r1, .L585
 27459              	.LVL1866:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 27460              		.loc 2 2639 64 view .LVU7191
 27461 0010 2046     		mov	r0, r4
 27462              	.LVL1867:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 27463              		.loc 2 2639 64 view .LVU7192
 27464 0012 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
 27465              	.LVL1868:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 27466              		.loc 2 2639 64 view .LVU7193
 27467              	.LBE14772:
 27468              	.LBE14773:
 222:alohal/filesystem/filesystem.cpp ****     Directory *new_directory = new Directory(directory_name);
 27469              		.loc 17 222 67 view .LVU7194
 27470 0016 421C     		adds	r2, r0, #1
 27471              	.LVL1869:
 27472              	.LBB14774:
 27473              	.LBI14774:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 27474              		.loc 2 2834 7 is_stmt 1 view .LVU7195
 27475              	.LBB14775:
 27476              	.LBB14776:
 27477              	.LBI14776:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27478              		.loc 2 310 7 view .LVU7196
 27479              	.LBB14777:
 27480              	.LBB14778:
 27481              	.LBI14778:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27482              		.loc 2 930 7 view .LVU7197
 27483              	.LBB14779:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27484              		.loc 2 931 16 is_stmt 0 view .LVU7198
 27485 0018 6368     		ldr	r3, [r4, #4]
 27486              	.LVL1870:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27487              		.loc 2 931 16 view .LVU7199
 27488              	.LBE14779:
ARM GAS  /tmp/ccL95Edz.s 			page 873


 27489              	.LBE14778:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 27490              		.loc 2 312 2 view .LVU7200
 27491 001a 9A42     		cmp	r2, r3
 27492 001c 41D8     		bhi	.L583
 27493              	.LVL1871:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 27494              		.loc 2 312 2 view .LVU7201
 27495              	.LBE14777:
 27496              	.LBE14776:
 27497              	.LBB14781:
 27498              	.LBI14781:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 27499              		.loc 2 476 7 is_stmt 1 view .LVU7202
 27500              	.LBB14782:
 27501              	.LBB14783:
 27502              	.LBI14783:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27503              		.loc 2 190 7 view .LVU7203
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27504              		.loc 2 190 7 is_stmt 0 view .LVU7204
 27505              	.LBE14783:
 27506              	.LBB14784:
 27507              	.LBI14784:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 27508              		.loc 5 138 7 is_stmt 1 view .LVU7205
 27509              	.LBB14785:
 27510              	.LBI14785:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27511              		.loc 4 80 7 view .LVU7206
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27512              		.loc 4 80 7 is_stmt 0 view .LVU7207
 27513              	.LBE14785:
 27514              	.LBE14784:
 27515              	.LBB14786:
 27516              	.LBI14786:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 27517              		.loc 2 159 2 is_stmt 1 view .LVU7208
 27518              	.LBB14787:
 27519              	.LBB14788:
 27520              	.LBB14789:
 27521              	.LBI14789:
 27522              		.loc 9 99 5 view .LVU7209
 27523              		.loc 9 99 5 is_stmt 0 view .LVU7210
 27524              	.LBE14789:
 27525              	.LBB14790:
 27526              	.LBI14790:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27527              		.loc 5 141 7 is_stmt 1 view .LVU7211
 27528              	.LBB14791:
 27529              	.LBI14791:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27530              		.loc 4 83 7 view .LVU7212
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27531              		.loc 4 83 7 is_stmt 0 view .LVU7213
 27532              	.LBE14791:
 27533              	.LBE14790:
ARM GAS  /tmp/ccL95Edz.s 			page 874


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27534              		.loc 2 160 46 view .LVU7214
 27535 001e 02AB     		add	r3, sp, #8
 27536              	.LVL1872:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27537              		.loc 2 160 46 view .LVU7215
 27538 0020 0093     		str	r3, [sp]
 27539              	.LVL1873:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27540              		.loc 2 160 46 view .LVU7216
 27541              	.LBE14788:
 27542              	.LBE14787:
 27543              	.LBE14786:
 27544              	.LBB14792:
 27545              	.LBI14792:
 27546              		.loc 5 153 7 is_stmt 1 view .LVU7217
 27547              	.LBB14793:
 27548              	.LBI14793:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27549              		.loc 4 89 7 view .LVU7218
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27550              		.loc 4 89 7 is_stmt 0 view .LVU7219
 27551              	.LBE14793:
 27552              	.LBE14792:
 27553              	.LBB14794:
 27554              	.LBB14795:
 27555              	.LBI14795:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27556              		.loc 2 186 7 is_stmt 1 view .LVU7220
 27557              	.LBB14796:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27558              		.loc 2 187 28 is_stmt 0 view .LVU7221
 27559 0022 2168     		ldr	r1, [r4]
 27560              	.LVL1874:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27561              		.loc 2 187 28 view .LVU7222
 27562              	.LBE14796:
 27563              	.LBE14795:
 27564              	.LBB14797:
 27565              	.LBI14797:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27566              		.loc 2 310 7 is_stmt 1 view .LVU7223
 27567              	.LBB14798:
 27568              	.LBB14799:
 27569              	.LBI14799:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27570              		.loc 2 930 7 view .LVU7224
 27571              	.LBB14800:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27572              		.loc 2 931 16 is_stmt 0 view .LVU7225
 27573 0024 6368     		ldr	r3, [r4, #4]
 27574              	.LVL1875:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27575              		.loc 2 931 16 view .LVU7226
 27576              	.LBE14800:
 27577              	.LBE14799:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
ARM GAS  /tmp/ccL95Edz.s 			page 875


 27578              		.loc 2 312 2 view .LVU7227
 27579 0026 9A42     		cmp	r2, r3
 27580 0028 3FD8     		bhi	.L584
 27581              	.LVL1876:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 27582              		.loc 2 312 2 view .LVU7228
 27583              	.LBE14798:
 27584              	.LBE14797:
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 27585              		.loc 2 480 16 view .LVU7229
 27586 002a 1144     		add	r1, r1, r2
 27587              	.LVL1877:
 27588              	.LBB14802:
 27589              	.LBI14802:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27590              		.loc 2 329 7 is_stmt 1 view .LVU7230
 27591              	.LBB14803:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 27592              		.loc 2 331 47 is_stmt 0 view .LVU7231
 27593 002c 9A1A     		subs	r2, r3, r2
 27594              	.LVL1878:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 27595              		.loc 2 331 47 view .LVU7232
 27596              	.LBE14803:
 27597              	.LBE14802:
 27598              	.LBB14804:
 27599              	.LBI14804:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27600              		.loc 2 263 9 is_stmt 1 view .LVU7233
 27601              	.LBB14805:
 27602              	.LBB14806:
 27603              	.LBI14806:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27604              		.loc 2 243 9 view .LVU7234
 27605              	.LBB14807:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27606              		.loc 2 247 11 is_stmt 0 view .LVU7235
 27607 002e 4FF00003 		mov	r3, #0
 27608 0032 0A44     		add	r2, r2, r1
 27609              	.LVL1879:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27610              		.loc 2 247 11 view .LVU7236
 27611 0034 6846     		mov	r0, sp
 27612              	.LVL1880:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27613              		.loc 2 247 11 view .LVU7237
 27614 0036 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 27615              	.LVL1881:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27616              		.loc 2 247 11 view .LVU7238
 27617              	.LBE14807:
 27618              	.LBE14806:
 27619              	.LBE14805:
 27620              	.LBE14804:
 27621              	.LBE14794:
 27622              	.LBE14782:
 27623              	.LBE14781:
ARM GAS  /tmp/ccL95Edz.s 			page 876


 27624              	.LBE14775:
 27625              	.LBE14774:
 223:alohal/filesystem/filesystem.cpp ****     return Add_entry(path, new_directory);
 27626              		.loc 17 223 5 is_stmt 1 view .LVU7239
 27627              	.LBB14814:
 27628              	.LBI14814:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 27629              		.loc 2 448 7 view .LVU7240
 27630              	.LBB14815:
 27631              	.LBB14816:
 27632              	.LBB14817:
 27633              	.LBI14817:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27634              		.loc 2 190 7 view .LVU7241
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27635              		.loc 2 190 7 is_stmt 0 view .LVU7242
 27636              	.LBE14817:
 27637              	.LBB14818:
 27638              	.LBI14818:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27639              		.loc 2 290 7 is_stmt 1 view .LVU7243
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27640              		.loc 2 290 7 is_stmt 0 view .LVU7244
 27641              	.LBE14818:
 27642              	.LBB14819:
 27643              	.LBI14819:
 27644              		.loc 19 97 19 is_stmt 1 view .LVU7245
 27645              	.LBB14820:
 27646              	.LBI14820:
 27647              		.loc 3 514 7 view .LVU7246
 27648              	.LBB14821:
 27649              	.LBI14821:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27650              		.loc 5 141 7 view .LVU7247
 27651              	.LBB14822:
 27652              	.LBI14822:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27653              		.loc 4 83 7 view .LVU7248
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27654              		.loc 4 83 7 is_stmt 0 view .LVU7249
 27655              	.LBE14822:
 27656              	.LBE14821:
 27657              	.LBE14820:
 27658              	.LBE14819:
 27659              	.LBB14823:
 27660              	.LBI14823:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 27661              		.loc 2 159 2 is_stmt 1 view .LVU7250
 27662              	.LBB14824:
 27663              	.LBB14825:
 27664              	.LBB14826:
 27665              	.LBI14826:
 27666              		.loc 9 99 5 view .LVU7251
 27667              		.loc 9 99 5 is_stmt 0 view .LVU7252
 27668              	.LBE14826:
 27669              	.LBB14827:
 27670              	.LBI14827:
ARM GAS  /tmp/ccL95Edz.s 			page 877


 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27671              		.loc 5 141 7 is_stmt 1 view .LVU7253
 27672              	.LBB14828:
 27673              	.LBI14828:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27674              		.loc 4 83 7 view .LVU7254
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27675              		.loc 4 83 7 is_stmt 0 view .LVU7255
 27676              	.LBE14828:
 27677              	.LBE14827:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27678              		.loc 2 160 46 view .LVU7256
 27679 003a 08AF     		add	r7, sp, #32
 27680              	.LVL1882:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27681              		.loc 2 160 46 view .LVU7257
 27682 003c 0697     		str	r7, [sp, #24]
 27683              	.LVL1883:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27684              		.loc 2 160 46 view .LVU7258
 27685              	.LBE14825:
 27686              	.LBE14824:
 27687              	.LBE14823:
 27688              	.LBB14829:
 27689              	.LBI14829:
 27690              		.loc 5 153 7 is_stmt 1 view .LVU7259
 27691              	.LBB14830:
 27692              	.LBI14830:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27693              		.loc 4 89 7 view .LVU7260
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27694              		.loc 4 89 7 is_stmt 0 view .LVU7261
 27695              	.LBE14830:
 27696              	.LBE14829:
 27697              	.LBB14831:
 27698              	.LBI14831:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27699              		.loc 2 186 7 is_stmt 1 view .LVU7262
 27700              	.LBB14832:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27701              		.loc 2 187 28 is_stmt 0 view .LVU7263
 27702 003e 0099     		ldr	r1, [sp]
 27703              	.LVL1884:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27704              		.loc 2 187 28 view .LVU7264
 27705              	.LBE14832:
 27706              	.LBE14831:
 27707              	.LBB14833:
 27708              	.LBI14833:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27709              		.loc 2 186 7 is_stmt 1 view .LVU7265
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27710              		.loc 2 186 7 is_stmt 0 view .LVU7266
 27711              	.LBE14833:
 27712              	.LBB14834:
 27713              	.LBI14834:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
ARM GAS  /tmp/ccL95Edz.s 			page 878


 27714              		.loc 2 936 7 is_stmt 1 view .LVU7267
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27715              		.loc 2 936 7 is_stmt 0 view .LVU7268
 27716              	.LBE14834:
 27717              	.LBB14835:
 27718              	.LBI14835:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27719              		.loc 2 263 9 is_stmt 1 view .LVU7269
 27720              	.LBB14836:
 27721              	.LBB14837:
 27722              	.LBI14837:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27723              		.loc 2 243 9 view .LVU7270
 27724              	.LBB14838:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27725              		.loc 2 247 11 is_stmt 0 view .LVU7271
 27726 0040 4FF00003 		mov	r3, #0
 27727 0044 019A     		ldr	r2, [sp, #4]
 27728 0046 0A44     		add	r2, r2, r1
 27729              	.LVL1885:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27730              		.loc 2 247 11 view .LVU7272
 27731 0048 06A8     		add	r0, sp, #24
 27732              	.LVL1886:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27733              		.loc 2 247 11 view .LVU7273
 27734 004a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 27735              	.LVL1887:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27736              		.loc 2 247 11 view .LVU7274
 27737              	.LBE14838:
 27738              	.LBE14837:
 27739              	.LBE14836:
 27740              	.LBE14835:
 27741              	.LBE14816:
 27742              	.LBE14815:
 27743              	.LBE14814:
 223:alohal/filesystem/filesystem.cpp ****     return Add_entry(path, new_directory);
 27744              		.loc 17 223 60 view .LVU7275
 27745 004e 3020     		movs	r0, #48
 27746 0050 FFF7FEFF 		bl	_Znwj
 27747              	.LVL1888:
 27748 0054 0646     		mov	r6, r0
 27749 0056 06A9     		add	r1, sp, #24
 27750 0058 FFF7FEFF 		bl	_ZN9DirectoryC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 27751              	.LVL1889:
 27752              	.LBB14839:
 27753              	.LBI14839:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27754              		.loc 2 657 7 is_stmt 1 view .LVU7276
 27755              	.LBB14840:
 27756              	.LBI14840:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27757              		.loc 2 229 7 view .LVU7277
 27758              	.LBB14841:
 27759              	.LBB14842:
 27760              	.LBI14842:
ARM GAS  /tmp/ccL95Edz.s 			page 879


 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27761              		.loc 2 221 7 view .LVU7278
 27762              	.LBB14843:
 27763              	.LBI14843:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27764              		.loc 2 186 7 view .LVU7279
 27765              	.LBB14844:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27766              		.loc 2 187 28 is_stmt 0 view .LVU7280
 27767 005c 0698     		ldr	r0, [sp, #24]
 27768              	.LVL1890:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27769              		.loc 2 187 28 view .LVU7281
 27770              	.LBE14844:
 27771              	.LBE14843:
 27772              	.LBB14845:
 27773              	.LBI14845:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27774              		.loc 2 200 7 is_stmt 1 view .LVU7282
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27775              		.loc 2 200 7 is_stmt 0 view .LVU7283
 27776              	.LBE14845:
 27777              	.LBE14842:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27778              		.loc 2 231 2 view .LVU7284
 27779 005e B842     		cmp	r0, r7
 27780 0060 01D0     		beq	.L579
 27781              	.LVL1891:
 27782              	.LBB14846:
 27783              	.LBI14846:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27784              		.loc 2 236 7 is_stmt 1 view .LVU7285
 27785              	.LBB14847:
 27786              	.LBB14848:
 27787              	.LBI14848:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27788              		.loc 3 469 7 view .LVU7286
 27789              	.LBB14849:
 27790              	.LBI14849:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27791              		.loc 4 119 7 view .LVU7287
 27792              	.LBB14850:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27793              		.loc 4 128 19 is_stmt 0 view .LVU7288
 27794 0062 FFF7FEFF 		bl	_ZdlPv
 27795              	.LVL1892:
 27796              	.L579:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27797              		.loc 4 128 19 view .LVU7289
 27798              	.LBE14850:
 27799              	.LBE14849:
 27800              	.LBE14848:
 27801              	.LBE14847:
 27802              	.LBE14846:
 27803              	.LBE14841:
 27804              	.LBE14840:
 27805              	.LBB14851:
ARM GAS  /tmp/ccL95Edz.s 			page 880


 27806              	.LBI14851:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27807              		.loc 2 150 14 is_stmt 1 view .LVU7290
 27808              	.LBB14852:
 27809              	.LBI14852:
 27810              		.loc 5 153 7 view .LVU7291
 27811              	.LBB14853:
 27812              	.LBI14853:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27813              		.loc 4 89 7 view .LVU7292
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27814              		.loc 4 89 7 is_stmt 0 view .LVU7293
 27815              	.LBE14853:
 27816              	.LBE14852:
 27817              	.LBE14851:
 27818              	.LBE14839:
 224:alohal/filesystem/filesystem.cpp **** }
 27819              		.loc 17 224 5 is_stmt 1 view .LVU7294
 27820              	.LBB14854:
 27821              	.LBI14854:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 27822              		.loc 2 448 7 view .LVU7295
 27823              	.LBB14855:
 27824              	.LBB14856:
 27825              	.LBB14857:
 27826              	.LBI14857:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27827              		.loc 2 190 7 view .LVU7296
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27828              		.loc 2 190 7 is_stmt 0 view .LVU7297
 27829              	.LBE14857:
 27830              	.LBB14858:
 27831              	.LBI14858:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27832              		.loc 2 290 7 is_stmt 1 view .LVU7298
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27833              		.loc 2 290 7 is_stmt 0 view .LVU7299
 27834              	.LBE14858:
 27835              	.LBB14859:
 27836              	.LBI14859:
 27837              		.loc 19 97 19 is_stmt 1 view .LVU7300
 27838              	.LBB14860:
 27839              	.LBI14860:
 27840              		.loc 3 514 7 view .LVU7301
 27841              	.LBB14861:
 27842              	.LBI14861:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27843              		.loc 5 141 7 view .LVU7302
 27844              	.LBB14862:
 27845              	.LBI14862:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27846              		.loc 4 83 7 view .LVU7303
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27847              		.loc 4 83 7 is_stmt 0 view .LVU7304
 27848              	.LBE14862:
 27849              	.LBE14861:
 27850              	.LBE14860:
ARM GAS  /tmp/ccL95Edz.s 			page 881


 27851              	.LBE14859:
 27852              	.LBB14863:
 27853              	.LBI14863:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 27854              		.loc 2 159 2 is_stmt 1 view .LVU7305
 27855              	.LBB14864:
 27856              	.LBB14865:
 27857              	.LBB14866:
 27858              	.LBI14866:
 27859              		.loc 9 99 5 view .LVU7306
 27860              		.loc 9 99 5 is_stmt 0 view .LVU7307
 27861              	.LBE14866:
 27862              	.LBB14867:
 27863              	.LBI14867:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27864              		.loc 5 141 7 is_stmt 1 view .LVU7308
 27865              	.LBB14868:
 27866              	.LBI14868:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27867              		.loc 4 83 7 view .LVU7309
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27868              		.loc 4 83 7 is_stmt 0 view .LVU7310
 27869              	.LBE14868:
 27870              	.LBE14867:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27871              		.loc 2 160 46 view .LVU7311
 27872 0066 0EAF     		add	r7, sp, #56
 27873              	.LVL1893:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27874              		.loc 2 160 46 view .LVU7312
 27875 0068 0C97     		str	r7, [sp, #48]
 27876              	.LVL1894:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27877              		.loc 2 160 46 view .LVU7313
 27878              	.LBE14865:
 27879              	.LBE14864:
 27880              	.LBE14863:
 27881              	.LBB14869:
 27882              	.LBI14869:
 27883              		.loc 5 153 7 is_stmt 1 view .LVU7314
 27884              	.LBB14870:
 27885              	.LBI14870:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27886              		.loc 4 89 7 view .LVU7315
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27887              		.loc 4 89 7 is_stmt 0 view .LVU7316
 27888              	.LBE14870:
 27889              	.LBE14869:
 27890              	.LBB14871:
 27891              	.LBI14871:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27892              		.loc 2 186 7 is_stmt 1 view .LVU7317
 27893              	.LBB14872:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27894              		.loc 2 187 28 is_stmt 0 view .LVU7318
 27895 006a 2168     		ldr	r1, [r4]
 27896              	.LVL1895:
ARM GAS  /tmp/ccL95Edz.s 			page 882


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27897              		.loc 2 187 28 view .LVU7319
 27898              	.LBE14872:
 27899              	.LBE14871:
 27900              	.LBB14873:
 27901              	.LBI14873:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27902              		.loc 2 186 7 is_stmt 1 view .LVU7320
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27903              		.loc 2 186 7 is_stmt 0 view .LVU7321
 27904              	.LBE14873:
 27905              	.LBB14874:
 27906              	.LBI14874:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27907              		.loc 2 936 7 is_stmt 1 view .LVU7322
 27908              	.LBB14875:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27909              		.loc 2 937 16 is_stmt 0 view .LVU7323
 27910 006c 6268     		ldr	r2, [r4, #4]
 27911              	.LVL1896:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27912              		.loc 2 937 16 view .LVU7324
 27913              	.LBE14875:
 27914              	.LBE14874:
 27915              	.LBB14876:
 27916              	.LBI14876:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27917              		.loc 2 263 9 is_stmt 1 view .LVU7325
 27918              	.LBB14877:
 27919              	.LBB14878:
 27920              	.LBI14878:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27921              		.loc 2 243 9 view .LVU7326
 27922              	.LBB14879:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27923              		.loc 2 247 11 is_stmt 0 view .LVU7327
 27924 006e 4FF00003 		mov	r3, #0
 27925 0072 0A44     		add	r2, r2, r1
 27926              	.LVL1897:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27927              		.loc 2 247 11 view .LVU7328
 27928 0074 0CA8     		add	r0, sp, #48
 27929              	.LVL1898:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27930              		.loc 2 247 11 view .LVU7329
 27931 0076 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 27932              	.LVL1899:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27933              		.loc 2 247 11 view .LVU7330
 27934              	.LBE14879:
 27935              	.LBE14878:
 27936              	.LBE14877:
 27937              	.LBE14876:
 27938              	.LBE14856:
 27939              	.LBE14855:
 27940              	.LBE14854:
 224:alohal/filesystem/filesystem.cpp **** }
ARM GAS  /tmp/ccL95Edz.s 			page 883


 27941              		.loc 17 224 21 view .LVU7331
 27942 007a 3246     		mov	r2, r6
 27943 007c 0CA9     		add	r1, sp, #48
 27944 007e 2846     		mov	r0, r5
 27945 0080 FFF7FEFF 		bl	_ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry
 27946              	.LVL1900:
 27947 0084 0446     		mov	r4, r0
 27948              	.LVL1901:
 27949              	.LBB14880:
 27950              	.LBI14880:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27951              		.loc 2 657 7 is_stmt 1 view .LVU7332
 27952              	.LBB14881:
 27953              	.LBI14881:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27954              		.loc 2 229 7 view .LVU7333
 27955              	.LBB14882:
 27956              	.LBB14883:
 27957              	.LBI14883:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27958              		.loc 2 221 7 view .LVU7334
 27959              	.LBB14884:
 27960              	.LBI14884:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27961              		.loc 2 186 7 view .LVU7335
 27962              	.LBB14885:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27963              		.loc 2 187 28 is_stmt 0 view .LVU7336
 27964 0086 0C98     		ldr	r0, [sp, #48]
 27965              	.LVL1902:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27966              		.loc 2 187 28 view .LVU7337
 27967              	.LBE14885:
 27968              	.LBE14884:
 27969              	.LBB14886:
 27970              	.LBI14886:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27971              		.loc 2 200 7 is_stmt 1 view .LVU7338
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27972              		.loc 2 200 7 is_stmt 0 view .LVU7339
 27973              	.LBE14886:
 27974              	.LBE14883:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27975              		.loc 2 231 2 view .LVU7340
 27976 0088 B842     		cmp	r0, r7
 27977 008a 01D0     		beq	.L580
 27978              	.LVL1903:
 27979              	.LBB14887:
 27980              	.LBI14887:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27981              		.loc 2 236 7 is_stmt 1 view .LVU7341
 27982              	.LBB14888:
 27983              	.LBB14889:
 27984              	.LBI14889:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27985              		.loc 3 469 7 view .LVU7342
 27986              	.LBB14890:
ARM GAS  /tmp/ccL95Edz.s 			page 884


 27987              	.LBI14890:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27988              		.loc 4 119 7 view .LVU7343
 27989              	.LBB14891:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27990              		.loc 4 128 19 is_stmt 0 view .LVU7344
 27991 008c FFF7FEFF 		bl	_ZdlPv
 27992              	.LVL1904:
 27993              	.L580:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27994              		.loc 4 128 19 view .LVU7345
 27995              	.LBE14891:
 27996              	.LBE14890:
 27997              	.LBE14889:
 27998              	.LBE14888:
 27999              	.LBE14887:
 28000              	.LBE14882:
 28001              	.LBE14881:
 28002              	.LBB14892:
 28003              	.LBI14892:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28004              		.loc 2 150 14 is_stmt 1 view .LVU7346
 28005              	.LBB14893:
 28006              	.LBI14893:
 28007              		.loc 5 153 7 view .LVU7347
 28008              	.LBB14894:
 28009              	.LBI14894:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28010              		.loc 4 89 7 view .LVU7348
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28011              		.loc 4 89 7 is_stmt 0 view .LVU7349
 28012              	.LBE14894:
 28013              	.LBE14893:
 28014              	.LBE14892:
 28015              	.LBE14880:
 28016              	.LBB14895:
 28017              	.LBI14895:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 28018              		.loc 2 657 7 is_stmt 1 view .LVU7350
 28019              	.LBB14896:
 28020              	.LBI14896:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28021              		.loc 2 229 7 view .LVU7351
 28022              	.LBB14897:
 28023              	.LBB14898:
 28024              	.LBI14898:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 28025              		.loc 2 221 7 view .LVU7352
 28026              	.LBB14899:
 28027              	.LBI14899:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28028              		.loc 2 186 7 view .LVU7353
 28029              	.LBB14900:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28030              		.loc 2 187 28 is_stmt 0 view .LVU7354
 28031 0090 0098     		ldr	r0, [sp]
 28032              	.LVL1905:
ARM GAS  /tmp/ccL95Edz.s 			page 885


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28033              		.loc 2 187 28 view .LVU7355
 28034              	.LBE14900:
 28035              	.LBE14899:
 28036              	.LBB14901:
 28037              	.LBI14901:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28038              		.loc 2 200 7 is_stmt 1 view .LVU7356
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28039              		.loc 2 200 7 is_stmt 0 view .LVU7357
 28040              	.LBE14901:
 28041              	.LBE14898:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 28042              		.loc 2 231 2 view .LVU7358
 28043 0092 02AB     		add	r3, sp, #8
 28044 0094 9842     		cmp	r0, r3
 28045 0096 01D0     		beq	.L576
 28046              	.LVL1906:
 28047              	.LBB14902:
 28048              	.LBI14902:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 28049              		.loc 2 236 7 is_stmt 1 view .LVU7359
 28050              	.LBB14903:
 28051              	.LBB14904:
 28052              	.LBI14904:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 28053              		.loc 3 469 7 view .LVU7360
 28054              	.LBB14905:
 28055              	.LBI14905:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28056              		.loc 4 119 7 view .LVU7361
 28057              	.LBB14906:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28058              		.loc 4 128 19 is_stmt 0 view .LVU7362
 28059 0098 FFF7FEFF 		bl	_ZdlPv
 28060              	.LVL1907:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28061              		.loc 4 128 19 view .LVU7363
 28062              	.LBE14906:
 28063              	.LBE14905:
 28064              	.LBE14904:
 28065              	.LBE14903:
 28066              	.LBE14902:
 28067              	.LBE14897:
 28068              	.LBE14896:
 28069              	.LBB14907:
 28070              	.LBI14907:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28071              		.loc 2 150 14 is_stmt 1 view .LVU7364
 28072              	.LBB14908:
 28073              	.LBI14908:
 28074              		.loc 5 153 7 view .LVU7365
 28075              	.LBB14909:
 28076              	.LBI14909:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28077              		.loc 4 89 7 view .LVU7366
 28078              	.L576:
ARM GAS  /tmp/ccL95Edz.s 			page 886


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28079              		.loc 4 89 7 is_stmt 0 view .LVU7367
 28080              	.LBE14909:
 28081              	.LBE14908:
 28082              	.LBE14907:
 28083              	.LBE14895:
 225:alohal/filesystem/filesystem.cpp **** 
 28084              		.loc 17 225 1 view .LVU7368
 28085 009c 2046     		mov	r0, r4
 28086 009e 13B0     		add	sp, sp, #76
 28087              	.LCFI93:
 28088              		.cfi_remember_state
 28089              		.cfi_def_cfa_offset 20
 28090              		@ sp needed
 28091 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 28092              	.LVL1908:
 28093              	.L583:
 28094              	.LCFI94:
 28095              		.cfi_restore_state
 28096              	.LBB14910:
 28097              	.LBB14813:
 28098              	.LBB14811:
 28099              	.LBB14780:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 28100              		.loc 2 313 28 view .LVU7369
 28101 00a2 0549     		ldr	r1, .L585+4
 28102 00a4 0548     		ldr	r0, .L585+8
 28103 00a6 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 28104              	.LVL1909:
 28105              	.L584:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 28106              		.loc 2 313 28 view .LVU7370
 28107              	.LBE14780:
 28108              	.LBE14811:
 28109              	.LBB14812:
 28110              	.LBB14810:
 28111              	.LBB14809:
 28112              	.LBB14808:
 28113              	.LBB14801:
 28114 00aa 0549     		ldr	r1, .L585+12
 28115 00ac 0348     		ldr	r0, .L585+8
 28116 00ae FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 28117              	.LVL1910:
 28118              	.L586:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 28119              		.loc 2 313 28 view .LVU7371
 28120 00b2 00BF     		.align	2
 28121              	.L585:
 28122 00b4 04000000 		.word	.LC6
 28123 00b8 28000000 		.word	.LC25
 28124 00bc 1C000000 		.word	.LC8
 28125 00c0 40000000 		.word	.LC26
 28126              	.LBE14801:
 28127              	.LBE14808:
 28128              	.LBE14809:
 28129              	.LBE14810:
 28130              	.LBE14812:
ARM GAS  /tmp/ccL95Edz.s 			page 887


 28131              	.LBE14813:
 28132              	.LBE14910:
 28133              		.cfi_endproc
 28134              	.LFE3399:
 28136              		.section	.rodata._ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_
 28137              		.align	2
 28138              	.LC30:
 28139 0000 4E6F6E65 		.ascii	"None\000"
 28139      00
 28140              		.section	.text._ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_,"
 28141              		.align	1
 28142              		.global	_ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_
 28143              		.syntax unified
 28144              		.thumb
 28145              		.thumb_func
 28146              		.fpu fpv4-sp-d16
 28148              	_ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_:
 28149              	.LVL1911:
 28150              	.LFB3400:
 227:alohal/filesystem/filesystem.cpp ****     string filename = path.substr(path.find_last_of("/") + 1);
 28151              		.loc 17 227 55 is_stmt 1 view -0
 28152              		.cfi_startproc
 28153              		@ args = 0, pretend = 0, frame = 96
 28154              		@ frame_needed = 0, uses_anonymous_args = 0
 227:alohal/filesystem/filesystem.cpp ****     string filename = path.substr(path.find_last_of("/") + 1);
 28155              		.loc 17 227 55 is_stmt 0 view .LVU7373
 28156 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 28157              	.LCFI95:
 28158              		.cfi_def_cfa_offset 28
 28159              		.cfi_offset 4, -28
 28160              		.cfi_offset 5, -24
 28161              		.cfi_offset 6, -20
 28162              		.cfi_offset 7, -16
 28163              		.cfi_offset 8, -12
 28164              		.cfi_offset 9, -8
 28165              		.cfi_offset 14, -4
 28166 0004 99B0     		sub	sp, sp, #100
 28167              	.LCFI96:
 28168              		.cfi_def_cfa_offset 128
 28169 0006 0746     		mov	r7, r0
 28170 0008 0D46     		mov	r5, r1
 28171 000a 1646     		mov	r6, r2
 228:alohal/filesystem/filesystem.cpp ****     File<> *new_file = new File(filename, content);
 28172              		.loc 17 228 5 is_stmt 1 view .LVU7374
 28173              	.LVL1912:
 28174              	.LBB15139:
 28175              	.LBI15139:
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 28176              		.loc 2 2635 7 view .LVU7375
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 28177              		.loc 2 2635 7 is_stmt 0 view .LVU7376
 28178              	.LBE15139:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 28179              		.loc 8 332 2 is_stmt 1 view .LVU7377
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 28180              		.loc 8 335 2 view .LVU7378
 28181              	.LBB15141:
ARM GAS  /tmp/ccL95Edz.s 			page 888


 28182              	.LBB15140:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 28183              		.loc 2 2639 64 is_stmt 0 view .LVU7379
 28184 000c 0123     		movs	r3, #1
 28185 000e 4FF0FF32 		mov	r2, #-1
 28186              	.LVL1913:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 28187              		.loc 2 2639 64 view .LVU7380
 28188 0012 4649     		ldr	r1, .L597
 28189              	.LVL1914:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 28190              		.loc 2 2639 64 view .LVU7381
 28191 0014 2846     		mov	r0, r5
 28192              	.LVL1915:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 28193              		.loc 2 2639 64 view .LVU7382
 28194 0016 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
 28195              	.LVL1916:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 28196              		.loc 2 2639 64 view .LVU7383
 28197              	.LBE15140:
 28198              	.LBE15141:
 228:alohal/filesystem/filesystem.cpp ****     File<> *new_file = new File(filename, content);
 28199              		.loc 17 228 61 view .LVU7384
 28200 001a 0130     		adds	r0, r0, #1
 28201              	.LVL1917:
 28202              	.LBB15142:
 28203              	.LBI15142:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 28204              		.loc 2 2834 7 is_stmt 1 view .LVU7385
 28205              	.LBB15143:
 28206              	.LBB15144:
 28207              	.LBI15144:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28208              		.loc 2 310 7 view .LVU7386
 28209              	.LBB15145:
 28210              	.LBB15146:
 28211              	.LBI15146:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28212              		.loc 2 930 7 view .LVU7387
 28213              	.LBB15147:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28214              		.loc 2 931 16 is_stmt 0 view .LVU7388
 28215 001c 6B68     		ldr	r3, [r5, #4]
 28216              	.LVL1918:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28217              		.loc 2 931 16 view .LVU7389
 28218              	.LBE15147:
 28219              	.LBE15146:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 28220              		.loc 2 312 2 view .LVU7390
 28221 001e 9842     		cmp	r0, r3
 28222 0020 79D8     		bhi	.L595
 28223              	.LVL1919:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 28224              		.loc 2 312 2 view .LVU7391
 28225              	.LBE15145:
ARM GAS  /tmp/ccL95Edz.s 			page 889


 28226              	.LBE15144:
 28227              	.LBB15149:
 28228              	.LBI15149:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 28229              		.loc 2 476 7 is_stmt 1 view .LVU7392
 28230              	.LBB15150:
 28231              	.LBB15151:
 28232              	.LBI15151:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28233              		.loc 2 190 7 view .LVU7393
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28234              		.loc 2 190 7 is_stmt 0 view .LVU7394
 28235              	.LBE15151:
 28236              	.LBB15152:
 28237              	.LBI15152:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 28238              		.loc 5 138 7 is_stmt 1 view .LVU7395
 28239              	.LBB15153:
 28240              	.LBI15153:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28241              		.loc 4 80 7 view .LVU7396
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28242              		.loc 4 80 7 is_stmt 0 view .LVU7397
 28243              	.LBE15153:
 28244              	.LBE15152:
 28245              	.LBB15154:
 28246              	.LBI15154:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 28247              		.loc 2 159 2 is_stmt 1 view .LVU7398
 28248              	.LBB15155:
 28249              	.LBB15156:
 28250              	.LBB15157:
 28251              	.LBI15157:
 28252              		.loc 9 99 5 view .LVU7399
 28253              		.loc 9 99 5 is_stmt 0 view .LVU7400
 28254              	.LBE15157:
 28255              	.LBB15158:
 28256              	.LBI15158:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28257              		.loc 5 141 7 is_stmt 1 view .LVU7401
 28258              	.LBB15159:
 28259              	.LBI15159:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28260              		.loc 4 83 7 view .LVU7402
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28261              		.loc 4 83 7 is_stmt 0 view .LVU7403
 28262              	.LBE15159:
 28263              	.LBE15158:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28264              		.loc 2 160 46 view .LVU7404
 28265 0022 02AB     		add	r3, sp, #8
 28266              	.LVL1920:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28267              		.loc 2 160 46 view .LVU7405
 28268 0024 0093     		str	r3, [sp]
 28269              	.LVL1921:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccL95Edz.s 			page 890


 28270              		.loc 2 160 46 view .LVU7406
 28271              	.LBE15156:
 28272              	.LBE15155:
 28273              	.LBE15154:
 28274              	.LBB15160:
 28275              	.LBI15160:
 28276              		.loc 5 153 7 is_stmt 1 view .LVU7407
 28277              	.LBB15161:
 28278              	.LBI15161:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28279              		.loc 4 89 7 view .LVU7408
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28280              		.loc 4 89 7 is_stmt 0 view .LVU7409
 28281              	.LBE15161:
 28282              	.LBE15160:
 28283              	.LBB15162:
 28284              	.LBB15163:
 28285              	.LBI15163:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28286              		.loc 2 186 7 is_stmt 1 view .LVU7410
 28287              	.LBB15164:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28288              		.loc 2 187 28 is_stmt 0 view .LVU7411
 28289 0026 2968     		ldr	r1, [r5]
 28290              	.LVL1922:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28291              		.loc 2 187 28 view .LVU7412
 28292              	.LBE15164:
 28293              	.LBE15163:
 28294              	.LBB15165:
 28295              	.LBI15165:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28296              		.loc 2 310 7 is_stmt 1 view .LVU7413
 28297              	.LBB15166:
 28298              	.LBB15167:
 28299              	.LBI15167:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28300              		.loc 2 930 7 view .LVU7414
 28301              	.LBB15168:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28302              		.loc 2 931 16 is_stmt 0 view .LVU7415
 28303 0028 6A68     		ldr	r2, [r5, #4]
 28304              	.LVL1923:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28305              		.loc 2 931 16 view .LVU7416
 28306              	.LBE15168:
 28307              	.LBE15167:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 28308              		.loc 2 312 2 view .LVU7417
 28309 002a 9042     		cmp	r0, r2
 28310 002c 78D8     		bhi	.L596
 28311              	.LVL1924:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 28312              		.loc 2 312 2 view .LVU7418
 28313              	.LBE15166:
 28314              	.LBE15165:
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
ARM GAS  /tmp/ccL95Edz.s 			page 891


 28315              		.loc 2 480 16 view .LVU7419
 28316 002e 0144     		add	r1, r1, r0
 28317              	.LVL1925:
 28318              	.LBB15170:
 28319              	.LBI15170:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28320              		.loc 2 329 7 is_stmt 1 view .LVU7420
 28321              	.LBB15171:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 28322              		.loc 2 331 47 is_stmt 0 view .LVU7421
 28323 0030 121A     		subs	r2, r2, r0
 28324              	.LVL1926:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 28325              		.loc 2 331 47 view .LVU7422
 28326              	.LBE15171:
 28327              	.LBE15170:
 28328              	.LBB15172:
 28329              	.LBI15172:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 28330              		.loc 2 263 9 is_stmt 1 view .LVU7423
 28331              	.LBB15173:
 28332              	.LBB15174:
 28333              	.LBI15174:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28334              		.loc 2 243 9 view .LVU7424
 28335              	.LBB15175:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28336              		.loc 2 247 11 is_stmt 0 view .LVU7425
 28337 0032 4FF00003 		mov	r3, #0
 28338 0036 0A44     		add	r2, r2, r1
 28339              	.LVL1927:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28340              		.loc 2 247 11 view .LVU7426
 28341 0038 6846     		mov	r0, sp
 28342              	.LVL1928:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28343              		.loc 2 247 11 view .LVU7427
 28344 003a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 28345              	.LVL1929:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28346              		.loc 2 247 11 view .LVU7428
 28347              	.LBE15175:
 28348              	.LBE15174:
 28349              	.LBE15173:
 28350              	.LBE15172:
 28351              	.LBE15162:
 28352              	.LBE15150:
 28353              	.LBE15149:
 28354              	.LBE15143:
 28355              	.LBE15142:
 229:alohal/filesystem/filesystem.cpp ****     return Add_entry(path, new_file);
 28356              		.loc 17 229 5 is_stmt 1 view .LVU7429
 28357              	.LBB15182:
 28358              	.LBI15182:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 28359              		.loc 2 448 7 view .LVU7430
 28360              	.LBB15183:
ARM GAS  /tmp/ccL95Edz.s 			page 892


 28361              	.LBB15184:
 28362              	.LBB15185:
 28363              	.LBI15185:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28364              		.loc 2 190 7 view .LVU7431
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28365              		.loc 2 190 7 is_stmt 0 view .LVU7432
 28366              	.LBE15185:
 28367              	.LBB15186:
 28368              	.LBI15186:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28369              		.loc 2 290 7 is_stmt 1 view .LVU7433
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28370              		.loc 2 290 7 is_stmt 0 view .LVU7434
 28371              	.LBE15186:
 28372              	.LBB15187:
 28373              	.LBI15187:
 28374              		.loc 19 97 19 is_stmt 1 view .LVU7435
 28375              	.LBB15188:
 28376              	.LBI15188:
 28377              		.loc 3 514 7 view .LVU7436
 28378              	.LBB15189:
 28379              	.LBI15189:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28380              		.loc 5 141 7 view .LVU7437
 28381              	.LBB15190:
 28382              	.LBI15190:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28383              		.loc 4 83 7 view .LVU7438
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28384              		.loc 4 83 7 is_stmt 0 view .LVU7439
 28385              	.LBE15190:
 28386              	.LBE15189:
 28387              	.LBE15188:
 28388              	.LBE15187:
 28389              	.LBB15191:
 28390              	.LBI15191:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 28391              		.loc 2 159 2 is_stmt 1 view .LVU7440
 28392              	.LBB15192:
 28393              	.LBB15193:
 28394              	.LBB15194:
 28395              	.LBI15194:
 28396              		.loc 9 99 5 view .LVU7441
 28397              		.loc 9 99 5 is_stmt 0 view .LVU7442
 28398              	.LBE15194:
 28399              	.LBB15195:
 28400              	.LBI15195:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28401              		.loc 5 141 7 is_stmt 1 view .LVU7443
 28402              	.LBB15196:
 28403              	.LBI15196:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28404              		.loc 4 83 7 view .LVU7444
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28405              		.loc 4 83 7 is_stmt 0 view .LVU7445
 28406              	.LBE15196:
ARM GAS  /tmp/ccL95Edz.s 			page 893


 28407              	.LBE15195:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28408              		.loc 2 160 46 view .LVU7446
 28409 003e 08AB     		add	r3, sp, #32
 28410              	.LVL1930:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28411              		.loc 2 160 46 view .LVU7447
 28412 0040 0693     		str	r3, [sp, #24]
 28413              	.LVL1931:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28414              		.loc 2 160 46 view .LVU7448
 28415              	.LBE15193:
 28416              	.LBE15192:
 28417              	.LBE15191:
 28418              	.LBB15197:
 28419              	.LBI15197:
 28420              		.loc 5 153 7 is_stmt 1 view .LVU7449
 28421              	.LBB15198:
 28422              	.LBI15198:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28423              		.loc 4 89 7 view .LVU7450
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28424              		.loc 4 89 7 is_stmt 0 view .LVU7451
 28425              	.LBE15198:
 28426              	.LBE15197:
 28427              	.LBB15199:
 28428              	.LBI15199:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28429              		.loc 2 186 7 is_stmt 1 view .LVU7452
 28430              	.LBB15200:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28431              		.loc 2 187 28 is_stmt 0 view .LVU7453
 28432 0042 0099     		ldr	r1, [sp]
 28433              	.LVL1932:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28434              		.loc 2 187 28 view .LVU7454
 28435              	.LBE15200:
 28436              	.LBE15199:
 28437              	.LBB15201:
 28438              	.LBI15201:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28439              		.loc 2 186 7 is_stmt 1 view .LVU7455
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28440              		.loc 2 186 7 is_stmt 0 view .LVU7456
 28441              	.LBE15201:
 28442              	.LBB15202:
 28443              	.LBI15202:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28444              		.loc 2 936 7 is_stmt 1 view .LVU7457
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28445              		.loc 2 936 7 is_stmt 0 view .LVU7458
 28446              	.LBE15202:
 28447              	.LBB15203:
 28448              	.LBI15203:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 28449              		.loc 2 263 9 is_stmt 1 view .LVU7459
 28450              	.LBB15204:
ARM GAS  /tmp/ccL95Edz.s 			page 894


 28451              	.LBB15205:
 28452              	.LBI15205:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28453              		.loc 2 243 9 view .LVU7460
 28454              	.LBB15206:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28455              		.loc 2 247 11 is_stmt 0 view .LVU7461
 28456 0044 4FF00003 		mov	r3, #0
 28457 0048 019A     		ldr	r2, [sp, #4]
 28458 004a 0A44     		add	r2, r2, r1
 28459              	.LVL1933:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28460              		.loc 2 247 11 view .LVU7462
 28461 004c 06A8     		add	r0, sp, #24
 28462              	.LVL1934:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28463              		.loc 2 247 11 view .LVU7463
 28464 004e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 28465              	.LVL1935:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28466              		.loc 2 247 11 view .LVU7464
 28467              	.LBE15206:
 28468              	.LBE15205:
 28469              	.LBE15204:
 28470              	.LBE15203:
 28471              	.LBE15184:
 28472              	.LBE15183:
 28473              	.LBE15182:
 28474              	.LBB15207:
 28475              	.LBI15207:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 28476              		.loc 2 448 7 is_stmt 1 view .LVU7465
 28477              	.LBB15208:
 28478              	.LBB15209:
 28479              	.LBB15210:
 28480              	.LBI15210:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28481              		.loc 2 190 7 view .LVU7466
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28482              		.loc 2 190 7 is_stmt 0 view .LVU7467
 28483              	.LBE15210:
 28484              	.LBB15211:
 28485              	.LBI15211:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28486              		.loc 2 290 7 is_stmt 1 view .LVU7468
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28487              		.loc 2 290 7 is_stmt 0 view .LVU7469
 28488              	.LBE15211:
 28489              	.LBB15212:
 28490              	.LBI15212:
 28491              		.loc 19 97 19 is_stmt 1 view .LVU7470
 28492              	.LBB15213:
 28493              	.LBI15213:
 28494              		.loc 3 514 7 view .LVU7471
 28495              	.LBB15214:
 28496              	.LBI15214:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccL95Edz.s 			page 895


 28497              		.loc 5 141 7 view .LVU7472
 28498              	.LBB15215:
 28499              	.LBI15215:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28500              		.loc 4 83 7 view .LVU7473
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28501              		.loc 4 83 7 is_stmt 0 view .LVU7474
 28502              	.LBE15215:
 28503              	.LBE15214:
 28504              	.LBE15213:
 28505              	.LBE15212:
 28506              	.LBB15216:
 28507              	.LBI15216:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 28508              		.loc 2 159 2 is_stmt 1 view .LVU7475
 28509              	.LBB15217:
 28510              	.LBB15218:
 28511              	.LBB15219:
 28512              	.LBI15219:
 28513              		.loc 9 99 5 view .LVU7476
 28514              		.loc 9 99 5 is_stmt 0 view .LVU7477
 28515              	.LBE15219:
 28516              	.LBB15220:
 28517              	.LBI15220:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28518              		.loc 5 141 7 is_stmt 1 view .LVU7478
 28519              	.LBB15221:
 28520              	.LBI15221:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28521              		.loc 4 83 7 view .LVU7479
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28522              		.loc 4 83 7 is_stmt 0 view .LVU7480
 28523              	.LBE15221:
 28524              	.LBE15220:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28525              		.loc 2 160 46 view .LVU7481
 28526 0052 0DF13808 		add	r8, sp, #56
 28527              	.LVL1936:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28528              		.loc 2 160 46 view .LVU7482
 28529 0056 CDF83080 		str	r8, [sp, #48]
 28530              	.LVL1937:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28531              		.loc 2 160 46 view .LVU7483
 28532              	.LBE15218:
 28533              	.LBE15217:
 28534              	.LBE15216:
 28535              	.LBB15222:
 28536              	.LBI15222:
 28537              		.loc 5 153 7 is_stmt 1 view .LVU7484
 28538              	.LBB15223:
 28539              	.LBI15223:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28540              		.loc 4 89 7 view .LVU7485
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28541              		.loc 4 89 7 is_stmt 0 view .LVU7486
 28542              	.LBE15223:
ARM GAS  /tmp/ccL95Edz.s 			page 896


 28543              	.LBE15222:
 28544              	.LBB15224:
 28545              	.LBI15224:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28546              		.loc 2 186 7 is_stmt 1 view .LVU7487
 28547              	.LBB15225:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28548              		.loc 2 187 28 is_stmt 0 view .LVU7488
 28549 005a 3168     		ldr	r1, [r6]
 28550              	.LVL1938:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28551              		.loc 2 187 28 view .LVU7489
 28552              	.LBE15225:
 28553              	.LBE15224:
 28554              	.LBB15226:
 28555              	.LBI15226:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28556              		.loc 2 186 7 is_stmt 1 view .LVU7490
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28557              		.loc 2 186 7 is_stmt 0 view .LVU7491
 28558              	.LBE15226:
 28559              	.LBB15227:
 28560              	.LBI15227:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28561              		.loc 2 936 7 is_stmt 1 view .LVU7492
 28562              	.LBB15228:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28563              		.loc 2 937 16 is_stmt 0 view .LVU7493
 28564 005c 7268     		ldr	r2, [r6, #4]
 28565              	.LVL1939:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28566              		.loc 2 937 16 view .LVU7494
 28567              	.LBE15228:
 28568              	.LBE15227:
 28569              	.LBB15229:
 28570              	.LBI15229:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 28571              		.loc 2 263 9 is_stmt 1 view .LVU7495
 28572              	.LBB15230:
 28573              	.LBB15231:
 28574              	.LBI15231:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28575              		.loc 2 243 9 view .LVU7496
 28576              	.LBB15232:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28577              		.loc 2 247 11 is_stmt 0 view .LVU7497
 28578 005e 4FF00003 		mov	r3, #0
 28579 0062 0A44     		add	r2, r2, r1
 28580              	.LVL1940:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28581              		.loc 2 247 11 view .LVU7498
 28582 0064 0CA8     		add	r0, sp, #48
 28583              	.LVL1941:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28584              		.loc 2 247 11 view .LVU7499
 28585 0066 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 28586              	.LVL1942:
ARM GAS  /tmp/ccL95Edz.s 			page 897


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28587              		.loc 2 247 11 view .LVU7500
 28588              	.LBE15232:
 28589              	.LBE15231:
 28590              	.LBE15230:
 28591              	.LBE15229:
 28592              	.LBE15209:
 28593              	.LBE15208:
 28594              	.LBE15207:
 229:alohal/filesystem/filesystem.cpp ****     return Add_entry(path, new_file);
 28595              		.loc 17 229 50 view .LVU7501
 28596 006a 4820     		movs	r0, #72
 28597 006c FFF7FEFF 		bl	_Znwj
 28598              	.LVL1943:
 28599 0070 0446     		mov	r4, r0
 28600              	.LVL1944:
 28601              	.LBB15233:
 28602              	.LBI15233:
  71:alohal/filesystem/file.hpp ****         location(Location::RAM),
 28603              		.loc 6 71 5 is_stmt 1 view .LVU7502
 28604              	.LBB15234:
 28605              	.LBB15235:
 28606              	.LBI15235:
  35:alohal/filesystem/entry.hpp **** 
 28607              		.loc 1 35 5 view .LVU7503
 28608              	.LBB15236:
 28609 0072 2F4B     		ldr	r3, .L597+4
 28610 0074 0360     		str	r3, [r0]
 28611 0076 0026     		movs	r6, #0
 28612              	.LVL1945:
  35:alohal/filesystem/entry.hpp **** 
 28613              		.loc 1 35 5 is_stmt 0 view .LVU7504
 28614 0078 4660     		str	r6, [r0, #4]
 28615 007a 00F10809 		add	r9, r0, #8
 28616              	.LVL1946:
 28617              	.LBB15237:
 28618              	.LBI15237:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 28619              		.loc 5 138 7 is_stmt 1 view .LVU7505
 28620              	.LBB15238:
 28621              	.LBI15238:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28622              		.loc 4 80 7 view .LVU7506
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28623              		.loc 4 80 7 is_stmt 0 view .LVU7507
 28624              	.LBE15238:
 28625              	.LBE15237:
 28626              	.LBB15239:
 28627              	.LBI15239:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 28628              		.loc 2 525 7 is_stmt 1 view .LVU7508
 28629              	.LBB15240:
 28630              	.LBB15241:
 28631              	.LBI15241:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28632              		.loc 2 190 7 view .LVU7509
 28633              	.LBB15242:
ARM GAS  /tmp/ccL95Edz.s 			page 898


 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28634              		.loc 2 193 51 is_stmt 0 view .LVU7510
 28635 007e 00F11003 		add	r3, r0, #16
 28636              	.LVL1947:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28637              		.loc 2 193 51 view .LVU7511
 28638              	.LBE15242:
 28639              	.LBE15241:
 28640              	.LBB15243:
 28641              	.LBI15243:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 28642              		.loc 2 156 2 is_stmt 1 view .LVU7512
 28643              	.LBB15244:
 28644              	.LBB15245:
 28645              	.LBI15245:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28646              		.loc 5 141 7 view .LVU7513
 28647              	.LBB15246:
 28648              	.LBI15246:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28649              		.loc 4 83 7 view .LVU7514
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28650              		.loc 4 83 7 is_stmt 0 view .LVU7515
 28651              	.LBE15246:
 28652              	.LBE15245:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28653              		.loc 2 157 35 view .LVU7516
 28654 0082 8360     		str	r3, [r0, #8]
 28655              	.LVL1948:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28656              		.loc 2 157 35 view .LVU7517
 28657              	.LBE15244:
 28658              	.LBE15243:
 28659              	.LBB15247:
 28660              	.LBI15247:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 28661              		.loc 8 329 7 is_stmt 1 view .LVU7518
 28662              	.LBE15247:
 28663              	.LBE15240:
 28664              	.LBE15239:
 28665              	.LBE15236:
 28666              	.LBE15235:
 28667              	.LBE15234:
 28668              	.LBE15233:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 28669              		.loc 8 332 2 view .LVU7519
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 28670              		.loc 8 335 2 view .LVU7520
 28671              	.LBB15286:
 28672              	.LBB15285:
 28673              	.LBB15257:
 28674              	.LBB15256:
 28675              	.LBB15253:
 28676              	.LBB15252:
 28677              	.LBB15248:
 28678              	.LBI15248:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
ARM GAS  /tmp/ccL95Edz.s 			page 899


 28679              		.loc 2 263 9 view .LVU7521
 28680              	.LBB15249:
 28681              	.LBB15250:
 28682              	.LBI15250:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28683              		.loc 2 243 9 view .LVU7522
 28684              	.LBB15251:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28685              		.loc 2 247 11 is_stmt 0 view .LVU7523
 28686 0084 2B4A     		ldr	r2, .L597+8
 28687              	.LVL1949:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28688              		.loc 2 247 11 view .LVU7524
 28689 0086 4FF00003 		mov	r3, #0
 28690 008a 111F     		subs	r1, r2, #4
 28691 008c 4846     		mov	r0, r9
 28692              	.LVL1950:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28693              		.loc 2 247 11 view .LVU7525
 28694 008e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 28695              	.LVL1951:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28696              		.loc 2 247 11 view .LVU7526
 28697              	.LBE15251:
 28698              	.LBE15250:
 28699              	.LBE15249:
 28700              	.LBE15248:
 28701              	.LBE15252:
 28702              	.LBE15253:
 28703              	.LBB15254:
 28704              	.LBI15254:
 28705              		.loc 5 153 7 is_stmt 1 view .LVU7527
 28706              	.LBB15255:
 28707              	.LBI15255:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28708              		.loc 4 89 7 view .LVU7528
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28709              		.loc 4 89 7 is_stmt 0 view .LVU7529
 28710              	.LBE15255:
 28711              	.LBE15254:
  35:alohal/filesystem/entry.hpp **** 
 28712              		.loc 1 35 5 view .LVU7530
 28713 0092 2662     		str	r6, [r4, #32]
 28714              	.LVL1952:
  35:alohal/filesystem/entry.hpp **** 
 28715              		.loc 1 35 5 view .LVU7531
 28716              	.LBE15256:
 28717              	.LBE15257:
  73:alohal/filesystem/file.hpp ****         this->type = Type::File;
 28718              		.loc 6 73 24 view .LVU7532
 28719 0094 284B     		ldr	r3, .L597+12
 28720 0096 2360     		str	r3, [r4]
 28721 0098 6662     		str	r6, [r4, #36]
 28722 009a A662     		str	r6, [r4, #40]
 28723 009c E662     		str	r6, [r4, #44]
 28724              	.LVL1953:
 28725              	.LBB15258:
ARM GAS  /tmp/ccL95Edz.s 			page 900


 28726              	.LBI15258:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 28727              		.loc 2 448 7 is_stmt 1 view .LVU7533
 28728              	.LBB15259:
 28729              	.LBB15260:
 28730              	.LBI15260:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28731              		.loc 2 190 7 view .LVU7534
 28732              	.LBB15261:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28733              		.loc 2 193 51 is_stmt 0 view .LVU7535
 28734 009e 04F13803 		add	r3, r4, #56
 28735              	.LVL1954:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28736              		.loc 2 193 51 view .LVU7536
 28737              	.LBE15261:
 28738              	.LBE15260:
 28739              	.LBB15262:
 28740              	.LBI15262:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28741              		.loc 2 290 7 is_stmt 1 view .LVU7537
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28742              		.loc 2 290 7 is_stmt 0 view .LVU7538
 28743              	.LBE15262:
 28744              	.LBB15263:
 28745              	.LBI15263:
 28746              		.loc 19 97 19 is_stmt 1 view .LVU7539
 28747              	.LBB15264:
 28748              	.LBI15264:
 28749              		.loc 3 514 7 view .LVU7540
 28750              	.LBB15265:
 28751              	.LBI15265:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28752              		.loc 5 141 7 view .LVU7541
 28753              	.LBB15266:
 28754              	.LBI15266:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28755              		.loc 4 83 7 view .LVU7542
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28756              		.loc 4 83 7 is_stmt 0 view .LVU7543
 28757              	.LBE15266:
 28758              	.LBE15265:
 28759              	.LBE15264:
 28760              	.LBE15263:
 28761              	.LBB15267:
 28762              	.LBI15267:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 28763              		.loc 2 159 2 is_stmt 1 view .LVU7544
 28764              	.LBB15268:
 28765              	.LBB15269:
 28766              	.LBI15269:
 28767              		.loc 9 99 5 view .LVU7545
 28768              		.loc 9 99 5 is_stmt 0 view .LVU7546
 28769              	.LBE15269:
 28770              	.LBB15270:
 28771              	.LBI15270:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccL95Edz.s 			page 901


 28772              		.loc 5 141 7 is_stmt 1 view .LVU7547
 28773              	.LBB15271:
 28774              	.LBI15271:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28775              		.loc 4 83 7 view .LVU7548
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28776              		.loc 4 83 7 is_stmt 0 view .LVU7549
 28777              	.LBE15271:
 28778              	.LBE15270:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28779              		.loc 2 160 46 view .LVU7550
 28780 00a2 2363     		str	r3, [r4, #48]
 28781              	.LVL1955:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28782              		.loc 2 160 46 view .LVU7551
 28783              	.LBE15268:
 28784              	.LBE15267:
 28785              	.LBB15272:
 28786              	.LBI15272:
 28787              		.loc 5 153 7 is_stmt 1 view .LVU7552
 28788              	.LBB15273:
 28789              	.LBI15273:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28790              		.loc 4 89 7 view .LVU7553
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28791              		.loc 4 89 7 is_stmt 0 view .LVU7554
 28792              	.LBE15273:
 28793              	.LBE15272:
 28794              	.LBB15274:
 28795              	.LBI15274:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28796              		.loc 2 186 7 is_stmt 1 view .LVU7555
 28797              	.LBB15275:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28798              		.loc 2 187 28 is_stmt 0 view .LVU7556
 28799 00a4 0C99     		ldr	r1, [sp, #48]
 28800              	.LVL1956:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28801              		.loc 2 187 28 view .LVU7557
 28802              	.LBE15275:
 28803              	.LBE15274:
 28804              	.LBB15276:
 28805              	.LBI15276:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28806              		.loc 2 186 7 is_stmt 1 view .LVU7558
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28807              		.loc 2 186 7 is_stmt 0 view .LVU7559
 28808              	.LBE15276:
 28809              	.LBB15277:
 28810              	.LBI15277:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28811              		.loc 2 936 7 is_stmt 1 view .LVU7560
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28812              		.loc 2 936 7 is_stmt 0 view .LVU7561
 28813              	.LBE15277:
 28814              	.LBB15278:
 28815              	.LBI15278:
ARM GAS  /tmp/ccL95Edz.s 			page 902


 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 28816              		.loc 2 263 9 is_stmt 1 view .LVU7562
 28817              	.LBB15279:
 28818              	.LBB15280:
 28819              	.LBI15280:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28820              		.loc 2 243 9 view .LVU7563
 28821              	.LBB15281:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28822              		.loc 2 247 11 is_stmt 0 view .LVU7564
 28823 00a6 4FF00003 		mov	r3, #0
 28824 00aa 0D9A     		ldr	r2, [sp, #52]
 28825 00ac 0A44     		add	r2, r2, r1
 28826              	.LVL1957:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28827              		.loc 2 247 11 view .LVU7565
 28828 00ae 04F13000 		add	r0, r4, #48
 28829              	.LVL1958:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28830              		.loc 2 247 11 view .LVU7566
 28831 00b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 28832              	.LVL1959:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28833              		.loc 2 247 11 view .LVU7567
 28834              	.LBE15281:
 28835              	.LBE15280:
 28836              	.LBE15279:
 28837              	.LBE15278:
 28838              	.LBE15259:
 28839              	.LBE15258:
  74:alohal/filesystem/file.hpp ****         this->name = name;
 28840              		.loc 6 74 9 view .LVU7568
 28841 00b6 0223     		movs	r3, #2
 28842 00b8 6360     		str	r3, [r4, #4]
 28843              	.LVL1960:
 28844              	.LBB15282:
 28845              	.LBI15282:
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28846              		.loc 2 665 7 is_stmt 1 view .LVU7569
 28847              	.LBB15283:
 28848              	.LBI15283:
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28849              		.loc 2 1364 7 view .LVU7570
 28850              	.LBB15284:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 28851              		.loc 2 1366 2 is_stmt 0 view .LVU7571
 28852 00ba 06A9     		add	r1, sp, #24
 28853              	.LVL1961:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 28854              		.loc 2 1366 2 view .LVU7572
 28855 00bc 4846     		mov	r0, r9
 28856 00be FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 28857              	.LVL1962:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 28858              		.loc 2 1366 2 view .LVU7573
 28859              	.LBE15284:
 28860              	.LBE15283:
ARM GAS  /tmp/ccL95Edz.s 			page 903


 28861              	.LBE15282:
 28862              	.LBE15285:
 28863              	.LBE15286:
 28864              	.LBB15287:
 28865              	.LBI15287:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 28866              		.loc 2 657 7 is_stmt 1 view .LVU7574
 28867              	.LBB15288:
 28868              	.LBI15288:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28869              		.loc 2 229 7 view .LVU7575
 28870              	.LBB15289:
 28871              	.LBB15290:
 28872              	.LBI15290:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 28873              		.loc 2 221 7 view .LVU7576
 28874              	.LBB15291:
 28875              	.LBI15291:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28876              		.loc 2 186 7 view .LVU7577
 28877              	.LBB15292:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28878              		.loc 2 187 28 is_stmt 0 view .LVU7578
 28879 00c2 0C98     		ldr	r0, [sp, #48]
 28880              	.LVL1963:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28881              		.loc 2 187 28 view .LVU7579
 28882              	.LBE15292:
 28883              	.LBE15291:
 28884              	.LBB15293:
 28885              	.LBI15293:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28886              		.loc 2 200 7 is_stmt 1 view .LVU7580
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28887              		.loc 2 200 7 is_stmt 0 view .LVU7581
 28888              	.LBE15293:
 28889              	.LBE15290:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 28890              		.loc 2 231 2 view .LVU7582
 28891 00c4 4045     		cmp	r0, r8
 28892 00c6 01D0     		beq	.L590
 28893              	.LVL1964:
 28894              	.LBB15294:
 28895              	.LBI15294:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 28896              		.loc 2 236 7 is_stmt 1 view .LVU7583
 28897              	.LBB15295:
 28898              	.LBB15296:
 28899              	.LBI15296:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 28900              		.loc 3 469 7 view .LVU7584
 28901              	.LBB15297:
 28902              	.LBI15297:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28903              		.loc 4 119 7 view .LVU7585
 28904              	.LBB15298:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccL95Edz.s 			page 904


 28905              		.loc 4 128 19 is_stmt 0 view .LVU7586
 28906 00c8 FFF7FEFF 		bl	_ZdlPv
 28907              	.LVL1965:
 28908              	.L590:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28909              		.loc 4 128 19 view .LVU7587
 28910              	.LBE15298:
 28911              	.LBE15297:
 28912              	.LBE15296:
 28913              	.LBE15295:
 28914              	.LBE15294:
 28915              	.LBE15289:
 28916              	.LBE15288:
 28917              	.LBB15299:
 28918              	.LBI15299:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28919              		.loc 2 150 14 is_stmt 1 view .LVU7588
 28920              	.LBB15300:
 28921              	.LBI15300:
 28922              		.loc 5 153 7 view .LVU7589
 28923              	.LBB15301:
 28924              	.LBI15301:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28925              		.loc 4 89 7 view .LVU7590
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28926              		.loc 4 89 7 is_stmt 0 view .LVU7591
 28927              	.LBE15301:
 28928              	.LBE15300:
 28929              	.LBE15299:
 28930              	.LBE15287:
 28931              	.LBB15302:
 28932              	.LBI15302:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 28933              		.loc 2 657 7 is_stmt 1 view .LVU7592
 28934              	.LBB15303:
 28935              	.LBI15303:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28936              		.loc 2 229 7 view .LVU7593
 28937              	.LBB15304:
 28938              	.LBB15305:
 28939              	.LBI15305:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 28940              		.loc 2 221 7 view .LVU7594
 28941              	.LBB15306:
 28942              	.LBI15306:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28943              		.loc 2 186 7 view .LVU7595
 28944              	.LBB15307:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28945              		.loc 2 187 28 is_stmt 0 view .LVU7596
 28946 00cc 0698     		ldr	r0, [sp, #24]
 28947              	.LVL1966:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28948              		.loc 2 187 28 view .LVU7597
 28949              	.LBE15307:
 28950              	.LBE15306:
 28951              	.LBB15308:
ARM GAS  /tmp/ccL95Edz.s 			page 905


 28952              	.LBI15308:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28953              		.loc 2 200 7 is_stmt 1 view .LVU7598
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28954              		.loc 2 200 7 is_stmt 0 view .LVU7599
 28955              	.LBE15308:
 28956              	.LBE15305:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 28957              		.loc 2 231 2 view .LVU7600
 28958 00ce 08AB     		add	r3, sp, #32
 28959 00d0 9842     		cmp	r0, r3
 28960 00d2 01D0     		beq	.L591
 28961              	.LVL1967:
 28962              	.LBB15309:
 28963              	.LBI15309:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 28964              		.loc 2 236 7 is_stmt 1 view .LVU7601
 28965              	.LBB15310:
 28966              	.LBB15311:
 28967              	.LBI15311:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 28968              		.loc 3 469 7 view .LVU7602
 28969              	.LBB15312:
 28970              	.LBI15312:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28971              		.loc 4 119 7 view .LVU7603
 28972              	.LBB15313:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28973              		.loc 4 128 19 is_stmt 0 view .LVU7604
 28974 00d4 FFF7FEFF 		bl	_ZdlPv
 28975              	.LVL1968:
 28976              	.L591:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28977              		.loc 4 128 19 view .LVU7605
 28978              	.LBE15313:
 28979              	.LBE15312:
 28980              	.LBE15311:
 28981              	.LBE15310:
 28982              	.LBE15309:
 28983              	.LBE15304:
 28984              	.LBE15303:
 28985              	.LBB15314:
 28986              	.LBI15314:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28987              		.loc 2 150 14 is_stmt 1 view .LVU7606
 28988              	.LBB15315:
 28989              	.LBI15315:
 28990              		.loc 5 153 7 view .LVU7607
 28991              	.LBB15316:
 28992              	.LBI15316:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28993              		.loc 4 89 7 view .LVU7608
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28994              		.loc 4 89 7 is_stmt 0 view .LVU7609
 28995              	.LBE15316:
 28996              	.LBE15315:
 28997              	.LBE15314:
ARM GAS  /tmp/ccL95Edz.s 			page 906


 28998              	.LBE15302:
 230:alohal/filesystem/filesystem.cpp **** }
 28999              		.loc 17 230 5 is_stmt 1 view .LVU7610
 29000              	.LBB15317:
 29001              	.LBI15317:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 29002              		.loc 2 448 7 view .LVU7611
 29003              	.LBB15318:
 29004              	.LBB15319:
 29005              	.LBB15320:
 29006              	.LBI15320:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29007              		.loc 2 190 7 view .LVU7612
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29008              		.loc 2 190 7 is_stmt 0 view .LVU7613
 29009              	.LBE15320:
 29010              	.LBB15321:
 29011              	.LBI15321:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29012              		.loc 2 290 7 is_stmt 1 view .LVU7614
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29013              		.loc 2 290 7 is_stmt 0 view .LVU7615
 29014              	.LBE15321:
 29015              	.LBB15322:
 29016              	.LBI15322:
 29017              		.loc 19 97 19 is_stmt 1 view .LVU7616
 29018              	.LBB15323:
 29019              	.LBI15323:
 29020              		.loc 3 514 7 view .LVU7617
 29021              	.LBB15324:
 29022              	.LBI15324:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29023              		.loc 5 141 7 view .LVU7618
 29024              	.LBB15325:
 29025              	.LBI15325:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29026              		.loc 4 83 7 view .LVU7619
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29027              		.loc 4 83 7 is_stmt 0 view .LVU7620
 29028              	.LBE15325:
 29029              	.LBE15324:
 29030              	.LBE15323:
 29031              	.LBE15322:
 29032              	.LBB15326:
 29033              	.LBI15326:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 29034              		.loc 2 159 2 is_stmt 1 view .LVU7621
 29035              	.LBB15327:
 29036              	.LBB15328:
 29037              	.LBB15329:
 29038              	.LBI15329:
 29039              		.loc 9 99 5 view .LVU7622
 29040              		.loc 9 99 5 is_stmt 0 view .LVU7623
 29041              	.LBE15329:
 29042              	.LBB15330:
 29043              	.LBI15330:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccL95Edz.s 			page 907


 29044              		.loc 5 141 7 is_stmt 1 view .LVU7624
 29045              	.LBB15331:
 29046              	.LBI15331:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29047              		.loc 4 83 7 view .LVU7625
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29048              		.loc 4 83 7 is_stmt 0 view .LVU7626
 29049              	.LBE15331:
 29050              	.LBE15330:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29051              		.loc 2 160 46 view .LVU7627
 29052 00d8 14AE     		add	r6, sp, #80
 29053              	.LVL1969:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29054              		.loc 2 160 46 view .LVU7628
 29055 00da 1296     		str	r6, [sp, #72]
 29056              	.LVL1970:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29057              		.loc 2 160 46 view .LVU7629
 29058              	.LBE15328:
 29059              	.LBE15327:
 29060              	.LBE15326:
 29061              	.LBB15332:
 29062              	.LBI15332:
 29063              		.loc 5 153 7 is_stmt 1 view .LVU7630
 29064              	.LBB15333:
 29065              	.LBI15333:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29066              		.loc 4 89 7 view .LVU7631
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29067              		.loc 4 89 7 is_stmt 0 view .LVU7632
 29068              	.LBE15333:
 29069              	.LBE15332:
 29070              	.LBB15334:
 29071              	.LBI15334:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29072              		.loc 2 186 7 is_stmt 1 view .LVU7633
 29073              	.LBB15335:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29074              		.loc 2 187 28 is_stmt 0 view .LVU7634
 29075 00dc 2968     		ldr	r1, [r5]
 29076              	.LVL1971:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29077              		.loc 2 187 28 view .LVU7635
 29078              	.LBE15335:
 29079              	.LBE15334:
 29080              	.LBB15336:
 29081              	.LBI15336:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29082              		.loc 2 186 7 is_stmt 1 view .LVU7636
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29083              		.loc 2 186 7 is_stmt 0 view .LVU7637
 29084              	.LBE15336:
 29085              	.LBB15337:
 29086              	.LBI15337:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 29087              		.loc 2 936 7 is_stmt 1 view .LVU7638
ARM GAS  /tmp/ccL95Edz.s 			page 908


 29088              	.LBB15338:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29089              		.loc 2 937 16 is_stmt 0 view .LVU7639
 29090 00de 6A68     		ldr	r2, [r5, #4]
 29091              	.LVL1972:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29092              		.loc 2 937 16 view .LVU7640
 29093              	.LBE15338:
 29094              	.LBE15337:
 29095              	.LBB15339:
 29096              	.LBI15339:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 29097              		.loc 2 263 9 is_stmt 1 view .LVU7641
 29098              	.LBB15340:
 29099              	.LBB15341:
 29100              	.LBI15341:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 29101              		.loc 2 243 9 view .LVU7642
 29102              	.LBB15342:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29103              		.loc 2 247 11 is_stmt 0 view .LVU7643
 29104 00e0 4FF00003 		mov	r3, #0
 29105 00e4 0A44     		add	r2, r2, r1
 29106              	.LVL1973:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29107              		.loc 2 247 11 view .LVU7644
 29108 00e6 12A8     		add	r0, sp, #72
 29109              	.LVL1974:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29110              		.loc 2 247 11 view .LVU7645
 29111 00e8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 29112              	.LVL1975:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29113              		.loc 2 247 11 view .LVU7646
 29114              	.LBE15342:
 29115              	.LBE15341:
 29116              	.LBE15340:
 29117              	.LBE15339:
 29118              	.LBE15319:
 29119              	.LBE15318:
 29120              	.LBE15317:
 230:alohal/filesystem/filesystem.cpp **** }
 29121              		.loc 17 230 21 view .LVU7647
 29122 00ec 2246     		mov	r2, r4
 29123 00ee 12A9     		add	r1, sp, #72
 29124 00f0 3846     		mov	r0, r7
 29125 00f2 FFF7FEFF 		bl	_ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry
 29126              	.LVL1976:
 29127 00f6 0446     		mov	r4, r0
 29128              	.LVL1977:
 29129              	.LBB15343:
 29130              	.LBI15343:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 29131              		.loc 2 657 7 is_stmt 1 view .LVU7648
 29132              	.LBB15344:
 29133              	.LBI15344:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccL95Edz.s 			page 909


 29134              		.loc 2 229 7 view .LVU7649
 29135              	.LBB15345:
 29136              	.LBB15346:
 29137              	.LBI15346:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29138              		.loc 2 221 7 view .LVU7650
 29139              	.LBB15347:
 29140              	.LBI15347:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29141              		.loc 2 186 7 view .LVU7651
 29142              	.LBB15348:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29143              		.loc 2 187 28 is_stmt 0 view .LVU7652
 29144 00f8 1298     		ldr	r0, [sp, #72]
 29145              	.LVL1978:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29146              		.loc 2 187 28 view .LVU7653
 29147              	.LBE15348:
 29148              	.LBE15347:
 29149              	.LBB15349:
 29150              	.LBI15349:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29151              		.loc 2 200 7 is_stmt 1 view .LVU7654
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29152              		.loc 2 200 7 is_stmt 0 view .LVU7655
 29153              	.LBE15349:
 29154              	.LBE15346:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29155              		.loc 2 231 2 view .LVU7656
 29156 00fa B042     		cmp	r0, r6
 29157 00fc 01D0     		beq	.L592
 29158              	.LVL1979:
 29159              	.LBB15350:
 29160              	.LBI15350:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 29161              		.loc 2 236 7 is_stmt 1 view .LVU7657
 29162              	.LBB15351:
 29163              	.LBB15352:
 29164              	.LBI15352:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29165              		.loc 3 469 7 view .LVU7658
 29166              	.LBB15353:
 29167              	.LBI15353:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29168              		.loc 4 119 7 view .LVU7659
 29169              	.LBB15354:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29170              		.loc 4 128 19 is_stmt 0 view .LVU7660
 29171 00fe FFF7FEFF 		bl	_ZdlPv
 29172              	.LVL1980:
 29173              	.L592:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29174              		.loc 4 128 19 view .LVU7661
 29175              	.LBE15354:
 29176              	.LBE15353:
 29177              	.LBE15352:
 29178              	.LBE15351:
ARM GAS  /tmp/ccL95Edz.s 			page 910


 29179              	.LBE15350:
 29180              	.LBE15345:
 29181              	.LBE15344:
 29182              	.LBB15355:
 29183              	.LBI15355:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29184              		.loc 2 150 14 is_stmt 1 view .LVU7662
 29185              	.LBB15356:
 29186              	.LBI15356:
 29187              		.loc 5 153 7 view .LVU7663
 29188              	.LBB15357:
 29189              	.LBI15357:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29190              		.loc 4 89 7 view .LVU7664
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29191              		.loc 4 89 7 is_stmt 0 view .LVU7665
 29192              	.LBE15357:
 29193              	.LBE15356:
 29194              	.LBE15355:
 29195              	.LBE15343:
 29196              	.LBB15358:
 29197              	.LBI15358:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 29198              		.loc 2 657 7 is_stmt 1 view .LVU7666
 29199              	.LBB15359:
 29200              	.LBI15359:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29201              		.loc 2 229 7 view .LVU7667
 29202              	.LBB15360:
 29203              	.LBB15361:
 29204              	.LBI15361:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29205              		.loc 2 221 7 view .LVU7668
 29206              	.LBB15362:
 29207              	.LBI15362:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29208              		.loc 2 186 7 view .LVU7669
 29209              	.LBB15363:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29210              		.loc 2 187 28 is_stmt 0 view .LVU7670
 29211 0102 0098     		ldr	r0, [sp]
 29212              	.LVL1981:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29213              		.loc 2 187 28 view .LVU7671
 29214              	.LBE15363:
 29215              	.LBE15362:
 29216              	.LBB15364:
 29217              	.LBI15364:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29218              		.loc 2 200 7 is_stmt 1 view .LVU7672
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29219              		.loc 2 200 7 is_stmt 0 view .LVU7673
 29220              	.LBE15364:
 29221              	.LBE15361:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29222              		.loc 2 231 2 view .LVU7674
 29223 0104 02AB     		add	r3, sp, #8
ARM GAS  /tmp/ccL95Edz.s 			page 911


 29224 0106 9842     		cmp	r0, r3
 29225 0108 01D0     		beq	.L587
 29226              	.LVL1982:
 29227              	.LBB15365:
 29228              	.LBI15365:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 29229              		.loc 2 236 7 is_stmt 1 view .LVU7675
 29230              	.LBB15366:
 29231              	.LBB15367:
 29232              	.LBI15367:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29233              		.loc 3 469 7 view .LVU7676
 29234              	.LBB15368:
 29235              	.LBI15368:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29236              		.loc 4 119 7 view .LVU7677
 29237              	.LBB15369:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29238              		.loc 4 128 19 is_stmt 0 view .LVU7678
 29239 010a FFF7FEFF 		bl	_ZdlPv
 29240              	.LVL1983:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29241              		.loc 4 128 19 view .LVU7679
 29242              	.LBE15369:
 29243              	.LBE15368:
 29244              	.LBE15367:
 29245              	.LBE15366:
 29246              	.LBE15365:
 29247              	.LBE15360:
 29248              	.LBE15359:
 29249              	.LBB15370:
 29250              	.LBI15370:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29251              		.loc 2 150 14 is_stmt 1 view .LVU7680
 29252              	.LBB15371:
 29253              	.LBI15371:
 29254              		.loc 5 153 7 view .LVU7681
 29255              	.LBB15372:
 29256              	.LBI15372:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29257              		.loc 4 89 7 view .LVU7682
 29258              	.L587:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29259              		.loc 4 89 7 is_stmt 0 view .LVU7683
 29260              	.LBE15372:
 29261              	.LBE15371:
 29262              	.LBE15370:
 29263              	.LBE15358:
 231:alohal/filesystem/filesystem.cpp **** 
 29264              		.loc 17 231 1 view .LVU7684
 29265 010e 2046     		mov	r0, r4
 29266 0110 19B0     		add	sp, sp, #100
 29267              	.LCFI97:
 29268              		.cfi_remember_state
 29269              		.cfi_def_cfa_offset 28
 29270              		@ sp needed
 29271 0112 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccL95Edz.s 			page 912


 29272              	.LVL1984:
 29273              	.L595:
 29274              	.LCFI98:
 29275              		.cfi_restore_state
 29276              	.LBB15373:
 29277              	.LBB15181:
 29278              	.LBB15179:
 29279              	.LBB15148:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 29280              		.loc 2 313 28 view .LVU7685
 29281 0116 0246     		mov	r2, r0
 29282 0118 0849     		ldr	r1, .L597+16
 29283 011a 0948     		ldr	r0, .L597+20
 29284              	.LVL1985:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 29285              		.loc 2 313 28 view .LVU7686
 29286 011c FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 29287              	.LVL1986:
 29288              	.L596:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 29289              		.loc 2 313 28 view .LVU7687
 29290              	.LBE15148:
 29291              	.LBE15179:
 29292              	.LBB15180:
 29293              	.LBB15178:
 29294              	.LBB15177:
 29295              	.LBB15176:
 29296              	.LBB15169:
 29297 0120 1346     		mov	r3, r2
 29298 0122 0246     		mov	r2, r0
 29299 0124 0749     		ldr	r1, .L597+24
 29300 0126 0648     		ldr	r0, .L597+20
 29301              	.LVL1987:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 29302              		.loc 2 313 28 view .LVU7688
 29303 0128 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 29304              	.LVL1988:
 29305              	.L598:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 29306              		.loc 2 313 28 view .LVU7689
 29307              		.align	2
 29308              	.L597:
 29309 012c 04000000 		.word	.LC6
 29310 0130 08000000 		.word	_ZTV8FS_entry+8
 29311 0134 04000000 		.word	.LC30+4
 29312 0138 08000000 		.word	_ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE+8
 29313 013c 28000000 		.word	.LC25
 29314 0140 1C000000 		.word	.LC8
 29315 0144 40000000 		.word	.LC26
 29316              	.LBE15169:
 29317              	.LBE15176:
 29318              	.LBE15177:
 29319              	.LBE15178:
 29320              	.LBE15180:
 29321              	.LBE15181:
 29322              	.LBE15373:
 29323              		.cfi_endproc
ARM GAS  /tmp/ccL95Edz.s 			page 913


 29324              	.LFE3400:
 29326              		.section	.rodata._ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6
 29327              		.align	2
 29328              	.LC31:
 29329 0000 436F6D6D 		.ascii	"Command or executable with name: \"\000"
 29329      616E6420 
 29329      6F722065 
 29329      78656375 
 29329      7461626C 
 29330 0023 00       		.align	2
 29331              	.LC32:
 29332 0024 22207761 		.ascii	"\" was not found\015\012\000"
 29332      73206E6F 
 29332      7420666F 
 29332      756E640D 
 29332      0A00
 29333              		.section	.text._ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6ve
 29334              		.align	1
 29335              		.global	_ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5
 29336              		.syntax unified
 29337              		.thumb
 29338              		.thumb_func
 29339              		.fpu fpv4-sp-d16
 29341              	_ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE
 29342              	.LVL1989:
 29343              	.LFB3402:
 260:alohal/filesystem/filesystem.cpp **** 
 261:alohal/filesystem/filesystem.cpp **** int Filesystem::Execute(string &path, vector<string> &args){
 29344              		.loc 17 261 60 is_stmt 1 view -0
 29345              		.cfi_startproc
 29346              		@ args = 0, pretend = 0, frame = 72
 29347              		@ frame_needed = 0, uses_anonymous_args = 0
 29348              		.loc 17 261 60 is_stmt 0 view .LVU7691
 29349 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 29350              	.LCFI99:
 29351              		.cfi_def_cfa_offset 24
 29352              		.cfi_offset 4, -24
 29353              		.cfi_offset 5, -20
 29354              		.cfi_offset 6, -16
 29355              		.cfi_offset 7, -12
 29356              		.cfi_offset 8, -8
 29357              		.cfi_offset 14, -4
 29358 0004 92B0     		sub	sp, sp, #72
 29359              	.LCFI100:
 29360              		.cfi_def_cfa_offset 96
 29361 0006 0546     		mov	r5, r0
 29362 0008 0B46     		mov	r3, r1
 29363 000a 1646     		mov	r6, r2
 262:alohal/filesystem/filesystem.cpp ****     FS_entry* exec_file = Get_entry(path);
 29364              		.loc 17 262 5 is_stmt 1 view .LVU7692
 29365              	.LVL1990:
 29366              	.LBB15496:
 29367              	.LBI15496:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 29368              		.loc 2 448 7 view .LVU7693
 29369              	.LBB15497:
 29370              	.LBB15498:
ARM GAS  /tmp/ccL95Edz.s 			page 914


 29371              	.LBB15499:
 29372              	.LBI15499:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29373              		.loc 2 190 7 view .LVU7694
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29374              		.loc 2 190 7 is_stmt 0 view .LVU7695
 29375              	.LBE15499:
 29376              	.LBB15500:
 29377              	.LBI15500:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29378              		.loc 2 290 7 is_stmt 1 view .LVU7696
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29379              		.loc 2 290 7 is_stmt 0 view .LVU7697
 29380              	.LBE15500:
 29381              	.LBB15501:
 29382              	.LBI15501:
 29383              		.loc 19 97 19 is_stmt 1 view .LVU7698
 29384              	.LBB15502:
 29385              	.LBI15502:
 29386              		.loc 3 514 7 view .LVU7699
 29387              	.LBB15503:
 29388              	.LBI15503:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29389              		.loc 5 141 7 view .LVU7700
 29390              	.LBB15504:
 29391              	.LBI15504:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29392              		.loc 4 83 7 view .LVU7701
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29393              		.loc 4 83 7 is_stmt 0 view .LVU7702
 29394              	.LBE15504:
 29395              	.LBE15503:
 29396              	.LBE15502:
 29397              	.LBE15501:
 29398              	.LBB15505:
 29399              	.LBI15505:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 29400              		.loc 2 159 2 is_stmt 1 view .LVU7703
 29401              	.LBB15506:
 29402              	.LBB15507:
 29403              	.LBB15508:
 29404              	.LBI15508:
 29405              		.loc 9 99 5 view .LVU7704
 29406              		.loc 9 99 5 is_stmt 0 view .LVU7705
 29407              	.LBE15508:
 29408              	.LBB15509:
 29409              	.LBI15509:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29410              		.loc 5 141 7 is_stmt 1 view .LVU7706
 29411              	.LBB15510:
 29412              	.LBI15510:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29413              		.loc 4 83 7 view .LVU7707
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29414              		.loc 4 83 7 is_stmt 0 view .LVU7708
 29415              	.LBE15510:
 29416              	.LBE15509:
ARM GAS  /tmp/ccL95Edz.s 			page 915


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29417              		.loc 2 160 46 view .LVU7709
 29418 000c 02AF     		add	r7, sp, #8
 29419              	.LVL1991:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29420              		.loc 2 160 46 view .LVU7710
 29421 000e 0097     		str	r7, [sp]
 29422              	.LVL1992:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29423              		.loc 2 160 46 view .LVU7711
 29424              	.LBE15507:
 29425              	.LBE15506:
 29426              	.LBE15505:
 29427              	.LBB15511:
 29428              	.LBI15511:
 29429              		.loc 5 153 7 is_stmt 1 view .LVU7712
 29430              	.LBB15512:
 29431              	.LBI15512:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29432              		.loc 4 89 7 view .LVU7713
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29433              		.loc 4 89 7 is_stmt 0 view .LVU7714
 29434              	.LBE15512:
 29435              	.LBE15511:
 29436              	.LBB15513:
 29437              	.LBI15513:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29438              		.loc 2 186 7 is_stmt 1 view .LVU7715
 29439              	.LBB15514:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29440              		.loc 2 187 28 is_stmt 0 view .LVU7716
 29441 0010 0968     		ldr	r1, [r1]
 29442              	.LVL1993:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29443              		.loc 2 187 28 view .LVU7717
 29444              	.LBE15514:
 29445              	.LBE15513:
 29446              	.LBB15515:
 29447              	.LBI15515:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29448              		.loc 2 186 7 is_stmt 1 view .LVU7718
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29449              		.loc 2 186 7 is_stmt 0 view .LVU7719
 29450              	.LBE15515:
 29451              	.LBB15516:
 29452              	.LBI15516:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 29453              		.loc 2 936 7 is_stmt 1 view .LVU7720
 29454              	.LBB15517:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29455              		.loc 2 937 16 is_stmt 0 view .LVU7721
 29456 0012 5A68     		ldr	r2, [r3, #4]
 29457              	.LVL1994:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29458              		.loc 2 937 16 view .LVU7722
 29459              	.LBE15517:
 29460              	.LBE15516:
ARM GAS  /tmp/ccL95Edz.s 			page 916


 29461              	.LBB15518:
 29462              	.LBI15518:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 29463              		.loc 2 263 9 is_stmt 1 view .LVU7723
 29464              	.LBB15519:
 29465              	.LBB15520:
 29466              	.LBI15520:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 29467              		.loc 2 243 9 view .LVU7724
 29468              	.LBB15521:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29469              		.loc 2 247 11 is_stmt 0 view .LVU7725
 29470 0014 4FF00003 		mov	r3, #0
 29471              	.LVL1995:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29472              		.loc 2 247 11 view .LVU7726
 29473 0018 0A44     		add	r2, r2, r1
 29474              	.LVL1996:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29475              		.loc 2 247 11 view .LVU7727
 29476 001a 6846     		mov	r0, sp
 29477              	.LVL1997:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29478              		.loc 2 247 11 view .LVU7728
 29479 001c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 29480              	.LVL1998:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29481              		.loc 2 247 11 view .LVU7729
 29482              	.LBE15521:
 29483              	.LBE15520:
 29484              	.LBE15519:
 29485              	.LBE15518:
 29486              	.LBE15498:
 29487              	.LBE15497:
 29488              	.LBE15496:
 29489              		.loc 17 262 36 view .LVU7730
 29490 0020 6946     		mov	r1, sp
 29491 0022 2846     		mov	r0, r5
 29492 0024 FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 29493              	.LVL1999:
 29494 0028 0446     		mov	r4, r0
 29495              	.LVL2000:
 29496              	.LBB15522:
 29497              	.LBI15522:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 29498              		.loc 2 657 7 is_stmt 1 view .LVU7731
 29499              	.LBB15523:
 29500              	.LBI15523:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29501              		.loc 2 229 7 view .LVU7732
 29502              	.LBB15524:
 29503              	.LBB15525:
 29504              	.LBI15525:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29505              		.loc 2 221 7 view .LVU7733
 29506              	.LBB15526:
 29507              	.LBI15526:
ARM GAS  /tmp/ccL95Edz.s 			page 917


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29508              		.loc 2 186 7 view .LVU7734
 29509              	.LBB15527:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29510              		.loc 2 187 28 is_stmt 0 view .LVU7735
 29511 002a 0098     		ldr	r0, [sp]
 29512              	.LVL2001:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29513              		.loc 2 187 28 view .LVU7736
 29514              	.LBE15527:
 29515              	.LBE15526:
 29516              	.LBB15528:
 29517              	.LBI15528:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29518              		.loc 2 200 7 is_stmt 1 view .LVU7737
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29519              		.loc 2 200 7 is_stmt 0 view .LVU7738
 29520              	.LBE15528:
 29521              	.LBE15525:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29522              		.loc 2 231 2 view .LVU7739
 29523 002c B842     		cmp	r0, r7
 29524 002e 01D0     		beq	.L600
 29525              	.LVL2002:
 29526              	.LBB15529:
 29527              	.LBI15529:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 29528              		.loc 2 236 7 is_stmt 1 view .LVU7740
 29529              	.LBB15530:
 29530              	.LBB15531:
 29531              	.LBI15531:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29532              		.loc 3 469 7 view .LVU7741
 29533              	.LBB15532:
 29534              	.LBI15532:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29535              		.loc 4 119 7 view .LVU7742
 29536              	.LBB15533:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29537              		.loc 4 128 19 is_stmt 0 view .LVU7743
 29538 0030 FFF7FEFF 		bl	_ZdlPv
 29539              	.LVL2003:
 29540              	.L600:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29541              		.loc 4 128 19 view .LVU7744
 29542              	.LBE15533:
 29543              	.LBE15532:
 29544              	.LBE15531:
 29545              	.LBE15530:
 29546              	.LBE15529:
 29547              	.LBE15524:
 29548              	.LBE15523:
 29549              	.LBB15534:
 29550              	.LBI15534:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29551              		.loc 2 150 14 is_stmt 1 view .LVU7745
 29552              	.LBB15535:
ARM GAS  /tmp/ccL95Edz.s 			page 918


 29553              	.LBI15535:
 29554              		.loc 5 153 7 view .LVU7746
 29555              	.LBB15536:
 29556              	.LBI15536:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29557              		.loc 4 89 7 view .LVU7747
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29558              		.loc 4 89 7 is_stmt 0 view .LVU7748
 29559              	.LBE15536:
 29560              	.LBE15535:
 29561              	.LBE15534:
 29562              	.LBE15522:
 263:alohal/filesystem/filesystem.cpp **** 
 264:alohal/filesystem/filesystem.cpp ****     if (exec_file == nullptr){
 29563              		.loc 17 264 5 is_stmt 1 view .LVU7749
 29564 0034 54B1     		cbz	r4, .L610
 29565              	.LVL2004:
 29566              	.L601:
 265:alohal/filesystem/filesystem.cpp ****         cli->Print("Command or executable with name: \"" + args[0] + "\" was not found\r\n");
 266:alohal/filesystem/filesystem.cpp ****     }
 267:alohal/filesystem/filesystem.cpp **** 
 268:alohal/filesystem/filesystem.cpp ****     if (exec_file->Type_of() == FS_entry::Type::Executable){
 29567              		.loc 17 268 5 view .LVU7750
 29568              	.LBB15537:
 29569              	.LBI15537:
  66:alohal/filesystem/entry.hpp **** 
 29570              		.loc 1 66 23 view .LVU7751
 29571              	.LBB15538:
  66:alohal/filesystem/entry.hpp **** 
 29572              		.loc 1 66 34 view .LVU7752
  66:alohal/filesystem/entry.hpp **** 
 29573              		.loc 1 66 41 is_stmt 0 view .LVU7753
 29574 0036 6368     		ldr	r3, [r4, #4]
 29575              	.LVL2005:
  66:alohal/filesystem/entry.hpp **** 
 29576              		.loc 1 66 41 view .LVU7754
 29577              	.LBE15538:
 29578              	.LBE15537:
 29579              		.loc 17 268 5 view .LVU7755
 29580 0038 032B     		cmp	r3, #3
 29581 003a 4BD1     		bne	.L608
 269:alohal/filesystem/filesystem.cpp ****         return exec_file->Run(args);
 29582              		.loc 17 269 9 is_stmt 1 view .LVU7756
 29583              		.loc 17 269 35 is_stmt 0 view .LVU7757
 29584 003c 2368     		ldr	r3, [r4]
 29585 003e 9B68     		ldr	r3, [r3, #8]
 29586              		.loc 17 269 30 view .LVU7758
 29587 0040 3146     		mov	r1, r6
 29588 0042 2046     		mov	r0, r4
 29589 0044 9847     		blx	r3
 29590              	.LVL2006:
 29591              	.L599:
 270:alohal/filesystem/filesystem.cpp ****     }
 271:alohal/filesystem/filesystem.cpp ****     return -1;
 272:alohal/filesystem/filesystem.cpp **** }
 29592              		.loc 17 272 1 view .LVU7759
 29593 0046 12B0     		add	sp, sp, #72
ARM GAS  /tmp/ccL95Edz.s 			page 919


 29594              	.LCFI101:
 29595              		.cfi_remember_state
 29596              		.cfi_def_cfa_offset 24
 29597              		@ sp needed
 29598 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 29599              	.LVL2007:
 29600              	.L610:
 29601              	.LCFI102:
 29602              		.cfi_restore_state
 265:alohal/filesystem/filesystem.cpp ****     }
 29603              		.loc 17 265 9 is_stmt 1 view .LVU7760
 29604 004c D5F80880 		ldr	r8, [r5, #8]
 29605              	.LVL2008:
 29606              	.LBB15539:
 29607              	.LBI15539:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29608              		.loc 11 1040 7 view .LVU7761
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29609              		.loc 11 1040 7 is_stmt 0 view .LVU7762
 29610              	.LBE15539:
 265:alohal/filesystem/filesystem.cpp ****     }
 29611              		.loc 17 265 58 view .LVU7763
 29612 0050 3268     		ldr	r2, [r6]
 29613 0052 2249     		ldr	r1, .L613
 29614 0054 0CA8     		add	r0, sp, #48
 29615 0056 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 29616              	.LVL2009:
 29617              	.LBB15540:
 29618              	.LBI15540:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 29619              		.loc 2 6121 5 is_stmt 1 view .LVU7764
 29620              	.LBB15541:
 29621              	.LBI15541:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29622              		.loc 2 1263 7 view .LVU7765
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29623              		.loc 2 1263 7 is_stmt 0 view .LVU7766
 29624              	.LBE15541:
 29625              	.LBE15540:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 29626              		.loc 8 332 2 is_stmt 1 view .LVU7767
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 29627              		.loc 8 335 2 view .LVU7768
 29628              	.LBB15589:
 29629              	.LBB15549:
 29630              	.LBB15542:
 29631              	.LBB15543:
 29632              	.LBI15543:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29633              		.loc 2 320 7 view .LVU7769
 29634              	.LBB15544:
 29635              	.LBB15545:
 29636              	.LBI15545:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 29637              		.loc 2 930 7 view .LVU7770
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 29638              		.loc 2 930 7 is_stmt 0 view .LVU7771
ARM GAS  /tmp/ccL95Edz.s 			page 920


 29639              	.LBE15545:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 29640              		.loc 2 322 2 view .LVU7772
 29641 005a 0D9B     		ldr	r3, [sp, #52]
 29642 005c C3F17F53 		rsb	r3, r3, #1069547520
 29643 0060 03F57F13 		add	r3, r3, #4177920
 29644 0064 03F57F53 		add	r3, r3, #16320
 29645 0068 3F33     		adds	r3, r3, #63
 29646 006a 102B     		cmp	r3, #16
 29647 006c 26D9     		bls	.L611
 29648              	.LVL2010:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 29649              		.loc 2 322 2 view .LVU7773
 29650              	.LBE15544:
 29651              	.LBE15543:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 29652              		.loc 2 1268 27 view .LVU7774
 29653 006e 1122     		movs	r2, #17
 29654 0070 1B49     		ldr	r1, .L613+4
 29655 0072 0CA8     		add	r0, sp, #48
 29656              	.LVL2011:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 29657              		.loc 2 1268 27 view .LVU7775
 29658 0074 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 29659              	.LVL2012:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 29660              		.loc 2 1268 27 view .LVU7776
 29661 0078 0546     		mov	r5, r0
 29662              	.LVL2013:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 29663              		.loc 2 1268 27 view .LVU7777
 29664              	.LBE15542:
 29665              	.LBE15549:
 29666              	.LBB15550:
 29667              	.LBI15550:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 29668              		.loc 2 552 7 is_stmt 1 view .LVU7778
 29669              	.LBB15551:
 29670              	.LBB15552:
 29671              	.LBB15553:
 29672              	.LBI15553:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29673              		.loc 2 190 7 view .LVU7779
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29674              		.loc 2 190 7 is_stmt 0 view .LVU7780
 29675              	.LBE15553:
 29676              	.LBB15554:
 29677              	.LBI15554:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29678              		.loc 2 286 7 is_stmt 1 view .LVU7781
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29679              		.loc 2 286 7 is_stmt 0 view .LVU7782
 29680              	.LBE15554:
 29681              	.LBB15555:
 29682              	.LBI15555:
 29683              		.loc 9 99 5 is_stmt 1 view .LVU7783
 29684              		.loc 9 99 5 is_stmt 0 view .LVU7784
ARM GAS  /tmp/ccL95Edz.s 			page 921


 29685              	.LBE15555:
 29686              	.LBB15556:
 29687              	.LBI15556:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 29688              		.loc 2 159 2 is_stmt 1 view .LVU7785
 29689              	.LBB15557:
 29690              	.LBB15558:
 29691              	.LBB15559:
 29692              	.LBI15559:
 29693              		.loc 9 99 5 view .LVU7786
 29694              		.loc 9 99 5 is_stmt 0 view .LVU7787
 29695              	.LBE15559:
 29696              	.LBB15560:
 29697              	.LBI15560:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29698              		.loc 5 141 7 is_stmt 1 view .LVU7788
 29699              	.LBB15561:
 29700              	.LBI15561:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29701              		.loc 4 83 7 view .LVU7789
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29702              		.loc 4 83 7 is_stmt 0 view .LVU7790
 29703              	.LBE15561:
 29704              	.LBE15560:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29705              		.loc 2 160 46 view .LVU7791
 29706 007a 08AB     		add	r3, sp, #32
 29707              	.LVL2014:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29708              		.loc 2 160 46 view .LVU7792
 29709 007c 0693     		str	r3, [sp, #24]
 29710              	.LVL2015:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29711              		.loc 2 160 46 view .LVU7793
 29712              	.LBE15558:
 29713              	.LBE15557:
 29714              	.LBE15556:
 29715              	.LBB15562:
 29716              	.LBI15562:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29717              		.loc 2 221 7 is_stmt 1 view .LVU7794
 29718              	.LBB15563:
 29719              	.LBI15563:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29720              		.loc 2 186 7 view .LVU7795
 29721              	.LBB15564:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29722              		.loc 2 187 28 is_stmt 0 view .LVU7796
 29723 007e 0746     		mov	r7, r0
 29724 0080 57F8083B 		ldr	r3, [r7], #8
 29725              	.LVL2016:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29726              		.loc 2 187 28 view .LVU7797
 29727              	.LBE15564:
 29728              	.LBE15563:
 29729              	.LBB15565:
 29730              	.LBI15565:
ARM GAS  /tmp/ccL95Edz.s 			page 922


 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29731              		.loc 2 200 7 is_stmt 1 view .LVU7798
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29732              		.loc 2 200 7 is_stmt 0 view .LVU7799
 29733              	.LBE15565:
 29734              	.LBE15562:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 29735              		.loc 2 555 2 view .LVU7800
 29736 0084 BB42     		cmp	r3, r7
 29737 0086 1CD0     		beq	.L612
 29738              	.LVL2017:
 29739              	.LBB15566:
 29740              	.LBI15566:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29741              		.loc 2 186 7 is_stmt 1 view .LVU7801
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29742              		.loc 2 186 7 is_stmt 0 view .LVU7802
 29743              	.LBE15566:
 29744              	.LBB15567:
 29745              	.LBI15567:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 29746              		.loc 2 178 7 is_stmt 1 view .LVU7803
 29747              	.LBB15568:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29748              		.loc 2 179 9 is_stmt 0 view .LVU7804
 29749 0088 0693     		str	r3, [sp, #24]
 29750              	.LVL2018:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29751              		.loc 2 179 9 view .LVU7805
 29752              	.LBE15568:
 29753              	.LBE15567:
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 29754              		.loc 2 563 6 view .LVU7806
 29755 008a 8368     		ldr	r3, [r0, #8]
 29756              	.LVL2019:
 29757              	.LBB15569:
 29758              	.LBI15569:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 29759              		.loc 2 210 7 is_stmt 1 view .LVU7807
 29760              	.LBB15570:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29761              		.loc 2 211 9 is_stmt 0 view .LVU7808
 29762 008c 0893     		str	r3, [sp, #32]
 29763              	.LVL2020:
 29764              	.L604:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29765              		.loc 2 211 9 view .LVU7809
 29766              	.LBE15570:
 29767              	.LBE15569:
 29768              	.LBB15571:
 29769              	.LBI15571:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 29770              		.loc 2 936 7 is_stmt 1 view .LVU7810
 29771              	.LBB15572:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29772              		.loc 2 937 16 is_stmt 0 view .LVU7811
 29773 008e 6B68     		ldr	r3, [r5, #4]
ARM GAS  /tmp/ccL95Edz.s 			page 923


 29774              	.LVL2021:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29775              		.loc 2 937 16 view .LVU7812
 29776              	.LBE15572:
 29777              	.LBE15571:
 29778              	.LBB15573:
 29779              	.LBI15573:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 29780              		.loc 2 182 7 is_stmt 1 view .LVU7813
 29781              	.LBB15574:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29782              		.loc 2 183 9 is_stmt 0 view .LVU7814
 29783 0090 0793     		str	r3, [sp, #28]
 29784              	.LVL2022:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29785              		.loc 2 183 9 view .LVU7815
 29786              	.LBE15574:
 29787              	.LBE15573:
 29788              	.LBB15575:
 29789              	.LBI15575:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29790              		.loc 2 190 7 is_stmt 1 view .LVU7816
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29791              		.loc 2 190 7 is_stmt 0 view .LVU7817
 29792              	.LBE15575:
 29793              	.LBB15576:
 29794              	.LBI15576:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 29795              		.loc 2 178 7 is_stmt 1 view .LVU7818
 29796              	.LBB15577:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29797              		.loc 2 179 9 is_stmt 0 view .LVU7819
 29798 0092 2F60     		str	r7, [r5]
 29799              	.LVL2023:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29800              		.loc 2 179 9 view .LVU7820
 29801              	.LBE15577:
 29802              	.LBE15576:
 29803              	.LBB15578:
 29804              	.LBI15578:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29805              		.loc 2 214 7 is_stmt 1 view .LVU7821
 29806              	.LBB15579:
 29807              	.LBI15579:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 29808              		.loc 2 182 7 view .LVU7822
 29809              	.LBB15580:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29810              		.loc 2 183 9 is_stmt 0 view .LVU7823
 29811 0094 0023     		movs	r3, #0
 29812 0096 6B60     		str	r3, [r5, #4]
 29813              	.LVL2024:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29814              		.loc 2 183 9 view .LVU7824
 29815              	.LBE15580:
 29816              	.LBE15579:
 29817              	.LBB15581:
ARM GAS  /tmp/ccL95Edz.s 			page 924


 29818              	.LBI15581:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 29819              		.loc 8 299 7 is_stmt 1 view .LVU7825
 29820              	.LBB15582:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 29821              		.loc 8 300 9 view .LVU7826
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 29822              		.loc 8 300 14 is_stmt 0 view .LVU7827
 29823 0098 2B72     		strb	r3, [r5, #8]
 29824              	.LVL2025:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 29825              		.loc 8 300 14 view .LVU7828
 29826              	.LBE15582:
 29827              	.LBE15581:
 29828              	.LBE15578:
 29829              	.LBE15552:
 29830              	.LBE15551:
 29831              	.LBE15550:
 29832              	.LBE15589:
 265:alohal/filesystem/filesystem.cpp ****     }
 29833              		.loc 17 265 19 view .LVU7829
 29834 009a 06A9     		add	r1, sp, #24
 29835 009c 4046     		mov	r0, r8
 29836 009e FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 29837              	.LVL2026:
 29838              	.LBB15590:
 29839              	.LBI15590:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 29840              		.loc 2 657 7 is_stmt 1 view .LVU7830
 29841              	.LBB15591:
 29842              	.LBI15591:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29843              		.loc 2 229 7 view .LVU7831
 29844              	.LBB15592:
 29845              	.LBB15593:
 29846              	.LBI15593:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29847              		.loc 2 221 7 view .LVU7832
 29848              	.LBB15594:
 29849              	.LBI15594:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29850              		.loc 2 186 7 view .LVU7833
 29851              	.LBB15595:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29852              		.loc 2 187 28 is_stmt 0 view .LVU7834
 29853 00a2 0698     		ldr	r0, [sp, #24]
 29854              	.LVL2027:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29855              		.loc 2 187 28 view .LVU7835
 29856              	.LBE15595:
 29857              	.LBE15594:
 29858              	.LBB15596:
 29859              	.LBI15596:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29860              		.loc 2 200 7 is_stmt 1 view .LVU7836
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29861              		.loc 2 200 7 is_stmt 0 view .LVU7837
ARM GAS  /tmp/ccL95Edz.s 			page 925


 29862              	.LBE15596:
 29863              	.LBE15593:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29864              		.loc 2 231 2 view .LVU7838
 29865 00a4 08AB     		add	r3, sp, #32
 29866 00a6 9842     		cmp	r0, r3
 29867 00a8 01D0     		beq	.L605
 29868              	.LVL2028:
 29869              	.LBB15597:
 29870              	.LBI15597:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 29871              		.loc 2 236 7 is_stmt 1 view .LVU7839
 29872              	.LBB15598:
 29873              	.LBB15599:
 29874              	.LBI15599:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29875              		.loc 3 469 7 view .LVU7840
 29876              	.LBB15600:
 29877              	.LBI15600:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29878              		.loc 4 119 7 view .LVU7841
 29879              	.LBB15601:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29880              		.loc 4 128 19 is_stmt 0 view .LVU7842
 29881 00aa FFF7FEFF 		bl	_ZdlPv
 29882              	.LVL2029:
 29883              	.L605:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29884              		.loc 4 128 19 view .LVU7843
 29885              	.LBE15601:
 29886              	.LBE15600:
 29887              	.LBE15599:
 29888              	.LBE15598:
 29889              	.LBE15597:
 29890              	.LBE15592:
 29891              	.LBE15591:
 29892              	.LBB15602:
 29893              	.LBI15602:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29894              		.loc 2 150 14 is_stmt 1 view .LVU7844
 29895              	.LBB15603:
 29896              	.LBI15603:
 29897              		.loc 5 153 7 view .LVU7845
 29898              	.LBB15604:
 29899              	.LBI15604:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29900              		.loc 4 89 7 view .LVU7846
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29901              		.loc 4 89 7 is_stmt 0 view .LVU7847
 29902              	.LBE15604:
 29903              	.LBE15603:
 29904              	.LBE15602:
 29905              	.LBE15590:
 29906              	.LBB15605:
 29907              	.LBI15605:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 29908              		.loc 2 657 7 is_stmt 1 view .LVU7848
ARM GAS  /tmp/ccL95Edz.s 			page 926


 29909              	.LBB15606:
 29910              	.LBI15606:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29911              		.loc 2 229 7 view .LVU7849
 29912              	.LBB15607:
 29913              	.LBB15608:
 29914              	.LBI15608:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29915              		.loc 2 221 7 view .LVU7850
 29916              	.LBB15609:
 29917              	.LBI15609:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29918              		.loc 2 186 7 view .LVU7851
 29919              	.LBB15610:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29920              		.loc 2 187 28 is_stmt 0 view .LVU7852
 29921 00ae 0C98     		ldr	r0, [sp, #48]
 29922              	.LVL2030:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29923              		.loc 2 187 28 view .LVU7853
 29924              	.LBE15610:
 29925              	.LBE15609:
 29926              	.LBB15611:
 29927              	.LBI15611:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29928              		.loc 2 200 7 is_stmt 1 view .LVU7854
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29929              		.loc 2 200 7 is_stmt 0 view .LVU7855
 29930              	.LBE15611:
 29931              	.LBE15608:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29932              		.loc 2 231 2 view .LVU7856
 29933 00b0 0EAB     		add	r3, sp, #56
 29934 00b2 9842     		cmp	r0, r3
 29935 00b4 BFD0     		beq	.L601
 29936              	.LVL2031:
 29937              	.LBB15612:
 29938              	.LBI15612:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 29939              		.loc 2 236 7 is_stmt 1 view .LVU7857
 29940              	.LBB15613:
 29941              	.LBB15614:
 29942              	.LBI15614:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29943              		.loc 3 469 7 view .LVU7858
 29944              	.LBB15615:
 29945              	.LBI15615:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29946              		.loc 4 119 7 view .LVU7859
 29947              	.LBB15616:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29948              		.loc 4 128 19 is_stmt 0 view .LVU7860
 29949 00b6 FFF7FEFF 		bl	_ZdlPv
 29950              	.LVL2032:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29951              		.loc 4 128 19 view .LVU7861
 29952              	.LBE15616:
ARM GAS  /tmp/ccL95Edz.s 			page 927


 29953              	.LBE15615:
 29954              	.LBE15614:
 29955              	.LBE15613:
 29956              	.LBE15612:
 29957              	.LBE15607:
 29958              	.LBE15606:
 29959              	.LBB15620:
 29960              	.LBI15620:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29961              		.loc 2 150 14 is_stmt 1 view .LVU7862
 29962              	.LBB15621:
 29963              	.LBI15621:
 29964              		.loc 5 153 7 view .LVU7863
 29965              	.LBB15622:
 29966              	.LBI15622:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29967              		.loc 4 89 7 view .LVU7864
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29968              		.loc 4 89 7 is_stmt 0 view .LVU7865
 29969              	.LBE15622:
 29970              	.LBE15621:
 29971              	.LBE15620:
 29972              	.LBB15623:
 29973              	.LBB15619:
 29974              	.LBB15618:
 29975              	.LBB15617:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29976              		.loc 2 237 79 view .LVU7866
 29977 00ba BCE7     		b	.L601
 29978              	.LVL2033:
 29979              	.L611:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29980              		.loc 2 237 79 view .LVU7867
 29981              	.LBE15617:
 29982              	.LBE15618:
 29983              	.LBE15619:
 29984              	.LBE15623:
 29985              	.LBE15605:
 29986              	.LBB15624:
 29987              	.LBB15587:
 29988              	.LBB15548:
 29989              	.LBB15547:
 29990              	.LBB15546:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 29991              		.loc 2 323 24 view .LVU7868
 29992 00bc 0948     		ldr	r0, .L613+8
 29993 00be FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 29994              	.LVL2034:
 29995              	.L612:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 29996              		.loc 2 323 24 view .LVU7869
 29997              	.LBE15546:
 29998              	.LBE15547:
 29999              	.LBE15548:
 30000              	.LBE15587:
 30001              	.LBB15588:
 30002              	.LBB15586:
ARM GAS  /tmp/ccL95Edz.s 			page 928


 30003              	.LBB15585:
 30004              	.LBB15583:
 30005              	.LBI15583:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 30006              		.loc 8 361 7 is_stmt 1 view .LVU7870
 30007              	.LBB15584:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 30008              		.loc 8 363 2 view .LVU7871
 30009              		.loc 8 365 2 view .LVU7872
 30010              		.loc 8 365 49 is_stmt 0 view .LVU7873
 30011 00c2 0DF1200C 		add	ip, sp, #32
 30012 00c6 3868     		ldr	r0, [r7]	@ unaligned
 30013              	.LVL2035:
 30014              		.loc 8 365 49 view .LVU7874
 30015 00c8 7968     		ldr	r1, [r7, #4]	@ unaligned
 30016 00ca BA68     		ldr	r2, [r7, #8]	@ unaligned
 30017 00cc FB68     		ldr	r3, [r7, #12]	@ unaligned
 30018 00ce ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 30019 00d2 DCE7     		b	.L604
 30020              	.LVL2036:
 30021              	.L608:
 30022              		.loc 8 365 49 view .LVU7875
 30023              	.LBE15584:
 30024              	.LBE15583:
 30025              	.LBE15585:
 30026              	.LBE15586:
 30027              	.LBE15588:
 30028              	.LBE15624:
 271:alohal/filesystem/filesystem.cpp **** }
 30029              		.loc 17 271 13 view .LVU7876
 30030 00d4 4FF0FF30 		mov	r0, #-1
 30031 00d8 B5E7     		b	.L599
 30032              	.L614:
 30033 00da 00BF     		.align	2
 30034              	.L613:
 30035 00dc 00000000 		.word	.LC31
 30036 00e0 24000000 		.word	.LC32
 30037 00e4 00000000 		.word	.LC0
 30038              		.cfi_endproc
 30039              	.LFE3402:
 30041              		.section	.text._ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iterat
 30042              		.align	1
 30043              		.weak	_ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_
 30044              		.syntax unified
 30045              		.thumb
 30046              		.thumb_func
 30047              		.fpu fpv4-sp-d16
 30049              	_ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE:
 30050              	.LVL2037:
 30051              	.LFB4199:
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 30052              		.loc 13 1010 5 is_stmt 1 view -0
 30053              		.cfi_startproc
 30054              		@ args = 0, pretend = 0, frame = 0
 30055              		@ frame_needed = 0, uses_anonymous_args = 0
 30056              		@ link register save eliminated.
 30057              	.LVL2038:
ARM GAS  /tmp/ccL95Edz.s 			page 929


 30058              		.loc 13 1012 27 is_stmt 0 view .LVU7878
 30059 0000 7047     		bx	lr
 30060              		.cfi_endproc
 30061              	.LFE4199:
 30063              		.section	.text._ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcE
 30064              		.align	1
 30065              		.global	_ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 30066              		.syntax unified
 30067              		.thumb
 30068              		.thumb_func
 30069              		.fpu fpv4-sp-d16
 30071              	_ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:
 30072              	.LVL2039:
 30073              	.LFB3369:
  13:alohal/filesystem/filesystem.cpp ****     string directory_name = Command_check(args);
 30074              		.loc 17 13 48 is_stmt 1 view -0
 30075              		.cfi_startproc
 30076              		@ args = 0, pretend = 0, frame = 216
 30077              		@ frame_needed = 0, uses_anonymous_args = 0
  13:alohal/filesystem/filesystem.cpp ****     string directory_name = Command_check(args);
 30078              		.loc 17 13 48 is_stmt 0 view .LVU7880
 30079 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 30080              	.LCFI103:
 30081              		.cfi_def_cfa_offset 20
 30082              		.cfi_offset 4, -20
 30083              		.cfi_offset 5, -16
 30084              		.cfi_offset 6, -12
 30085              		.cfi_offset 7, -8
 30086              		.cfi_offset 14, -4
 30087 0002 B7B0     		sub	sp, sp, #220
 30088              	.LCFI104:
 30089              		.cfi_def_cfa_offset 240
 30090 0004 0646     		mov	r6, r0
 30091 0006 0F46     		mov	r7, r1
  14:alohal/filesystem/filesystem.cpp ****     if (directory_name == "") {
 30092              		.loc 17 14 5 is_stmt 1 view .LVU7881
 30093              	.LVL2040:
 30094              	.LBB16126:
 30095              	.LBI16126:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 30096              		.loc 11 550 7 view .LVU7882
 30097              	.LBB16127:
 30098              	.LBB16128:
 30099              	.LBB16129:
 30100              	.LBI16129:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 30101              		.loc 11 915 7 view .LVU7883
 30102              	.LBB16130:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 30103              		.loc 11 916 40 is_stmt 0 view .LVU7884
 30104 0008 4D68     		ldr	r5, [r1, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 30105              		.loc 11 916 66 view .LVU7885
 30106 000a 0B68     		ldr	r3, [r1]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 30107              		.loc 11 916 50 view .LVU7886
 30108 000c ED1A     		subs	r5, r5, r3
ARM GAS  /tmp/ccL95Edz.s 			page 930


 30109 000e EB10     		asrs	r3, r5, #3
 30110 0010 9248     		ldr	r0, .L653
 30111              	.LVL2041:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 30112              		.loc 11 916 50 view .LVU7887
 30113 0012 00FB03F0 		mul	r0, r0, r3
 30114              	.LVL2042:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 30115              		.loc 11 916 50 view .LVU7888
 30116              	.LBE16130:
 30117              	.LBE16129:
 30118              	.LBB16131:
 30119              	.LBI16131:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 30120              		.loc 11 277 7 is_stmt 1 view .LVU7889
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 30121              		.loc 11 277 7 is_stmt 0 view .LVU7890
 30122              	.LBE16131:
 30123              	.LBB16132:
 30124              	.LBI16132:
 30125              		.loc 19 97 19 is_stmt 1 view .LVU7891
 30126              	.LBB16133:
 30127              	.LBI16133:
 30128              		.loc 3 514 7 view .LVU7892
 30129              	.LBB16134:
 30130              	.LBI16134:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 30131              		.loc 5 141 7 view .LVU7893
 30132              	.LBB16135:
 30133              	.LBI16135:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30134              		.loc 4 83 7 view .LVU7894
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30135              		.loc 4 83 7 is_stmt 0 view .LVU7895
 30136              	.LBE16135:
 30137              	.LBE16134:
 30138              	.LBE16133:
 30139              	.LBE16132:
 30140              	.LBB16136:
 30141              	.LBI16136:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 30142              		.loc 11 300 7 is_stmt 1 view .LVU7896
 30143              	.LBB16137:
 30144              	.LBI16137:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 30145              		.loc 11 133 2 view .LVU7897
 30146              	.LBB16138:
 30147              	.LBI16138:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 30148              		.loc 5 141 7 view .LVU7898
 30149              	.LBB16139:
 30150              	.LBI16139:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30151              		.loc 4 83 7 view .LVU7899
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30152              		.loc 4 83 7 is_stmt 0 view .LVU7900
 30153              	.LBE16139:
ARM GAS  /tmp/ccL95Edz.s 			page 931


 30154              	.LBE16138:
 30155              	.LBB16140:
 30156              	.LBI16140:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 30157              		.loc 11 94 2 is_stmt 1 view .LVU7901
 30158              	.LBB16141:
 30159              	.LBB16142:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 30160              		.loc 11 95 47 is_stmt 0 view .LVU7902
 30161 0016 0023     		movs	r3, #0
 30162 0018 0C93     		str	r3, [sp, #48]
 30163 001a 0D93     		str	r3, [sp, #52]
 30164 001c 0E93     		str	r3, [sp, #56]
 30165              	.LVL2043:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 30166              		.loc 11 95 47 view .LVU7903
 30167              	.LBE16142:
 30168              	.LBE16141:
 30169              	.LBE16140:
 30170              	.LBE16137:
 30171              	.LBB16143:
 30172              	.LBI16143:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 30173              		.loc 11 356 7 is_stmt 1 view .LVU7904
 30174              	.LBB16144:
 30175              	.LBB16145:
 30176              	.LBI16145:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 30177              		.loc 11 340 7 view .LVU7905
 30178              	.LBB16146:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 30179              		.loc 11 343 18 is_stmt 0 view .LVU7906
 30180 001e 88B1     		cbz	r0, .L643
 30181              	.LVL2044:
 30182              	.LBB16147:
 30183              	.LBI16147:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 30184              		.loc 3 443 7 is_stmt 1 view .LVU7907
 30185              	.LBB16148:
 30186              	.LBI16148:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 30187              		.loc 4 102 7 view .LVU7908
 30188              	.LBB16149:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 30189              		.loc 4 104 2 is_stmt 0 view .LVU7909
 30190 0020 8F4B     		ldr	r3, .L653+4
 30191 0022 9842     		cmp	r0, r3
 30192 0024 0CD8     		bhi	.L647
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30193              		.loc 4 114 41 view .LVU7910
 30194 0026 00EB4000 		add	r0, r0, r0, lsl #1
 30195              	.LVL2045:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30196              		.loc 4 114 41 view .LVU7911
 30197 002a C000     		lsls	r0, r0, #3
 30198 002c FFF7FEFF 		bl	_Znwj
 30199              	.LVL2046:
ARM GAS  /tmp/ccL95Edz.s 			page 932


 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30200              		.loc 4 114 41 view .LVU7912
 30201 0030 0446     		mov	r4, r0
 30202              	.LVL2047:
 30203              	.L617:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30204              		.loc 4 114 41 view .LVU7913
 30205              	.LBE16149:
 30206              	.LBE16148:
 30207              	.LBE16147:
 30208              	.LBE16146:
 30209              	.LBE16145:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 30210              		.loc 11 358 2 view .LVU7914
 30211 0032 0C94     		str	r4, [sp, #48]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 30212              		.loc 11 359 2 view .LVU7915
 30213 0034 0D94     		str	r4, [sp, #52]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 30214              		.loc 11 360 59 view .LVU7916
 30215 0036 2544     		add	r5, r5, r4
 30216              	.LVL2048:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 30217              		.loc 11 360 2 view .LVU7917
 30218 0038 0E95     		str	r5, [sp, #56]
 30219              	.LVL2049:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 30220              		.loc 11 360 2 view .LVU7918
 30221              	.LBE16144:
 30222              	.LBE16143:
 30223              	.LBE16136:
 30224              	.LBB16157:
 30225              	.LBI16157:
 30226              		.loc 5 153 7 is_stmt 1 view .LVU7919
 30227              	.LBB16158:
 30228              	.LBI16158:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30229              		.loc 4 89 7 view .LVU7920
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30230              		.loc 4 89 7 is_stmt 0 view .LVU7921
 30231              	.LBE16158:
 30232              	.LBE16157:
 30233              	.LBB16159:
 30234              	.LBI16159:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 30235              		.loc 11 817 7 is_stmt 1 view .LVU7922
 30236              	.LBB16160:
 30237              	.LBB16161:
 30238              	.LBI16161:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 30239              		.loc 13 806 7 view .LVU7923
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 30240              		.loc 13 806 7 is_stmt 0 view .LVU7924
 30241              	.LBE16161:
 30242              	.LBE16160:
 30243              	.LBE16159:
 30244              	.LBB16162:
ARM GAS  /tmp/ccL95Edz.s 			page 933


 30245              	.LBI16162:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 30246              		.loc 11 835 7 is_stmt 1 view .LVU7925
 30247              	.LBB16163:
 30248              	.LBB16164:
 30249              	.LBI16164:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 30250              		.loc 13 806 7 view .LVU7926
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 30251              		.loc 13 806 7 is_stmt 0 view .LVU7927
 30252              	.LBE16164:
 30253              	.LBE16163:
 30254              	.LBE16162:
 30255              	.LBB16165:
 30256              	.LBI16165:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 30257              		.loc 11 273 7 is_stmt 1 view .LVU7928
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 30258              		.loc 11 273 7 is_stmt 0 view .LVU7929
 30259              	.LBE16165:
 30260              	.LBB16166:
 30261              	.LBI16166:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 30262              		.loc 15 305 5 is_stmt 1 view .LVU7930
 30263              	.LBB16167:
 30264              	.LBB16168:
 30265              	.LBI16168:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 30266              		.loc 15 115 5 view .LVU7931
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 30267              		.loc 15 115 5 is_stmt 0 view .LVU7932
 30268 003a 3D68     		ldr	r5, [r7]
 30269              	.LVL2050:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 30270              		.loc 15 115 5 view .LVU7933
 30271 003c 7F68     		ldr	r7, [r7, #4]
 30272              	.LVL2051:
 30273              	.LBB16169:
 30274              	.LBB16170:
 30275              	.LBI16170:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 30276              		.loc 15 76 9 is_stmt 1 view .LVU7934
 30277 003e 10E0     		b	.L620
 30278              	.LVL2052:
 30279              	.L647:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 30280              		.loc 15 76 9 is_stmt 0 view .LVU7935
 30281              	.LBE16170:
 30282              	.LBE16169:
 30283              	.LBE16168:
 30284              	.LBE16167:
 30285              	.LBE16166:
 30286              	.LBB16211:
 30287              	.LBB16156:
 30288              	.LBB16155:
 30289              	.LBB16154:
 30290              	.LBB16153:
ARM GAS  /tmp/ccL95Edz.s 			page 934


 30291              	.LBB16152:
 30292              	.LBB16151:
 30293              	.LBB16150:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30294              		.loc 4 105 26 view .LVU7936
 30295 0040 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 30296              	.LVL2053:
 30297              	.L643:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30298              		.loc 4 105 26 view .LVU7937
 30299              	.LBE16150:
 30300              	.LBE16151:
 30301              	.LBE16152:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 30302              		.loc 11 343 18 view .LVU7938
 30303 0044 0024     		movs	r4, #0
 30304 0046 F4E7     		b	.L617
 30305              	.LVL2054:
 30306              	.L648:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 30307              		.loc 11 343 18 view .LVU7939
 30308              	.LBE16153:
 30309              	.LBE16154:
 30310              	.LBE16155:
 30311              	.LBE16156:
 30312              	.LBE16211:
 30313              	.LBB16212:
 30314              	.LBB16209:
 30315              	.LBB16207:
 30316              	.LBB16205:
 30317              	.LBB16203:
 30318              	.LBB16171:
 30319              	.LBB16172:
 30320              	.LBI16172:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 30321              		.loc 22 74 5 is_stmt 1 view .LVU7940
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 30322              		.loc 22 74 5 is_stmt 0 view .LVU7941
 30323              	.LBE16172:
 30324              	.LBE16171:
 30325              	.LBE16203:
 30326              	.LBE16205:
 30327              	.LBE16207:
 30328              	.LBE16209:
 30329              	.LBE16212:
 30330              	.LBE16128:
 30331              	.LBE16127:
 30332              	.LBE16126:
 30333              		.loc 14 174 3 is_stmt 1 view .LVU7942
 30334              	.LBB16216:
 30335              	.LBB16215:
 30336              	.LBB16214:
 30337              	.LBB16213:
 30338              	.LBB16210:
 30339              	.LBB16208:
 30340              	.LBB16206:
 30341              	.LBB16204:
ARM GAS  /tmp/ccL95Edz.s 			page 935


 30342              	.LBB16202:
 30343              	.LBB16198:
 30344              	.LBB16173:
 30345              	.LBI16173:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 30346              		.loc 2 448 7 view .LVU7943
 30347              	.LBB16174:
 30348              	.LBB16175:
 30349              	.LBI16175:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30350              		.loc 2 190 7 view .LVU7944
 30351              	.LBB16176:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 30352              		.loc 2 193 51 is_stmt 0 view .LVU7945
 30353 0048 04F10803 		add	r3, r4, #8
 30354              	.LVL2055:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 30355              		.loc 2 193 51 view .LVU7946
 30356              	.LBE16176:
 30357              	.LBE16175:
 30358              	.LBB16177:
 30359              	.LBI16177:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 30360              		.loc 2 290 7 is_stmt 1 view .LVU7947
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 30361              		.loc 2 290 7 is_stmt 0 view .LVU7948
 30362              	.LBE16177:
 30363              	.LBB16178:
 30364              	.LBI16178:
 30365              		.loc 19 97 19 is_stmt 1 view .LVU7949
 30366              	.LBB16179:
 30367              	.LBI16179:
 30368              		.loc 3 514 7 view .LVU7950
 30369              	.LBB16180:
 30370              	.LBI16180:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 30371              		.loc 5 141 7 view .LVU7951
 30372              	.LBB16181:
 30373              	.LBI16181:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30374              		.loc 4 83 7 view .LVU7952
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30375              		.loc 4 83 7 is_stmt 0 view .LVU7953
 30376              	.LBE16181:
 30377              	.LBE16180:
 30378              	.LBE16179:
 30379              	.LBE16178:
 30380              	.LBB16182:
 30381              	.LBI16182:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 30382              		.loc 2 159 2 is_stmt 1 view .LVU7954
 30383              	.LBB16183:
 30384              	.LBB16184:
 30385              	.LBI16184:
 30386              		.loc 9 99 5 view .LVU7955
 30387              		.loc 9 99 5 is_stmt 0 view .LVU7956
 30388              	.LBE16184:
ARM GAS  /tmp/ccL95Edz.s 			page 936


 30389              	.LBB16185:
 30390              	.LBI16185:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 30391              		.loc 5 141 7 is_stmt 1 view .LVU7957
 30392              	.LBB16186:
 30393              	.LBI16186:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30394              		.loc 4 83 7 view .LVU7958
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30395              		.loc 4 83 7 is_stmt 0 view .LVU7959
 30396              	.LBE16186:
 30397              	.LBE16185:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 30398              		.loc 2 160 46 view .LVU7960
 30399 004c 2360     		str	r3, [r4]
 30400              	.LVL2056:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 30401              		.loc 2 160 46 view .LVU7961
 30402              	.LBE16183:
 30403              	.LBE16182:
 30404              	.LBB16187:
 30405              	.LBI16187:
 30406              		.loc 5 153 7 is_stmt 1 view .LVU7962
 30407              	.LBB16188:
 30408              	.LBI16188:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30409              		.loc 4 89 7 view .LVU7963
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30410              		.loc 4 89 7 is_stmt 0 view .LVU7964
 30411              	.LBE16188:
 30412              	.LBE16187:
 30413              	.LBB16189:
 30414              	.LBI16189:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 30415              		.loc 2 186 7 is_stmt 1 view .LVU7965
 30416              	.LBB16190:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30417              		.loc 2 187 28 is_stmt 0 view .LVU7966
 30418 004e 2968     		ldr	r1, [r5]
 30419              	.LVL2057:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30420              		.loc 2 187 28 view .LVU7967
 30421              	.LBE16190:
 30422              	.LBE16189:
 30423              	.LBB16191:
 30424              	.LBI16191:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 30425              		.loc 2 186 7 is_stmt 1 view .LVU7968
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 30426              		.loc 2 186 7 is_stmt 0 view .LVU7969
 30427              	.LBE16191:
 30428              	.LBB16192:
 30429              	.LBI16192:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 30430              		.loc 2 936 7 is_stmt 1 view .LVU7970
 30431              	.LBB16193:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 937


 30432              		.loc 2 937 16 is_stmt 0 view .LVU7971
 30433 0050 6A68     		ldr	r2, [r5, #4]
 30434              	.LVL2058:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30435              		.loc 2 937 16 view .LVU7972
 30436              	.LBE16193:
 30437              	.LBE16192:
 30438              	.LBB16194:
 30439              	.LBI16194:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 30440              		.loc 2 263 9 is_stmt 1 view .LVU7973
 30441              	.LBB16195:
 30442              	.LBB16196:
 30443              	.LBI16196:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 30444              		.loc 2 243 9 view .LVU7974
 30445              	.LBB16197:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30446              		.loc 2 247 11 is_stmt 0 view .LVU7975
 30447 0052 4FF00003 		mov	r3, #0
 30448 0056 0A44     		add	r2, r2, r1
 30449              	.LVL2059:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30450              		.loc 2 247 11 view .LVU7976
 30451 0058 2046     		mov	r0, r4
 30452 005a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 30453              	.LVL2060:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30454              		.loc 2 247 11 view .LVU7977
 30455              	.LBE16197:
 30456              	.LBE16196:
 30457              	.LBE16195:
 30458              	.LBE16194:
 30459              	.LBE16174:
 30460              	.LBE16173:
 30461              	.LBE16198:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 30462              		.loc 15 82 8 is_stmt 1 view .LVU7978
 30463              	.LBB16199:
 30464              	.LBI16199:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 30465              		.loc 13 827 7 view .LVU7979
 30466              	.LBB16200:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 30467              		.loc 13 829 2 is_stmt 0 view .LVU7980
 30468 005e 1835     		adds	r5, r5, #24
 30469              	.LVL2061:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 30470              		.loc 13 829 2 view .LVU7981
 30471              	.LBE16200:
 30472              	.LBE16199:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 30473              		.loc 15 82 8 view .LVU7982
 30474 0060 1834     		adds	r4, r4, #24
 30475              	.LVL2062:
 30476              	.L620:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
ARM GAS  /tmp/ccL95Edz.s 			page 938


 30477              		.loc 15 82 23 is_stmt 1 view .LVU7983
 30478              	.LBB16201:
 30479              	.LBI16201:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 30480              		.loc 13 907 5 view .LVU7984
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 30481              		.loc 13 907 5 is_stmt 0 view .LVU7985
 30482              	.LBE16201:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 30483              		.loc 15 82 23 view .LVU7986
 30484 0062 BD42     		cmp	r5, r7
 30485 0064 F0D1     		bne	.L648
 30486              	.LVL2063:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 30487              		.loc 15 82 23 view .LVU7987
 30488              	.LBE16202:
 30489              	.LBE16204:
 30490              	.LBE16206:
 30491              	.LBE16208:
 30492              	.LBE16210:
 30493              	.LBE16213:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 30494              		.loc 11 554 2 view .LVU7988
 30495 0066 0D94     		str	r4, [sp, #52]
 30496              	.LVL2064:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 30497              		.loc 11 554 2 view .LVU7989
 30498              	.LBE16214:
 30499              	.LBE16215:
 30500              	.LBE16216:
  14:alohal/filesystem/filesystem.cpp ****     if (directory_name == "") {
 30501              		.loc 17 14 47 view .LVU7990
 30502 0068 0CAA     		add	r2, sp, #48
 30503 006a 3146     		mov	r1, r6
 30504 006c 06A8     		add	r0, sp, #24
 30505 006e FFF7FEFF 		bl	_ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES
 30506              	.LVL2065:
 30507              	.LBB16217:
 30508              	.LBI16217:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 30509              		.loc 11 675 7 is_stmt 1 view .LVU7991
 30510              	.LBB16218:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 30511              		.loc 11 677 15 is_stmt 0 view .LVU7992
 30512 0072 0C9C     		ldr	r4, [sp, #48]
 30513 0074 0D9D     		ldr	r5, [sp, #52]
 30514              	.LVL2066:
 30515              	.LBB16219:
 30516              	.LBI16219:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 30517              		.loc 11 273 7 is_stmt 1 view .LVU7993
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 30518              		.loc 11 273 7 is_stmt 0 view .LVU7994
 30519              	.LBE16219:
 30520              	.LBB16220:
 30521              	.LBI16220:
 30522              		.loc 22 203 5 is_stmt 1 view .LVU7995
ARM GAS  /tmp/ccL95Edz.s 			page 939


 30523 0076 00E0     		b	.L623
 30524              	.LVL2067:
 30525              	.L622:
 30526              	.LBB16221:
 30527              	.LBB16222:
 30528              	.LBB16223:
 30529              	.LBB16224:
 30530              	.LBB16225:
 30531              	.LBB16226:
 30532              	.LBB16227:
 30533              	.LBI16227:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30534              		.loc 2 150 14 view .LVU7996
 30535              	.LBB16228:
 30536              	.LBI16228:
 30537              		.loc 5 153 7 view .LVU7997
 30538              	.LBB16229:
 30539              	.LBI16229:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30540              		.loc 4 89 7 view .LVU7998
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30541              		.loc 4 89 7 is_stmt 0 view .LVU7999
 30542              	.LBE16229:
 30543              	.LBE16228:
 30544              	.LBE16227:
 30545              	.LBE16226:
 30546              	.LBE16225:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 30547              		.loc 22 107 4 is_stmt 1 view .LVU8000
 30548 0078 1834     		adds	r4, r4, #24
 30549              	.LVL2068:
 30550              	.L623:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 30551              		.loc 22 107 19 view .LVU8001
 30552 007a A542     		cmp	r5, r4
 30553 007c 07D0     		beq	.L621
 30554              	.LVL2069:
 30555              	.LBB16242:
 30556              	.LBI16225:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 30557              		.loc 22 97 5 view .LVU8002
 30558              	.LBB16241:
 30559              	.LBI16226:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 30560              		.loc 2 657 7 view .LVU8003
 30561              	.LBB16230:
 30562              	.LBI16230:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30563              		.loc 2 229 7 view .LVU8004
 30564              	.LBB16231:
 30565              	.LBB16232:
 30566              	.LBI16232:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 30567              		.loc 2 221 7 view .LVU8005
 30568              	.LBB16233:
 30569              	.LBI16233:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 940


 30570              		.loc 2 186 7 view .LVU8006
 30571              	.LBB16234:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30572              		.loc 2 187 28 is_stmt 0 view .LVU8007
 30573 007e 2346     		mov	r3, r4
 30574 0080 53F8080B 		ldr	r0, [r3], #8
 30575              	.LVL2070:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30576              		.loc 2 187 28 view .LVU8008
 30577              	.LBE16234:
 30578              	.LBE16233:
 30579              	.LBB16235:
 30580              	.LBI16235:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30581              		.loc 2 200 7 is_stmt 1 view .LVU8009
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30582              		.loc 2 200 7 is_stmt 0 view .LVU8010
 30583              	.LBE16235:
 30584              	.LBE16232:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 30585              		.loc 2 231 2 view .LVU8011
 30586 0084 9842     		cmp	r0, r3
 30587 0086 F7D0     		beq	.L622
 30588              	.LVL2071:
 30589              	.LBB16236:
 30590              	.LBI16236:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 30591              		.loc 2 236 7 is_stmt 1 view .LVU8012
 30592              	.LBB16237:
 30593              	.LBB16238:
 30594              	.LBI16238:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 30595              		.loc 3 469 7 view .LVU8013
 30596              	.LBB16239:
 30597              	.LBI16239:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 30598              		.loc 4 119 7 view .LVU8014
 30599              	.LBB16240:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30600              		.loc 4 128 19 is_stmt 0 view .LVU8015
 30601 0088 FFF7FEFF 		bl	_ZdlPv
 30602              	.LVL2072:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30603              		.loc 4 128 19 view .LVU8016
 30604              	.LBE16240:
 30605              	.LBE16239:
 30606              	.LBE16238:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30607              		.loc 2 237 79 view .LVU8017
 30608 008c F4E7     		b	.L622
 30609              	.LVL2073:
 30610              	.L621:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30611              		.loc 2 237 79 view .LVU8018
 30612              	.LBE16237:
 30613              	.LBE16236:
 30614              	.LBE16231:
ARM GAS  /tmp/ccL95Edz.s 			page 941


 30615              	.LBE16230:
 30616              	.LBE16241:
 30617              	.LBE16242:
 30618              	.LBE16224:
 30619              	.LBE16223:
 30620              	.LBE16222:
 30621              	.LBE16221:
 30622              	.LBE16220:
 30623              	.LBB16243:
 30624              	.LBI16243:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 30625              		.loc 11 330 7 is_stmt 1 view .LVU8019
 30626              	.LBB16244:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 30627              		.loc 11 332 2 is_stmt 0 view .LVU8020
 30628 008e 0C98     		ldr	r0, [sp, #48]
 30629              	.LVL2074:
 30630              	.LBB16245:
 30631              	.LBI16245:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 30632              		.loc 11 347 7 is_stmt 1 view .LVU8021
 30633              	.LBB16246:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 30634              		.loc 11 350 2 is_stmt 0 view .LVU8022
 30635 0090 08B1     		cbz	r0, .L624
 30636              	.LVL2075:
 30637              	.LBB16247:
 30638              	.LBI16247:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 30639              		.loc 3 469 7 is_stmt 1 view .LVU8023
 30640              	.LBB16248:
 30641              	.LBB16249:
 30642              	.LBI16249:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 30643              		.loc 4 119 7 view .LVU8024
 30644              	.LBB16250:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30645              		.loc 4 128 19 is_stmt 0 view .LVU8025
 30646 0092 FFF7FEFF 		bl	_ZdlPv
 30647              	.LVL2076:
 30648              	.L624:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30649              		.loc 4 128 19 view .LVU8026
 30650              	.LBE16250:
 30651              	.LBE16249:
 30652              	.LBE16248:
 30653              	.LBE16247:
 30654              	.LBE16246:
 30655              	.LBE16245:
 30656              	.LBB16251:
 30657              	.LBI16251:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 30658              		.loc 11 125 14 is_stmt 1 view .LVU8027
 30659              	.LBB16252:
 30660              	.LBI16252:
 30661              		.loc 5 153 7 view .LVU8028
 30662              	.LBB16253:
ARM GAS  /tmp/ccL95Edz.s 			page 942


 30663              	.LBI16253:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30664              		.loc 4 89 7 view .LVU8029
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30665              		.loc 4 89 7 is_stmt 0 view .LVU8030
 30666              	.LBE16253:
 30667              	.LBE16252:
 30668              	.LBE16251:
 30669              	.LBE16244:
 30670              	.LBE16243:
 30671              	.LBE16218:
 30672              	.LBE16217:
  15:alohal/filesystem/filesystem.cpp ****         return -1;
 30673              		.loc 17 15 5 is_stmt 1 view .LVU8031
 30674              	.LBB16254:
 30675              	.LBI16254:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 30676              		.loc 2 6175 5 view .LVU8032
 30677              	.LBB16255:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30678              		.loc 2 6177 35 is_stmt 0 view .LVU8033
 30679 0096 7349     		ldr	r1, .L653+8
 30680 0098 06A8     		add	r0, sp, #24
 30681              	.LVL2077:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30682              		.loc 2 6177 35 view .LVU8034
 30683 009a FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 30684              	.LVL2078:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30685              		.loc 2 6177 35 view .LVU8035
 30686              	.LBE16255:
 30687              	.LBE16254:
  15:alohal/filesystem/filesystem.cpp ****         return -1;
 30688              		.loc 17 15 5 view .LVU8036
 30689 009e 0028     		cmp	r0, #0
 30690 00a0 00F0D980 		beq	.L644
  19:alohal/filesystem/filesystem.cpp ****     if (list_directory == nullptr) {
 30691              		.loc 17 19 5 is_stmt 1 view .LVU8037
 30692              	.LVL2079:
 30693              	.LBB16256:
 30694              	.LBI16256:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 30695              		.loc 2 448 7 view .LVU8038
 30696              	.LBB16257:
 30697              	.LBB16258:
 30698              	.LBB16259:
 30699              	.LBI16259:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30700              		.loc 2 190 7 view .LVU8039
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30701              		.loc 2 190 7 is_stmt 0 view .LVU8040
 30702              	.LBE16259:
 30703              	.LBB16260:
 30704              	.LBI16260:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 30705              		.loc 2 290 7 is_stmt 1 view .LVU8041
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
ARM GAS  /tmp/ccL95Edz.s 			page 943


 30706              		.loc 2 290 7 is_stmt 0 view .LVU8042
 30707              	.LBE16260:
 30708              	.LBB16261:
 30709              	.LBI16261:
 30710              		.loc 19 97 19 is_stmt 1 view .LVU8043
 30711              	.LBB16262:
 30712              	.LBI16262:
 30713              		.loc 3 514 7 view .LVU8044
 30714              	.LBB16263:
 30715              	.LBI16263:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 30716              		.loc 5 141 7 view .LVU8045
 30717              	.LBB16264:
 30718              	.LBI16264:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30719              		.loc 4 83 7 view .LVU8046
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30720              		.loc 4 83 7 is_stmt 0 view .LVU8047
 30721              	.LBE16264:
 30722              	.LBE16263:
 30723              	.LBE16262:
 30724              	.LBE16261:
 30725              	.LBB16265:
 30726              	.LBI16265:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 30727              		.loc 2 159 2 is_stmt 1 view .LVU8048
 30728              	.LBB16266:
 30729              	.LBB16267:
 30730              	.LBB16268:
 30731              	.LBI16268:
 30732              		.loc 9 99 5 view .LVU8049
 30733              		.loc 9 99 5 is_stmt 0 view .LVU8050
 30734              	.LBE16268:
 30735              	.LBB16269:
 30736              	.LBI16269:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 30737              		.loc 5 141 7 is_stmt 1 view .LVU8051
 30738              	.LBB16270:
 30739              	.LBI16270:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30740              		.loc 4 83 7 view .LVU8052
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30741              		.loc 4 83 7 is_stmt 0 view .LVU8053
 30742              	.LBE16270:
 30743              	.LBE16269:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 30744              		.loc 2 160 46 view .LVU8054
 30745 00a4 11AC     		add	r4, sp, #68
 30746              	.LVL2080:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 30747              		.loc 2 160 46 view .LVU8055
 30748 00a6 0F94     		str	r4, [sp, #60]
 30749              	.LVL2081:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 30750              		.loc 2 160 46 view .LVU8056
 30751              	.LBE16267:
 30752              	.LBE16266:
ARM GAS  /tmp/ccL95Edz.s 			page 944


 30753              	.LBE16265:
 30754              	.LBB16271:
 30755              	.LBI16271:
 30756              		.loc 5 153 7 is_stmt 1 view .LVU8057
 30757              	.LBB16272:
 30758              	.LBI16272:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30759              		.loc 4 89 7 view .LVU8058
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30760              		.loc 4 89 7 is_stmt 0 view .LVU8059
 30761              	.LBE16272:
 30762              	.LBE16271:
 30763              	.LBB16273:
 30764              	.LBI16273:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 30765              		.loc 2 186 7 is_stmt 1 view .LVU8060
 30766              	.LBB16274:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30767              		.loc 2 187 28 is_stmt 0 view .LVU8061
 30768 00a8 0699     		ldr	r1, [sp, #24]
 30769              	.LVL2082:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30770              		.loc 2 187 28 view .LVU8062
 30771              	.LBE16274:
 30772              	.LBE16273:
 30773              	.LBB16275:
 30774              	.LBI16275:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 30775              		.loc 2 186 7 is_stmt 1 view .LVU8063
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 30776              		.loc 2 186 7 is_stmt 0 view .LVU8064
 30777              	.LBE16275:
 30778              	.LBB16276:
 30779              	.LBI16276:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 30780              		.loc 2 936 7 is_stmt 1 view .LVU8065
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 30781              		.loc 2 936 7 is_stmt 0 view .LVU8066
 30782              	.LBE16276:
 30783              	.LBB16277:
 30784              	.LBI16277:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 30785              		.loc 2 263 9 is_stmt 1 view .LVU8067
 30786              	.LBB16278:
 30787              	.LBB16279:
 30788              	.LBI16279:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 30789              		.loc 2 243 9 view .LVU8068
 30790              	.LBB16280:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30791              		.loc 2 247 11 is_stmt 0 view .LVU8069
 30792 00aa 4FF00003 		mov	r3, #0
 30793 00ae 079A     		ldr	r2, [sp, #28]
 30794 00b0 0A44     		add	r2, r2, r1
 30795              	.LVL2083:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30796              		.loc 2 247 11 view .LVU8070
ARM GAS  /tmp/ccL95Edz.s 			page 945


 30797 00b2 0FA8     		add	r0, sp, #60
 30798              	.LVL2084:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30799              		.loc 2 247 11 view .LVU8071
 30800 00b4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 30801              	.LVL2085:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30802              		.loc 2 247 11 view .LVU8072
 30803              	.LBE16280:
 30804              	.LBE16279:
 30805              	.LBE16278:
 30806              	.LBE16277:
 30807              	.LBE16258:
 30808              	.LBE16257:
 30809              	.LBE16256:
  19:alohal/filesystem/filesystem.cpp ****     if (list_directory == nullptr) {
 30810              		.loc 17 19 67 view .LVU8073
 30811 00b8 0FA9     		add	r1, sp, #60
 30812 00ba 3046     		mov	r0, r6
 30813 00bc FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 30814              	.LVL2086:
 30815 00c0 0546     		mov	r5, r0
 30816              	.LVL2087:
 30817              	.LBB16281:
 30818              	.LBI16281:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 30819              		.loc 2 657 7 is_stmt 1 view .LVU8074
 30820              	.LBB16282:
 30821              	.LBI16282:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30822              		.loc 2 229 7 view .LVU8075
 30823              	.LBB16283:
 30824              	.LBB16284:
 30825              	.LBI16284:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 30826              		.loc 2 221 7 view .LVU8076
 30827              	.LBB16285:
 30828              	.LBI16285:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 30829              		.loc 2 186 7 view .LVU8077
 30830              	.LBB16286:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30831              		.loc 2 187 28 is_stmt 0 view .LVU8078
 30832 00c2 0F98     		ldr	r0, [sp, #60]
 30833              	.LVL2088:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30834              		.loc 2 187 28 view .LVU8079
 30835              	.LBE16286:
 30836              	.LBE16285:
 30837              	.LBB16287:
 30838              	.LBI16287:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30839              		.loc 2 200 7 is_stmt 1 view .LVU8080
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30840              		.loc 2 200 7 is_stmt 0 view .LVU8081
 30841              	.LBE16287:
 30842              	.LBE16284:
ARM GAS  /tmp/ccL95Edz.s 			page 946


 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 30843              		.loc 2 231 2 view .LVU8082
 30844 00c4 A042     		cmp	r0, r4
 30845 00c6 01D0     		beq	.L626
 30846              	.LVL2089:
 30847              	.LBB16288:
 30848              	.LBI16288:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 30849              		.loc 2 236 7 is_stmt 1 view .LVU8083
 30850              	.LBB16289:
 30851              	.LBB16290:
 30852              	.LBI16290:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 30853              		.loc 3 469 7 view .LVU8084
 30854              	.LBB16291:
 30855              	.LBI16291:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 30856              		.loc 4 119 7 view .LVU8085
 30857              	.LBB16292:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30858              		.loc 4 128 19 is_stmt 0 view .LVU8086
 30859 00c8 FFF7FEFF 		bl	_ZdlPv
 30860              	.LVL2090:
 30861              	.L626:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 30862              		.loc 4 128 19 view .LVU8087
 30863              	.LBE16292:
 30864              	.LBE16291:
 30865              	.LBE16290:
 30866              	.LBE16289:
 30867              	.LBE16288:
 30868              	.LBE16283:
 30869              	.LBE16282:
 30870              	.LBB16293:
 30871              	.LBI16293:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30872              		.loc 2 150 14 is_stmt 1 view .LVU8088
 30873              	.LBB16294:
 30874              	.LBI16294:
 30875              		.loc 5 153 7 view .LVU8089
 30876              	.LBB16295:
 30877              	.LBI16295:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30878              		.loc 4 89 7 view .LVU8090
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30879              		.loc 4 89 7 is_stmt 0 view .LVU8091
 30880              	.LBE16295:
 30881              	.LBE16294:
 30882              	.LBE16293:
 30883              	.LBE16281:
  20:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is unreachable - null returned \r\n");
 30884              		.loc 17 20 5 is_stmt 1 view .LVU8092
 30885 00cc 75B3     		cbz	r5, .L649
  25:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a directory \r\n");
 30886              		.loc 17 25 5 view .LVU8093
 30887              	.LVL2091:
 30888              	.LBB16296:
ARM GAS  /tmp/ccL95Edz.s 			page 947


 30889              	.LBI16296:
  66:alohal/filesystem/entry.hpp **** 
 30890              		.loc 1 66 23 view .LVU8094
 30891              	.LBB16297:
  66:alohal/filesystem/entry.hpp **** 
 30892              		.loc 1 66 34 view .LVU8095
  66:alohal/filesystem/entry.hpp **** 
 30893              		.loc 1 66 41 is_stmt 0 view .LVU8096
 30894 00ce 6B68     		ldr	r3, [r5, #4]
 30895              	.LVL2092:
  66:alohal/filesystem/entry.hpp **** 
 30896              		.loc 1 66 41 view .LVU8097
 30897              	.LBE16297:
 30898              	.LBE16296:
  25:alohal/filesystem/filesystem.cpp ****         cli->Print("Target location is not a directory \r\n");
 30899              		.loc 17 25 5 view .LVU8098
 30900 00d0 012B     		cmp	r3, #1
 30901 00d2 41D1     		bne	.L650
  30:alohal/filesystem/filesystem.cpp ****     for (auto entry:list_directory->Contains()) {
 30902              		.loc 17 30 5 is_stmt 1 view .LVU8099
 30903              	.LVL2093:
 30904              	.LBB16298:
 30905              	.LBI16298:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 30906              		.loc 5 138 7 view .LVU8100
 30907              	.LBB16299:
 30908              	.LBI16299:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30909              		.loc 4 80 7 view .LVU8101
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30910              		.loc 4 80 7 is_stmt 0 view .LVU8102
 30911              	.LBE16299:
 30912              	.LBE16298:
 30913              	.LBB16300:
 30914              	.LBI16300:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 30915              		.loc 2 525 7 is_stmt 1 view .LVU8103
 30916              	.LBB16301:
 30917              	.LBB16302:
 30918              	.LBI16302:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30919              		.loc 2 190 7 view .LVU8104
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 30920              		.loc 2 190 7 is_stmt 0 view .LVU8105
 30921              	.LBE16302:
 30922              	.LBB16303:
 30923              	.LBI16303:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 30924              		.loc 2 156 2 is_stmt 1 view .LVU8106
 30925              	.LBB16304:
 30926              	.LBB16305:
 30927              	.LBB16306:
 30928              	.LBI16306:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 30929              		.loc 5 141 7 view .LVU8107
 30930              	.LBB16307:
 30931              	.LBI16307:
ARM GAS  /tmp/ccL95Edz.s 			page 948


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30932              		.loc 4 83 7 view .LVU8108
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30933              		.loc 4 83 7 is_stmt 0 view .LVU8109
 30934              	.LBE16307:
 30935              	.LBE16306:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30936              		.loc 2 157 35 view .LVU8110
 30937 00d4 02AB     		add	r3, sp, #8
 30938              	.LVL2094:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30939              		.loc 2 157 35 view .LVU8111
 30940 00d6 0093     		str	r3, [sp]
 30941              	.LVL2095:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 30942              		.loc 2 157 35 view .LVU8112
 30943              	.LBE16305:
 30944              	.LBE16304:
 30945              	.LBE16303:
 30946              	.LBB16308:
 30947              	.LBI16308:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 30948              		.loc 8 329 7 is_stmt 1 view .LVU8113
 30949              	.LBE16308:
 30950              	.LBE16301:
 30951              	.LBE16300:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 30952              		.loc 8 332 2 view .LVU8114
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 30953              		.loc 8 335 2 view .LVU8115
 30954              	.LBB16314:
 30955              	.LBB16313:
 30956              	.LBB16309:
 30957              	.LBI16309:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 30958              		.loc 2 263 9 view .LVU8116
 30959              	.LBB16310:
 30960              	.LBB16311:
 30961              	.LBI16311:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 30962              		.loc 2 243 9 view .LVU8117
 30963              	.LBB16312:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30964              		.loc 2 247 11 is_stmt 0 view .LVU8118
 30965 00d8 6249     		ldr	r1, .L653+8
 30966 00da 4FF00003 		mov	r3, #0
 30967 00de 0A46     		mov	r2, r1
 30968 00e0 6846     		mov	r0, sp
 30969 00e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 30970              	.LVL2096:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 30971              		.loc 2 247 11 view .LVU8119
 30972              	.LBE16312:
 30973              	.LBE16311:
 30974              	.LBE16310:
 30975              	.LBE16309:
 30976              	.LBE16313:
ARM GAS  /tmp/ccL95Edz.s 			page 949


 30977              	.LBE16314:
 30978              	.LBB16315:
 30979              	.LBI16315:
 30980              		.loc 5 153 7 is_stmt 1 view .LVU8120
 30981              	.LBB16316:
 30982              	.LBI16316:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30983              		.loc 4 89 7 view .LVU8121
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 30984              		.loc 4 89 7 is_stmt 0 view .LVU8122
 30985              	.LBE16316:
 30986              	.LBE16315:
  31:alohal/filesystem/filesystem.cpp ****         output += entry->Name() + "\r\n";
 30987              		.loc 17 31 5 is_stmt 1 view .LVU8123
 30988              	.LBB16317:
 30989              	.LBB16318:
 30990              	.LBI16318:
 30991              		.file 25 "alohal/filesystem/directory.hpp"
   1:alohal/filesystem/directory.hpp **** /**
   2:alohal/filesystem/directory.hpp ****  * @file directory.hpp
   3:alohal/filesystem/directory.hpp ****  * @author Petr Malan√≠k (TheColonelYoung(at)gmail(dot)com)
   4:alohal/filesystem/directory.hpp ****  * @version 0.1
   5:alohal/filesystem/directory.hpp ****  * @date 05.09.2019
   6:alohal/filesystem/directory.hpp ****  */
   7:alohal/filesystem/directory.hpp **** #pragma once
   8:alohal/filesystem/directory.hpp **** 
   9:alohal/filesystem/directory.hpp **** #include "entry.hpp"
  10:alohal/filesystem/directory.hpp **** 
  11:alohal/filesystem/directory.hpp **** #include <string>
  12:alohal/filesystem/directory.hpp **** #include <vector>
  13:alohal/filesystem/directory.hpp **** 
  14:alohal/filesystem/directory.hpp **** using namespace std;
  15:alohal/filesystem/directory.hpp **** 
  16:alohal/filesystem/directory.hpp **** class Directory : public FS_entry
  17:alohal/filesystem/directory.hpp **** {
  18:alohal/filesystem/directory.hpp **** private:
  19:alohal/filesystem/directory.hpp ****     vector<FS_entry *> content;
  20:alohal/filesystem/directory.hpp **** 
  21:alohal/filesystem/directory.hpp **** public:
  22:alohal/filesystem/directory.hpp ****     Directory();
  23:alohal/filesystem/directory.hpp **** 
  24:alohal/filesystem/directory.hpp ****     /**
  25:alohal/filesystem/directory.hpp ****      * @brief Construct a new Directory object
  26:alohal/filesystem/directory.hpp ****      *
  27:alohal/filesystem/directory.hpp ****      * @param name Path to where create directory
  28:alohal/filesystem/directory.hpp ****      */
  29:alohal/filesystem/directory.hpp ****     Directory(string name);
  30:alohal/filesystem/directory.hpp **** 
  31:alohal/filesystem/directory.hpp ****     ~Directory();
  32:alohal/filesystem/directory.hpp **** 
  33:alohal/filesystem/directory.hpp ****     /**
  34:alohal/filesystem/directory.hpp ****      * @brief Add entry to directory content
  35:alohal/filesystem/directory.hpp ****      *
  36:alohal/filesystem/directory.hpp ****      * @param entry Pointer to entry which will be added to directory content
  37:alohal/filesystem/directory.hpp ****      * @return int  Number of entries inside directory
  38:alohal/filesystem/directory.hpp ****      */
  39:alohal/filesystem/directory.hpp ****     int Add_entry(FS_entry *entry);
ARM GAS  /tmp/ccL95Edz.s 			page 950


  40:alohal/filesystem/directory.hpp **** 
  41:alohal/filesystem/directory.hpp ****     /**
  42:alohal/filesystem/directory.hpp ****      * @brief   Removed given entry from directory content
  43:alohal/filesystem/directory.hpp ****      *
  44:alohal/filesystem/directory.hpp ****      * @param entry Pointer to entry which will be removed from directory content
  45:alohal/filesystem/directory.hpp ****      * @return int  Number of entries inside directory
  46:alohal/filesystem/directory.hpp ****      */
  47:alohal/filesystem/directory.hpp ****     int Delete_entry(FS_entry *entry);
  48:alohal/filesystem/directory.hpp **** 
  49:alohal/filesystem/directory.hpp ****     /**
  50:alohal/filesystem/directory.hpp ****      * @brief   Count number of entries
  51:alohal/filesystem/directory.hpp ****      *
  52:alohal/filesystem/directory.hpp ****      * @return const int    Number of entries in Directory
  53:alohal/filesystem/directory.hpp ****      */
  54:alohal/filesystem/directory.hpp ****     const inline int Size() const { return content.size(); };
  55:alohal/filesystem/directory.hpp **** 
  56:alohal/filesystem/directory.hpp ****     /**
  57:alohal/filesystem/directory.hpp ****      * @brief Return entries, which are contained in Directory
  58:alohal/filesystem/directory.hpp ****      *
  59:alohal/filesystem/directory.hpp ****      * @return const vector<FS_entry *> Content of folder
  60:alohal/filesystem/directory.hpp ****      */
  61:alohal/filesystem/directory.hpp ****     const inline vector<FS_entry *> Contains() const { return content; };
 30992              		.loc 25 61 37 view .LVU8124
 30993              	.LBB16319:
 30994              		.loc 25 61 56 view .LVU8125
 30995              		.loc 25 61 63 is_stmt 0 view .LVU8126
 30996 00e6 05F12407 		add	r7, r5, #36
 30997              	.LVL2097:
 30998              	.LBB16320:
 30999              	.LBI16320:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 31000              		.loc 11 550 7 is_stmt 1 view .LVU8127
 31001              	.LBB16321:
 31002              	.LBB16322:
 31003              	.LBB16323:
 31004              	.LBI16323:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 31005              		.loc 11 915 7 view .LVU8128
 31006              	.LBB16324:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 31007              		.loc 11 916 40 is_stmt 0 view .LVU8129
 31008 00ea 7868     		ldr	r0, [r7, #4]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 31009              		.loc 11 916 66 view .LVU8130
 31010 00ec 6B6A     		ldr	r3, [r5, #36]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 31011              		.loc 11 916 50 view .LVU8131
 31012 00ee C01A     		subs	r0, r0, r3
 31013              	.LVL2098:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 31014              		.loc 11 916 50 view .LVU8132
 31015              	.LBE16324:
 31016              	.LBE16323:
 31017              	.LBB16325:
 31018              	.LBI16325:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 31019              		.loc 11 277 7 is_stmt 1 view .LVU8133
ARM GAS  /tmp/ccL95Edz.s 			page 951


 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 31020              		.loc 11 277 7 is_stmt 0 view .LVU8134
 31021              	.LBE16325:
 31022              	.LBB16326:
 31023              	.LBI16326:
 31024              		.loc 19 97 19 is_stmt 1 view .LVU8135
 31025              	.LBB16327:
 31026              	.LBI16327:
 31027              		.loc 3 514 7 view .LVU8136
 31028              	.LBB16328:
 31029              	.LBI16328:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31030              		.loc 5 141 7 view .LVU8137
 31031              	.LBB16329:
 31032              	.LBI16329:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31033              		.loc 4 83 7 view .LVU8138
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31034              		.loc 4 83 7 is_stmt 0 view .LVU8139
 31035              	.LBE16329:
 31036              	.LBE16328:
 31037              	.LBE16327:
 31038              	.LBE16326:
 31039              	.LBB16330:
 31040              	.LBI16330:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 31041              		.loc 11 300 7 is_stmt 1 view .LVU8140
 31042              	.LBB16331:
 31043              	.LBI16331:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 31044              		.loc 11 133 2 view .LVU8141
 31045              	.LBB16332:
 31046              	.LBI16332:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31047              		.loc 5 141 7 view .LVU8142
 31048              	.LBB16333:
 31049              	.LBI16333:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31050              		.loc 4 83 7 view .LVU8143
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31051              		.loc 4 83 7 is_stmt 0 view .LVU8144
 31052              	.LBE16333:
 31053              	.LBE16332:
 31054              	.LBB16334:
 31055              	.LBI16334:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 31056              		.loc 11 94 2 is_stmt 1 view .LVU8145
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 31057              		.loc 11 94 2 is_stmt 0 view .LVU8146
 31058              	.LBE16334:
 31059              	.LBE16331:
 31060              	.LBB16335:
 31061              	.LBI16335:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 31062              		.loc 11 356 7 is_stmt 1 view .LVU8147
 31063              	.LBB16336:
 31064              	.LBB16337:
ARM GAS  /tmp/ccL95Edz.s 			page 952


 31065              	.LBI16337:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 31066              		.loc 11 340 7 view .LVU8148
 31067              	.LBB16338:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 31068              		.loc 11 343 18 is_stmt 0 view .LVU8149
 31069 00f0 8010     		asrs	r0, r0, #2
 31070              	.LVL2099:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 31071              		.loc 11 343 18 view .LVU8150
 31072 00f2 49D0     		beq	.L645
 31073              	.LVL2100:
 31074              	.LBB16339:
 31075              	.LBI16339:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 31076              		.loc 3 443 7 is_stmt 1 view .LVU8151
 31077              	.LBB16340:
 31078              	.LBI16340:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 31079              		.loc 4 102 7 view .LVU8152
 31080              	.LBB16341:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 31081              		.loc 4 104 2 is_stmt 0 view .LVU8153
 31082 00f4 B0F1005F 		cmp	r0, #536870912
 31083 00f8 44D2     		bcs	.L651
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31084              		.loc 4 114 41 view .LVU8154
 31085 00fa 8000     		lsls	r0, r0, #2
 31086              	.LVL2101:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31087              		.loc 4 114 41 view .LVU8155
 31088 00fc FFF7FEFF 		bl	_Znwj
 31089              	.LVL2102:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31090              		.loc 4 114 41 view .LVU8156
 31091 0100 0446     		mov	r4, r0
 31092              	.LVL2103:
 31093              	.L631:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31094              		.loc 4 114 41 view .LVU8157
 31095              	.LBE16341:
 31096              	.LBE16340:
 31097              	.LBE16339:
 31098              	.LBE16338:
 31099              	.LBE16337:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 31100              		.loc 11 358 2 view .LVU8158
 31101 0102 3394     		str	r4, [sp, #204]
 31102              	.LVL2104:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 31103              		.loc 11 358 2 view .LVU8159
 31104              	.LBE16336:
 31105              	.LBE16335:
 31106              	.LBE16330:
 31107              	.LBB16349:
 31108              	.LBI16349:
 31109              		.loc 5 153 7 is_stmt 1 view .LVU8160
ARM GAS  /tmp/ccL95Edz.s 			page 953


 31110              	.LBB16350:
 31111              	.LBI16350:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31112              		.loc 4 89 7 view .LVU8161
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31113              		.loc 4 89 7 is_stmt 0 view .LVU8162
 31114              	.LBE16350:
 31115              	.LBE16349:
 31116              	.LBB16351:
 31117              	.LBI16351:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 31118              		.loc 11 817 7 is_stmt 1 view .LVU8163
 31119              	.LBB16352:
 31120              	.LBB16353:
 31121              	.LBI16353:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31122              		.loc 13 806 7 view .LVU8164
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31123              		.loc 13 806 7 is_stmt 0 view .LVU8165
 31124              	.LBE16353:
 31125              	.LBE16352:
 31126              	.LBE16351:
 31127              	.LBB16354:
 31128              	.LBI16354:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 31129              		.loc 11 835 7 is_stmt 1 view .LVU8166
 31130              	.LBB16355:
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 31131              		.loc 11 836 45 is_stmt 0 view .LVU8167
 31132 0104 7F68     		ldr	r7, [r7, #4]
 31133              	.LVL2105:
 31134              	.LBB16356:
 31135              	.LBI16356:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31136              		.loc 13 806 7 is_stmt 1 view .LVU8168
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31137              		.loc 13 806 7 is_stmt 0 view .LVU8169
 31138              	.LBE16356:
 31139              	.LBE16355:
 31140              	.LBE16354:
 31141              	.LBB16357:
 31142              	.LBI16357:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 31143              		.loc 11 273 7 is_stmt 1 view .LVU8170
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 31144              		.loc 11 273 7 is_stmt 0 view .LVU8171
 31145              	.LBE16357:
 31146              	.LBB16358:
 31147              	.LBI16358:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 31148              		.loc 15 305 5 is_stmt 1 view .LVU8172
 31149              	.LBB16359:
 31150              	.LBB16360:
 31151              	.LBI16360:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 31152              		.loc 15 115 5 view .LVU8173
 31153              	.LBB16361:
ARM GAS  /tmp/ccL95Edz.s 			page 954


 31154              	.LBB16362:
 31155              	.LBI16362:
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 31156              		.loc 15 99 9 view .LVU8174
 31157              	.LBB16363:
 31158              	.LBB16364:
 31159              	.LBI16364:
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 31160              		.loc 12 465 5 view .LVU8175
 31161              	.LBB16365:
 31162              	.LBB16366:
 31163              	.LBI16366:
 31164              		.loc 23 428 5 view .LVU8176
 31165              	.LBE16366:
 31166              	.LBB16367:
 31167              	.LBI16367:
 31168              		.loc 23 428 5 view .LVU8177
 31169              		.loc 23 428 5 is_stmt 0 view .LVU8178
 31170              	.LBE16367:
 31171              	.LBB16368:
 31172              	.LBI16368:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 31173              		.loc 12 438 5 is_stmt 1 view .LVU8179
 31174              	.LBB16369:
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 31175              		.loc 12 440 31 is_stmt 0 view .LVU8180
 31176 0106 686A     		ldr	r0, [r5, #36]
 31177 0108 FFF7FEFF 		bl	_ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
 31178              	.LVL2106:
 31179 010c 0546     		mov	r5, r0
 31180              	.LVL2107:
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 31181              		.loc 12 440 31 view .LVU8181
 31182 010e 3846     		mov	r0, r7
 31183 0110 FFF7FEFF 		bl	_ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
 31184              	.LVL2108:
 31185              	.LBB16370:
 31186              	.LBI16370:
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 31187              		.loc 12 393 5 is_stmt 1 view .LVU8182
 31188              	.LBB16371:
 31189              	.LBB16372:
 31190              	.LBI16372:
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 31191              		.loc 12 375 2 view .LVU8183
 31192              	.LBB16373:
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  if (_Num)
 31193              		.loc 12 384 34 is_stmt 0 view .LVU8184
 31194 0114 471B     		subs	r7, r0, r5
 31195              	.LVL2109:
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 31196              		.loc 12 385 4 view .LVU8185
 31197 0116 8542     		cmp	r5, r0
 31198 0118 04D0     		beq	.L633
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 31199              		.loc 12 386 23 view .LVU8186
 31200 011a 3A46     		mov	r2, r7
ARM GAS  /tmp/ccL95Edz.s 			page 955


 31201 011c 2946     		mov	r1, r5
 31202 011e 2046     		mov	r0, r4
 31203              	.LVL2110:
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 31204              		.loc 12 386 23 view .LVU8187
 31205 0120 FFF7FEFF 		bl	memmove
 31206              	.LVL2111:
 31207              	.L633:
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 31208              		.loc 12 387 22 view .LVU8188
 31209 0124 3C44     		add	r4, r4, r7
 31210              	.LVL2112:
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 31211              		.loc 12 387 22 view .LVU8189
 31212              	.LBE16373:
 31213              	.LBE16372:
 31214              	.LBE16371:
 31215              	.LBE16370:
 31216              	.LBE16369:
 31217              	.LBE16368:
 31218              	.LBE16365:
 31219              	.LBE16364:
 31220              	.LBE16363:
 31221              	.LBE16362:
 31222              	.LBE16361:
 31223              	.LBE16360:
 31224              	.LBE16359:
 31225              	.LBE16358:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 31226              		.loc 11 554 2 view .LVU8190
 31227 0126 3494     		str	r4, [sp, #208]
 31228              	.LVL2113:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 31229              		.loc 11 554 2 view .LVU8191
 31230              	.LBE16322:
 31231              	.LBE16321:
 31232              	.LBE16320:
 31233              	.LBE16319:
 31234              	.LBE16318:
 31235              	.LBB16379:
 31236              	.LBI16379:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 31237              		.loc 11 817 7 is_stmt 1 view .LVU8192
 31238              	.LBB16380:
 31239              	.LBB16381:
 31240              	.LBI16381:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31241              		.loc 13 806 7 view .LVU8193
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31242              		.loc 13 806 7 is_stmt 0 view .LVU8194
 31243              	.LBE16381:
 31244              	.LBE16380:
 31245              	.LBE16379:
  31:alohal/filesystem/filesystem.cpp ****         output += entry->Name() + "\r\n";
 31246              		.loc 17 31 46 view .LVU8195
 31247 0128 339B     		ldr	r3, [sp, #204]
 31248              	.LVL2114:
ARM GAS  /tmp/ccL95Edz.s 			page 956


 31249              	.LBB16382:
 31250              	.LBI16382:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 31251              		.loc 11 835 7 is_stmt 1 view .LVU8196
 31252              	.LBB16383:
 31253              	.LBB16384:
 31254              	.LBI16384:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31255              		.loc 13 806 7 view .LVU8197
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31256              		.loc 13 806 7 is_stmt 0 view .LVU8198
 31257 012a 33E0     		b	.L638
 31258              	.LVL2115:
 31259              	.L649:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 31260              		.loc 13 806 7 view .LVU8199
 31261              	.LBE16384:
 31262              	.LBE16383:
 31263              	.LBE16382:
 31264              	.LBE16317:
  21:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 31265              		.loc 17 21 9 is_stmt 1 view .LVU8200
 31266 012c B568     		ldr	r5, [r6, #8]
 31267              	.LVL2116:
 31268              	.LBB16505:
 31269              	.LBI16505:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 31270              		.loc 5 138 7 view .LVU8201
 31271              	.LBB16506:
 31272              	.LBI16506:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31273              		.loc 4 80 7 view .LVU8202
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31274              		.loc 4 80 7 is_stmt 0 view .LVU8203
 31275              	.LBE16506:
 31276              	.LBE16505:
 31277              	.LBB16507:
 31278              	.LBI16507:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 31279              		.loc 2 525 7 is_stmt 1 view .LVU8204
 31280              	.LBB16508:
 31281              	.LBB16509:
 31282              	.LBB16510:
 31283              	.LBI16510:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31284              		.loc 2 190 7 view .LVU8205
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31285              		.loc 2 190 7 is_stmt 0 view .LVU8206
 31286              	.LBE16510:
 31287              	.LBB16511:
 31288              	.LBI16511:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 31289              		.loc 2 156 2 is_stmt 1 view .LVU8207
 31290              	.LBB16512:
 31291              	.LBB16513:
 31292              	.LBB16514:
 31293              	.LBI16514:
ARM GAS  /tmp/ccL95Edz.s 			page 957


 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31294              		.loc 5 141 7 view .LVU8208
 31295              	.LBB16515:
 31296              	.LBI16515:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31297              		.loc 4 83 7 view .LVU8209
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31298              		.loc 4 83 7 is_stmt 0 view .LVU8210
 31299              	.LBE16515:
 31300              	.LBE16514:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31301              		.loc 2 157 35 view .LVU8211
 31302 012e 17AC     		add	r4, sp, #92
 31303              	.LVL2117:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31304              		.loc 2 157 35 view .LVU8212
 31305 0130 1594     		str	r4, [sp, #84]
 31306              	.LVL2118:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31307              		.loc 2 157 35 view .LVU8213
 31308              	.LBE16513:
 31309              	.LBE16512:
 31310              	.LBE16511:
 31311              	.LBB16516:
 31312              	.LBI16516:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 31313              		.loc 8 329 7 is_stmt 1 view .LVU8214
 31314              	.LBE16516:
 31315              	.LBE16509:
 31316              	.LBE16508:
 31317              	.LBE16507:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 31318              		.loc 8 332 2 view .LVU8215
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 31319              		.loc 8 335 2 view .LVU8216
 31320              	.LBB16523:
 31321              	.LBB16522:
 31322              	.LBB16521:
 31323              	.LBB16517:
 31324              	.LBI16517:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 31325              		.loc 2 263 9 view .LVU8217
 31326              	.LBB16518:
 31327              	.LBB16519:
 31328              	.LBI16519:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 31329              		.loc 2 243 9 view .LVU8218
 31330              	.LBB16520:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31331              		.loc 2 247 11 is_stmt 0 view .LVU8219
 31332 0132 4D4A     		ldr	r2, .L653+12
 31333              	.LVL2119:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31334              		.loc 2 247 11 view .LVU8220
 31335 0134 4FF00003 		mov	r3, #0
 31336 0138 A2F13101 		sub	r1, r2, #49
 31337 013c 15A8     		add	r0, sp, #84
ARM GAS  /tmp/ccL95Edz.s 			page 958


 31338              	.LVL2120:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31339              		.loc 2 247 11 view .LVU8221
 31340 013e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 31341              	.LVL2121:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31342              		.loc 2 247 11 view .LVU8222
 31343              	.LBE16520:
 31344              	.LBE16519:
 31345              	.LBE16518:
 31346              	.LBE16517:
 31347              	.LBE16521:
 31348              	.LBE16522:
 31349              	.LBE16523:
  21:alohal/filesystem/filesystem.cpp ****         return ENOENT;
 31350              		.loc 17 21 19 view .LVU8223
 31351 0142 15A9     		add	r1, sp, #84
 31352 0144 2846     		mov	r0, r5
 31353 0146 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 31354              	.LVL2122:
 31355              	.LBB16524:
 31356              	.LBI16524:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 31357              		.loc 2 657 7 is_stmt 1 view .LVU8224
 31358              	.LBB16525:
 31359              	.LBI16525:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31360              		.loc 2 229 7 view .LVU8225
 31361              	.LBB16526:
 31362              	.LBB16527:
 31363              	.LBI16527:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 31364              		.loc 2 221 7 view .LVU8226
 31365              	.LBB16528:
 31366              	.LBI16528:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31367              		.loc 2 186 7 view .LVU8227
 31368              	.LBB16529:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31369              		.loc 2 187 28 is_stmt 0 view .LVU8228
 31370 014a 1598     		ldr	r0, [sp, #84]
 31371              	.LVL2123:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31372              		.loc 2 187 28 view .LVU8229
 31373              	.LBE16529:
 31374              	.LBE16528:
 31375              	.LBB16530:
 31376              	.LBI16530:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31377              		.loc 2 200 7 is_stmt 1 view .LVU8230
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31378              		.loc 2 200 7 is_stmt 0 view .LVU8231
 31379              	.LBE16530:
 31380              	.LBE16527:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 31381              		.loc 2 231 2 view .LVU8232
 31382 014c A042     		cmp	r0, r4
ARM GAS  /tmp/ccL95Edz.s 			page 959


 31383 014e 01D0     		beq	.L628
 31384              	.LVL2124:
 31385              	.LBB16531:
 31386              	.LBI16531:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 31387              		.loc 2 236 7 is_stmt 1 view .LVU8233
 31388              	.LBB16532:
 31389              	.LBB16533:
 31390              	.LBI16533:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 31391              		.loc 3 469 7 view .LVU8234
 31392              	.LBB16534:
 31393              	.LBI16534:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 31394              		.loc 4 119 7 view .LVU8235
 31395              	.LBB16535:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31396              		.loc 4 128 19 is_stmt 0 view .LVU8236
 31397 0150 FFF7FEFF 		bl	_ZdlPv
 31398              	.LVL2125:
 31399              	.L628:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31400              		.loc 4 128 19 view .LVU8237
 31401              	.LBE16535:
 31402              	.LBE16534:
 31403              	.LBE16533:
 31404              	.LBE16532:
 31405              	.LBE16531:
 31406              	.LBE16526:
 31407              	.LBE16525:
 31408              	.LBB16536:
 31409              	.LBI16536:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31410              		.loc 2 150 14 is_stmt 1 view .LVU8238
 31411              	.LBB16537:
 31412              	.LBI16537:
 31413              		.loc 5 153 7 view .LVU8239
 31414              	.LBB16538:
 31415              	.LBI16538:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31416              		.loc 4 89 7 view .LVU8240
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31417              		.loc 4 89 7 is_stmt 0 view .LVU8241
 31418              	.LBE16538:
 31419              	.LBE16537:
 31420              	.LBE16536:
 31421              	.LBE16524:
 31422              	.LBB16539:
 31423              	.LBI16539:
 31424              		.loc 5 153 7 is_stmt 1 view .LVU8242
 31425              	.LBB16540:
 31426              	.LBI16540:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31427              		.loc 4 89 7 view .LVU8243
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31428              		.loc 4 89 7 is_stmt 0 view .LVU8244
 31429              	.LBE16540:
ARM GAS  /tmp/ccL95Edz.s 			page 960


 31430              	.LBE16539:
  22:alohal/filesystem/filesystem.cpp ****     }
 31431              		.loc 17 22 9 is_stmt 1 view .LVU8245
  22:alohal/filesystem/filesystem.cpp ****     }
 31432              		.loc 17 22 16 is_stmt 0 view .LVU8246
 31433 0154 0224     		movs	r4, #2
 31434 0156 75E0     		b	.L625
 31435              	.LVL2126:
 31436              	.L650:
  26:alohal/filesystem/filesystem.cpp ****         return ENOTDIR;
 31437              		.loc 17 26 9 is_stmt 1 view .LVU8247
 31438 0158 B568     		ldr	r5, [r6, #8]
 31439              	.LVL2127:
 31440              	.LBB16541:
 31441              	.LBI16541:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 31442              		.loc 5 138 7 view .LVU8248
 31443              	.LBB16542:
 31444              	.LBI16542:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31445              		.loc 4 80 7 view .LVU8249
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31446              		.loc 4 80 7 is_stmt 0 view .LVU8250
 31447              	.LBE16542:
 31448              	.LBE16541:
 31449              	.LBB16543:
 31450              	.LBI16543:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 31451              		.loc 2 525 7 is_stmt 1 view .LVU8251
 31452              	.LBB16544:
 31453              	.LBB16545:
 31454              	.LBB16546:
 31455              	.LBI16546:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31456              		.loc 2 190 7 view .LVU8252
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31457              		.loc 2 190 7 is_stmt 0 view .LVU8253
 31458              	.LBE16546:
 31459              	.LBB16547:
 31460              	.LBI16547:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 31461              		.loc 2 156 2 is_stmt 1 view .LVU8254
 31462              	.LBB16548:
 31463              	.LBB16549:
 31464              	.LBB16550:
 31465              	.LBI16550:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31466              		.loc 5 141 7 view .LVU8255
 31467              	.LBB16551:
 31468              	.LBI16551:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31469              		.loc 4 83 7 view .LVU8256
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31470              		.loc 4 83 7 is_stmt 0 view .LVU8257
 31471              	.LBE16551:
 31472              	.LBE16550:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 961


 31473              		.loc 2 157 35 view .LVU8258
 31474 015a 1DAC     		add	r4, sp, #116
 31475              	.LVL2128:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31476              		.loc 2 157 35 view .LVU8259
 31477 015c 1B94     		str	r4, [sp, #108]
 31478              	.LVL2129:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31479              		.loc 2 157 35 view .LVU8260
 31480              	.LBE16549:
 31481              	.LBE16548:
 31482              	.LBE16547:
 31483              	.LBB16552:
 31484              	.LBI16552:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 31485              		.loc 8 329 7 is_stmt 1 view .LVU8261
 31486              	.LBE16552:
 31487              	.LBE16545:
 31488              	.LBE16544:
 31489              	.LBE16543:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 31490              		.loc 8 332 2 view .LVU8262
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 31491              		.loc 8 335 2 view .LVU8263
 31492              	.LBB16559:
 31493              	.LBB16558:
 31494              	.LBB16557:
 31495              	.LBB16553:
 31496              	.LBI16553:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 31497              		.loc 2 263 9 view .LVU8264
 31498              	.LBB16554:
 31499              	.LBB16555:
 31500              	.LBI16555:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 31501              		.loc 2 243 9 view .LVU8265
 31502              	.LBB16556:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31503              		.loc 2 247 11 is_stmt 0 view .LVU8266
 31504 015e 434A     		ldr	r2, .L653+16
 31505              	.LVL2130:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31506              		.loc 2 247 11 view .LVU8267
 31507 0160 4FF00003 		mov	r3, #0
 31508 0164 A2F12501 		sub	r1, r2, #37
 31509 0168 1BA8     		add	r0, sp, #108
 31510              	.LVL2131:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31511              		.loc 2 247 11 view .LVU8268
 31512 016a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 31513              	.LVL2132:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31514              		.loc 2 247 11 view .LVU8269
 31515              	.LBE16556:
 31516              	.LBE16555:
 31517              	.LBE16554:
 31518              	.LBE16553:
ARM GAS  /tmp/ccL95Edz.s 			page 962


 31519              	.LBE16557:
 31520              	.LBE16558:
 31521              	.LBE16559:
  26:alohal/filesystem/filesystem.cpp ****         return ENOTDIR;
 31522              		.loc 17 26 19 view .LVU8270
 31523 016e 1BA9     		add	r1, sp, #108
 31524 0170 2846     		mov	r0, r5
 31525 0172 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 31526              	.LVL2133:
 31527              	.LBB16560:
 31528              	.LBI16560:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 31529              		.loc 2 657 7 is_stmt 1 view .LVU8271
 31530              	.LBB16561:
 31531              	.LBI16561:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31532              		.loc 2 229 7 view .LVU8272
 31533              	.LBB16562:
 31534              	.LBB16563:
 31535              	.LBI16563:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 31536              		.loc 2 221 7 view .LVU8273
 31537              	.LBB16564:
 31538              	.LBI16564:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31539              		.loc 2 186 7 view .LVU8274
 31540              	.LBB16565:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31541              		.loc 2 187 28 is_stmt 0 view .LVU8275
 31542 0176 1B98     		ldr	r0, [sp, #108]
 31543              	.LVL2134:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31544              		.loc 2 187 28 view .LVU8276
 31545              	.LBE16565:
 31546              	.LBE16564:
 31547              	.LBB16566:
 31548              	.LBI16566:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31549              		.loc 2 200 7 is_stmt 1 view .LVU8277
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31550              		.loc 2 200 7 is_stmt 0 view .LVU8278
 31551              	.LBE16566:
 31552              	.LBE16563:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 31553              		.loc 2 231 2 view .LVU8279
 31554 0178 A042     		cmp	r0, r4
 31555 017a 01D0     		beq	.L630
 31556              	.LVL2135:
 31557              	.LBB16567:
 31558              	.LBI16567:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 31559              		.loc 2 236 7 is_stmt 1 view .LVU8280
 31560              	.LBB16568:
 31561              	.LBB16569:
 31562              	.LBI16569:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 31563              		.loc 3 469 7 view .LVU8281
ARM GAS  /tmp/ccL95Edz.s 			page 963


 31564              	.LBB16570:
 31565              	.LBI16570:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 31566              		.loc 4 119 7 view .LVU8282
 31567              	.LBB16571:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31568              		.loc 4 128 19 is_stmt 0 view .LVU8283
 31569 017c FFF7FEFF 		bl	_ZdlPv
 31570              	.LVL2136:
 31571              	.L630:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 31572              		.loc 4 128 19 view .LVU8284
 31573              	.LBE16571:
 31574              	.LBE16570:
 31575              	.LBE16569:
 31576              	.LBE16568:
 31577              	.LBE16567:
 31578              	.LBE16562:
 31579              	.LBE16561:
 31580              	.LBB16572:
 31581              	.LBI16572:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31582              		.loc 2 150 14 is_stmt 1 view .LVU8285
 31583              	.LBB16573:
 31584              	.LBI16573:
 31585              		.loc 5 153 7 view .LVU8286
 31586              	.LBB16574:
 31587              	.LBI16574:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31588              		.loc 4 89 7 view .LVU8287
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31589              		.loc 4 89 7 is_stmt 0 view .LVU8288
 31590              	.LBE16574:
 31591              	.LBE16573:
 31592              	.LBE16572:
 31593              	.LBE16560:
 31594              	.LBB16575:
 31595              	.LBI16575:
 31596              		.loc 5 153 7 is_stmt 1 view .LVU8289
 31597              	.LBB16576:
 31598              	.LBI16576:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31599              		.loc 4 89 7 view .LVU8290
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31600              		.loc 4 89 7 is_stmt 0 view .LVU8291
 31601              	.LBE16576:
 31602              	.LBE16575:
  27:alohal/filesystem/filesystem.cpp ****     }
 31603              		.loc 17 27 9 is_stmt 1 view .LVU8292
  27:alohal/filesystem/filesystem.cpp ****     }
 31604              		.loc 17 27 16 is_stmt 0 view .LVU8293
 31605 0180 1424     		movs	r4, #20
 31606 0182 5FE0     		b	.L625
 31607              	.LVL2137:
 31608              	.L651:
 31609              	.LBB16577:
 31610              	.LBB16385:
ARM GAS  /tmp/ccL95Edz.s 			page 964


 31611              	.LBB16378:
 31612              	.LBB16377:
 31613              	.LBB16376:
 31614              	.LBB16375:
 31615              	.LBB16374:
 31616              	.LBB16348:
 31617              	.LBB16347:
 31618              	.LBB16346:
 31619              	.LBB16345:
 31620              	.LBB16344:
 31621              	.LBB16343:
 31622              	.LBB16342:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31623              		.loc 4 105 26 view .LVU8294
 31624 0184 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 31625              	.LVL2138:
 31626              	.L645:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31627              		.loc 4 105 26 view .LVU8295
 31628              	.LBE16342:
 31629              	.LBE16343:
 31630              	.LBE16344:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 31631              		.loc 11 343 18 view .LVU8296
 31632 0188 0024     		movs	r4, #0
 31633 018a BAE7     		b	.L631
 31634              	.LVL2139:
 31635              	.L652:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 31636              		.loc 11 343 18 view .LVU8297
 31637              	.LBE16345:
 31638              	.LBE16346:
 31639              	.LBE16347:
 31640              	.LBE16348:
 31641              	.LBE16374:
 31642              	.LBE16375:
 31643              	.LBE16376:
 31644              	.LBE16377:
 31645              	.LBE16378:
 31646              	.LBE16385:
 31647              	.LBB16386:
 31648              	.LBB16387:
 31649              	.LBB16388:
 31650              	.LBB16389:
 31651              	.LBB16390:
 31652              	.LBB16391:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 31653              		.loc 2 323 24 view .LVU8298
 31654 018c 3848     		ldr	r0, .L653+20
 31655 018e FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 31656              	.LVL2140:
 31657              	.L637:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 31658              		.loc 2 323 24 view .LVU8299
 31659              	.LBE16391:
 31660              	.LBE16390:
 31661              	.LBE16389:
ARM GAS  /tmp/ccL95Edz.s 			page 965


 31662              	.LBE16388:
 31663              	.LBE16387:
 31664              	.LBE16386:
 31665              	.LBB16423:
 31666              	.LBB16424:
 31667              	.LBI16424:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31668              		.loc 2 150 14 is_stmt 1 view .LVU8300
 31669              	.LBB16425:
 31670              	.LBI16425:
 31671              		.loc 5 153 7 view .LVU8301
 31672              	.LBB16426:
 31673              	.LBI16426:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31674              		.loc 4 89 7 view .LVU8302
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31675              		.loc 4 89 7 is_stmt 0 view .LVU8303
 31676              	.LBE16426:
 31677              	.LBE16425:
 31678              	.LBE16424:
 31679              	.LBE16423:
  31:alohal/filesystem/filesystem.cpp ****         output += entry->Name() + "\r\n";
 31680              		.loc 17 31 5 is_stmt 1 view .LVU8304
 31681              	.LBB16438:
 31682              	.LBI16438:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 31683              		.loc 13 827 7 view .LVU8305
 31684              	.LBB16439:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 31685              		.loc 13 829 2 is_stmt 0 view .LVU8306
 31686 0192 2B1D     		adds	r3, r5, #4
 31687              	.LVL2141:
 31688              	.L638:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 31689              		.loc 13 829 2 view .LVU8307
 31690              	.LBE16439:
 31691              	.LBE16438:
  31:alohal/filesystem/filesystem.cpp ****         output += entry->Name() + "\r\n";
 31692              		.loc 17 31 46 is_stmt 1 discriminator 4 view .LVU8308
 31693              	.LBB16440:
 31694              	.LBI16440:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 31695              		.loc 13 907 5 discriminator 4 view .LVU8309
 31696              	.LBB16441:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 31697              		.loc 13 910 27 is_stmt 0 discriminator 4 view .LVU8310
 31698 0194 1D46     		mov	r5, r3
 31699              	.LVL2142:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 31700              		.loc 13 910 27 discriminator 4 view .LVU8311
 31701              	.LBE16441:
 31702              	.LBE16440:
  31:alohal/filesystem/filesystem.cpp ****         output += entry->Name() + "\r\n";
 31703              		.loc 17 31 46 discriminator 4 view .LVU8312
 31704 0196 9C42     		cmp	r4, r3
 31705 0198 35D0     		beq	.L634
  31:alohal/filesystem/filesystem.cpp ****         output += entry->Name() + "\r\n";
ARM GAS  /tmp/ccL95Edz.s 			page 966


 31706              		.loc 17 31 46 view .LVU8313
 31707 019a 1B68     		ldr	r3, [r3]
 31708              	.LVL2143:
  32:alohal/filesystem/filesystem.cpp ****     }
 31709              		.loc 17 32 9 is_stmt 1 view .LVU8314
 31710              	.LBB16442:
 31711              	.LBI16442:
  51:alohal/filesystem/entry.hpp **** 
 31712              		.loc 1 51 25 view .LVU8315
 31713              	.LBE16442:
 31714              	.LBE16577:
  51:alohal/filesystem/entry.hpp **** 
 31715              		.loc 1 51 33 view .LVU8316
 31716              	.LBB16578:
 31717              	.LBB16467:
 31718              	.LBB16443:
 31719              	.LBI16443:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 31720              		.loc 2 448 7 view .LVU8317
 31721              	.LBB16444:
 31722              	.LBB16445:
 31723              	.LBI16445:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31724              		.loc 2 190 7 view .LVU8318
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31725              		.loc 2 190 7 is_stmt 0 view .LVU8319
 31726              	.LBE16445:
 31727              	.LBB16446:
 31728              	.LBI16446:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 31729              		.loc 2 290 7 is_stmt 1 view .LVU8320
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 31730              		.loc 2 290 7 is_stmt 0 view .LVU8321
 31731              	.LBE16446:
 31732              	.LBB16447:
 31733              	.LBI16447:
 31734              		.loc 19 97 19 is_stmt 1 view .LVU8322
 31735              	.LBB16448:
 31736              	.LBI16448:
 31737              		.loc 3 514 7 view .LVU8323
 31738              	.LBB16449:
 31739              	.LBI16449:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31740              		.loc 5 141 7 view .LVU8324
 31741              	.LBB16450:
 31742              	.LBI16450:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31743              		.loc 4 83 7 view .LVU8325
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31744              		.loc 4 83 7 is_stmt 0 view .LVU8326
 31745              	.LBE16450:
 31746              	.LBE16449:
 31747              	.LBE16448:
 31748              	.LBE16447:
 31749              	.LBB16451:
 31750              	.LBI16451:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
ARM GAS  /tmp/ccL95Edz.s 			page 967


 31751              		.loc 2 159 2 is_stmt 1 view .LVU8327
 31752              	.LBB16452:
 31753              	.LBB16453:
 31754              	.LBI16453:
 31755              		.loc 9 99 5 view .LVU8328
 31756              		.loc 9 99 5 is_stmt 0 view .LVU8329
 31757              	.LBE16453:
 31758              	.LBB16454:
 31759              	.LBI16454:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31760              		.loc 5 141 7 is_stmt 1 view .LVU8330
 31761              	.LBB16455:
 31762              	.LBI16455:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31763              		.loc 4 83 7 view .LVU8331
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31764              		.loc 4 83 7 is_stmt 0 view .LVU8332
 31765              	.LBE16455:
 31766              	.LBE16454:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 31767              		.loc 2 160 46 view .LVU8333
 31768 019c 29AA     		add	r2, sp, #164
 31769              	.LVL2144:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 31770              		.loc 2 160 46 view .LVU8334
 31771 019e 2792     		str	r2, [sp, #156]
 31772              	.LVL2145:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 31773              		.loc 2 160 46 view .LVU8335
 31774              	.LBE16452:
 31775              	.LBE16451:
 31776              	.LBB16456:
 31777              	.LBI16456:
 31778              		.loc 5 153 7 is_stmt 1 view .LVU8336
 31779              	.LBB16457:
 31780              	.LBI16457:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31781              		.loc 4 89 7 view .LVU8337
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31782              		.loc 4 89 7 is_stmt 0 view .LVU8338
 31783              	.LBE16457:
 31784              	.LBE16456:
 31785              	.LBB16458:
 31786              	.LBI16458:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31787              		.loc 2 186 7 is_stmt 1 view .LVU8339
 31788              	.LBB16459:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31789              		.loc 2 187 28 is_stmt 0 view .LVU8340
 31790 01a0 9968     		ldr	r1, [r3, #8]
 31791              	.LVL2146:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31792              		.loc 2 187 28 view .LVU8341
 31793              	.LBE16459:
 31794              	.LBE16458:
 31795              	.LBB16460:
 31796              	.LBI16460:
ARM GAS  /tmp/ccL95Edz.s 			page 968


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31797              		.loc 2 186 7 is_stmt 1 view .LVU8342
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31798              		.loc 2 186 7 is_stmt 0 view .LVU8343
 31799              	.LBE16460:
 31800              	.LBB16461:
 31801              	.LBI16461:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 31802              		.loc 2 936 7 is_stmt 1 view .LVU8344
 31803              	.LBB16462:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31804              		.loc 2 937 16 is_stmt 0 view .LVU8345
 31805 01a2 DA68     		ldr	r2, [r3, #12]
 31806              	.LVL2147:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31807              		.loc 2 937 16 view .LVU8346
 31808              	.LBE16462:
 31809              	.LBE16461:
 31810              	.LBB16463:
 31811              	.LBI16463:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 31812              		.loc 2 263 9 is_stmt 1 view .LVU8347
 31813              	.LBB16464:
 31814              	.LBB16465:
 31815              	.LBI16465:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 31816              		.loc 2 243 9 view .LVU8348
 31817              	.LBB16466:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31818              		.loc 2 247 11 is_stmt 0 view .LVU8349
 31819 01a4 4FF00003 		mov	r3, #0
 31820              	.LVL2148:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31821              		.loc 2 247 11 view .LVU8350
 31822 01a8 0A44     		add	r2, r2, r1
 31823              	.LVL2149:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31824              		.loc 2 247 11 view .LVU8351
 31825 01aa 27A8     		add	r0, sp, #156
 31826              	.LVL2150:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31827              		.loc 2 247 11 view .LVU8352
 31828 01ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 31829              	.LVL2151:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31830              		.loc 2 247 11 view .LVU8353
 31831              	.LBE16466:
 31832              	.LBE16465:
 31833              	.LBE16464:
 31834              	.LBE16463:
 31835              	.LBE16444:
 31836              	.LBE16443:
 31837              	.LBE16467:
 31838              	.LBB16468:
 31839              	.LBI16386:
6057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 31840              		.loc 2 6057 5 is_stmt 1 view .LVU8354
ARM GAS  /tmp/ccL95Edz.s 			page 969


 31841              	.LBB16421:
 31842              	.LBB16396:
 31843              	.LBI16396:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 31844              		.loc 2 448 7 view .LVU8355
 31845              	.LBB16397:
 31846              	.LBB16398:
 31847              	.LBI16398:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31848              		.loc 2 190 7 view .LVU8356
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31849              		.loc 2 190 7 is_stmt 0 view .LVU8357
 31850              	.LBE16398:
 31851              	.LBB16399:
 31852              	.LBI16399:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 31853              		.loc 2 290 7 is_stmt 1 view .LVU8358
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 31854              		.loc 2 290 7 is_stmt 0 view .LVU8359
 31855              	.LBE16399:
 31856              	.LBB16400:
 31857              	.LBI16400:
 31858              		.loc 19 97 19 is_stmt 1 view .LVU8360
 31859              	.LBB16401:
 31860              	.LBI16401:
 31861              		.loc 3 514 7 view .LVU8361
 31862              	.LBB16402:
 31863              	.LBI16402:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31864              		.loc 5 141 7 view .LVU8362
 31865              	.LBB16403:
 31866              	.LBI16403:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31867              		.loc 4 83 7 view .LVU8363
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31868              		.loc 4 83 7 is_stmt 0 view .LVU8364
 31869              	.LBE16403:
 31870              	.LBE16402:
 31871              	.LBE16401:
 31872              	.LBE16400:
 31873              	.LBB16404:
 31874              	.LBI16404:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 31875              		.loc 2 159 2 is_stmt 1 view .LVU8365
 31876              	.LBB16405:
 31877              	.LBB16406:
 31878              	.LBI16406:
 31879              		.loc 9 99 5 view .LVU8366
 31880              		.loc 9 99 5 is_stmt 0 view .LVU8367
 31881              	.LBE16406:
 31882              	.LBB16407:
 31883              	.LBI16407:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 31884              		.loc 5 141 7 is_stmt 1 view .LVU8368
 31885              	.LBB16408:
 31886              	.LBI16408:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccL95Edz.s 			page 970


 31887              		.loc 4 83 7 view .LVU8369
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31888              		.loc 4 83 7 is_stmt 0 view .LVU8370
 31889              	.LBE16408:
 31890              	.LBE16407:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 31891              		.loc 2 160 46 view .LVU8371
 31892 01b0 23AB     		add	r3, sp, #140
 31893              	.LVL2152:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 31894              		.loc 2 160 46 view .LVU8372
 31895 01b2 2193     		str	r3, [sp, #132]
 31896              	.LVL2153:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 31897              		.loc 2 160 46 view .LVU8373
 31898              	.LBE16405:
 31899              	.LBE16404:
 31900              	.LBB16409:
 31901              	.LBI16409:
 31902              		.loc 5 153 7 is_stmt 1 view .LVU8374
 31903              	.LBB16410:
 31904              	.LBI16410:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31905              		.loc 4 89 7 view .LVU8375
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 31906              		.loc 4 89 7 is_stmt 0 view .LVU8376
 31907              	.LBE16410:
 31908              	.LBE16409:
 31909              	.LBB16411:
 31910              	.LBI16411:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31911              		.loc 2 186 7 is_stmt 1 view .LVU8377
 31912              	.LBB16412:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31913              		.loc 2 187 28 is_stmt 0 view .LVU8378
 31914 01b4 2799     		ldr	r1, [sp, #156]
 31915              	.LVL2154:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 31916              		.loc 2 187 28 view .LVU8379
 31917              	.LBE16412:
 31918              	.LBE16411:
 31919              	.LBB16413:
 31920              	.LBI16413:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31921              		.loc 2 186 7 is_stmt 1 view .LVU8380
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 31922              		.loc 2 186 7 is_stmt 0 view .LVU8381
 31923              	.LBE16413:
 31924              	.LBB16414:
 31925              	.LBI16414:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 31926              		.loc 2 936 7 is_stmt 1 view .LVU8382
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 31927              		.loc 2 936 7 is_stmt 0 view .LVU8383
 31928              	.LBE16414:
 31929              	.LBB16415:
 31930              	.LBI16415:
ARM GAS  /tmp/ccL95Edz.s 			page 971


 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 31931              		.loc 2 263 9 is_stmt 1 view .LVU8384
 31932              	.LBB16416:
 31933              	.LBB16417:
 31934              	.LBI16417:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 31935              		.loc 2 243 9 view .LVU8385
 31936              	.LBB16418:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31937              		.loc 2 247 11 is_stmt 0 view .LVU8386
 31938 01b6 4FF00003 		mov	r3, #0
 31939 01ba 289A     		ldr	r2, [sp, #160]
 31940 01bc 0A44     		add	r2, r2, r1
 31941              	.LVL2155:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31942              		.loc 2 247 11 view .LVU8387
 31943 01be 21A8     		add	r0, sp, #132
 31944              	.LVL2156:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31945              		.loc 2 247 11 view .LVU8388
 31946 01c0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 31947              	.LVL2157:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 31948              		.loc 2 247 11 view .LVU8389
 31949              	.LBE16418:
 31950              	.LBE16417:
 31951              	.LBE16416:
 31952              	.LBE16415:
 31953              	.LBE16397:
 31954              	.LBE16396:
 31955              	.LBB16419:
 31956              	.LBI16388:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31957              		.loc 2 1263 7 is_stmt 1 view .LVU8390
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31958              		.loc 2 1263 7 is_stmt 0 view .LVU8391
 31959              	.LBE16419:
 31960              	.LBE16421:
 31961              	.LBE16468:
 31962              	.LBE16578:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 31963              		.loc 8 332 2 is_stmt 1 view .LVU8392
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 31964              		.loc 8 335 2 view .LVU8393
 31965              	.LBB16579:
 31966              	.LBB16469:
 31967              	.LBB16422:
 31968              	.LBB16420:
 31969              	.LBB16395:
 31970              	.LBB16394:
 31971              	.LBI16390:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 31972              		.loc 2 320 7 view .LVU8394
 31973              	.LBB16393:
 31974              	.LBB16392:
 31975              	.LBI16392:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
ARM GAS  /tmp/ccL95Edz.s 			page 972


 31976              		.loc 2 930 7 view .LVU8395
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 31977              		.loc 2 930 7 is_stmt 0 view .LVU8396
 31978              	.LBE16392:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 31979              		.loc 2 322 2 view .LVU8397
 31980 01c4 229B     		ldr	r3, [sp, #136]
 31981 01c6 C3F17F53 		rsb	r3, r3, #1069547520
 31982 01ca 03F57F13 		add	r3, r3, #4177920
 31983 01ce 03F57F53 		add	r3, r3, #16320
 31984 01d2 3F33     		adds	r3, r3, #63
 31985 01d4 012B     		cmp	r3, #1
 31986 01d6 D9D9     		bls	.L652
 31987              	.LVL2158:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 31988              		.loc 2 322 2 view .LVU8398
 31989              	.LBE16393:
 31990              	.LBE16394:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 31991              		.loc 2 1268 27 view .LVU8399
 31992 01d8 0222     		movs	r2, #2
 31993 01da 2649     		ldr	r1, .L653+24
 31994 01dc 21A8     		add	r0, sp, #132
 31995              	.LVL2159:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 31996              		.loc 2 1268 27 view .LVU8400
 31997 01de FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 31998              	.LVL2160:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 31999              		.loc 2 1268 27 view .LVU8401
 32000              	.LBE16395:
 32001              	.LBE16420:
 32002              	.LBE16422:
 32003              	.LBE16469:
 32004              	.LBB16470:
 32005              	.LBI16470:
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
 32006              		.loc 2 1168 7 is_stmt 1 view .LVU8402
 32007              	.LBB16471:
 32008              	.LBI16471:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 32009              		.loc 2 1221 7 view .LVU8403
 32010              	.LBB16472:
 32011              	.LBB16473:
 32012              	.LBI16473:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32013              		.loc 2 186 7 view .LVU8404
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32014              		.loc 2 186 7 is_stmt 0 view .LVU8405
 32015              	.LBE16473:
 32016              	.LBB16474:
 32017              	.LBI16474:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 32018              		.loc 2 930 7 is_stmt 1 view .LVU8406
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 32019              		.loc 2 930 7 is_stmt 0 view .LVU8407
 32020              	.LBE16474:
ARM GAS  /tmp/ccL95Edz.s 			page 973


1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32021              		.loc 2 1222 55 view .LVU8408
 32022 01e2 229A     		ldr	r2, [sp, #136]
 32023 01e4 2199     		ldr	r1, [sp, #132]
 32024 01e6 6846     		mov	r0, sp
 32025 01e8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 32026              	.LVL2161:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32027              		.loc 2 1222 55 view .LVU8409
 32028              	.LBE16472:
 32029              	.LBE16471:
 32030              	.LBE16470:
 32031              	.LBB16475:
 32032              	.LBI16475:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 32033              		.loc 2 657 7 is_stmt 1 view .LVU8410
 32034              	.LBB16476:
 32035              	.LBI16476:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32036              		.loc 2 229 7 view .LVU8411
 32037              	.LBB16477:
 32038              	.LBB16478:
 32039              	.LBI16478:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 32040              		.loc 2 221 7 view .LVU8412
 32041              	.LBB16479:
 32042              	.LBI16479:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32043              		.loc 2 186 7 view .LVU8413
 32044              	.LBB16480:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32045              		.loc 2 187 28 is_stmt 0 view .LVU8414
 32046 01ec 2198     		ldr	r0, [sp, #132]
 32047              	.LVL2162:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32048              		.loc 2 187 28 view .LVU8415
 32049              	.LBE16480:
 32050              	.LBE16479:
 32051              	.LBB16481:
 32052              	.LBI16481:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32053              		.loc 2 200 7 is_stmt 1 view .LVU8416
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32054              		.loc 2 200 7 is_stmt 0 view .LVU8417
 32055              	.LBE16481:
 32056              	.LBE16478:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 32057              		.loc 2 231 2 view .LVU8418
 32058 01ee 23AB     		add	r3, sp, #140
 32059 01f0 9842     		cmp	r0, r3
 32060 01f2 01D0     		beq	.L636
 32061              	.LVL2163:
 32062              	.LBB16482:
 32063              	.LBI16482:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 32064              		.loc 2 236 7 is_stmt 1 view .LVU8419
 32065              	.LBB16483:
ARM GAS  /tmp/ccL95Edz.s 			page 974


 32066              	.LBB16484:
 32067              	.LBI16484:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 32068              		.loc 3 469 7 view .LVU8420
 32069              	.LBB16485:
 32070              	.LBI16485:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 32071              		.loc 4 119 7 view .LVU8421
 32072              	.LBB16486:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32073              		.loc 4 128 19 is_stmt 0 view .LVU8422
 32074 01f4 FFF7FEFF 		bl	_ZdlPv
 32075              	.LVL2164:
 32076              	.L636:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32077              		.loc 4 128 19 view .LVU8423
 32078              	.LBE16486:
 32079              	.LBE16485:
 32080              	.LBE16484:
 32081              	.LBE16483:
 32082              	.LBE16482:
 32083              	.LBE16477:
 32084              	.LBE16476:
 32085              	.LBB16487:
 32086              	.LBI16487:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32087              		.loc 2 150 14 is_stmt 1 view .LVU8424
 32088              	.LBB16488:
 32089              	.LBI16488:
 32090              		.loc 5 153 7 view .LVU8425
 32091              	.LBB16489:
 32092              	.LBI16489:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32093              		.loc 4 89 7 view .LVU8426
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32094              		.loc 4 89 7 is_stmt 0 view .LVU8427
 32095              	.LBE16489:
 32096              	.LBE16488:
 32097              	.LBE16487:
 32098              	.LBE16475:
 32099              	.LBB16490:
 32100              	.LBI16423:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 32101              		.loc 2 657 7 is_stmt 1 view .LVU8428
 32102              	.LBB16427:
 32103              	.LBI16427:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32104              		.loc 2 229 7 view .LVU8429
 32105              	.LBB16428:
 32106              	.LBB16429:
 32107              	.LBI16429:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 32108              		.loc 2 221 7 view .LVU8430
 32109              	.LBB16430:
 32110              	.LBI16430:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32111              		.loc 2 186 7 view .LVU8431
ARM GAS  /tmp/ccL95Edz.s 			page 975


 32112              	.LBB16431:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32113              		.loc 2 187 28 is_stmt 0 view .LVU8432
 32114 01f8 2798     		ldr	r0, [sp, #156]
 32115              	.LVL2165:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32116              		.loc 2 187 28 view .LVU8433
 32117              	.LBE16431:
 32118              	.LBE16430:
 32119              	.LBB16432:
 32120              	.LBI16432:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32121              		.loc 2 200 7 is_stmt 1 view .LVU8434
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32122              		.loc 2 200 7 is_stmt 0 view .LVU8435
 32123              	.LBE16432:
 32124              	.LBE16429:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 32125              		.loc 2 231 2 view .LVU8436
 32126 01fa 29AB     		add	r3, sp, #164
 32127 01fc 9842     		cmp	r0, r3
 32128 01fe C8D0     		beq	.L637
 32129              	.LVL2166:
 32130              	.LBB16433:
 32131              	.LBI16433:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 32132              		.loc 2 236 7 is_stmt 1 view .LVU8437
 32133              	.LBB16434:
 32134              	.LBB16435:
 32135              	.LBI16435:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 32136              		.loc 3 469 7 view .LVU8438
 32137              	.LBB16436:
 32138              	.LBI16436:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 32139              		.loc 4 119 7 view .LVU8439
 32140              	.LBB16437:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32141              		.loc 4 128 19 is_stmt 0 view .LVU8440
 32142 0200 FFF7FEFF 		bl	_ZdlPv
 32143              	.LVL2167:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32144              		.loc 4 128 19 view .LVU8441
 32145              	.LBE16437:
 32146              	.LBE16436:
 32147              	.LBE16435:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32148              		.loc 2 237 79 view .LVU8442
 32149 0204 C5E7     		b	.L637
 32150              	.LVL2168:
 32151              	.L634:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32152              		.loc 2 237 79 view .LVU8443
 32153              	.LBE16434:
 32154              	.LBE16433:
 32155              	.LBE16428:
 32156              	.LBE16427:
ARM GAS  /tmp/ccL95Edz.s 			page 976


 32157              	.LBE16490:
 32158              	.LBB16491:
 32159              	.LBI16491:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 32160              		.loc 11 675 7 is_stmt 1 view .LVU8444
 32161              	.LBB16492:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 32162              		.loc 11 677 15 is_stmt 0 view .LVU8445
 32163 0206 3398     		ldr	r0, [sp, #204]
 32164              	.LVL2169:
 32165              	.LBB16493:
 32166              	.LBI16493:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 32167              		.loc 11 273 7 is_stmt 1 view .LVU8446
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 32168              		.loc 11 273 7 is_stmt 0 view .LVU8447
 32169              	.LBE16493:
 32170              	.LBB16494:
 32171              	.LBI16494:
 32172              		.loc 22 203 5 is_stmt 1 view .LVU8448
 32173              		.loc 22 203 5 is_stmt 0 view .LVU8449
 32174              	.LBE16494:
 32175              	.LBB16495:
 32176              	.LBI16495:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 32177              		.loc 11 330 7 is_stmt 1 view .LVU8450
 32178              	.LBB16496:
 32179              	.LBI16496:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 32180              		.loc 11 347 7 view .LVU8451
 32181              	.LBB16497:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 32182              		.loc 11 350 2 is_stmt 0 view .LVU8452
 32183 0208 08B1     		cbz	r0, .L639
 32184              	.LVL2170:
 32185              	.LBB16498:
 32186              	.LBI16498:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 32187              		.loc 3 469 7 is_stmt 1 view .LVU8453
 32188              	.LBB16499:
 32189              	.LBB16500:
 32190              	.LBI16500:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 32191              		.loc 4 119 7 view .LVU8454
 32192              	.LBB16501:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32193              		.loc 4 128 19 is_stmt 0 view .LVU8455
 32194 020a FFF7FEFF 		bl	_ZdlPv
 32195              	.LVL2171:
 32196              	.L639:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32197              		.loc 4 128 19 view .LVU8456
 32198              	.LBE16501:
 32199              	.LBE16500:
 32200              	.LBE16499:
 32201              	.LBE16498:
 32202              	.LBE16497:
ARM GAS  /tmp/ccL95Edz.s 			page 977


 32203              	.LBE16496:
 32204              	.LBB16502:
 32205              	.LBI16502:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 32206              		.loc 11 125 14 is_stmt 1 view .LVU8457
 32207              	.LBB16503:
 32208              	.LBI16503:
 32209              		.loc 5 153 7 view .LVU8458
 32210              	.LBB16504:
 32211              	.LBI16504:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32212              		.loc 4 89 7 view .LVU8459
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32213              		.loc 4 89 7 is_stmt 0 view .LVU8460
 32214              	.LBE16504:
 32215              	.LBE16503:
 32216              	.LBE16502:
 32217              	.LBE16495:
 32218              	.LBE16492:
 32219              	.LBE16491:
 32220              	.LBE16579:
  34:alohal/filesystem/filesystem.cpp ****     return 0;
 32221              		.loc 17 34 5 is_stmt 1 view .LVU8461
 32222 020e B568     		ldr	r5, [r6, #8]
 32223              	.LVL2172:
 32224              	.LBB16580:
 32225              	.LBI16580:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 32226              		.loc 2 448 7 view .LVU8462
 32227              	.LBB16581:
 32228              	.LBB16582:
 32229              	.LBB16583:
 32230              	.LBI16583:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32231              		.loc 2 190 7 view .LVU8463
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32232              		.loc 2 190 7 is_stmt 0 view .LVU8464
 32233              	.LBE16583:
 32234              	.LBB16584:
 32235              	.LBI16584:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 32236              		.loc 2 290 7 is_stmt 1 view .LVU8465
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 32237              		.loc 2 290 7 is_stmt 0 view .LVU8466
 32238              	.LBE16584:
 32239              	.LBB16585:
 32240              	.LBI16585:
 32241              		.loc 19 97 19 is_stmt 1 view .LVU8467
 32242              	.LBB16586:
 32243              	.LBI16586:
 32244              		.loc 3 514 7 view .LVU8468
 32245              	.LBB16587:
 32246              	.LBI16587:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 32247              		.loc 5 141 7 view .LVU8469
 32248              	.LBB16588:
 32249              	.LBI16588:
ARM GAS  /tmp/ccL95Edz.s 			page 978


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32250              		.loc 4 83 7 view .LVU8470
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32251              		.loc 4 83 7 is_stmt 0 view .LVU8471
 32252              	.LBE16588:
 32253              	.LBE16587:
 32254              	.LBE16586:
 32255              	.LBE16585:
 32256              	.LBB16589:
 32257              	.LBI16589:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 32258              		.loc 2 159 2 is_stmt 1 view .LVU8472
 32259              	.LBB16590:
 32260              	.LBB16591:
 32261              	.LBB16592:
 32262              	.LBI16592:
 32263              		.loc 9 99 5 view .LVU8473
 32264              		.loc 9 99 5 is_stmt 0 view .LVU8474
 32265              	.LBE16592:
 32266              	.LBB16593:
 32267              	.LBI16593:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 32268              		.loc 5 141 7 is_stmt 1 view .LVU8475
 32269              	.LBB16594:
 32270              	.LBI16594:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32271              		.loc 4 83 7 view .LVU8476
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32272              		.loc 4 83 7 is_stmt 0 view .LVU8477
 32273              	.LBE16594:
 32274              	.LBE16593:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 32275              		.loc 2 160 46 view .LVU8478
 32276 0210 2FAC     		add	r4, sp, #188
 32277              	.LVL2173:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 32278              		.loc 2 160 46 view .LVU8479
 32279 0212 2D94     		str	r4, [sp, #180]
 32280              	.LVL2174:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 32281              		.loc 2 160 46 view .LVU8480
 32282              	.LBE16591:
 32283              	.LBE16590:
 32284              	.LBE16589:
 32285              	.LBB16595:
 32286              	.LBI16595:
 32287              		.loc 5 153 7 is_stmt 1 view .LVU8481
 32288              	.LBB16596:
 32289              	.LBI16596:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32290              		.loc 4 89 7 view .LVU8482
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32291              		.loc 4 89 7 is_stmt 0 view .LVU8483
 32292              	.LBE16596:
 32293              	.LBE16595:
 32294              	.LBB16597:
 32295              	.LBI16597:
ARM GAS  /tmp/ccL95Edz.s 			page 979


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32296              		.loc 2 186 7 is_stmt 1 view .LVU8484
 32297              	.LBB16598:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32298              		.loc 2 187 28 is_stmt 0 view .LVU8485
 32299 0214 0099     		ldr	r1, [sp]
 32300              	.LVL2175:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32301              		.loc 2 187 28 view .LVU8486
 32302              	.LBE16598:
 32303              	.LBE16597:
 32304              	.LBB16599:
 32305              	.LBI16599:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32306              		.loc 2 186 7 is_stmt 1 view .LVU8487
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32307              		.loc 2 186 7 is_stmt 0 view .LVU8488
 32308              	.LBE16599:
 32309              	.LBB16600:
 32310              	.LBI16600:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 32311              		.loc 2 936 7 is_stmt 1 view .LVU8489
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 32312              		.loc 2 936 7 is_stmt 0 view .LVU8490
 32313              	.LBE16600:
 32314              	.LBB16601:
 32315              	.LBI16601:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 32316              		.loc 2 263 9 is_stmt 1 view .LVU8491
 32317              	.LBB16602:
 32318              	.LBB16603:
 32319              	.LBI16603:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 32320              		.loc 2 243 9 view .LVU8492
 32321              	.LBB16604:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 32322              		.loc 2 247 11 is_stmt 0 view .LVU8493
 32323 0216 4FF00003 		mov	r3, #0
 32324              	.LVL2176:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 32325              		.loc 2 247 11 view .LVU8494
 32326 021a 019A     		ldr	r2, [sp, #4]
 32327 021c 0A44     		add	r2, r2, r1
 32328              	.LVL2177:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 32329              		.loc 2 247 11 view .LVU8495
 32330 021e 2DA8     		add	r0, sp, #180
 32331              	.LVL2178:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 32332              		.loc 2 247 11 view .LVU8496
 32333 0220 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 32334              	.LVL2179:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 32335              		.loc 2 247 11 view .LVU8497
 32336              	.LBE16604:
 32337              	.LBE16603:
 32338              	.LBE16602:
ARM GAS  /tmp/ccL95Edz.s 			page 980


 32339              	.LBE16601:
 32340              	.LBE16582:
 32341              	.LBE16581:
 32342              	.LBE16580:
  34:alohal/filesystem/filesystem.cpp ****     return 0;
 32343              		.loc 17 34 15 view .LVU8498
 32344 0224 2DA9     		add	r1, sp, #180
 32345 0226 2846     		mov	r0, r5
 32346 0228 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 32347              	.LVL2180:
 32348              	.LBB16605:
 32349              	.LBI16605:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 32350              		.loc 2 657 7 is_stmt 1 view .LVU8499
 32351              	.LBB16606:
 32352              	.LBI16606:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32353              		.loc 2 229 7 view .LVU8500
 32354              	.LBB16607:
 32355              	.LBB16608:
 32356              	.LBI16608:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 32357              		.loc 2 221 7 view .LVU8501
 32358              	.LBB16609:
 32359              	.LBI16609:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32360              		.loc 2 186 7 view .LVU8502
 32361              	.LBB16610:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32362              		.loc 2 187 28 is_stmt 0 view .LVU8503
 32363 022c 2D98     		ldr	r0, [sp, #180]
 32364              	.LVL2181:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32365              		.loc 2 187 28 view .LVU8504
 32366              	.LBE16610:
 32367              	.LBE16609:
 32368              	.LBB16611:
 32369              	.LBI16611:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32370              		.loc 2 200 7 is_stmt 1 view .LVU8505
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32371              		.loc 2 200 7 is_stmt 0 view .LVU8506
 32372              	.LBE16611:
 32373              	.LBE16608:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 32374              		.loc 2 231 2 view .LVU8507
 32375 022e A042     		cmp	r0, r4
 32376 0230 01D0     		beq	.L640
 32377              	.LVL2182:
 32378              	.LBB16612:
 32379              	.LBI16612:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 32380              		.loc 2 236 7 is_stmt 1 view .LVU8508
 32381              	.LBB16613:
 32382              	.LBB16614:
 32383              	.LBI16614:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  /tmp/ccL95Edz.s 			page 981


 32384              		.loc 3 469 7 view .LVU8509
 32385              	.LBB16615:
 32386              	.LBI16615:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 32387              		.loc 4 119 7 view .LVU8510
 32388              	.LBB16616:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32389              		.loc 4 128 19 is_stmt 0 view .LVU8511
 32390 0232 FFF7FEFF 		bl	_ZdlPv
 32391              	.LVL2183:
 32392              	.L640:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32393              		.loc 4 128 19 view .LVU8512
 32394              	.LBE16616:
 32395              	.LBE16615:
 32396              	.LBE16614:
 32397              	.LBE16613:
 32398              	.LBE16612:
 32399              	.LBE16607:
 32400              	.LBE16606:
 32401              	.LBB16617:
 32402              	.LBI16617:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32403              		.loc 2 150 14 is_stmt 1 view .LVU8513
 32404              	.LBB16618:
 32405              	.LBI16618:
 32406              		.loc 5 153 7 view .LVU8514
 32407              	.LBB16619:
 32408              	.LBI16619:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32409              		.loc 4 89 7 view .LVU8515
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32410              		.loc 4 89 7 is_stmt 0 view .LVU8516
 32411              	.LBE16619:
 32412              	.LBE16618:
 32413              	.LBE16617:
 32414              	.LBE16605:
  35:alohal/filesystem/filesystem.cpp **** }
 32415              		.loc 17 35 5 is_stmt 1 view .LVU8517
 32416              	.LBB16620:
 32417              	.LBI16620:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 32418              		.loc 2 657 7 view .LVU8518
 32419              	.LBB16621:
 32420              	.LBB16622:
 32421              	.LBB16623:
 32422              	.LBI16623:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32423              		.loc 2 229 7 view .LVU8519
 32424              	.LBB16624:
 32425              	.LBB16625:
 32426              	.LBI16625:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 32427              		.loc 2 221 7 view .LVU8520
 32428              	.LBB16626:
 32429              	.LBI16626:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccL95Edz.s 			page 982


 32430              		.loc 2 186 7 view .LVU8521
 32431              	.LBB16627:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32432              		.loc 2 187 28 is_stmt 0 view .LVU8522
 32433 0236 0098     		ldr	r0, [sp]
 32434              	.LVL2184:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32435              		.loc 2 187 28 view .LVU8523
 32436              	.LBE16627:
 32437              	.LBE16626:
 32438              	.LBB16628:
 32439              	.LBI16628:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32440              		.loc 2 200 7 is_stmt 1 view .LVU8524
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32441              		.loc 2 200 7 is_stmt 0 view .LVU8525
 32442              	.LBE16628:
 32443              	.LBE16625:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 32444              		.loc 2 231 2 view .LVU8526
 32445 0238 02AB     		add	r3, sp, #8
 32446 023a 9842     		cmp	r0, r3
 32447 023c 01D0     		beq	.L641
 32448              	.LVL2185:
 32449              	.LBB16629:
 32450              	.LBI16629:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 32451              		.loc 2 236 7 is_stmt 1 view .LVU8527
 32452              	.LBB16630:
 32453              	.LBB16631:
 32454              	.LBI16631:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 32455              		.loc 3 469 7 view .LVU8528
 32456              	.LBB16632:
 32457              	.LBI16632:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 32458              		.loc 4 119 7 view .LVU8529
 32459              	.LBB16633:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32460              		.loc 4 128 19 is_stmt 0 view .LVU8530
 32461 023e FFF7FEFF 		bl	_ZdlPv
 32462              	.LVL2186:
 32463              	.L641:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32464              		.loc 4 128 19 view .LVU8531
 32465              	.LBE16633:
 32466              	.LBE16632:
 32467              	.LBE16631:
 32468              	.LBE16630:
 32469              	.LBE16629:
 32470              	.LBE16624:
 32471              	.LBE16623:
 32472              	.LBB16634:
 32473              	.LBI16634:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32474              		.loc 2 150 14 is_stmt 1 view .LVU8532
 32475              	.LBB16635:
ARM GAS  /tmp/ccL95Edz.s 			page 983


 32476              	.LBI16635:
 32477              		.loc 5 153 7 view .LVU8533
 32478              	.LBB16636:
 32479              	.LBI16636:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32480              		.loc 4 89 7 view .LVU8534
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32481              		.loc 4 89 7 is_stmt 0 view .LVU8535
 32482              	.LBE16636:
 32483              	.LBE16635:
 32484              	.LBE16634:
 32485              	.LBE16622:
 32486              	.LBE16621:
 32487              	.LBE16620:
  35:alohal/filesystem/filesystem.cpp **** }
 32488              		.loc 17 35 12 view .LVU8536
 32489 0242 0024     		movs	r4, #0
 32490              	.LVL2187:
 32491              	.L625:
 32492              	.LBB16637:
 32493              	.LBI16637:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 32494              		.loc 2 657 7 is_stmt 1 view .LVU8537
 32495              	.LBB16638:
 32496              	.LBI16638:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32497              		.loc 2 229 7 view .LVU8538
 32498              	.LBB16639:
 32499              	.LBB16640:
 32500              	.LBI16640:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 32501              		.loc 2 221 7 view .LVU8539
 32502              	.LBB16641:
 32503              	.LBI16641:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 32504              		.loc 2 186 7 view .LVU8540
 32505              	.LBB16642:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32506              		.loc 2 187 28 is_stmt 0 view .LVU8541
 32507 0244 0698     		ldr	r0, [sp, #24]
 32508              	.LVL2188:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 32509              		.loc 2 187 28 view .LVU8542
 32510              	.LBE16642:
 32511              	.LBE16641:
 32512              	.LBB16643:
 32513              	.LBI16643:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32514              		.loc 2 200 7 is_stmt 1 view .LVU8543
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32515              		.loc 2 200 7 is_stmt 0 view .LVU8544
 32516              	.LBE16643:
 32517              	.LBE16640:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 32518              		.loc 2 231 2 view .LVU8545
 32519 0246 08AB     		add	r3, sp, #32
 32520 0248 9842     		cmp	r0, r3
ARM GAS  /tmp/ccL95Edz.s 			page 984


 32521 024a 01D0     		beq	.L616
 32522              	.LVL2189:
 32523              	.LBB16644:
 32524              	.LBI16644:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 32525              		.loc 2 236 7 is_stmt 1 view .LVU8546
 32526              	.LBB16645:
 32527              	.LBB16646:
 32528              	.LBI16646:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 32529              		.loc 3 469 7 view .LVU8547
 32530              	.LBB16647:
 32531              	.LBI16647:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 32532              		.loc 4 119 7 view .LVU8548
 32533              	.LBB16648:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32534              		.loc 4 128 19 is_stmt 0 view .LVU8549
 32535 024c FFF7FEFF 		bl	_ZdlPv
 32536              	.LVL2190:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 32537              		.loc 4 128 19 view .LVU8550
 32538              	.LBE16648:
 32539              	.LBE16647:
 32540              	.LBE16646:
 32541              	.LBE16645:
 32542              	.LBE16644:
 32543              	.LBE16639:
 32544              	.LBE16638:
 32545              	.LBB16649:
 32546              	.LBI16649:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 32547              		.loc 2 150 14 is_stmt 1 view .LVU8551
 32548              	.LBB16650:
 32549              	.LBI16650:
 32550              		.loc 5 153 7 view .LVU8552
 32551              	.LBB16651:
 32552              	.LBI16651:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32553              		.loc 4 89 7 view .LVU8553
 32554              	.L616:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 32555              		.loc 4 89 7 is_stmt 0 view .LVU8554
 32556              	.LBE16651:
 32557              	.LBE16650:
 32558              	.LBE16649:
 32559              	.LBE16637:
  36:alohal/filesystem/filesystem.cpp **** 
 32560              		.loc 17 36 1 view .LVU8555
 32561 0250 2046     		mov	r0, r4
 32562 0252 37B0     		add	sp, sp, #220
 32563              	.LCFI105:
 32564              		.cfi_remember_state
 32565              		.cfi_def_cfa_offset 20
 32566              		@ sp needed
 32567 0254 F0BD     		pop	{r4, r5, r6, r7, pc}
 32568              	.LVL2191:
ARM GAS  /tmp/ccL95Edz.s 			page 985


 32569              	.L644:
 32570              	.LCFI106:
 32571              		.cfi_restore_state
  16:alohal/filesystem/filesystem.cpp ****     }
 32572              		.loc 17 16 17 view .LVU8556
 32573 0256 4FF0FF34 		mov	r4, #-1
 32574 025a F3E7     		b	.L625
 32575              	.L654:
 32576              		.align	2
 32577              	.L653:
 32578 025c ABAAAAAA 		.word	-1431655765
 32579 0260 55555505 		.word	89478485
 32580 0264 18000000 		.word	.LC19
 32581 0268 31000000 		.word	.LC21+49
 32582 026c 25000000 		.word	.LC22+37
 32583 0270 00000000 		.word	.LC0
 32584 0274 30000000 		.word	.LC4
 32585              		.cfi_endproc
 32586              	.LFE3369:
 32588              		.weak	_ZTS12Command_base
 32589              		.section	.rodata._ZTS12Command_base,"aG",%progbits,_ZTS12Command_base,comdat
 32590              		.align	2
 32593              	_ZTS12Command_base:
 32594 0000 3132436F 		.ascii	"12Command_base\000"
 32594      6D6D616E 
 32594      645F6261 
 32594      736500
 32595              		.weak	_ZTI12Command_base
 32596              		.section	.rodata._ZTI12Command_base,"aG",%progbits,_ZTI12Command_base,comdat
 32597              		.align	2
 32600              	_ZTI12Command_base:
 32601 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 32602 0004 00000000 		.word	_ZTS12Command_base
 32603              		.weak	_ZTS8FS_entry
 32604              		.section	.rodata._ZTS8FS_entry,"aG",%progbits,_ZTS8FS_entry,comdat
 32605              		.align	2
 32608              	_ZTS8FS_entry:
 32609 0000 3846535F 		.ascii	"8FS_entry\000"
 32609      656E7472 
 32609      7900
 32610              		.weak	_ZTI8FS_entry
 32611              		.section	.rodata._ZTI8FS_entry,"aG",%progbits,_ZTI8FS_entry,comdat
 32612              		.align	2
 32615              	_ZTI8FS_entry:
 32616 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 32617 0004 00000000 		.word	_ZTS8FS_entry
 32618              		.weak	_ZTS4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 32619              		.section	.rodata._ZTS4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE,"aG",%progbits,_Z
 32620              		.align	2
 32623              	_ZTS4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:
 32624 0000 3446696C 		.ascii	"4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcE"
 32624      65494E53 
 32624      74375F5F 
 32624      63787831 
 32624      31313262 
 32625 0033 53614963 		.ascii	"SaIcEEEE\000"
 32625      45454545 
ARM GAS  /tmp/ccL95Edz.s 			page 986


 32625      00
 32626              		.weak	_ZTI4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 32627              		.section	.rodata._ZTI4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE,"aG",%progbits,_Z
 32628              		.align	2
 32631              	_ZTI4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:
 32632 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 32633 0004 00000000 		.word	_ZTS4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 32634 0008 00000000 		.word	_ZTI8FS_entry
 32635              		.weak	_ZTS7CommandI10FilesystemE
 32636              		.section	.rodata._ZTS7CommandI10FilesystemE,"aG",%progbits,_ZTS7CommandI10FilesystemE,comdat
 32637              		.align	2
 32640              	_ZTS7CommandI10FilesystemE:
 32641 0000 37436F6D 		.ascii	"7CommandI10FilesystemE\000"
 32641      6D616E64 
 32641      49313046 
 32641      696C6573 
 32641      79737465 
 32642              		.weak	_ZTI7CommandI10FilesystemE
 32643              		.section	.rodata._ZTI7CommandI10FilesystemE,"aG",%progbits,_ZTI7CommandI10FilesystemE,comdat
 32644              		.align	2
 32647              	_ZTI7CommandI10FilesystemE:
 32648 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 32649 0004 00000000 		.word	_ZTS7CommandI10FilesystemE
 32650 0008 00000000 		.word	_ZTI12Command_base
 32651              		.weak	_ZTV8FS_entry
 32652              		.section	.rodata._ZTV8FS_entry,"aG",%progbits,_ZTV8FS_entry,comdat
 32653              		.align	2
 32656              	_ZTV8FS_entry:
 32657 0000 00000000 		.word	0
 32658 0004 00000000 		.word	_ZTI8FS_entry
 32659 0008 00000000 		.word	_ZN8FS_entryD1Ev
 32660 000c 00000000 		.word	_ZN8FS_entryD0Ev
 32661 0010 00000000 		.word	_ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 32662              		.weak	_ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 32663              		.section	.rodata._ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE,"aG",%progbits,_Z
 32664              		.align	2
 32667              	_ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:
 32668 0000 00000000 		.word	0
 32669 0004 00000000 		.word	_ZTI4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 32670 0008 00000000 		.word	_ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 32671 000c 00000000 		.word	_ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev
 32672 0010 00000000 		.word	_ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 32673              		.weak	_ZTV7CommandI10FilesystemE
 32674              		.section	.rodata._ZTV7CommandI10FilesystemE,"aG",%progbits,_ZTV7CommandI10FilesystemE,comdat
 32675              		.align	2
 32678              	_ZTV7CommandI10FilesystemE:
 32679 0000 00000000 		.word	0
 32680 0004 00000000 		.word	_ZTI7CommandI10FilesystemE
 32681 0008 00000000 		.word	_ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 32682 000c 00000000 		.word	_ZN7CommandI10FilesystemE11Get_commandB5cxx11Ev
 32683 0010 00000000 		.word	_ZN7CommandI10FilesystemE8Get_helpB5cxx11Ev
 32684              		.text
 32685              	.Letext0:
 32686              		.file 26 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/type_traits"
 32687              		.file 27 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7e
 32688              		.file 28 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_pair.h"
 32689              		.file 29 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_
ARM GAS  /tmp/ccL95Edz.s 			page 987


 32690              		.file 30 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/debug/debug.h"
 32691              		.file 31 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cwchar"
 32692              		.file 32 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdint"
 32693              		.file 33 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/exception_ptr.h"
 32694              		.file 34 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/clocale"
 32695              		.file 35 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/limits"
 32696              		.file 36 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/string_view"
 32697              		.file 37 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdlib"
 32698              		.file 38 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdio"
 32699              		.file 39 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/initializer_list"
 32700              		.file 40 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stringfwd.h"
 32701              		.file 41 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/utility"
 32702              		.file 42 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/uses_allocator.h"
 32703              		.file 43 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/tuple"
 32704              		.file 44 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/optional"
 32705              		.file 45 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/algorithmfwd.h"
 32706              		.file 46 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/functional"
 32707              		.file 47 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/ptr_traits.h"
 32708              		.file 48 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/functexcept.h"
 32709              		.file 49 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/predefined_ops.h"
 32710              		.file 50 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/numeric_traits.h"
 32711              		.file 51 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/type_traits.h"
 32712              		.file 52 "/opt/gcc-arm-none-eabi-9-2020-q2/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 32713              		.file 53 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/machine/_default_types.h"
 32714              		.file 54 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/_types.h"
 32715              		.file 55 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/reent.h"
 32716              		.file 56 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/lock.h"
 32717              		.file 57 "/opt/gcc-arm-none-eabi-9-2020-q2/lib/gcc/arm-none-eabi/9.3.1/include/stdarg.h"
 32718              		.file 58 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/wchar.h"
 32719              		.file 59 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/_stdint.h"
 32720              		.file 60 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdint.h"
 32721              		.file 61 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/locale.h"
 32722              		.file 62 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/ctype.h"
 32723              		.file 63 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdlib.h"
 32724              		.file 64 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdio.h"
 32725              		.file 65 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/errno.h"
 32726              		.file 66 "alohal/irq/irq_handler.hpp"
 32727              		.file 67 "alohal/irq/irq_observer.hpp"
 32728              		.file 68 "alohal/uart/serial_line.hpp"
 32729              		.file 69 "alohal/cli/history.hpp"
 32730              		.file 70 "alohal/filesystem/filesystem.hpp"
 32731              		.file 71 "alohal/filesystem/executable.hpp"
 32732              		.file 72 "alohal/misc/text_transform.hpp"
 32733              		.file 73 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/pstl/execution_defs.h"
 32734              		.file 74 "<built-in>"
ARM GAS  /tmp/ccL95Edz.s 			page 988


DEFINED SYMBOLS
                            *ABS*:0000000000000000 filesystem.cpp
     /tmp/ccL95Edz.s:18     .text._ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:26     .text._ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZNK8FS_entry3RunERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:45     .text._ZN8FS_entryD2Ev:0000000000000000 $t
     /tmp/ccL95Edz.s:52     .text._ZN8FS_entryD2Ev:0000000000000000 _ZN8FS_entryD2Ev
     /tmp/ccL95Edz.s:157    .text._ZN8FS_entryD2Ev:000000000000001c $d
     /tmp/ccL95Edz.s:32656  .rodata._ZTV8FS_entry:0000000000000000 _ZTV8FS_entry
     /tmp/ccL95Edz.s:52     .text._ZN8FS_entryD2Ev:0000000000000000 _ZN8FS_entryD1Ev
     /tmp/ccL95Edz.s:164    .text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 $t
     /tmp/ccL95Edz.s:171    .text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/ccL95Edz.s:390    .text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000054 $d
     /tmp/ccL95Edz.s:32667  .rodata._ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:0000000000000000 _ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
     /tmp/ccL95Edz.s:171    .text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/ccL95Edz.s:399    .text._ZN8FS_entryD0Ev:0000000000000000 $t
     /tmp/ccL95Edz.s:406    .text._ZN8FS_entryD0Ev:0000000000000000 _ZN8FS_entryD0Ev
     /tmp/ccL95Edz.s:515    .text._ZN8FS_entryD0Ev:0000000000000024 $d
     /tmp/ccL95Edz.s:520    .text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev:0000000000000000 $t
     /tmp/ccL95Edz.s:527    .text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev:0000000000000000 _ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev
     /tmp/ccL95Edz.s:755    .text._ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev:000000000000005c $d
     /tmp/ccL95Edz.s:763    .rodata._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:767    .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:0000000000000000 $t
     /tmp/ccL95Edz.s:774    .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:0000000000000000 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
     /tmp/ccL95Edz.s:992    .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:0000000000000058 $d
     /tmp/ccL95Edz.s:1001   .rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:1005   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:1012   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
     /tmp/ccL95Edz.s:2255   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:00000000000001ac $d
     /tmp/ccL95Edz.s:2262   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEERS5_DpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:2269   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEERS5_DpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEERS5_DpOT_
     /tmp/ccL95Edz.s:2565   .text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:2572   .text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000000000000000 _ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
     /tmp/ccL95Edz.s:2961   .text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI10FilesystemEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000000000c8 $d
     /tmp/ccL95Edz.s:2972   .text._ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:2979   .text._ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_:0000000000000000 _ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI10FilesystemEEEERS1_DpOT_
     /tmp/ccL95Edz.s:3091   .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:3095   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000000 $t
     /tmp/ccL95Edz.s:3102   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
     /tmp/ccL95Edz.s:3311   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000054 $d
     /tmp/ccL95Edz.s:3316   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRA2_KcEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:3323   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRA2_KcEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRA2_KcEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
     /tmp/ccL95Edz.s:4483   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRA2_KcEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:00000000000001b0 $d
     /tmp/ccL95Edz.s:4490   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRA2_KcEEERS5_DpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:4497   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRA2_KcEEERS5_DpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRA2_KcEEERS5_DpOT_
     /tmp/ccL95Edz.s:4708   .rodata._ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:4709   .rodata._ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 .LC3
     /tmp/ccL95Edz.s:4716   .text._ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:4723   .text._ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:5357   .text._ZN10Filesystem11Command_pwdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:00000000000000c0 $d
     /tmp/ccL95Edz.s:5370   .rodata._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:5371   .rodata._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:0000000000000000 .LC5
     /tmp/ccL95Edz.s:5374   .rodata._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:0000000000000004 .LC6
     /tmp/ccL95Edz.s:5384   .text._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccL95Edz.s:5391   .text._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccL95Edz.s:6573   .text._ZNK10Filesystem13Absolute_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000164 $d
     /tmp/ccL95Edz.s:6587   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 $t
     /tmp/ccL95Edz.s:6594   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
ARM GAS  /tmp/ccL95Edz.s 			page 989


     /tmp/ccL95Edz.s:6802   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000054 $d
     /tmp/ccL95Edz.s:6807   .text._ZN7CommandI10FilesystemE8Get_helpB5cxx11Ev:0000000000000000 $t
     /tmp/ccL95Edz.s:6814   .text._ZN7CommandI10FilesystemE8Get_helpB5cxx11Ev:0000000000000000 _ZN7CommandI10FilesystemE8Get_helpB5cxx11Ev
     /tmp/ccL95Edz.s:6958   .text._ZN7CommandI10FilesystemE11Get_commandB5cxx11Ev:0000000000000000 $t
     /tmp/ccL95Edz.s:6965   .text._ZN7CommandI10FilesystemE11Get_commandB5cxx11Ev:0000000000000000 _ZN7CommandI10FilesystemE11Get_commandB5cxx11Ev
     /tmp/ccL95Edz.s:7107   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z:0000000000000000 $t
     /tmp/ccL95Edz.s:7114   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z
     /tmp/ccL95Edz.s:7276   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:7283   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
     /tmp/ccL95Edz.s:8443   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000178 $d
     /tmp/ccL95Edz.s:8450   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_:0000000000000000 $t
     /tmp/ccL95Edz.s:8457   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_
     /tmp/ccL95Edz.s:8676   .rodata._ZN10FilesystemC2EP3CLI.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:8677   .rodata._ZN10FilesystemC2EP3CLI.str1.4:0000000000000000 .LC9
     /tmp/ccL95Edz.s:8680   .rodata._ZN10FilesystemC2EP3CLI.str1.4:0000000000000004 .LC10
     /tmp/ccL95Edz.s:8683   .rodata._ZN10FilesystemC2EP3CLI.str1.4:0000000000000014 .LC11
     /tmp/ccL95Edz.s:8686   .rodata._ZN10FilesystemC2EP3CLI.str1.4:0000000000000018 .LC12
     /tmp/ccL95Edz.s:8689   .rodata._ZN10FilesystemC2EP3CLI.str1.4:0000000000000028 .LC13
     /tmp/ccL95Edz.s:8692   .rodata._ZN10FilesystemC2EP3CLI.str1.4:000000000000002c .LC14
     /tmp/ccL95Edz.s:8695   .rodata._ZN10FilesystemC2EP3CLI.str1.4:000000000000003c .LC15
     /tmp/ccL95Edz.s:8698   .rodata._ZN10FilesystemC2EP3CLI.str1.4:0000000000000040 .LC16
     /tmp/ccL95Edz.s:8701   .text._ZN10FilesystemC2EP3CLI:0000000000000000 $t
     /tmp/ccL95Edz.s:8708   .text._ZN10FilesystemC2EP3CLI:0000000000000000 _ZN10FilesystemC2EP3CLI
     /tmp/ccL95Edz.s:11633  .text._ZN10FilesystemC2EP3CLI:0000000000000310 $d
     /tmp/ccL95Edz.s:30071  .text._ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:32678  .rodata._ZTV7CommandI10FilesystemE:0000000000000000 _ZTV7CommandI10FilesystemE
     /tmp/ccL95Edz.s:21671  .text._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:11684  .text._ZN10FilesystemC2EP3CLI:000000000000033c $t
     /tmp/ccL95Edz.s:12979  .text._ZN10FilesystemC2EP3CLI:0000000000000488 $d
     /tmp/ccL95Edz.s:22972  .text._ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:8708   .text._ZN10FilesystemC2EP3CLI:0000000000000000 _ZN10FilesystemC1EP3CLI
     /tmp/ccL95Edz.s:12989  .text._ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:12996  .text._ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE:0000000000000000 _ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE
     /tmp/ccL95Edz.s:14231  .text._ZN7CommandI10FilesystemE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE:0000000000000158 $d
     /tmp/ccL95Edz.s:14237  .text._ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:14244  .text._ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE:0000000000000000 _ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EEET_N9__gnu_cxx17__normal_iteratorISA_T0_EE
     /tmp/ccL95Edz.s:14259  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS5_S7_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:14266  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS5_S7_EE:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS5_S7_EE
     /tmp/ccL95Edz.s:14805  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS5_S7_EE:00000000000000bc $d
     /tmp/ccL95Edz.s:14810  .text._ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:14817  .text._ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:16029  .text._ZNK10Filesystem9Get_entryESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:000000000000016c $d
     /tmp/ccL95Edz.s:16036  .text._ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:16043  .text._ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:16673  .text._ZNK10Filesystem12Entry_existsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:00000000000000a4 $d
     /tmp/ccL95Edz.s:16679  .rodata._ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:16683  .text._ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccL95Edz.s:16690  .text._ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccL95Edz.s:18204  .text._ZNK10Filesystem17Create_entry_pathENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:00000000000001b8 $d
     /tmp/ccL95Edz.s:18212  .text._ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccL95Edz.s:18219  .text._ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccL95Edz.s:18627  .rodata._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:18628  .rodata._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 .LC18
     /tmp/ccL95Edz.s:18634  .rodata._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:000000000000001c .LC20
     /tmp/ccL95Edz.s:18637  .text._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:18644  .text._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccL95Edz.s:20871  .text._ZNK10Filesystem13Command_checkESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:000000000000023c $d
ARM GAS  /tmp/ccL95Edz.s 			page 990


     /tmp/ccL95Edz.s:20885  .text._ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccL95Edz.s:20892  .text._ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccL95Edz.s:21300  .text._ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccL95Edz.s:21307  .text._ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccL95Edz.s:21656  .rodata._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:21657  .rodata._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 .LC21
     /tmp/ccL95Edz.s:21661  .rodata._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000034 .LC22
     /tmp/ccL95Edz.s:21664  .text._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:22943  .text._ZN10Filesystem10Command_cdESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000140 $d
     /tmp/ccL95Edz.s:22952  .rodata._ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:22953  .rodata._ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 .LC23
     /tmp/ccL95Edz.s:22965  .text._ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:25311  .text._ZN10Filesystem11Command_catESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:00000000000002a8 $d
     /tmp/ccL95Edz.s:25329  .rodata._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:25333  .rodata._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry.str1.4:0000000000000030 .LC28
     /tmp/ccL95Edz.s:25336  .rodata._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry.str1.4:0000000000000048 .LC29
     /tmp/ccL95Edz.s:25339  .text._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry:0000000000000000 $t
     /tmp/ccL95Edz.s:25346  .text._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry:0000000000000000 _ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry
     /tmp/ccL95Edz.s:27405  .text._ZN10Filesystem9Add_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8FS_entry:0000000000000248 $d
     /tmp/ccL95Edz.s:27416  .text._ZN10Filesystem14Make_directoryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccL95Edz.s:27423  .text._ZN10Filesystem14Make_directoryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN10Filesystem14Make_directoryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccL95Edz.s:28122  .text._ZN10Filesystem14Make_directoryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:00000000000000b4 $d
     /tmp/ccL95Edz.s:28137  .rodata._ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:28138  .rodata._ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.str1.4:0000000000000000 .LC30
     /tmp/ccL95Edz.s:28141  .text._ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_:0000000000000000 $t
     /tmp/ccL95Edz.s:28148  .text._ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_:0000000000000000 _ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_
     /tmp/ccL95Edz.s:29309  .text._ZN10Filesystem9Make_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_:000000000000012c $d
     /tmp/ccL95Edz.s:29327  .rodata._ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE.str1.4:0000000000000000 $d
     /tmp/ccL95Edz.s:29334  .text._ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:29341  .text._ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE:0000000000000000 _ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE
     /tmp/ccL95Edz.s:30035  .text._ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE:00000000000000dc $d
     /tmp/ccL95Edz.s:30042  .text._ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:30049  .text._ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE:0000000000000000 _ZSt12__niter_baseIPKP8FS_entrySt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
     /tmp/ccL95Edz.s:30064  .text._ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccL95Edz.s:32578  .text._ZN10Filesystem10Command_lsESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:000000000000025c $d
     /tmp/ccL95Edz.s:32593  .rodata._ZTS12Command_base:0000000000000000 _ZTS12Command_base
     /tmp/ccL95Edz.s:32590  .rodata._ZTS12Command_base:0000000000000000 $d
     /tmp/ccL95Edz.s:32600  .rodata._ZTI12Command_base:0000000000000000 _ZTI12Command_base
     /tmp/ccL95Edz.s:32597  .rodata._ZTI12Command_base:0000000000000000 $d
     /tmp/ccL95Edz.s:32608  .rodata._ZTS8FS_entry:0000000000000000 _ZTS8FS_entry
     /tmp/ccL95Edz.s:32605  .rodata._ZTS8FS_entry:0000000000000000 $d
     /tmp/ccL95Edz.s:32615  .rodata._ZTI8FS_entry:0000000000000000 _ZTI8FS_entry
     /tmp/ccL95Edz.s:32612  .rodata._ZTI8FS_entry:0000000000000000 $d
     /tmp/ccL95Edz.s:32623  .rodata._ZTS4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:0000000000000000 _ZTS4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
     /tmp/ccL95Edz.s:32620  .rodata._ZTS4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:0000000000000000 $d
     /tmp/ccL95Edz.s:32631  .rodata._ZTI4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:0000000000000000 _ZTI4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
     /tmp/ccL95Edz.s:32628  .rodata._ZTI4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:0000000000000000 $d
     /tmp/ccL95Edz.s:32640  .rodata._ZTS7CommandI10FilesystemE:0000000000000000 _ZTS7CommandI10FilesystemE
     /tmp/ccL95Edz.s:32637  .rodata._ZTS7CommandI10FilesystemE:0000000000000000 $d
     /tmp/ccL95Edz.s:32647  .rodata._ZTI7CommandI10FilesystemE:0000000000000000 _ZTI7CommandI10FilesystemE
     /tmp/ccL95Edz.s:32644  .rodata._ZTI7CommandI10FilesystemE:0000000000000000 $d
     /tmp/ccL95Edz.s:32653  .rodata._ZTV8FS_entry:0000000000000000 $d
     /tmp/ccL95Edz.s:32664  .rodata._ZTV4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE:0000000000000000 $d
     /tmp/ccL95Edz.s:32675  .rodata._ZTV7CommandI10FilesystemE:0000000000000000 $d
                           .group:0000000000000000 _ZN8FS_entryD5Ev
                           .group:0000000000000000 _ZN4FileINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev

ARM GAS  /tmp/ccL95Edz.s 			page 991


UNDEFINED SYMBOLS
_ZdlPv
_ZdlPvj
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
_ZSt20__throw_length_errorPKc
_Znwj
_ZSt17__throw_bad_allocv
memmove
memcpy
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
_ZNK8FS_entry4PathB5cxx11Ev
_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZSt24__throw_out_of_range_fmtPKcz
_ZN9DirectoryC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN3CLI21Set_filesystem_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN8FS_entry10Set_parentEPS_
memcmp
_ZNK9Directory9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN9Directory6ExistsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
vsnprintf
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZN9Directory9Add_entryEP8FS_entry
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
